### YamlMime:ManagedReference
items:
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  id: SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  children:
  - Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList``1(System.Collections.Generic.IEnumerable{System.Object})
  - Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  - Innovt.Core.Utilities.Mapper.SimpleMapper.Map``2(``0)
  - Innovt.Core.Utilities.Mapper.SimpleMapper.Map``2(``0,``1)
  langs:
  - csharp
  - vb
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
  type: Class
  source:
    remote:
      path: src/Innovt.Core/Utilities/Mapper/SimpleMapper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SimpleMapper
    path: Innovt.Core/Utilities/Mapper/SimpleMapper.cs
    startLine: 14
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities.Mapper
  summary: Provides simple object mapping functionality between two objects of different types.
  example: []
  syntax:
    content: public static class SimpleMapper
    content.vb: Public Module SimpleMapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.Map``2(``0)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.Map``2(``0)
  id: Map``2(``0)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  langs:
  - csharp
  - vb
  name: Map<T1, T2>(T1)
  nameWithType: SimpleMapper.Map<T1, T2>(T1)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.Map<T1, T2>(T1)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Mapper/SimpleMapper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Map
    path: Innovt.Core/Utilities/Mapper/SimpleMapper.cs
    startLine: 54
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities.Mapper
  summary: Maps the properties from the input object to a new instance of the output object type.
  example: []
  syntax:
    content: 'public static T2 Map<T1, T2>(T1 input) where T1 : class'
    parameters:
    - id: input
      type: '{T1}'
      description: The input object to map from.
    typeParameters:
    - id: T1
      description: The type of the input object.
    - id: T2
      description: The type of the output object.
    return:
      type: '{T2}'
      description: A new instance of the output object type with properties mapped from the input object.
    content.vb: Public Shared Function Map(Of T1 As Class, T2)(input As T1) As T2
  overload: Innovt.Core.Utilities.Mapper.SimpleMapper.Map*
  nameWithType.vb: SimpleMapper.Map(Of T1, T2)(T1)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.Map(Of T1, T2)(T1)
  name.vb: Map(Of T1, T2)(T1)
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.Map``2(``0,``1)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.Map``2(``0,``1)
  id: Map``2(``0,``1)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  langs:
  - csharp
  - vb
  name: Map<T1, T2>(T1, T2)
  nameWithType: SimpleMapper.Map<T1, T2>(T1, T2)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.Map<T1, T2>(T1, T2)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Mapper/SimpleMapper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Map
    path: Innovt.Core/Utilities/Mapper/SimpleMapper.cs
    startLine: 71
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities.Mapper
  summary: Maps the properties from the input object to the provided output object instance.
  example: []
  syntax:
    content: 'public static void Map<T1, T2>(T1 inputInstance, T2 outputInstance) where T1 : class'
    parameters:
    - id: inputInstance
      type: '{T1}'
      description: The input object to map from.
    - id: outputInstance
      type: '{T2}'
      description: The output object to map to.
    typeParameters:
    - id: T1
      description: The type of the input object.
    - id: T2
      description: The type of the output object.
    content.vb: Public Shared Sub Map(Of T1 As Class, T2)(inputInstance As T1, outputInstance As T2)
  overload: Innovt.Core.Utilities.Mapper.SimpleMapper.Map*
  nameWithType.vb: SimpleMapper.Map(Of T1, T2)(T1, T2)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.Map(Of T1, T2)(T1, T2)
  name.vb: Map(Of T1, T2)(T1, T2)
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  id: MapTo``1(System.Object)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  langs:
  - csharp
  - vb
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Mapper/SimpleMapper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MapTo
    path: Innovt.Core/Utilities/Mapper/SimpleMapper.cs
    startLine: 85
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities.Mapper
  summary: Extension method to map object to another object
  example: []
  syntax:
    content: 'public static T1 MapTo<T1>(this object inputInstance) where T1 : class'
    parameters:
    - id: inputInstance
      type: System.Object
      description: The instance that you want to map
    typeParameters:
    - id: T1
      description: The final type
    return:
      type: '{T1}'
      description: ''
    content.vb: Public Shared Function MapTo(Of T1 As Class)(inputInstance As Object) As T1
  overload: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo*
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList``1(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList``1(System.Collections.Generic.IEnumerable{System.Object})
  id: MapToList``1(System.Collections.Generic.IEnumerable{System.Object})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  langs:
  - csharp
  - vb
  name: MapToList<T1>(IEnumerable<object>)
  nameWithType: SimpleMapper.MapToList<T1>(IEnumerable<object>)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList<T1>(System.Collections.Generic.IEnumerable<object>)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Mapper/SimpleMapper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MapToList
    path: Innovt.Core/Utilities/Mapper/SimpleMapper.cs
    startLine: 101
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities.Mapper
  summary: Extension method to map object list to another object list
  example: []
  syntax:
    content: 'public static IList<T1> MapToList<T1>(this IEnumerable<object> inputInstance) where T1 : class'
    parameters:
    - id: inputInstance
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: The list that you want to convert.
    typeParameters:
    - id: T1
      description: The final type
    return:
      type: System.Collections.Generic.IList{{T1}}
      description: ''
    content.vb: Public Shared Function MapToList(Of T1 As Class)(inputInstance As IEnumerable(Of Object)) As IList(Of T1)
  overload: Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList*
  nameWithType.vb: SimpleMapper.MapToList(Of T1)(IEnumerable(Of Object))
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList(Of T1)(System.Collections.Generic.IEnumerable(Of Object))
  name.vb: MapToList(Of T1)(IEnumerable(Of Object))
references:
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.Map*
  commentId: Overload:Innovt.Core.Utilities.Mapper.SimpleMapper.Map
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_Map__2___0_
  name: Map
  nameWithType: SimpleMapper.Map
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.Map
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo*
  commentId: Overload:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo
  nameWithType: SimpleMapper.MapTo
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList*
  commentId: Overload:Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapToList__1_System_Collections_Generic_IEnumerable_System_Object__
  name: MapToList
  nameWithType: SimpleMapper.MapToList
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapToList
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IList{{T1}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T1>
  nameWithType: IList<T1>
  fullName: System.Collections.Generic.IList<T1>
  nameWithType.vb: IList(Of T1)
  fullName.vb: System.Collections.Generic.IList(Of T1)
  name.vb: IList(Of T1)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T1
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
