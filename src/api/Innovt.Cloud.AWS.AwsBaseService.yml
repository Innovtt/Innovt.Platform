### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.AwsBaseService
  commentId: T:Innovt.Cloud.AWS.AwsBaseService
  id: AwsBaseService
  parent: Innovt.Cloud.AWS
  children:
  - Innovt.Cloud.AWS.AwsBaseService.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  - Innovt.Cloud.AWS.AwsBaseService.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  - Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
  - Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
  - Innovt.Cloud.AWS.AwsBaseService.Configuration
  - Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  - Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  - Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  - Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  - Innovt.Cloud.AWS.AwsBaseService.Dispose
  - Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  - Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  - Innovt.Cloud.AWS.AwsBaseService.Finalize
  - Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  - Innovt.Cloud.AWS.AwsBaseService.Logger
  - Innovt.Cloud.AWS.AwsBaseService.RetryCount
  langs:
  - csharp
  - vb
  name: AwsBaseService
  nameWithType: AwsBaseService
  fullName: Innovt.Cloud.AWS.AwsBaseService
  type: Class
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AwsBaseService
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 21
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: >-
    An abstract base class for AWS services with common functionality for managing AWS service configurations, retries,

    and circuit breakers.
  example: []
  syntax:
    content: 'public abstract class AwsBaseService : IDisposable'
    content.vb: Public MustInherit Class AwsBaseService Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Innovt.Cloud.AWS.Caching.RedisCacheService
  - Innovt.Cloud.AWS.Cognito.CognitoIdentityProvider
  - Innovt.Cloud.AWS.Dynamo.Repository
  - Innovt.Cloud.AWS.Kinesis.DataProducer`1
  - Innovt.Cloud.AWS.Notification.MailNotificationHandler
  - Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  - Innovt.Cloud.AWS.S3.S3FileSystem
  - Innovt.Cloud.AWS.SQS.QueueService`1
  - Innovt.Cloud.AWS.StepFunction.StepFunctionService
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Cloud.AWS.AwsBaseService.Configuration
  commentId: F:Innovt.Cloud.AWS.AwsBaseService.Configuration
  id: Configuration
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: AwsBaseService.Configuration
  fullName: Innovt.Cloud.AWS.AwsBaseService.Configuration
  type: Field
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Configuration
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 23
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  syntax:
    content: protected readonly IAwsConfiguration Configuration
    return:
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
    content.vb: Protected ReadOnly Configuration As IAwsConfiguration
- uid: Innovt.Cloud.AWS.AwsBaseService.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)'
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: AwsBaseService(ILogger, IAwsConfiguration)
  nameWithType: AwsBaseService.AwsBaseService(ILogger, IAwsConfiguration)
  fullName: Innovt.Cloud.AWS.AwsBaseService.AwsBaseService(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 44
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  syntax:
    content: protected AwsBaseService(ILogger logger, IAwsConfiguration configuration)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
    content.vb: Protected Sub New(logger As ILogger, configuration As IAwsConfiguration)
  overload: Innovt.Cloud.AWS.AwsBaseService.#ctor*
  nameWithType.vb: AwsBaseService.New(ILogger, IAwsConfiguration)
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  name.vb: New(ILogger, IAwsConfiguration)
- uid: Innovt.Cloud.AWS.AwsBaseService.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)'
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: AwsBaseService(ILogger, IAwsConfiguration, string)
  nameWithType: AwsBaseService.AwsBaseService(ILogger, IAwsConfiguration, string)
  fullName: Innovt.Cloud.AWS.AwsBaseService.AwsBaseService(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 57
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: >-
    Initializes a new instance of the <xref href="Innovt.Cloud.AWS.AwsBaseService" data-throw-if-not-resolved="false"></xref> class with a logger, AWS configuration, and AWS

    region.
  example: []
  syntax:
    content: protected AwsBaseService(ILogger logger, IAwsConfiguration configuration, string region)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger for logging service activities.
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
      description: The AWS configuration for the service.
    - id: region
      type: System.String
      description: The AWS region for the service.
    content.vb: Protected Sub New(logger As ILogger, configuration As IAwsConfiguration, region As String)
  overload: Innovt.Cloud.AWS.AwsBaseService.#ctor*
  nameWithType.vb: AwsBaseService.New(ILogger, IAwsConfiguration, String)
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, String)
  name.vb: New(ILogger, IAwsConfiguration, String)
- uid: Innovt.Cloud.AWS.AwsBaseService.RetryCount
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.RetryCount
  id: RetryCount
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: RetryCount
  nameWithType: AwsBaseService.RetryCount
  fullName: Innovt.Cloud.AWS.AwsBaseService.RetryCount
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: RetryCount
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 72
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Gets or sets the number of retry attempts for AWS service calls.
  example: []
  syntax:
    content: public int RetryCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RetryCount As Integer
  overload: Innovt.Cloud.AWS.AwsBaseService.RetryCount*
- uid: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
  id: CircuitBreakerAllowedExceptions
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CircuitBreakerAllowedExceptions
  nameWithType: AwsBaseService.CircuitBreakerAllowedExceptions
  fullName: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CircuitBreakerAllowedExceptions
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 77
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Gets or sets the number of allowed exceptions before the circuit breaker opens.
  example: []
  syntax:
    content: protected int CircuitBreakerAllowedExceptions { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected Property CircuitBreakerAllowedExceptions As Integer
  overload: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions*
- uid: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
  id: CircuitBreakerDurationOfBreak
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CircuitBreakerDurationOfBreak
  nameWithType: AwsBaseService.CircuitBreakerDurationOfBreak
  fullName: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CircuitBreakerDurationOfBreak
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 82
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Gets or sets the duration of the circuit breaker break when it opens.
  example: []
  syntax:
    content: protected TimeSpan CircuitBreakerDurationOfBreak { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Protected Property CircuitBreakerDurationOfBreak As TimeSpan
  overload: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak*
- uid: Innovt.Cloud.AWS.AwsBaseService.Logger
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.Logger
  id: Logger
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: AwsBaseService.Logger
  fullName: Innovt.Cloud.AWS.AwsBaseService.Logger
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Logger
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 87
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Gets the logger for logging service activities.
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: Innovt.Core.CrossCutting.Log.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: Innovt.Cloud.AWS.AwsBaseService.Logger*
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Dispose
  id: Dispose
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AwsBaseService.Dispose()
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Dispose
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 92
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Disposes of the resources used by the service.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Innovt.Cloud.AWS.AwsBaseService.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  id: GetServiceRegionEndPoint
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: GetServiceRegionEndPoint()
  nameWithType: AwsBaseService.GetServiceRegionEndPoint()
  fullName: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetServiceRegionEndPoint
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 102
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Gets the AWS service region endpoint based on the configured region.
  example: []
  syntax:
    content: protected RegionEndpoint GetServiceRegionEndPoint()
    return:
      type: Amazon.RegionEndpoint
      description: The AWS service region endpoint.
    content.vb: Protected Function GetServiceRegionEndPoint() As RegionEndpoint
  overload: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint*
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  id: CreateService``1
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateService<T>()
  nameWithType: AwsBaseService.CreateService<T>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateService<T>()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateService
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 114
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: This method will decide about Configuration or Profile AWS Services
  example: []
  syntax:
    content: 'protected T CreateService<T>() where T : IAmazonService'
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Protected Function CreateService(Of T As IAmazonService)() As T
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateService*
  nameWithType.vb: AwsBaseService.CreateService(Of T)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateService(Of T)()
  name.vb: CreateService(Of T)()
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  id: CreateDefaultRetryAsyncPolicy
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateDefaultRetryAsyncPolicy()
  nameWithType: AwsBaseService.CreateDefaultRetryAsyncPolicy()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateDefaultRetryAsyncPolicy
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 147
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Basic Retry Policy using AmazonServiceException
  example: []
  syntax:
    content: >-
      [CLSCompliant(false)]

      protected virtual AsyncRetryPolicy CreateDefaultRetryAsyncPolicy()
    return:
      type: Polly.Retry.AsyncRetryPolicy
      description: ''
    content.vb: >-
      <CLSCompliant(False)>

      Protected Overridable Function CreateDefaultRetryAsyncPolicy() As AsyncRetryPolicy
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy*
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  id: CreateDefaultRetryPolicy
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateDefaultRetryPolicy()
  nameWithType: AwsBaseService.CreateDefaultRetryPolicy()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateDefaultRetryPolicy
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 160
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: >-
    Creates a default retry policy for handling AmazonServiceException exceptions

    with specific HTTP status codes(ServiceUnavailable or InternalServerError).
  example: []
  syntax:
    content: protected virtual RetryPolicy CreateDefaultRetryPolicy()
    return:
      type: Polly.Retry.RetryPolicy
    content.vb: Protected Overridable Function CreateDefaultRetryPolicy() As RetryPolicy
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy*
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  id: CreateRetryAsyncPolicy``1
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateRetryAsyncPolicy<T>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T>()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateRetryAsyncPolicy
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 173
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Creates an asynchronous retry policy for handling exceptions of type T.
  example: []
  syntax:
    content: 'protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T>() where T : Exception'
    typeParameters:
    - id: T
      description: The type of exception to handle.
    return:
      type: Polly.Retry.AsyncRetryPolicy
      description: An asynchronous retry policy.
    content.vb: Protected Overridable Function CreateRetryAsyncPolicy(Of T As Exception)() As AsyncRetryPolicy
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy*
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T)()
  name.vb: CreateRetryAsyncPolicy(Of T)()
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  id: CreateRetryAsyncPolicy``2
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateRetryAsyncPolicy<T, T1>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1>()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateRetryAsyncPolicy
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 185
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Creates an asynchronous retry policy for handling exceptions of type T and T1.
  example: []
  syntax:
    content: 'protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1>() where T : Exception where T1 : Exception'
    typeParameters:
    - id: T
      description: The first type of exception to handle.
    - id: T1
      description: The second type of exception to handle.
    return:
      type: Polly.Retry.AsyncRetryPolicy
      description: An asynchronous retry policy.
    content.vb: Protected Overridable Function CreateRetryAsyncPolicy(Of T As Exception, T1 As Exception)() As AsyncRetryPolicy
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy*
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1)()
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  id: CreateRetryAsyncPolicy``3
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateRetryAsyncPolicy<T, T1, T2>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateRetryAsyncPolicy
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 191
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  syntax:
    content: 'protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2>() where T : Exception where T1 : Exception where T2 : Exception'
    typeParameters:
    - id: T
    - id: T1
    - id: T2
    return:
      type: Polly.Retry.AsyncRetryPolicy
    content.vb: Protected Overridable Function CreateRetryAsyncPolicy(Of T As Exception, T1 As Exception, T2 As Exception)() As AsyncRetryPolicy
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy*
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2)()
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  id: CreateRetryAsyncPolicy``4
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateRetryAsyncPolicy<T, T1, T2, T3>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateRetryAsyncPolicy
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 199
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  syntax:
    content: 'protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2, T3>() where T : Exception where T1 : Exception where T2 : Exception where T3 : Exception'
    typeParameters:
    - id: T
    - id: T1
    - id: T2
    - id: T3
    return:
      type: Polly.Retry.AsyncRetryPolicy
    content.vb: Protected Overridable Function CreateRetryAsyncPolicy(Of T As Exception, T1 As Exception, T2 As Exception, T3 As Exception)() As AsyncRetryPolicy
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy*
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  id: CreateRetryAsyncPolicy``5
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateRetryAsyncPolicy
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 209
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  syntax:
    content: 'protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() where T : Exception where T1 : Exception where T2 : Exception where T3 : Exception where T4 : Exception'
    typeParameters:
    - id: T
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    return:
      type: Polly.Retry.AsyncRetryPolicy
    content.vb: Protected Overridable Function CreateRetryAsyncPolicy(Of T As Exception, T1 As Exception, T2 As Exception, T3 As Exception, T4 As Exception)() As AsyncRetryPolicy
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy*
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  id: CreateCircuitBreaker``2
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: CreateCircuitBreaker<T, T1>()
  nameWithType: AwsBaseService.CreateCircuitBreaker<T, T1>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker<T, T1>()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateCircuitBreaker
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 220
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  syntax:
    content: 'protected virtual AsyncCircuitBreakerPolicy CreateCircuitBreaker<T, T1>() where T : Exception where T1 : Exception'
    typeParameters:
    - id: T
    - id: T1
    return:
      type: Polly.CircuitBreaker.AsyncCircuitBreakerPolicy
    content.vb: Protected Overridable Function CreateCircuitBreaker(Of T As Exception, T1 As Exception)() As AsyncCircuitBreakerPolicy
  overload: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker*
  nameWithType.vb: AwsBaseService.CreateCircuitBreaker(Of T, T1)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker(Of T, T1)()
  name.vb: CreateCircuitBreaker(Of T, T1)()
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: AwsBaseService.Dispose(bool)
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Dispose
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 231
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Disposes of resources used by the AwsBaseService.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: True if called from the Dispose method; false if called from the finalizer.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Innovt.Cloud.AWS.AwsBaseService.Dispose*
  nameWithType.vb: AwsBaseService.Dispose(Boolean)
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: Innovt.Cloud.AWS.AwsBaseService.Finalize
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Finalize
  id: Finalize
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: ~AwsBaseService()
  nameWithType: AwsBaseService.~AwsBaseService()
  fullName: Innovt.Cloud.AWS.AwsBaseService.~AwsBaseService()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Finalize
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 244
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Finalizer for AwsBaseService.
  example: []
  syntax:
    content: protected ~AwsBaseService()
    content.vb: 'Protected '
  overload: Innovt.Cloud.AWS.AwsBaseService.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  id: DisposeServices
  parent: Innovt.Cloud.AWS.AwsBaseService
  langs:
  - csharp
  - vb
  name: DisposeServices()
  nameWithType: AwsBaseService.DisposeServices()
  fullName: Innovt.Cloud.AWS.AwsBaseService.DisposeServices()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS/AwsBaseService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DisposeServices
    path: Innovt.Cloud.AWS/AwsBaseService.cs
    startLine: 252
  assemblies:
  - Innovt.Cloud.AWS
  namespace: Innovt.Cloud.AWS
  summary: Disposes of any services used by the AwsBaseService.
  example: []
  syntax:
    content: protected abstract void DisposeServices()
    content.vb: Protected MustOverride Sub DisposeServices()
  overload: Innovt.Cloud.AWS.AwsBaseService.DisposeServices*
references:
- uid: Innovt.Cloud.AWS
  commentId: N:Innovt.Cloud.AWS
  href: Innovt.html
  name: Innovt.Cloud.AWS
  nameWithType: Innovt.Cloud.AWS
  fullName: Innovt.Cloud.AWS
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
  commentId: T:Innovt.Cloud.AWS.Configuration.IAwsConfiguration
  parent: Innovt.Cloud.AWS.Configuration
  href: Innovt.Cloud.AWS.Configuration.IAwsConfiguration.html
  name: IAwsConfiguration
  nameWithType: IAwsConfiguration
  fullName: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
- uid: Innovt.Cloud.AWS.Configuration
  commentId: N:Innovt.Cloud.AWS.Configuration
  href: Innovt.html
  name: Innovt.Cloud.AWS.Configuration
  nameWithType: Innovt.Cloud.AWS.Configuration
  fullName: Innovt.Cloud.AWS.Configuration
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Configuration
    name: Configuration
    href: Innovt.Cloud.AWS.Configuration.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Configuration
    name: Configuration
    href: Innovt.Cloud.AWS.Configuration.html
- uid: Innovt.Cloud.AWS.AwsBaseService.#ctor*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.#ctor
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService__ctor_Innovt_Core_CrossCutting_Log_ILogger_Innovt_Cloud_AWS_Configuration_IAwsConfiguration_
  name: AwsBaseService
  nameWithType: AwsBaseService.AwsBaseService
  fullName: Innovt.Cloud.AWS.AwsBaseService.AwsBaseService
  nameWithType.vb: AwsBaseService.New
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.New
  name.vb: New
- uid: Innovt.Core.CrossCutting.Log.ILogger
  commentId: T:Innovt.Core.CrossCutting.Log.ILogger
  parent: Innovt.Core.CrossCutting.Log
  href: Innovt.Core.CrossCutting.Log.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Innovt.Core.CrossCutting.Log.ILogger
- uid: Innovt.Core.CrossCutting.Log
  commentId: N:Innovt.Core.CrossCutting.Log
  href: Innovt.html
  name: Innovt.Core.CrossCutting.Log
  nameWithType: Innovt.Core.CrossCutting.Log
  fullName: Innovt.Core.CrossCutting.Log
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
- uid: Innovt.Cloud.AWS.AwsBaseService
  commentId: T:Innovt.Cloud.AWS.AwsBaseService
  parent: Innovt.Cloud.AWS
  href: Innovt.Cloud.AWS.AwsBaseService.html
  name: AwsBaseService
  nameWithType: AwsBaseService
  fullName: Innovt.Cloud.AWS.AwsBaseService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Cloud.AWS.AwsBaseService.RetryCount*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.RetryCount
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_RetryCount
  name: RetryCount
  nameWithType: AwsBaseService.RetryCount
  fullName: Innovt.Cloud.AWS.AwsBaseService.RetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CircuitBreakerAllowedExceptions
  name: CircuitBreakerAllowedExceptions
  nameWithType: AwsBaseService.CircuitBreakerAllowedExceptions
  fullName: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
- uid: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CircuitBreakerDurationOfBreak
  name: CircuitBreakerDurationOfBreak
  nameWithType: AwsBaseService.CircuitBreakerDurationOfBreak
  fullName: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Innovt.Cloud.AWS.AwsBaseService.Logger*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.Logger
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Logger
  name: Logger
  nameWithType: AwsBaseService.Logger
  fullName: Innovt.Cloud.AWS.AwsBaseService.Logger
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.Dispose
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  name: Dispose
  nameWithType: AwsBaseService.Dispose
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  name: GetServiceRegionEndPoint
  nameWithType: AwsBaseService.GetServiceRegionEndPoint
  fullName: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
- uid: Amazon.RegionEndpoint
  commentId: T:Amazon.RegionEndpoint
  parent: Amazon
  isExternal: true
  href: https://github.com/aws/aws-sdk-net/blob/a788abb2804fb6dcd6d388500ac88b23e539e280/sdk/src/Core/RegionEndpoint/RegionEndpoint.cs
  name: RegionEndpoint
  nameWithType: RegionEndpoint
  fullName: Amazon.RegionEndpoint
- uid: Amazon
  commentId: N:Amazon
  isExternal: true
  name: Amazon
  nameWithType: Amazon
  fullName: Amazon
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateService*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.CreateService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  name: CreateService
  nameWithType: AwsBaseService.CreateService
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateService
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  name: CreateDefaultRetryAsyncPolicy
  nameWithType: AwsBaseService.CreateDefaultRetryAsyncPolicy
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
- uid: Polly.Retry.AsyncRetryPolicy
  commentId: T:Polly.Retry.AsyncRetryPolicy
  parent: Polly.Retry
  isExternal: true
  href: https://github.com/App-vNext/Polly/blob/077cf388fc5a85a7f6cd0fdcb2b68d17a898019e/src/Polly/Retry/AsyncRetryPolicy.cs
  name: AsyncRetryPolicy
  nameWithType: AsyncRetryPolicy
  fullName: Polly.Retry.AsyncRetryPolicy
- uid: Polly.Retry
  commentId: N:Polly.Retry
  isExternal: true
  name: Polly.Retry
  nameWithType: Polly.Retry
  fullName: Polly.Retry
  spec.csharp:
  - uid: Polly
    name: Polly
    isExternal: true
  - name: .
  - uid: Polly.Retry
    name: Retry
    isExternal: true
  spec.vb:
  - uid: Polly
    name: Polly
    isExternal: true
  - name: .
  - uid: Polly.Retry
    name: Retry
    isExternal: true
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  name: CreateDefaultRetryPolicy
  nameWithType: AwsBaseService.CreateDefaultRetryPolicy
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
- uid: Polly.Retry.RetryPolicy
  commentId: T:Polly.Retry.RetryPolicy
  parent: Polly.Retry
  isExternal: true
  href: https://github.com/App-vNext/Polly/blob/077cf388fc5a85a7f6cd0fdcb2b68d17a898019e/src/Polly/Retry/RetryPolicy.cs
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: Polly.Retry.RetryPolicy
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  name: CreateRetryAsyncPolicy
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  name: CreateCircuitBreaker
  nameWithType: AwsBaseService.CreateCircuitBreaker
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker
- uid: Polly.CircuitBreaker.AsyncCircuitBreakerPolicy
  commentId: T:Polly.CircuitBreaker.AsyncCircuitBreakerPolicy
  parent: Polly.CircuitBreaker
  isExternal: true
  href: https://github.com/App-vNext/Polly/blob/077cf388fc5a85a7f6cd0fdcb2b68d17a898019e/src/Polly/CircuitBreaker/AsyncCircuitBreakerPolicy.cs
  name: AsyncCircuitBreakerPolicy
  nameWithType: AsyncCircuitBreakerPolicy
  fullName: Polly.CircuitBreaker.AsyncCircuitBreakerPolicy
- uid: Polly.CircuitBreaker
  commentId: N:Polly.CircuitBreaker
  isExternal: true
  name: Polly.CircuitBreaker
  nameWithType: Polly.CircuitBreaker
  fullName: Polly.CircuitBreaker
  spec.csharp:
  - uid: Polly
    name: Polly
    isExternal: true
  - name: .
  - uid: Polly.CircuitBreaker
    name: CircuitBreaker
    isExternal: true
  spec.vb:
  - uid: Polly
    name: Polly
    isExternal: true
  - name: .
  - uid: Polly.CircuitBreaker
    name: CircuitBreaker
    isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Cloud.AWS.AwsBaseService.Finalize*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.Finalize
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Finalize
  name: ~AwsBaseService
  nameWithType: AwsBaseService.~AwsBaseService
  fullName: Innovt.Cloud.AWS.AwsBaseService.~AwsBaseService
  spec.csharp:
  - name: "~"
  - uid: Innovt.Cloud.AWS.AwsBaseService.Finalize*
    name: AwsBaseService
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Finalize
- uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices*
  commentId: Overload:Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  name: DisposeServices
  nameWithType: AwsBaseService.DisposeServices
  fullName: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
