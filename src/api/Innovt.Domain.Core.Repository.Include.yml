### YamlMime:ManagedReference
items:
- uid: Innovt.Domain.Core.Repository.Include
  commentId: T:Innovt.Domain.Core.Repository.Include
  id: Include
  parent: Innovt.Domain.Core.Repository
  children:
  - Innovt.Domain.Core.Repository.Include.#ctor
  - Innovt.Domain.Core.Repository.Include.#ctor(System.String[])
  - Innovt.Domain.Core.Repository.Include.Add(System.String)
  - Innovt.Domain.Core.Repository.Include.Add(System.String[])
  - Innovt.Domain.Core.Repository.Include.Includes
  - Innovt.Domain.Core.Repository.Include.IsEmpty
  - Innovt.Domain.Core.Repository.Include.New(System.String[])
  langs:
  - csharp
  - vb
  name: Include
  nameWithType: Include
  fullName: Innovt.Domain.Core.Repository.Include
  type: Class
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IncludeParams.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Include
    path: Innovt.Domain.Core/Repository/IncludeParams.cs
    startLine: 12
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Represents a class for managing entity inclusion paths for Entity Framework queries.
  example: []
  syntax:
    content: public class Include
    content.vb: Public Class Include
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Domain.Core.Repository.Include.#ctor
  commentId: M:Innovt.Domain.Core.Repository.Include.#ctor
  id: '#ctor'
  parent: Innovt.Domain.Core.Repository.Include
  langs:
  - csharp
  - vb
  name: Include()
  nameWithType: Include.Include()
  fullName: Innovt.Domain.Core.Repository.Include.Include()
  type: Constructor
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IncludeParams.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Domain.Core/Repository/IncludeParams.cs
    startLine: 17
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Initializes a new instance of the <xref href="Innovt.Domain.Core.Repository.Include" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public Include()
    content.vb: Public Sub New()
  overload: Innovt.Domain.Core.Repository.Include.#ctor*
  nameWithType.vb: Include.New()
  fullName.vb: Innovt.Domain.Core.Repository.Include.New()
  name.vb: New()
- uid: Innovt.Domain.Core.Repository.Include.#ctor(System.String[])
  commentId: M:Innovt.Domain.Core.Repository.Include.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: Innovt.Domain.Core.Repository.Include
  langs:
  - csharp
  - vb
  name: Include(params string[])
  nameWithType: Include.Include(params string[])
  fullName: Innovt.Domain.Core.Repository.Include.Include(params string[])
  type: Constructor
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IncludeParams.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Domain.Core/Repository/IncludeParams.cs
    startLine: 26
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Initializes a new instance of the <xref href="Innovt.Domain.Core.Repository.Include" data-throw-if-not-resolved="false"></xref> class with specified include paths.
  example: []
  syntax:
    content: public Include(params string[] includes)
    parameters:
    - id: includes
      type: System.String[]
      description: The include paths.
    content.vb: Public Sub New(ParamArray includes As String())
  overload: Innovt.Domain.Core.Repository.Include.#ctor*
  nameWithType.vb: Include.New(ParamArray String())
  fullName.vb: Innovt.Domain.Core.Repository.Include.New(ParamArray String())
  name.vb: New(ParamArray String())
- uid: Innovt.Domain.Core.Repository.Include.Includes
  commentId: P:Innovt.Domain.Core.Repository.Include.Includes
  id: Includes
  parent: Innovt.Domain.Core.Repository.Include
  langs:
  - csharp
  - vb
  name: Includes
  nameWithType: Include.Includes
  fullName: Innovt.Domain.Core.Repository.Include.Includes
  type: Property
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IncludeParams.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Includes
    path: Innovt.Domain.Core/Repository/IncludeParams.cs
    startLine: 34
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Gets the list of include paths.
  example: []
  syntax:
    content: public List<string> Includes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property Includes As List(Of String)
  overload: Innovt.Domain.Core.Repository.Include.Includes*
- uid: Innovt.Domain.Core.Repository.Include.IsEmpty
  commentId: M:Innovt.Domain.Core.Repository.Include.IsEmpty
  id: IsEmpty
  parent: Innovt.Domain.Core.Repository.Include
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: Include.IsEmpty()
  fullName: Innovt.Domain.Core.Repository.Include.IsEmpty()
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IncludeParams.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsEmpty
    path: Innovt.Domain.Core/Repository/IncludeParams.cs
    startLine: 40
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Checks if the include list is empty.
  example: []
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
      description: <code>true</code> if the include list is empty; otherwise, <code>false</code>.
    content.vb: Public Function IsEmpty() As Boolean
  overload: Innovt.Domain.Core.Repository.Include.IsEmpty*
- uid: Innovt.Domain.Core.Repository.Include.Add(System.String)
  commentId: M:Innovt.Domain.Core.Repository.Include.Add(System.String)
  id: Add(System.String)
  parent: Innovt.Domain.Core.Repository.Include
  langs:
  - csharp
  - vb
  name: Add(string)
  nameWithType: Include.Add(string)
  fullName: Innovt.Domain.Core.Repository.Include.Add(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IncludeParams.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Add
    path: Innovt.Domain.Core/Repository/IncludeParams.cs
    startLine: 50
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Adds an include path.
  example: []
  syntax:
    content: public Include Add(string param)
    parameters:
    - id: param
      type: System.String
      description: The include path to add.
    return:
      type: Innovt.Domain.Core.Repository.Include
      description: The <xref href="Innovt.Domain.Core.Repository.Include" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function Add(param As String) As Include
  overload: Innovt.Domain.Core.Repository.Include.Add*
  nameWithType.vb: Include.Add(String)
  fullName.vb: Innovt.Domain.Core.Repository.Include.Add(String)
  name.vb: Add(String)
- uid: Innovt.Domain.Core.Repository.Include.Add(System.String[])
  commentId: M:Innovt.Domain.Core.Repository.Include.Add(System.String[])
  id: Add(System.String[])
  parent: Innovt.Domain.Core.Repository.Include
  langs:
  - csharp
  - vb
  name: Add(params string[])
  nameWithType: Include.Add(params string[])
  fullName: Innovt.Domain.Core.Repository.Include.Add(params string[])
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IncludeParams.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Add
    path: Innovt.Domain.Core/Repository/IncludeParams.cs
    startLine: 61
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Adds multiple include paths.
  example: []
  syntax:
    content: public Include Add(params string[] parameters)
    parameters:
    - id: parameters
      type: System.String[]
      description: The include paths to add.
    return:
      type: Innovt.Domain.Core.Repository.Include
      description: The <xref href="Innovt.Domain.Core.Repository.Include" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function Add(ParamArray parameters As String()) As Include
  overload: Innovt.Domain.Core.Repository.Include.Add*
  nameWithType.vb: Include.Add(ParamArray String())
  fullName.vb: Innovt.Domain.Core.Repository.Include.Add(ParamArray String())
  name.vb: Add(ParamArray String())
- uid: Innovt.Domain.Core.Repository.Include.New(System.String[])
  commentId: M:Innovt.Domain.Core.Repository.Include.New(System.String[])
  id: New(System.String[])
  parent: Innovt.Domain.Core.Repository.Include
  langs:
  - csharp
  - vb
  name: New(params string[])
  nameWithType: Include.New(params string[])
  fullName: Innovt.Domain.Core.Repository.Include.New(params string[])
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IncludeParams.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: New
    path: Innovt.Domain.Core/Repository/IncludeParams.cs
    startLine: 72
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Creates a new instance of <xref href="Innovt.Domain.Core.Repository.Include" data-throw-if-not-resolved="false"></xref> with specified include paths.
  example: []
  syntax:
    content: public static Include New(params string[] parameters)
    parameters:
    - id: parameters
      type: System.String[]
      description: The include paths.
    return:
      type: Innovt.Domain.Core.Repository.Include
      description: The new <xref href="Innovt.Domain.Core.Repository.Include" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Function [New](ParamArray parameters As String()) As Include
  overload: Innovt.Domain.Core.Repository.Include.New*
  nameWithType.vb: Include.New(ParamArray String())
  fullName.vb: Innovt.Domain.Core.Repository.Include.New(ParamArray String())
  name.vb: New(ParamArray String())
references:
- uid: Innovt.Domain.Core.Repository
  commentId: N:Innovt.Domain.Core.Repository
  href: Innovt.html
  name: Innovt.Domain.Core.Repository
  nameWithType: Innovt.Domain.Core.Repository
  fullName: Innovt.Domain.Core.Repository
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Domain
    name: Domain
    href: Innovt.Domain.html
  - name: .
  - uid: Innovt.Domain.Core
    name: Core
    href: Innovt.Domain.Core.html
  - name: .
  - uid: Innovt.Domain.Core.Repository
    name: Repository
    href: Innovt.Domain.Core.Repository.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Domain
    name: Domain
    href: Innovt.Domain.html
  - name: .
  - uid: Innovt.Domain.Core
    name: Core
    href: Innovt.Domain.Core.html
  - name: .
  - uid: Innovt.Domain.Core.Repository
    name: Repository
    href: Innovt.Domain.Core.Repository.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Domain.Core.Repository.Include
  commentId: T:Innovt.Domain.Core.Repository.Include
  parent: Innovt.Domain.Core.Repository
  href: Innovt.Domain.Core.Repository.Include.html
  name: Include
  nameWithType: Include
  fullName: Innovt.Domain.Core.Repository.Include
- uid: Innovt.Domain.Core.Repository.Include.#ctor*
  commentId: Overload:Innovt.Domain.Core.Repository.Include.#ctor
  href: Innovt.Domain.Core.Repository.Include.html#Innovt_Domain_Core_Repository_Include__ctor
  name: Include
  nameWithType: Include.Include
  fullName: Innovt.Domain.Core.Repository.Include.Include
  nameWithType.vb: Include.New
  fullName.vb: Innovt.Domain.Core.Repository.Include.New
  name.vb: New
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Innovt.Domain.Core.Repository.Include.Includes*
  commentId: Overload:Innovt.Domain.Core.Repository.Include.Includes
  href: Innovt.Domain.Core.Repository.Include.html#Innovt_Domain_Core_Repository_Include_Includes
  name: Includes
  nameWithType: Include.Includes
  fullName: Innovt.Domain.Core.Repository.Include.Includes
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innovt.Domain.Core.Repository.Include.IsEmpty*
  commentId: Overload:Innovt.Domain.Core.Repository.Include.IsEmpty
  href: Innovt.Domain.Core.Repository.Include.html#Innovt_Domain_Core_Repository_Include_IsEmpty
  name: IsEmpty
  nameWithType: Include.IsEmpty
  fullName: Innovt.Domain.Core.Repository.Include.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Domain.Core.Repository.Include.Add*
  commentId: Overload:Innovt.Domain.Core.Repository.Include.Add
  href: Innovt.Domain.Core.Repository.Include.html#Innovt_Domain_Core_Repository_Include_Add_System_String_
  name: Add
  nameWithType: Include.Add
  fullName: Innovt.Domain.Core.Repository.Include.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Domain.Core.Repository.Include.New*
  commentId: Overload:Innovt.Domain.Core.Repository.Include.New
  href: Innovt.Domain.Core.Repository.Include.html#Innovt_Domain_Core_Repository_Include_New_System_String___
  name: New
  nameWithType: Include.New
  fullName: Innovt.Domain.Core.Repository.Include.New
