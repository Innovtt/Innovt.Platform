### YamlMime:ManagedReference
items:
- uid: Innovt.Data.EFCore.DBContextBase
  commentId: T:Innovt.Data.EFCore.DBContextBase
  id: DBContextBase
  parent: Innovt.Data.EFCore
  children:
  - Innovt.Data.EFCore.DBContextBase.#ctor(Innovt.Data.DataSources.IDataSource)
  - Innovt.Data.EFCore.DBContextBase.#ctor(Innovt.Data.DataSources.IDataSource,Microsoft.Extensions.Logging.ILoggerFactory)
  - Innovt.Data.EFCore.DBContextBase.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  - Innovt.Data.EFCore.DBContextBase.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  - Innovt.Data.EFCore.DBContextBase.AddAsync``1(``0,System.Threading.CancellationToken)
  - Innovt.Data.EFCore.DBContextBase.Add``1(System.Collections.Generic.IEnumerable{``0})
  - Innovt.Data.EFCore.DBContextBase.Add``1(``0)
  - Innovt.Data.EFCore.DBContextBase.Attach``1(``0)
  - Innovt.Data.EFCore.DBContextBase.Commit
  - Innovt.Data.EFCore.DBContextBase.CommitAsync(System.Threading.CancellationToken)
  - Innovt.Data.EFCore.DBContextBase.ConfigureProvider(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String)
  - Innovt.Data.EFCore.DBContextBase.Detach``1(``0)
  - Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand(System.String,System.Object[])
  - Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  - Innovt.Data.EFCore.DBContextBase.MaxRetryCount
  - Innovt.Data.EFCore.DBContextBase.MaxRetryDelay
  - Innovt.Data.EFCore.DBContextBase.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  - Innovt.Data.EFCore.DBContextBase.Queryable``1
  - Innovt.Data.EFCore.DBContextBase.Remove``1(System.Collections.Generic.IEnumerable{``0})
  - Innovt.Data.EFCore.DBContextBase.Remove``1(``0)
  - Innovt.Data.EFCore.DBContextBase.Rollback
  - Innovt.Data.EFCore.DBContextBase.Update``1(``0)
  langs:
  - csharp
  - vb
  name: DBContextBase
  nameWithType: DBContextBase
  fullName: Innovt.Data.EFCore.DBContextBase
  type: Class
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DBContextBase
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 21
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Abstract base class for Entity Framework DbContext implementing the extended unit of work interface.
  example: []
  syntax:
    content: 'public abstract class DBContextBase : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable'
    content.vb: Public MustInherit Class DBContextBase Inherits DbContext Implements IInfrastructure(Of IServiceProvider), IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.DbContext
  derivedClasses:
  - Innovt.Data.EFCore.MsSql.DBContext
  - Innovt.Data.EFCore.Oracle.DBContext
  - Innovt.Data.EFCore.PostgreSQL.DBContext
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  - Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  - Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  - Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  - Microsoft.EntityFrameworkCore.Infrastructure.IResettableService
  - System.IAsyncDisposable
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  - Innovt.Domain.Core.Repository.IUnitOfWork
  - System.IDisposable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.DbContext.Set``1
  - Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
  - Microsoft.EntityFrameworkCore.DbContext.ConfigureConventions(Microsoft.EntityFrameworkCore.ModelConfigurationBuilder)
  - Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Dispose
  - Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
  - Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{{TResult}}}})
  - Microsoft.EntityFrameworkCore.DbContext.Database
  - Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  - Microsoft.EntityFrameworkCore.DbContext.Model
  - Microsoft.EntityFrameworkCore.DbContext.ContextId
  - Microsoft.EntityFrameworkCore.DbContext.SavingChanges
  - Microsoft.EntityFrameworkCore.DbContext.SavedChanges
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Data.EFCore.DBContextBase.#ctor(Innovt.Data.DataSources.IDataSource)
  commentId: M:Innovt.Data.EFCore.DBContextBase.#ctor(Innovt.Data.DataSources.IDataSource)
  id: '#ctor(Innovt.Data.DataSources.IDataSource)'
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: DBContextBase(IDataSource)
  nameWithType: DBContextBase.DBContextBase(IDataSource)
  fullName: Innovt.Data.EFCore.DBContextBase.DBContextBase(Innovt.Data.DataSources.IDataSource)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 31
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Initializes a new instance of the <xref href="Innovt.Data.EFCore.DBContextBase" data-throw-if-not-resolved="false"></xref> class using a data source.
  example: []
  syntax:
    content: protected DBContextBase(IDataSource dataSource)
    parameters:
    - id: dataSource
      type: Innovt.Data.DataSources.IDataSource
      description: The data source to use.
    content.vb: Protected Sub New(dataSource As IDataSource)
  overload: Innovt.Data.EFCore.DBContextBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the data source is null.
  nameWithType.vb: DBContextBase.New(IDataSource)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.New(Innovt.Data.DataSources.IDataSource)
  name.vb: New(IDataSource)
- uid: Innovt.Data.EFCore.DBContextBase.#ctor(Innovt.Data.DataSources.IDataSource,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Innovt.Data.EFCore.DBContextBase.#ctor(Innovt.Data.DataSources.IDataSource,Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Innovt.Data.DataSources.IDataSource,Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: DBContextBase(IDataSource, ILoggerFactory)
  nameWithType: DBContextBase.DBContextBase(IDataSource, ILoggerFactory)
  fullName: Innovt.Data.EFCore.DBContextBase.DBContextBase(Innovt.Data.DataSources.IDataSource, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 43
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Initializes a new instance of the <xref href="Innovt.Data.EFCore.DBContextBase" data-throw-if-not-resolved="false"></xref> class using a data source and logger factory.
  example: []
  syntax:
    content: protected DBContextBase(IDataSource dataSource, ILoggerFactory loggerFactory)
    parameters:
    - id: dataSource
      type: Innovt.Data.DataSources.IDataSource
      description: The data source to use.
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The logger factory to use.
    content.vb: Protected Sub New(dataSource As IDataSource, loggerFactory As ILoggerFactory)
  overload: Innovt.Data.EFCore.DBContextBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the data source or logger factory is null.
  nameWithType.vb: DBContextBase.New(IDataSource, ILoggerFactory)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.New(Innovt.Data.DataSources.IDataSource, Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: New(IDataSource, ILoggerFactory)
- uid: Innovt.Data.EFCore.DBContextBase.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Innovt.Data.EFCore.DBContextBase.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)'
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: DBContextBase(DbContextOptions)
  nameWithType: DBContextBase.DBContextBase(DbContextOptions)
  fullName: Innovt.Data.EFCore.DBContextBase.DBContextBase(Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 52
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Initializes a new instance of the <xref href="Innovt.Data.EFCore.DBContextBase" data-throw-if-not-resolved="false"></xref> class using DbContext options.
  example: []
  syntax:
    content: protected DBContextBase(DbContextOptions options)
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
      description: The DbContext options.
    content.vb: Protected Sub New(options As DbContextOptions)
  overload: Innovt.Data.EFCore.DBContextBase.#ctor*
  nameWithType.vb: DBContextBase.New(DbContextOptions)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.New(Microsoft.EntityFrameworkCore.DbContextOptions)
  name.vb: New(DbContextOptions)
- uid: Innovt.Data.EFCore.DBContextBase.MaxRetryCount
  commentId: P:Innovt.Data.EFCore.DBContextBase.MaxRetryCount
  id: MaxRetryCount
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: DBContextBase.MaxRetryCount
  fullName: Innovt.Data.EFCore.DBContextBase.MaxRetryCount
  type: Property
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MaxRetryCount
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 60
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Gets or sets the maximum number of retries for a transaction.
  example: []
  syntax:
    content: public int? MaxRetryCount { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property MaxRetryCount As Integer?
  overload: Innovt.Data.EFCore.DBContextBase.MaxRetryCount*
- uid: Innovt.Data.EFCore.DBContextBase.MaxRetryDelay
  commentId: P:Innovt.Data.EFCore.DBContextBase.MaxRetryDelay
  id: MaxRetryDelay
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: MaxRetryDelay
  nameWithType: DBContextBase.MaxRetryDelay
  fullName: Innovt.Data.EFCore.DBContextBase.MaxRetryDelay
  type: Property
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MaxRetryDelay
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 65
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Gets or sets the maximum delay between retries for a transaction.
  example: []
  syntax:
    content: public TimeSpan? MaxRetryDelay { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: Public Property MaxRetryDelay As TimeSpan?
  overload: Innovt.Data.EFCore.DBContextBase.MaxRetryDelay*
- uid: Innovt.Data.EFCore.DBContextBase.Commit
  commentId: M:Innovt.Data.EFCore.DBContextBase.Commit
  id: Commit
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Commit()
  nameWithType: DBContextBase.Commit()
  fullName: Innovt.Data.EFCore.DBContextBase.Commit()
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Commit
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 71
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Commits the changes made in the unit of work to the database.
  example: []
  syntax:
    content: public int Commit()
    return:
      type: System.Int32
      description: The number of entities written to the database.
    content.vb: Public Function Commit() As Integer
  overload: Innovt.Data.EFCore.DBContextBase.Commit*
  implements:
  - Innovt.Domain.Core.Repository.IUnitOfWork.Commit
- uid: Innovt.Data.EFCore.DBContextBase.CommitAsync(System.Threading.CancellationToken)
  commentId: M:Innovt.Data.EFCore.DBContextBase.CommitAsync(System.Threading.CancellationToken)
  id: CommitAsync(System.Threading.CancellationToken)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: CommitAsync(CancellationToken)
  nameWithType: DBContextBase.CommitAsync(CancellationToken)
  fullName: Innovt.Data.EFCore.DBContextBase.CommitAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CommitAsync
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 81
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Asynchronously commits the changes made in the unit of work to the database.
  example: []
  syntax:
    content: public Task<int> CommitAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token (optional).
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of entities written to the database.
    content.vb: Public Function CommitAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: Innovt.Data.EFCore.DBContextBase.CommitAsync*
  implements:
  - Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
- uid: Innovt.Data.EFCore.DBContextBase.Rollback
  commentId: M:Innovt.Data.EFCore.DBContextBase.Rollback
  id: Rollback
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Rollback()
  nameWithType: DBContextBase.Rollback()
  fullName: Innovt.Data.EFCore.DBContextBase.Rollback()
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Rollback
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 89
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Rolls back the changes made in the unit of work by setting all entries to an unchanged state.
  example: []
  syntax:
    content: public void Rollback()
    content.vb: Public Sub Rollback()
  overload: Innovt.Data.EFCore.DBContextBase.Rollback*
  implements:
  - Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
- uid: Innovt.Data.EFCore.DBContextBase.Add``1(``0)
  commentId: M:Innovt.Data.EFCore.DBContextBase.Add``1(``0)
  id: Add``1(``0)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Add<T>(T)
  nameWithType: DBContextBase.Add<T>(T)
  fullName: Innovt.Data.EFCore.DBContextBase.Add<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Add
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 101
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Adds an entity to the DbContext.
  example: []
  syntax:
    content: 'public void Add<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to add.
    typeParameters:
    - id: T
      description: The type of entity to add.
    content.vb: Public Sub Add(Of T As Class)(entity As T)
  overload: Innovt.Data.EFCore.DBContextBase.Add*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1({T})
  nameWithType.vb: DBContextBase.Add(Of T)(T)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.Add(Of T)(T)
  name.vb: Add(Of T)(T)
- uid: Innovt.Data.EFCore.DBContextBase.Add``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innovt.Data.EFCore.DBContextBase.Add``1(System.Collections.Generic.IEnumerable{``0})
  id: Add``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Add<T>(IEnumerable<T>)
  nameWithType: DBContextBase.Add<T>(IEnumerable<T>)
  fullName: Innovt.Data.EFCore.DBContextBase.Add<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Add
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 111
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Adds a collection of entities to the DbContext.
  example: []
  syntax:
    content: 'public void Add<T>(IEnumerable<T> entities) where T : class'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection of entities to add.
    typeParameters:
    - id: T
      description: The type of entities to add.
    content.vb: Public Sub Add(Of T As Class)(entities As IEnumerable(Of T))
  overload: Innovt.Data.EFCore.DBContextBase.Add*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: DBContextBase.Add(Of T)(IEnumerable(Of T))
  fullName.vb: Innovt.Data.EFCore.DBContextBase.Add(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(Of T)(IEnumerable(Of T))
- uid: Innovt.Data.EFCore.DBContextBase.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.EFCore.DBContextBase.AddAsync``1(``0,System.Threading.CancellationToken)
  id: AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: AddAsync<T>(T, CancellationToken)
  nameWithType: DBContextBase.AddAsync<T>(T, CancellationToken)
  fullName: Innovt.Data.EFCore.DBContextBase.AddAsync<T>(T, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddAsync
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 123
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Asynchronously adds an entity to the DbContext.
  example: []
  syntax:
    content: 'public Task AddAsync<T>(T entity, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to add.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token (optional).
    typeParameters:
    - id: T
      description: The type of entity to add.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Function AddAsync(Of T As Class)(entity As T, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Data.EFCore.DBContextBase.AddAsync*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1({T},System.Threading.CancellationToken)
  nameWithType.vb: DBContextBase.AddAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.AddAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(T, CancellationToken)
- uid: Innovt.Data.EFCore.DBContextBase.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:Innovt.Data.EFCore.DBContextBase.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  id: AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: AddAsync<T>(IEnumerable<T>, CancellationToken)
  nameWithType: DBContextBase.AddAsync<T>(IEnumerable<T>, CancellationToken)
  fullName: Innovt.Data.EFCore.DBContextBase.AddAsync<T>(System.Collections.Generic.IEnumerable<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddAsync
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 135
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Asynchronously adds a collection of entities to the DbContext.
  example: []
  syntax:
    content: 'public Task AddAsync<T>(IEnumerable<T> entities, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection of entities to add.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token (optional).
    typeParameters:
    - id: T
      description: The type of entities to add.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Function AddAsync(Of T As Class)(entities As IEnumerable(Of T), cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Data.EFCore.DBContextBase.AddAsync*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{{T}},System.Threading.CancellationToken)
  nameWithType.vb: DBContextBase.AddAsync(Of T)(IEnumerable(Of T), CancellationToken)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.AddAsync(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(IEnumerable(Of T), CancellationToken)
- uid: Innovt.Data.EFCore.DBContextBase.Remove``1(``0)
  commentId: M:Innovt.Data.EFCore.DBContextBase.Remove``1(``0)
  id: Remove``1(``0)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Remove<T>(T)
  nameWithType: DBContextBase.Remove<T>(T)
  fullName: Innovt.Data.EFCore.DBContextBase.Remove<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Remove
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 146
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  syntax:
    content: 'public void Remove<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub Remove(Of T As Class)(entity As T)
  overload: Innovt.Data.EFCore.DBContextBase.Remove*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1({T})
  nameWithType.vb: DBContextBase.Remove(Of T)(T)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.Remove(Of T)(T)
  name.vb: Remove(Of T)(T)
- uid: Innovt.Data.EFCore.DBContextBase.Remove``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innovt.Data.EFCore.DBContextBase.Remove``1(System.Collections.Generic.IEnumerable{``0})
  id: Remove``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Remove<T>(IEnumerable<T>)
  nameWithType: DBContextBase.Remove<T>(IEnumerable<T>)
  fullName: Innovt.Data.EFCore.DBContextBase.Remove<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Remove
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 156
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Removes a collection of entities from the DbContext.
  example: []
  syntax:
    content: 'public void Remove<T>(IEnumerable<T> entities) where T : class'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection of entities to remove.
    typeParameters:
    - id: T
      description: The type of entities to remove.
    content.vb: Public Sub Remove(Of T As Class)(entities As IEnumerable(Of T))
  overload: Innovt.Data.EFCore.DBContextBase.Remove*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: DBContextBase.Remove(Of T)(IEnumerable(Of T))
  fullName.vb: Innovt.Data.EFCore.DBContextBase.Remove(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Remove(Of T)(IEnumerable(Of T))
- uid: Innovt.Data.EFCore.DBContextBase.Update``1(``0)
  commentId: M:Innovt.Data.EFCore.DBContextBase.Update``1(``0)
  id: Update``1(``0)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Update<T>(T)
  nameWithType: DBContextBase.Update<T>(T)
  fullName: Innovt.Data.EFCore.DBContextBase.Update<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Update
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 166
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Updates the specified entity in the DbContext.
  example: []
  syntax:
    content: 'public void Update<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to update.
    typeParameters:
    - id: T
      description: The type of entity to update.
    content.vb: Public Sub Update(Of T As Class)(entity As T)
  overload: Innovt.Data.EFCore.DBContextBase.Update*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1({T})
  nameWithType.vb: DBContextBase.Update(Of T)(T)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.Update(Of T)(T)
  name.vb: Update(Of T)(T)
- uid: Innovt.Data.EFCore.DBContextBase.Attach``1(``0)
  commentId: M:Innovt.Data.EFCore.DBContextBase.Attach``1(``0)
  id: Attach``1(``0)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Attach<T>(T)
  nameWithType: DBContextBase.Attach<T>(T)
  fullName: Innovt.Data.EFCore.DBContextBase.Attach<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Attach
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 176
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Attaches the specified entity to the DbContext.
  example: []
  syntax:
    content: 'public void Attach<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to attach.
    typeParameters:
    - id: T
      description: The type of entity to attach.
    content.vb: Public Sub Attach(Of T As Class)(entity As T)
  overload: Innovt.Data.EFCore.DBContextBase.Attach*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1({T})
  nameWithType.vb: DBContextBase.Attach(Of T)(T)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.Attach(Of T)(T)
  name.vb: Attach(Of T)(T)
- uid: Innovt.Data.EFCore.DBContextBase.Detach``1(``0)
  commentId: M:Innovt.Data.EFCore.DBContextBase.Detach``1(``0)
  id: Detach``1(``0)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Detach<T>(T)
  nameWithType: DBContextBase.Detach<T>(T)
  fullName: Innovt.Data.EFCore.DBContextBase.Detach<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Detach
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 186
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Detaches an entity from the DbContext.
  example: []
  syntax:
    content: 'public void Detach<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to detach.
    typeParameters:
    - id: T
      description: The type of entity to detach.
    content.vb: Public Sub Detach(Of T As Class)(entity As T)
  overload: Innovt.Data.EFCore.DBContextBase.Detach*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1({T})
  nameWithType.vb: DBContextBase.Detach(Of T)(T)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.Detach(Of T)(T)
  name.vb: Detach(Of T)(T)
- uid: Innovt.Data.EFCore.DBContextBase.Queryable``1
  commentId: M:Innovt.Data.EFCore.DBContextBase.Queryable``1
  id: Queryable``1
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: Queryable<T>()
  nameWithType: DBContextBase.Queryable<T>()
  fullName: Innovt.Data.EFCore.DBContextBase.Queryable<T>()
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Queryable
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 196
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Gets a queryable representation of a specific entity type.
  example: []
  syntax:
    content: 'public IQueryable<T> Queryable<T>() where T : class'
    typeParameters:
    - id: T
      description: The type of entity.
    return:
      type: System.Linq.IQueryable{{T}}
      description: An <xref href="System.Linq.IQueryable%601" data-throw-if-not-resolved="false"></xref> representing the entity type.
    content.vb: Public Function Queryable(Of T As Class)() As IQueryable(Of T)
  overload: Innovt.Data.EFCore.DBContextBase.Queryable*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable``1
  nameWithType.vb: DBContextBase.Queryable(Of T)()
  fullName.vb: Innovt.Data.EFCore.DBContextBase.Queryable(Of T)()
  name.vb: Queryable(Of T)()
- uid: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand(System.String,System.Object[])
  commentId: M:Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand(System.String,System.Object[])
  id: ExecuteSqlCommand(System.String,System.Object[])
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: ExecuteSqlCommand(string, params object[])
  nameWithType: DBContextBase.ExecuteSqlCommand(string, params object[])
  fullName: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand(string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteSqlCommand
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 207
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Executes a SQL command against the database.
  example: []
  syntax:
    content: public abstract int ExecuteSqlCommand(string sql, params object[] parameters)
    parameters:
    - id: sql
      type: System.String
      description: The SQL command to execute.
    - id: parameters
      type: System.Object[]
      description: The parameters for the SQL command.
    return:
      type: System.Int32
      description: The number of entities affected by the SQL command.
    content.vb: Public MustOverride Function ExecuteSqlCommand(sql As String, ParamArray parameters As Object()) As Integer
  overload: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])
  nameWithType.vb: DBContextBase.ExecuteSqlCommand(String, ParamArray Object())
  fullName.vb: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand(String, ParamArray Object())
  name.vb: ExecuteSqlCommand(String, ParamArray Object())
- uid: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  commentId: M:Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  id: ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: ExecuteSqlCommandAsync(string, CancellationToken, params object[])
  nameWithType: DBContextBase.ExecuteSqlCommandAsync(string, CancellationToken, params object[])
  fullName: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync(string, System.Threading.CancellationToken, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteSqlCommandAsync
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 219
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Asynchronously executes a SQL command against the database.
  example: []
  syntax:
    content: public abstract Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters)
    parameters:
    - id: sql
      type: System.String
      description: The SQL command to execute.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token (optional).
    - id: parameters
      type: System.Object[]
      description: The parameters for the SQL command.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: >-
        A task representing the asynchronous operation and yielding the number of entities affected by the SQL

        command.
    content.vb: Public MustOverride Function ExecuteSqlCommandAsync(sql As String, cancellationToken As CancellationToken = Nothing, ParamArray parameters As Object()) As Task(Of Integer)
  overload: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync*
  implements:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  nameWithType.vb: DBContextBase.ExecuteSqlCommandAsync(String, CancellationToken, ParamArray Object())
  fullName.vb: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync(String, System.Threading.CancellationToken, ParamArray Object())
  name.vb: ExecuteSqlCommandAsync(String, CancellationToken, ParamArray Object())
- uid: Innovt.Data.EFCore.DBContextBase.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Innovt.Data.EFCore.DBContextBase.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  id: OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: DBContextBase.OnConfiguring(DbContextOptionsBuilder)
  fullName: Innovt.Data.EFCore.DBContextBase.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: OnConfiguring
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 226
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Overrides the configuration of DbContext options.
  example: []
  syntax:
    content: protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
      description: The options builder for configuring DbContext options.
    content.vb: Protected Overrides Sub OnConfiguring(optionsBuilder As DbContextOptionsBuilder)
  overridden: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  overload: Innovt.Data.EFCore.DBContextBase.OnConfiguring*
- uid: Innovt.Data.EFCore.DBContextBase.ConfigureProvider(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String)
  commentId: M:Innovt.Data.EFCore.DBContextBase.ConfigureProvider(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String)
  id: ConfigureProvider(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String)
  parent: Innovt.Data.EFCore.DBContextBase
  langs:
  - csharp
  - vb
  name: ConfigureProvider(DbContextOptionsBuilder, string)
  nameWithType: DBContextBase.ConfigureProvider(DbContextOptionsBuilder, string)
  fullName: Innovt.Data.EFCore.DBContextBase.ConfigureProvider(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.EFCore/DBContextBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureProvider
    path: Innovt.Data.EFCore/DBContextBase.cs
    startLine: 253
  assemblies:
  - Innovt.Data.EFCore
  namespace: Innovt.Data.EFCore
  summary: Configures the provider-specific options for the DbContext.
  example: []
  syntax:
    content: protected abstract void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
      description: The options builder for configuring DbContext options.
    - id: connectionString
      type: System.String
      description: The connection string for the data source.
    content.vb: Protected MustOverride Sub ConfigureProvider(optionsBuilder As DbContextOptionsBuilder, connectionString As String)
  overload: Innovt.Data.EFCore.DBContextBase.ConfigureProvider*
  nameWithType.vb: DBContextBase.ConfigureProvider(DbContextOptionsBuilder, String)
  fullName.vb: Innovt.Data.EFCore.DBContextBase.ConfigureProvider(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder, String)
  name.vb: ConfigureProvider(DbContextOptionsBuilder, String)
references:
- uid: Innovt.Data.EFCore
  commentId: N:Innovt.Data.EFCore
  href: Innovt.html
  name: Innovt.Data.EFCore
  nameWithType: Innovt.Data.EFCore
  fullName: Innovt.Data.EFCore
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.EFCore
    name: EFCore
    href: Innovt.Data.EFCore.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.EFCore
    name: EFCore
    href: Innovt.Data.EFCore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  name: IInfrastructure<IServiceProvider>
  nameWithType: IInfrastructure<IServiceProvider>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>
  nameWithType.vb: IInfrastructure(Of IServiceProvider)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider)
  name.vb: IInfrastructure(Of IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.internal.idbcontextdependencies
  name: IDbContextDependencies
  nameWithType: IDbContextDependencies
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.internal.idbsetcache
  name: IDbSetCache
  nameWithType: IDbSetCache
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetCache
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.internal.idbcontextpoolable
  name: IDbContextPoolable
  nameWithType: IDbContextPoolable
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IResettableService
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IResettableService
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iresettableservice
  name: IResettableService
  nameWithType: IResettableService
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IResettableService
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  commentId: T:Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  parent: Innovt.Domain.Core.Repository
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html
  name: IExtendedUnitOfWork
  nameWithType: IExtendedUnitOfWork
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
- uid: Innovt.Domain.Core.Repository.IUnitOfWork
  commentId: T:Innovt.Domain.Core.Repository.IUnitOfWork
  parent: Innovt.Domain.Core.Repository
  href: Innovt.Domain.Core.Repository.IUnitOfWork.html
  name: IUnitOfWork
  nameWithType: IUnitOfWork
  fullName: Innovt.Domain.Core.Repository.IUnitOfWork
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Set``1
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.set#microsoft-entityframeworkcore-dbcontext-set-1
  name: Set<TEntity>()
  nameWithType: DbContext.Set<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>()
  nameWithType.vb: DbContext.Set(Of TEntity)()
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)()
  name.vb: Set(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.set#microsoft-entityframeworkcore-dbcontext-set-1
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.set#microsoft-entityframeworkcore-dbcontext-set-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.set#microsoft-entityframeworkcore-dbcontext-set-1(system-string)
  name: Set<TEntity>(string)
  nameWithType: DbContext.Set<TEntity>(string)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>(string)
  nameWithType.vb: DbContext.Set(Of TEntity)(String)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)(String)
  name.vb: Set(Of TEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
    name: Set
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.set#microsoft-entityframeworkcore-dbcontext-set-1(system-string)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
    name: Set
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.set#microsoft-entityframeworkcore-dbcontext-set-1(system-string)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.ConfigureConventions(Microsoft.EntityFrameworkCore.ModelConfigurationBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.ConfigureConventions(Microsoft.EntityFrameworkCore.ModelConfigurationBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.configureconventions
  name: ConfigureConventions(ModelConfigurationBuilder)
  nameWithType: DbContext.ConfigureConventions(ModelConfigurationBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.ConfigureConventions(Microsoft.EntityFrameworkCore.ModelConfigurationBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.ConfigureConventions(Microsoft.EntityFrameworkCore.ModelConfigurationBuilder)
    name: ConfigureConventions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.configureconventions
  - name: (
  - uid: Microsoft.EntityFrameworkCore.ModelConfigurationBuilder
    name: ModelConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelconfigurationbuilder
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.ConfigureConventions(Microsoft.EntityFrameworkCore.ModelConfigurationBuilder)
    name: ConfigureConventions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.configureconventions
  - name: (
  - uid: Microsoft.EntityFrameworkCore.ModelConfigurationBuilder
    name: ModelConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelconfigurationbuilder
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.onmodelcreating
  name: OnModelCreating(ModelBuilder)
  nameWithType: DbContext.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.onmodelcreating
  - name: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.onmodelcreating
  - name: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.modelbuilder
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges(system-boolean)
  name: SaveChanges(bool)
  nameWithType: DbContext.SaveChanges(bool)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(bool)
  nameWithType.vb: DbContext.SaveChanges(Boolean)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean)
  name.vb: SaveChanges(Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges(system-boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechanges#microsoft-entityframeworkcore-dbcontext-savechanges(system-boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechangesasync#microsoft-entityframeworkcore-dbcontext-savechangesasync(system-threading-cancellationtoken)
  name: SaveChangesAsync(CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechangesasync#microsoft-entityframeworkcore-dbcontext-savechangesasync(system-threading-cancellationtoken)
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechangesasync#microsoft-entityframeworkcore-dbcontext-savechangesasync(system-threading-cancellationtoken)
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechangesasync#microsoft-entityframeworkcore-dbcontext-savechangesasync(system-boolean-system-threading-cancellationtoken)
  name: SaveChangesAsync(bool, CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(bool, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(bool, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.SaveChangesAsync(Boolean, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean, System.Threading.CancellationToken)
  name.vb: SaveChangesAsync(Boolean, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechangesasync#microsoft-entityframeworkcore-dbcontext-savechangesasync(system-boolean-system-threading-cancellationtoken)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechangesasync#microsoft-entityframeworkcore-dbcontext-savechangesasync(system-boolean-system-threading-cancellationtoken)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Dispose
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.dispose
  name: Dispose()
  nameWithType: DbContext.Dispose()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.dispose
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.disposeasync
  name: DisposeAsync()
  nameWithType: DbContext.DisposeAsync()
  fullName: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.disposeasync
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.disposeasync
  - name: (
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry-1(-0)
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry(system-object)
  name: Entry(object)
  nameWithType: DbContext.Entry(object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(object)
  nameWithType.vb: DbContext.Entry(Object)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Object)
  name.vb: Entry(Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add-1(-0)
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync-1(-0-system-threading-cancellationtoken)
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync-1(-0-system-threading-cancellationtoken)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync-1(-0-system-threading-cancellationtoken)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach-1(-0)
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update-1(-0)
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove-1(-0)
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add(system-object)
  name: Add(object)
  nameWithType: DbContext.Add(object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add(object)
  nameWithType.vb: DbContext.Add(Object)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Object)
  name.vb: Add(Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync(system-object-system-threading-cancellationtoken)
  name: AddAsync(object, CancellationToken)
  nameWithType: DbContext.AddAsync(object, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(object, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Object, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Object, System.Threading.CancellationToken)
  name.vb: AddAsync(Object, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync(system-object-system-threading-cancellationtoken)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync(system-object-system-threading-cancellationtoken)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach(system-object)
  name: Attach(object)
  nameWithType: DbContext.Attach(object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(object)
  nameWithType.vb: DbContext.Attach(Object)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Object)
  name.vb: Attach(Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update(system-object)
  name: Update(object)
  nameWithType: DbContext.Update(object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update(object)
  nameWithType.vb: DbContext.Update(Object)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Object)
  name.vb: Update(Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove(system-object)
  name: Remove(object)
  nameWithType: DbContext.Remove(object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(object)
  nameWithType.vb: DbContext.Remove(Object)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Object)
  name.vb: Remove(Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrange#microsoft-entityframeworkcore-dbcontext-addrange(system-object())
  name: AddRange(params object[])
  nameWithType: DbContext.AddRange(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(params object[])
  nameWithType.vb: DbContext.AddRange(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(ParamArray Object())
  name.vb: AddRange(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrange#microsoft-entityframeworkcore-dbcontext-addrange(system-object())
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrange#microsoft-entityframeworkcore-dbcontext-addrange(system-object())
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrangeasync#microsoft-entityframeworkcore-dbcontext-addrangeasync(system-object())
  name: AddRangeAsync(params object[])
  nameWithType: DbContext.AddRangeAsync(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(params object[])
  nameWithType.vb: DbContext.AddRangeAsync(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(ParamArray Object())
  name.vb: AddRangeAsync(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrangeasync#microsoft-entityframeworkcore-dbcontext-addrangeasync(system-object())
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrangeasync#microsoft-entityframeworkcore-dbcontext-addrangeasync(system-object())
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attachrange#microsoft-entityframeworkcore-dbcontext-attachrange(system-object())
  name: AttachRange(params object[])
  nameWithType: DbContext.AttachRange(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(params object[])
  nameWithType.vb: DbContext.AttachRange(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(ParamArray Object())
  name.vb: AttachRange(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attachrange#microsoft-entityframeworkcore-dbcontext-attachrange(system-object())
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attachrange#microsoft-entityframeworkcore-dbcontext-attachrange(system-object())
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.updaterange#microsoft-entityframeworkcore-dbcontext-updaterange(system-object())
  name: UpdateRange(params object[])
  nameWithType: DbContext.UpdateRange(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(params object[])
  nameWithType.vb: DbContext.UpdateRange(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(ParamArray Object())
  name.vb: UpdateRange(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.updaterange#microsoft-entityframeworkcore-dbcontext-updaterange(system-object())
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.updaterange#microsoft-entityframeworkcore-dbcontext-updaterange(system-object())
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.removerange#microsoft-entityframeworkcore-dbcontext-removerange(system-object())
  name: RemoveRange(params object[])
  nameWithType: DbContext.RemoveRange(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(params object[])
  nameWithType.vb: DbContext.RemoveRange(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(ParamArray Object())
  name.vb: RemoveRange(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.removerange#microsoft-entityframeworkcore-dbcontext-removerange(system-object())
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.removerange#microsoft-entityframeworkcore-dbcontext-removerange(system-object())
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrange#microsoft-entityframeworkcore-dbcontext-addrange(system-collections-generic-ienumerable((system-object)))
  name: AddRange(IEnumerable<object>)
  nameWithType: DbContext.AddRange(IEnumerable<object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<object>)
  nameWithType.vb: DbContext.AddRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable(Of Object))
  name.vb: AddRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrange#microsoft-entityframeworkcore-dbcontext-addrange(system-collections-generic-ienumerable((system-object)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrange#microsoft-entityframeworkcore-dbcontext-addrange(system-collections-generic-ienumerable((system-object)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrangeasync#microsoft-entityframeworkcore-dbcontext-addrangeasync(system-collections-generic-ienumerable((system-object))-system-threading-cancellationtoken)
  name: AddRangeAsync(IEnumerable<object>, CancellationToken)
  nameWithType: DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<object>, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable(Of Object), System.Threading.CancellationToken)
  name.vb: AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrangeasync#microsoft-entityframeworkcore-dbcontext-addrangeasync(system-collections-generic-ienumerable((system-object))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addrangeasync#microsoft-entityframeworkcore-dbcontext-addrangeasync(system-collections-generic-ienumerable((system-object))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attachrange#microsoft-entityframeworkcore-dbcontext-attachrange(system-collections-generic-ienumerable((system-object)))
  name: AttachRange(IEnumerable<object>)
  nameWithType: DbContext.AttachRange(IEnumerable<object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<object>)
  nameWithType.vb: DbContext.AttachRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable(Of Object))
  name.vb: AttachRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attachrange#microsoft-entityframeworkcore-dbcontext-attachrange(system-collections-generic-ienumerable((system-object)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attachrange#microsoft-entityframeworkcore-dbcontext-attachrange(system-collections-generic-ienumerable((system-object)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.updaterange#microsoft-entityframeworkcore-dbcontext-updaterange(system-collections-generic-ienumerable((system-object)))
  name: UpdateRange(IEnumerable<object>)
  nameWithType: DbContext.UpdateRange(IEnumerable<object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<object>)
  nameWithType.vb: DbContext.UpdateRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable(Of Object))
  name.vb: UpdateRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.updaterange#microsoft-entityframeworkcore-dbcontext-updaterange(system-collections-generic-ienumerable((system-object)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.updaterange#microsoft-entityframeworkcore-dbcontext-updaterange(system-collections-generic-ienumerable((system-object)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.removerange#microsoft-entityframeworkcore-dbcontext-removerange(system-collections-generic-ienumerable((system-object)))
  name: RemoveRange(IEnumerable<object>)
  nameWithType: DbContext.RemoveRange(IEnumerable<object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<object>)
  nameWithType.vb: DbContext.RemoveRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable(Of Object))
  name.vb: RemoveRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.removerange#microsoft-entityframeworkcore-dbcontext-removerange(system-collections-generic-ienumerable((system-object)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.removerange#microsoft-entityframeworkcore-dbcontext-removerange(system-collections-generic-ienumerable((system-object)))
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.find#microsoft-entityframeworkcore-dbcontext-find(system-type-system-object())
  name: Find(Type, params object[])
  nameWithType: DbContext.Find(Type, params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, params object[])
  nameWithType.vb: DbContext.Find(Type, ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, ParamArray Object())
  name.vb: Find(Type, ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.find#microsoft-entityframeworkcore-dbcontext-find(system-type-system-object())
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.find#microsoft-entityframeworkcore-dbcontext-find(system-type-system-object())
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync(system-type-system-object())
  name: FindAsync(Type, params object[])
  nameWithType: DbContext.FindAsync(Type, params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, params object[])
  nameWithType.vb: DbContext.FindAsync(Type, ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, ParamArray Object())
  name.vb: FindAsync(Type, ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync(system-type-system-object())
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync(system-type-system-object())
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync(system-type-system-object()-system-threading-cancellationtoken)
  name: FindAsync(Type, object[], CancellationToken)
  nameWithType: DbContext.FindAsync(Type, object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Type, Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Type, Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync(system-type-system-object()-system-threading-cancellationtoken)
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync(system-type-system-object()-system-threading-cancellationtoken)
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.find#microsoft-entityframeworkcore-dbcontext-find-1(system-object())
  name: Find<TEntity>(params object[])
  nameWithType: DbContext.Find<TEntity>(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(params object[])
  nameWithType.vb: DbContext.Find(Of TEntity)(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)(ParamArray Object())
  name.vb: Find(Of TEntity)(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.find#microsoft-entityframeworkcore-dbcontext-find-1(system-object())
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.find#microsoft-entityframeworkcore-dbcontext-find-1(system-object())
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync-1(system-object())
  name: FindAsync<TEntity>(params object[])
  nameWithType: DbContext.FindAsync<TEntity>(params object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(params object[])
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(ParamArray Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(ParamArray Object())
  name.vb: FindAsync(Of TEntity)(ParamArray Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync-1(system-object())
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync-1(system-object())
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync-1(system-object()-system-threading-cancellationtoken)
  name: FindAsync<TEntity>(object[], CancellationToken)
  nameWithType: DbContext.FindAsync<TEntity>(object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Of TEntity)(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync-1(system-object()-system-threading-cancellationtoken)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.findasync#microsoft-entityframeworkcore-dbcontext-findasync-1(system-object()-system-threading-cancellationtoken)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{{TResult}}}})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.fromexpression
  name: FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>)
  nameWithType: DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>(System.Linq.Expressions.Expression<System.Func<System.Linq.IQueryable<TResult>>>)
  nameWithType.vb: DbContext.FromExpression(Of TResult)(Expression(Of Func(Of IQueryable(Of TResult))))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FromExpression(Of TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Linq.IQueryable(Of TResult))))
  name.vb: FromExpression(Of TResult)(Expression(Of Func(Of IQueryable(Of TResult))))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
    name: FromExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.fromexpression
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
    name: FromExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.fromexpression
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Database
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Database
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.database
  name: Database
  nameWithType: DbContext.Database
  fullName: Microsoft.EntityFrameworkCore.DbContext.Database
- uid: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.changetracker
  name: ChangeTracker
  nameWithType: DbContext.ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.DbContext.Model
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Model
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.model
  name: Model
  nameWithType: DbContext.Model
  fullName: Microsoft.EntityFrameworkCore.DbContext.Model
- uid: Microsoft.EntityFrameworkCore.DbContext.ContextId
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.ContextId
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.contextid
  name: ContextId
  nameWithType: DbContext.ContextId
  fullName: Microsoft.EntityFrameworkCore.DbContext.ContextId
- uid: Microsoft.EntityFrameworkCore.DbContext.SavingChanges
  commentId: E:Microsoft.EntityFrameworkCore.DbContext.SavingChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savingchanges
  name: SavingChanges
  nameWithType: DbContext.SavingChanges
  fullName: Microsoft.EntityFrameworkCore.DbContext.SavingChanges
- uid: Microsoft.EntityFrameworkCore.DbContext.SavedChanges
  commentId: E:Microsoft.EntityFrameworkCore.DbContext.SavedChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savedchanges
  name: SavedChanges
  nameWithType: DbContext.SavedChanges
  fullName: Microsoft.EntityFrameworkCore.DbContext.SavedChanges
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed
  commentId: E:Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.savechangesfailed
  name: SaveChangesFailed
  nameWithType: DbContext.SaveChangesFailed
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure.iinfrastructure-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Infrastructure
    name: Infrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Infrastructure
    name: Infrastructure
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.infrastructure
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Internal
    name: Internal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.internal
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  - name: .
  - uid: Microsoft.EntityFrameworkCore.Internal
    name: Internal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.internal
- uid: Innovt.Domain.Core.Repository
  commentId: N:Innovt.Domain.Core.Repository
  href: Innovt.html
  name: Innovt.Domain.Core.Repository
  nameWithType: Innovt.Domain.Core.Repository
  fullName: Innovt.Domain.Core.Repository
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Domain
    name: Domain
    href: Innovt.Domain.html
  - name: .
  - uid: Innovt.Domain.Core
    name: Core
    href: Innovt.Domain.Core.html
  - name: .
  - uid: Innovt.Domain.Core.Repository
    name: Repository
    href: Innovt.Domain.Core.Repository.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Domain
    name: Domain
    href: Innovt.Domain.html
  - name: .
  - uid: Innovt.Domain.Core
    name: Core
    href: Innovt.Domain.Core.html
  - name: .
  - uid: Innovt.Domain.Core.Repository
    name: Repository
    href: Innovt.Domain.Core.Repository.html
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry-1(-0)
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.entry#microsoft-entityframeworkcore-dbcontext-entry-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add-1(-0)
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.add#microsoft-entityframeworkcore-dbcontext-add-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync-1(-0-system-threading-cancellationtoken)
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync-1(-0-system-threading-cancellationtoken)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.addasync#microsoft-entityframeworkcore-dbcontext-addasync-1(-0-system-threading-cancellationtoken)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach-1(-0)
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.attach#microsoft-entityframeworkcore-dbcontext-attach-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update-1(-0)
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.update#microsoft-entityframeworkcore-dbcontext-update-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove-1(-0)
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove-1(-0)
  - name: <
  - name: TEntity
  - name: '>'
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.remove#microsoft-entityframeworkcore-dbcontext-remove-1(-0)
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
  - name: (
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.fromexpression
  name: FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>)
  nameWithType: DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>(System.Linq.Expressions.Expression<System.Func<System.Linq.IQueryable<TResult>>>)
  nameWithType.vb: DbContext.FromExpression(Of TResult)(Expression(Of Func(Of IQueryable(Of TResult))))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FromExpression(Of TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Linq.IQueryable(Of TResult))))
  name.vb: FromExpression(Of TResult)(Expression(Of Func(Of IQueryable(Of TResult))))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
    name: FromExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.fromexpression
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
    name: FromExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.fromexpression
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
  - name: )
  - name: )
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Data.EFCore.DBContextBase
  commentId: T:Innovt.Data.EFCore.DBContextBase
  parent: Innovt.Data.EFCore
  href: Innovt.Data.EFCore.DBContextBase.html
  name: DBContextBase
  nameWithType: DBContextBase
  fullName: Innovt.Data.EFCore.DBContextBase
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Innovt.Data.EFCore.DBContextBase.#ctor*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.#ctor
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase__ctor_Innovt_Data_DataSources_IDataSource_
  name: DBContextBase
  nameWithType: DBContextBase.DBContextBase
  fullName: Innovt.Data.EFCore.DBContextBase.DBContextBase
  nameWithType.vb: DBContextBase.New
  fullName.vb: Innovt.Data.EFCore.DBContextBase.New
  name.vb: New
- uid: Innovt.Data.DataSources.IDataSource
  commentId: T:Innovt.Data.DataSources.IDataSource
  parent: Innovt.Data.DataSources
  href: Innovt.Data.DataSources.IDataSource.html
  name: IDataSource
  nameWithType: IDataSource
  fullName: Innovt.Data.DataSources.IDataSource
- uid: Innovt.Data.DataSources
  commentId: N:Innovt.Data.DataSources
  href: Innovt.html
  name: Innovt.Data.DataSources
  nameWithType: Innovt.Data.DataSources
  fullName: Innovt.Data.DataSources
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.DataSources
    name: DataSources
    href: Innovt.Data.DataSources.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.DataSources
    name: DataSources
    href: Innovt.Data.DataSources.html
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerfactory
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Microsoft.EntityFrameworkCore.DbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptions
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptions
  name: DbContextOptions
  nameWithType: DbContextOptions
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions
- uid: Innovt.Data.EFCore.DBContextBase.MaxRetryCount*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.MaxRetryCount
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_MaxRetryCount
  name: MaxRetryCount
  nameWithType: DBContextBase.MaxRetryCount
  fullName: Innovt.Data.EFCore.DBContextBase.MaxRetryCount
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.MaxRetryDelay*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.MaxRetryDelay
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_MaxRetryDelay
  name: MaxRetryDelay
  nameWithType: DBContextBase.MaxRetryDelay
  fullName: Innovt.Data.EFCore.DBContextBase.MaxRetryDelay
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: Innovt.Data.EFCore.DBContextBase.Commit*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.Commit
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_Commit
  name: Commit
  nameWithType: DBContextBase.Commit
  fullName: Innovt.Data.EFCore.DBContextBase.Commit
- uid: Innovt.Domain.Core.Repository.IUnitOfWork.Commit
  commentId: M:Innovt.Domain.Core.Repository.IUnitOfWork.Commit
  parent: Innovt.Domain.Core.Repository.IUnitOfWork
  href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Commit
  name: Commit()
  nameWithType: IUnitOfWork.Commit()
  fullName: Innovt.Domain.Core.Repository.IUnitOfWork.Commit()
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.Commit
    name: Commit
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Commit
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.Commit
    name: Commit
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Commit
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Innovt.Data.EFCore.DBContextBase.CommitAsync*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.CommitAsync
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_CommitAsync_System_Threading_CancellationToken_
  name: CommitAsync
  nameWithType: DBContextBase.CommitAsync
  fullName: Innovt.Data.EFCore.DBContextBase.CommitAsync
- uid: Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
  commentId: M:Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
  parent: Innovt.Domain.Core.Repository.IUnitOfWork
  isExternal: true
  href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_CommitAsync_System_Threading_CancellationToken_
  name: CommitAsync(CancellationToken)
  nameWithType: IUnitOfWork.CommitAsync(CancellationToken)
  fullName: Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
    name: CommitAsync
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_CommitAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
    name: CommitAsync
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_CommitAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Data.EFCore.DBContextBase.Rollback*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.Rollback
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_Rollback
  name: Rollback
  nameWithType: DBContextBase.Rollback
  fullName: Innovt.Data.EFCore.DBContextBase.Rollback
- uid: Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
  commentId: M:Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
  parent: Innovt.Domain.Core.Repository.IUnitOfWork
  href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Rollback
  name: Rollback()
  nameWithType: IUnitOfWork.Rollback()
  fullName: Innovt.Domain.Core.Repository.IUnitOfWork.Rollback()
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
    name: Rollback
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Rollback
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
    name: Rollback
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Rollback
  - name: (
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.Add*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.Add
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_Add__1___0_
  name: Add
  nameWithType: DBContextBase.Add
  fullName: Innovt.Data.EFCore.DBContextBase.Add
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1({T})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
  name: Add<T>(T)
  nameWithType: IExtendedUnitOfWork.Add<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Add(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add(Of T)(T)
  name.vb: Add(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
    name: Add
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
    name: Add
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
  name: Add<T>(T)
  nameWithType: IExtendedUnitOfWork.Add<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Add(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add(Of T)(T)
  name.vb: Add(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
    name: Add
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
    name: Add
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Add<T>(IEnumerable<T>)
  nameWithType: IExtendedUnitOfWork.Add<T>(IEnumerable<T>)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IExtendedUnitOfWork.Add(Of T)(IEnumerable(Of T))
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
    name: Add
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
    name: Add
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Add<T>(IEnumerable<T>)
  nameWithType: IExtendedUnitOfWork.Add<T>(IEnumerable<T>)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IExtendedUnitOfWork.Add(Of T)(IEnumerable(Of T))
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
    name: Add
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
    name: Add
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innovt.Data.EFCore.DBContextBase.AddAsync*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.AddAsync
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_AddAsync__1___0_System_Threading_CancellationToken_
  name: AddAsync
  nameWithType: DBContextBase.AddAsync
  fullName: Innovt.Data.EFCore.DBContextBase.AddAsync
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1({T},System.Threading.CancellationToken)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: AddAsync<T>(T, CancellationToken)
  nameWithType: IExtendedUnitOfWork.AddAsync<T>(T, CancellationToken)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: IExtendedUnitOfWork.AddAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: AddAsync<T>(T, CancellationToken)
  nameWithType: IExtendedUnitOfWork.AddAsync<T>(T, CancellationToken)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: IExtendedUnitOfWork.AddAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{{T}},System.Threading.CancellationToken)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: AddAsync<T>(IEnumerable<T>, CancellationToken)
  nameWithType: IExtendedUnitOfWork.AddAsync<T>(IEnumerable<T>, CancellationToken)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync<T>(System.Collections.Generic.IEnumerable<T>, System.Threading.CancellationToken)
  nameWithType.vb: IExtendedUnitOfWork.AddAsync(Of T)(IEnumerable(Of T), CancellationToken)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(IEnumerable(Of T), CancellationToken)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
    name: AddAsync
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
    name: AddAsync
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: AddAsync<T>(IEnumerable<T>, CancellationToken)
  nameWithType: IExtendedUnitOfWork.AddAsync<T>(IEnumerable<T>, CancellationToken)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync<T>(System.Collections.Generic.IEnumerable<T>, System.Threading.CancellationToken)
  nameWithType.vb: IExtendedUnitOfWork.AddAsync(Of T)(IEnumerable(Of T), CancellationToken)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(IEnumerable(Of T), CancellationToken)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
    name: AddAsync
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
    name: AddAsync
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.Remove*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.Remove
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_Remove__1___0_
  name: Remove
  nameWithType: DBContextBase.Remove
  fullName: Innovt.Data.EFCore.DBContextBase.Remove
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1({T})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
  name: Remove<T>(T)
  nameWithType: IExtendedUnitOfWork.Remove<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Remove(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove(Of T)(T)
  name.vb: Remove(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
    name: Remove
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
    name: Remove
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
  name: Remove<T>(T)
  nameWithType: IExtendedUnitOfWork.Remove<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Remove(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove(Of T)(T)
  name.vb: Remove(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
    name: Remove
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
    name: Remove
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Remove<T>(IEnumerable<T>)
  nameWithType: IExtendedUnitOfWork.Remove<T>(IEnumerable<T>)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IExtendedUnitOfWork.Remove(Of T)(IEnumerable(Of T))
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Remove(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
    name: Remove
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
    name: Remove
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Remove<T>(IEnumerable<T>)
  nameWithType: IExtendedUnitOfWork.Remove<T>(IEnumerable<T>)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IExtendedUnitOfWork.Remove(Of T)(IEnumerable(Of T))
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Remove(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
    name: Remove
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
    name: Remove
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.Update*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.Update
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_Update__1___0_
  name: Update
  nameWithType: DBContextBase.Update
  fullName: Innovt.Data.EFCore.DBContextBase.Update
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1({T})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
  name: Update<T>(T)
  nameWithType: IExtendedUnitOfWork.Update<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Update(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update(Of T)(T)
  name.vb: Update(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
    name: Update
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
    name: Update
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
  name: Update<T>(T)
  nameWithType: IExtendedUnitOfWork.Update<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Update(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update(Of T)(T)
  name.vb: Update(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
    name: Update
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
    name: Update
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.Attach*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.Attach
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_Attach__1___0_
  name: Attach
  nameWithType: DBContextBase.Attach
  fullName: Innovt.Data.EFCore.DBContextBase.Attach
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1({T})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
  name: Attach<T>(T)
  nameWithType: IExtendedUnitOfWork.Attach<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Attach(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach(Of T)(T)
  name.vb: Attach(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
    name: Attach
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
    name: Attach
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
  name: Attach<T>(T)
  nameWithType: IExtendedUnitOfWork.Attach<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Attach(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach(Of T)(T)
  name.vb: Attach(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
    name: Attach
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
    name: Attach
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.Detach*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.Detach
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_Detach__1___0_
  name: Detach
  nameWithType: DBContextBase.Detach
  fullName: Innovt.Data.EFCore.DBContextBase.Detach
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1({T})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  definition: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
  name: Detach<T>(T)
  nameWithType: IExtendedUnitOfWork.Detach<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Detach(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach(Of T)(T)
  name.vb: Detach(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
    name: Detach
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
    name: Detach
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
  name: Detach<T>(T)
  nameWithType: IExtendedUnitOfWork.Detach<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach<T>(T)
  nameWithType.vb: IExtendedUnitOfWork.Detach(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach(Of T)(T)
  name.vb: Detach(Of T)(T)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
    name: Detach
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
    name: Detach
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.Queryable*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.Queryable
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_Queryable__1
  name: Queryable
  nameWithType: DBContextBase.Queryable
  fullName: Innovt.Data.EFCore.DBContextBase.Queryable
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable``1
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable``1
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  name: Queryable<T>()
  nameWithType: IExtendedUnitOfWork.Queryable<T>()
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable<T>()
  nameWithType.vb: IExtendedUnitOfWork.Queryable(Of T)()
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable(Of T)()
  name.vb: Queryable(Of T)()
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable``1
    name: Queryable
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable``1
    name: Queryable
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: System.Linq.IQueryable{{T}}
  commentId: T:System.Linq.IQueryable{``0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
- uid: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_ExecuteSqlCommand_System_String_System_Object___
  name: ExecuteSqlCommand
  nameWithType: DBContextBase.ExecuteSqlCommand
  fullName: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommand
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ExecuteSqlCommand(string, params object[])
  nameWithType: IExtendedUnitOfWork.ExecuteSqlCommand(string, params object[])
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(string, params object[])
  nameWithType.vb: IExtendedUnitOfWork.ExecuteSqlCommand(String, ParamArray Object())
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(String, ParamArray Object())
  name.vb: ExecuteSqlCommand(String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])
    name: ExecuteSqlCommand
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])
    name: ExecuteSqlCommand
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_ExecuteSqlCommandAsync_System_String_System_Threading_CancellationToken_System_Object___
  name: ExecuteSqlCommandAsync
  nameWithType: DBContextBase.ExecuteSqlCommandAsync
  fullName: Innovt.Data.EFCore.DBContextBase.ExecuteSqlCommandAsync
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ExecuteSqlCommandAsync(string, CancellationToken, params object[])
  nameWithType: IExtendedUnitOfWork.ExecuteSqlCommandAsync(string, CancellationToken, params object[])
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(string, System.Threading.CancellationToken, params object[])
  nameWithType.vb: IExtendedUnitOfWork.ExecuteSqlCommandAsync(String, CancellationToken, ParamArray Object())
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(String, System.Threading.CancellationToken, ParamArray Object())
  name.vb: ExecuteSqlCommandAsync(String, CancellationToken, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
    name: ExecuteSqlCommandAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
    name: ExecuteSqlCommandAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.onconfiguring
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: DbContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.onconfiguring
  - name: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder
  - name: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext.onconfiguring
  - name: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder
  - name: )
- uid: Innovt.Data.EFCore.DBContextBase.OnConfiguring*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.OnConfiguring
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_OnConfiguring_Microsoft_EntityFrameworkCore_DbContextOptionsBuilder_
  name: OnConfiguring
  nameWithType: DBContextBase.OnConfiguring
  fullName: Innovt.Data.EFCore.DBContextBase.OnConfiguring
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontextoptionsbuilder
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
- uid: Innovt.Data.EFCore.DBContextBase.ConfigureProvider*
  commentId: Overload:Innovt.Data.EFCore.DBContextBase.ConfigureProvider
  href: Innovt.Data.EFCore.DBContextBase.html#Innovt_Data_EFCore_DBContextBase_ConfigureProvider_Microsoft_EntityFrameworkCore_DbContextOptionsBuilder_System_String_
  name: ConfigureProvider
  nameWithType: DBContextBase.ConfigureProvider
  fullName: Innovt.Data.EFCore.DBContextBase.ConfigureProvider
