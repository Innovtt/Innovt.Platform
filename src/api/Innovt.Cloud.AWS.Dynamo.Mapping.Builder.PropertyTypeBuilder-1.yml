### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  commentId: T:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  id: PropertyTypeBuilder`1
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  children:
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor(System.Func{`0,System.String},Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{`0})
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor(System.Func{`0,System.String},System.Type,Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{`0})
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsBinary
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsDecimal
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsString
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Builder
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.ColumnName
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.GetValue(`0)
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.HasMapAction
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.InvokeMaps(`0)
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.IsRequired(System.Boolean)
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.MaxLength
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Name
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Required
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.SetDynamicValue(System.Func{`0,System.Object})
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Template
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Type
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithColumnName(System.String)
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMap(System.Action{`0})
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMaxLength(System.Int32)
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithTemplate(System.String)
  - Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithValue(System.Object)
  langs:
  - csharp
  - vb
  name: PropertyTypeBuilder<T>
  nameWithType: PropertyTypeBuilder<T>
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>
  type: Class
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: PropertyTypeBuilder
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 9
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Represents a builder for defining the properties of an entity type.
  example: []
  syntax:
    content: public class PropertyTypeBuilder<T>
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Public Class PropertyTypeBuilder(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  nameWithType.vb: PropertyTypeBuilder(Of T)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T)
  name.vb: PropertyTypeBuilder(Of T)
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor(System.Func{`0,System.String},System.Type,Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{`0})
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor(System.Func{`0,System.String},System.Type,Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{`0})
  id: '#ctor(System.Func{`0,System.String},System.Type,Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{`0})'
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: PropertyTypeBuilder(Func<T, string>, Type, EntityTypeBuilder<T>)
  nameWithType: PropertyTypeBuilder<T>.PropertyTypeBuilder(Func<T, string>, Type, EntityTypeBuilder<T>)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.PropertyTypeBuilder(System.Func<T, string>, System.Type, Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder<T>)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 24
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: >-
    Initializes a new instance of the <xref href="Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder%601" data-throw-if-not-resolved="false"></xref> class with a specified property name and

    type.
  example: []
  syntax:
    content: public PropertyTypeBuilder(Func<T, string> propertyName, Type propertyType, EntityTypeBuilder<T> builder)
    parameters:
    - id: propertyName
      type: System.Func{{T},System.String}
      description: The function to retrieve the property name.
    - id: propertyType
      type: System.Type
      description: The type of the property.
    - id: builder
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{{T}}
      description: This is the main build to help the user with fluent api
    content.vb: Public Sub New(propertyName As Func(Of T, String), propertyType As Type, builder As EntityTypeBuilder(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor*
  nameWithType.vb: PropertyTypeBuilder(Of T).New(Func(Of T, String), Type, EntityTypeBuilder(Of T))
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).New(System.Func(Of T, String), System.Type, Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder(Of T))
  name.vb: New(Func(Of T, String), Type, EntityTypeBuilder(Of T))
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor(System.Func{`0,System.String},Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{`0})
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor(System.Func{`0,System.String},Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{`0})
  id: '#ctor(System.Func{`0,System.String},Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{`0})'
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: PropertyTypeBuilder(Func<T, string>, EntityTypeBuilder<T>)
  nameWithType: PropertyTypeBuilder<T>.PropertyTypeBuilder(Func<T, string>, EntityTypeBuilder<T>)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.PropertyTypeBuilder(System.Func<T, string>, Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder<T>)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 34
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder%601" data-throw-if-not-resolved="false"></xref> class with a specified property name.
  example: []
  syntax:
    content: public PropertyTypeBuilder(Func<T, string> propertyName, EntityTypeBuilder<T> builder)
    parameters:
    - id: propertyName
      type: System.Func{{T},System.String}
      description: The function to retrieve the property name.
    - id: builder
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{{T}}
      description: This is the main build to help the user with fluent api
    content.vb: Public Sub New(propertyName As Func(Of T, String), builder As EntityTypeBuilder(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor*
  nameWithType.vb: PropertyTypeBuilder(Of T).New(Func(Of T, String), EntityTypeBuilder(Of T))
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).New(System.Func(Of T, String), Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder(Of T))
  name.vb: New(Func(Of T, String), EntityTypeBuilder(Of T))
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Builder
  commentId: P:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Builder
  id: Builder
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Builder
  nameWithType: PropertyTypeBuilder<T>.Builder
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Builder
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Builder
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 42
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  syntax:
    content: public EntityTypeBuilder<T> Builder { get; set; }
    parameters: []
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{{T}}
    content.vb: Public Property Builder As EntityTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Builder*
  nameWithType.vb: PropertyTypeBuilder(Of T).Builder
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Builder
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Required
  commentId: P:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Required
  id: Required
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Required
  nameWithType: PropertyTypeBuilder<T>.Required
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Required
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Required
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 47
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Gets a value if the field is required.
  example: []
  syntax:
    content: public bool Required { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Required As Boolean
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Required*
  nameWithType.vb: PropertyTypeBuilder(Of T).Required
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Required
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.HasMapAction
  commentId: P:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.HasMapAction
  id: HasMapAction
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: HasMapAction
  nameWithType: PropertyTypeBuilder<T>.HasMapAction
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.HasMapAction
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: HasMapAction
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 52
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Has map actions is when you need to map some property.
  example: []
  syntax:
    content: public bool HasMapAction { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasMapAction As Boolean
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.HasMapAction*
  nameWithType.vb: PropertyTypeBuilder(Of T).HasMapAction
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).HasMapAction
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Name
  commentId: P:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Name
  id: Name
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PropertyTypeBuilder<T>.Name
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Name
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Name
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 57
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Gets the name of the property.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Name*
  nameWithType.vb: PropertyTypeBuilder(Of T).Name
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Name
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Type
  commentId: P:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Type
  id: Type
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: PropertyTypeBuilder<T>.Type
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Type
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Type
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 67
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Gets the type of the property.
  example: []
  syntax:
    content: public Type Type { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property Type As Type
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Type*
  nameWithType.vb: PropertyTypeBuilder(Of T).Type
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Type
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.ColumnName
  commentId: P:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.ColumnName
  id: ColumnName
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: ColumnName
  nameWithType: PropertyTypeBuilder<T>.ColumnName
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.ColumnName
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ColumnName
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 73
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: >-
    Gets or sets the column name associated with the property. if the column name is not set, the property name is

    used.
  example: []
  syntax:
    content: public string ColumnName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ColumnName As String
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.ColumnName*
  nameWithType.vb: PropertyTypeBuilder(Of T).ColumnName
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).ColumnName
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.MaxLength
  commentId: P:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.MaxLength
  id: MaxLength
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: MaxLength
  nameWithType: PropertyTypeBuilder<T>.MaxLength
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.MaxLength
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MaxLength
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 82
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: The max length of the property
  example: []
  syntax:
    content: public int MaxLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxLength As Integer
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.MaxLength*
  nameWithType.vb: PropertyTypeBuilder(Of T).MaxLength
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).MaxLength
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Template
  commentId: P:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Template
  id: Template
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: PropertyTypeBuilder<T>.Template
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Template
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Template
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 87
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: This template property will be user to create values for the property dynamicaly.
  example: []
  syntax:
    content: public string Template { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Template As String
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Template*
  nameWithType.vb: PropertyTypeBuilder(Of T).Template
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Template
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsString
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsString
  id: AsString
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: AsString()
  nameWithType: PropertyTypeBuilder<T>.AsString()
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.AsString()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AsString
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 93
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Specifies that the property is of string type.
  example: []
  syntax:
    content: public PropertyTypeBuilder<T> AsString()
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
      description: The current instance of <xref href="Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AsString() As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsString*
  nameWithType.vb: PropertyTypeBuilder(Of T).AsString()
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).AsString()
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsDecimal
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsDecimal
  id: AsDecimal
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: AsDecimal()
  nameWithType: PropertyTypeBuilder<T>.AsDecimal()
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.AsDecimal()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AsDecimal
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 103
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Specifies that the property is of decimal type.
  example: []
  syntax:
    content: public PropertyTypeBuilder<T> AsDecimal()
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
      description: The current instance of <xref href="Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AsDecimal() As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsDecimal*
  nameWithType.vb: PropertyTypeBuilder(Of T).AsDecimal()
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).AsDecimal()
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsBinary
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsBinary
  id: AsBinary
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: AsBinary()
  nameWithType: PropertyTypeBuilder<T>.AsBinary()
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.AsBinary()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AsBinary
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 113
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Specifies that the property is of binary type.
  example: []
  syntax:
    content: public PropertyTypeBuilder<T> AsBinary()
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
      description: The current instance of <xref href="Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AsBinary() As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsBinary*
  nameWithType.vb: PropertyTypeBuilder(Of T).AsBinary()
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).AsBinary()
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithColumnName(System.String)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithColumnName(System.String)
  id: WithColumnName(System.String)
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: WithColumnName(string)
  nameWithType: PropertyTypeBuilder<T>.WithColumnName(string)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithColumnName(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: WithColumnName
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 124
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Specifies a custom column name for the property in the database.
  example: []
  syntax:
    content: public PropertyTypeBuilder<T> WithColumnName(string name)
    parameters:
    - id: name
      type: System.String
      description: The custom column name.
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
      description: The current instance of <xref href="Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function WithColumnName(name As String) As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithColumnName*
  nameWithType.vb: PropertyTypeBuilder(Of T).WithColumnName(String)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithColumnName(String)
  name.vb: WithColumnName(String)
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMaxLength(System.Int32)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMaxLength(System.Int32)
  id: WithMaxLength(System.Int32)
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: WithMaxLength(int)
  nameWithType: PropertyTypeBuilder<T>.WithMaxLength(int)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithMaxLength(int)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: WithMaxLength
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 134
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Specifies that the property is of decimal type.
  example: []
  syntax:
    content: public PropertyTypeBuilder<T> WithMaxLength(int maxLength)
    parameters:
    - id: maxLength
      type: System.Int32
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
      description: The current instance of <xref href="Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function WithMaxLength(maxLength As Integer) As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMaxLength*
  nameWithType.vb: PropertyTypeBuilder(Of T).WithMaxLength(Integer)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithMaxLength(Integer)
  name.vb: WithMaxLength(Integer)
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithValue(System.Object)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithValue(System.Object)
  id: WithValue(System.Object)
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: WithValue(object)
  nameWithType: PropertyTypeBuilder<T>.WithValue(object)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithValue(object)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: WithValue
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 141
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  syntax:
    content: public PropertyTypeBuilder<T> WithValue(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
    content.vb: Public Function WithValue(value As Object) As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithValue*
  nameWithType.vb: PropertyTypeBuilder(Of T).WithValue(Object)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithValue(Object)
  name.vb: WithValue(Object)
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.IsRequired(System.Boolean)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.IsRequired(System.Boolean)
  id: IsRequired(System.Boolean)
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: IsRequired(bool)
  nameWithType: PropertyTypeBuilder<T>.IsRequired(bool)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.IsRequired(bool)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsRequired
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 153
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Define when a fi
  example: []
  syntax:
    content: public PropertyTypeBuilder<T> IsRequired(bool isRequired = true)
    parameters:
    - id: isRequired
      type: System.Boolean
      description: Default value if true.
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
      description: ''
    content.vb: Public Function IsRequired(isRequired As Boolean = True) As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.IsRequired*
  nameWithType.vb: PropertyTypeBuilder(Of T).IsRequired(Boolean)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).IsRequired(Boolean)
  name.vb: IsRequired(Boolean)
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithTemplate(System.String)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithTemplate(System.String)
  id: WithTemplate(System.String)
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: WithTemplate(string)
  nameWithType: PropertyTypeBuilder<T>.WithTemplate(string)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithTemplate(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: WithTemplate
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 159
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  syntax:
    content: public PropertyTypeBuilder<T> WithTemplate(string template)
    parameters:
    - id: template
      type: System.String
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
    content.vb: Public Function WithTemplate(template As String) As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithTemplate*
  nameWithType.vb: PropertyTypeBuilder(Of T).WithTemplate(String)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithTemplate(String)
  name.vb: WithTemplate(String)
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMap(System.Action{`0})
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMap(System.Action{`0})
  id: WithMap(System.Action{`0})
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: WithMap(Action<T>)
  nameWithType: PropertyTypeBuilder<T>.WithMap(Action<T>)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithMap(System.Action<T>)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: WithMap
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 170
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Define a delegate to parse the property.
  example: []
  syntax:
    content: public PropertyTypeBuilder<T> WithMap(Action<T> parserDelegate)
    parameters:
    - id: parserDelegate
      type: System.Action{{T}}
      description: The action to parse the property.
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
      description: The current instance of <xref href="Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function WithMap(parserDelegate As Action(Of T)) As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMap*
  nameWithType.vb: PropertyTypeBuilder(Of T).WithMap(Action(Of T))
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithMap(System.Action(Of T))
  name.vb: WithMap(Action(Of T))
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.SetDynamicValue(System.Func{`0,System.Object})
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.SetDynamicValue(System.Func{`0,System.Object})
  id: SetDynamicValue(System.Func{`0,System.Object})
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: SetDynamicValue(Func<T, object>)
  nameWithType: PropertyTypeBuilder<T>.SetDynamicValue(Func<T, object>)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.SetDynamicValue(System.Func<T, object>)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SetDynamicValue
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 184
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Define a delegate to set the value of the property based on the entity.
  example: []
  syntax:
    content: public PropertyTypeBuilder<T> SetDynamicValue(Func<T, object> valueDelegate)
    parameters:
    - id: valueDelegate
      type: System.Func{{T},System.Object}
      description: ''
    return:
      type: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
    content.vb: Public Function SetDynamicValue(valueDelegate As Func(Of T, Object)) As PropertyTypeBuilder(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.SetDynamicValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  nameWithType.vb: PropertyTypeBuilder(Of T).SetDynamicValue(Func(Of T, Object))
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).SetDynamicValue(System.Func(Of T, Object))
  name.vb: SetDynamicValue(Func(Of T, Object))
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.InvokeMaps(`0)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.InvokeMaps(`0)
  id: InvokeMaps(`0)
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: InvokeMaps(T)
  nameWithType: PropertyTypeBuilder<T>.InvokeMaps(T)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.InvokeMaps(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: InvokeMaps
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 191
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  syntax:
    content: public void InvokeMaps(T entity)
    parameters:
    - id: entity
      type: '{T}'
    content.vb: Public Sub InvokeMaps(entity As T)
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.InvokeMaps*
  nameWithType.vb: PropertyTypeBuilder(Of T).InvokeMaps(T)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).InvokeMaps(T)
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.GetValue(`0)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.GetValue(`0)
  id: GetValue(`0)
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  langs:
  - csharp
  - vb
  name: GetValue(T)
  nameWithType: PropertyTypeBuilder<T>.GetValue(T)
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.GetValue(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetValue
    path: Innovt.Cloud.AWS.Dynamo/Mapping/Builder/PropertyTypeBuilder.cs
    startLine: 204
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  summary: Get the instance value using a fixed value or a delegate.
  example: []
  syntax:
    content: public object GetValue(T entity)
    parameters:
    - id: entity
      type: '{T}'
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function GetValue(entity As T) As Object
  overload: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.GetValue*
  nameWithType.vb: PropertyTypeBuilder(Of T).GetValue(T)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).GetValue(T)
references:
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  commentId: N:Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  href: Innovt.html
  name: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  nameWithType: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Dynamo
    name: Dynamo
    href: Innovt.Cloud.AWS.Dynamo.html
  - name: .
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping
    name: Mapping
    href: Innovt.Cloud.AWS.Dynamo.Mapping.html
  - name: .
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
    name: Builder
    href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Dynamo
    name: Dynamo
    href: Innovt.Cloud.AWS.Dynamo.html
  - name: .
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping
    name: Mapping
    href: Innovt.Cloud.AWS.Dynamo.Mapping.html
  - name: .
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
    name: Builder
    href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  commentId: T:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html
  name: PropertyTypeBuilder<T>
  nameWithType: PropertyTypeBuilder<T>
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>
  nameWithType.vb: PropertyTypeBuilder(Of T)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T)
  name.vb: PropertyTypeBuilder(Of T)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
    name: PropertyTypeBuilder
    href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1
    name: PropertyTypeBuilder
    href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.#ctor
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1__ctor_System_Func__0_System_String__System_Type_Innovt_Cloud_AWS_Dynamo_Mapping_Builder_EntityTypeBuilder__0__
  name: PropertyTypeBuilder
  nameWithType: PropertyTypeBuilder<T>.PropertyTypeBuilder
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.PropertyTypeBuilder
  nameWithType.vb: PropertyTypeBuilder(Of T).New
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).New
  name.vb: New
- uid: System.Func{{T},System.String}
  commentId: T:System.Func{`0,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, string>
  nameWithType: Func<T, string>
  fullName: System.Func<T, string>
  nameWithType.vb: Func(Of T, String)
  fullName.vb: System.Func(Of T, String)
  name.vb: Func(Of T, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{{T}}
  commentId: T:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder{``0}
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  definition: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder`1
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html
  name: EntityTypeBuilder<T>
  nameWithType: EntityTypeBuilder<T>
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder<T>
  nameWithType.vb: EntityTypeBuilder(Of T)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder(Of T)
  name.vb: EntityTypeBuilder(Of T)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder`1
  commentId: T:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder`1
  parent: Innovt.Cloud.AWS.Dynamo.Mapping.Builder
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html
  name: EntityTypeBuilder<TEntity>
  nameWithType: EntityTypeBuilder<TEntity>
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder<TEntity>
  nameWithType.vb: EntityTypeBuilder(Of TEntity)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder(Of TEntity)
  name.vb: EntityTypeBuilder(Of TEntity)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder`1
    name: EntityTypeBuilder
    href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Builder*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Builder
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_Builder
  name: Builder
  nameWithType: PropertyTypeBuilder<T>.Builder
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Builder
  nameWithType.vb: PropertyTypeBuilder(Of T).Builder
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Builder
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Required*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Required
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_Required
  name: Required
  nameWithType: PropertyTypeBuilder<T>.Required
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Required
  nameWithType.vb: PropertyTypeBuilder(Of T).Required
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Required
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.HasMapAction*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.HasMapAction
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_HasMapAction
  name: HasMapAction
  nameWithType: PropertyTypeBuilder<T>.HasMapAction
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.HasMapAction
  nameWithType.vb: PropertyTypeBuilder(Of T).HasMapAction
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).HasMapAction
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Name*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Name
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_Name
  name: Name
  nameWithType: PropertyTypeBuilder<T>.Name
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Name
  nameWithType.vb: PropertyTypeBuilder(Of T).Name
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Type*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Type
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_Type
  name: Type
  nameWithType: PropertyTypeBuilder<T>.Type
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Type
  nameWithType.vb: PropertyTypeBuilder(Of T).Type
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Type
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.ColumnName*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.ColumnName
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_ColumnName
  name: ColumnName
  nameWithType: PropertyTypeBuilder<T>.ColumnName
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.ColumnName
  nameWithType.vb: PropertyTypeBuilder(Of T).ColumnName
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).ColumnName
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.MaxLength*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.MaxLength
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_MaxLength
  name: MaxLength
  nameWithType: PropertyTypeBuilder<T>.MaxLength
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.MaxLength
  nameWithType.vb: PropertyTypeBuilder(Of T).MaxLength
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).MaxLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Template*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.Template
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_Template
  name: Template
  nameWithType: PropertyTypeBuilder<T>.Template
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.Template
  nameWithType.vb: PropertyTypeBuilder(Of T).Template
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).Template
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsString*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsString
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_AsString
  name: AsString
  nameWithType: PropertyTypeBuilder<T>.AsString
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.AsString
  nameWithType.vb: PropertyTypeBuilder(Of T).AsString
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).AsString
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsDecimal*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsDecimal
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_AsDecimal
  name: AsDecimal
  nameWithType: PropertyTypeBuilder<T>.AsDecimal
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.AsDecimal
  nameWithType.vb: PropertyTypeBuilder(Of T).AsDecimal
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).AsDecimal
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsBinary*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.AsBinary
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_AsBinary
  name: AsBinary
  nameWithType: PropertyTypeBuilder<T>.AsBinary
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.AsBinary
  nameWithType.vb: PropertyTypeBuilder(Of T).AsBinary
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).AsBinary
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithColumnName*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithColumnName
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_WithColumnName_System_String_
  name: WithColumnName
  nameWithType: PropertyTypeBuilder<T>.WithColumnName
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithColumnName
  nameWithType.vb: PropertyTypeBuilder(Of T).WithColumnName
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithColumnName
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMaxLength*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMaxLength
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_WithMaxLength_System_Int32_
  name: WithMaxLength
  nameWithType: PropertyTypeBuilder<T>.WithMaxLength
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithMaxLength
  nameWithType.vb: PropertyTypeBuilder(Of T).WithMaxLength
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithMaxLength
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithValue*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithValue
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_WithValue_System_Object_
  name: WithValue
  nameWithType: PropertyTypeBuilder<T>.WithValue
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithValue
  nameWithType.vb: PropertyTypeBuilder(Of T).WithValue
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithValue
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.IsRequired*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.IsRequired
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_IsRequired_System_Boolean_
  name: IsRequired
  nameWithType: PropertyTypeBuilder<T>.IsRequired
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.IsRequired
  nameWithType.vb: PropertyTypeBuilder(Of T).IsRequired
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).IsRequired
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithTemplate*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithTemplate
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_WithTemplate_System_String_
  name: WithTemplate
  nameWithType: PropertyTypeBuilder<T>.WithTemplate
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithTemplate
  nameWithType.vb: PropertyTypeBuilder(Of T).WithTemplate
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithTemplate
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMap*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.WithMap
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_WithMap_System_Action__0__
  name: WithMap
  nameWithType: PropertyTypeBuilder<T>.WithMap
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.WithMap
  nameWithType.vb: PropertyTypeBuilder(Of T).WithMap
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).WithMap
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.SetDynamicValue*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.SetDynamicValue
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_SetDynamicValue_System_Func__0_System_Object__
  name: SetDynamicValue
  nameWithType: PropertyTypeBuilder<T>.SetDynamicValue
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.SetDynamicValue
  nameWithType.vb: PropertyTypeBuilder(Of T).SetDynamicValue
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).SetDynamicValue
- uid: System.Func{{T},System.Object}
  commentId: T:System.Func{`0,System.Object}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, object>
  nameWithType: Func<T, object>
  fullName: System.Func<T, object>
  nameWithType.vb: Func(Of T, Object)
  fullName.vb: System.Func(Of T, Object)
  name.vb: Func(Of T, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.InvokeMaps*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.InvokeMaps
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_InvokeMaps__0_
  name: InvokeMaps
  nameWithType: PropertyTypeBuilder<T>.InvokeMaps
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.InvokeMaps
  nameWithType.vb: PropertyTypeBuilder(Of T).InvokeMaps
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).InvokeMaps
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.GetValue*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder`1.GetValue
  href: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html#Innovt_Cloud_AWS_Dynamo_Mapping_Builder_PropertyTypeBuilder_1_GetValue__0_
  name: GetValue
  nameWithType: PropertyTypeBuilder<T>.GetValue
  fullName: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder<T>.GetValue
  nameWithType.vb: PropertyTypeBuilder(Of T).GetValue
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder(Of T).GetValue
