### YamlMime:ManagedReference
items:
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  commentId: T:Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  id: IExtendedUnitOfWork
  parent: Innovt.Domain.Core.Repository
  children:
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable``1
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
  - Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
  langs:
  - csharp
  - vb
  name: IExtendedUnitOfWork
  nameWithType: IExtendedUnitOfWork
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  type: Interface
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IExtendedUnitOfWork
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 14
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Extended Unit of Work Interface To Provide More Features To Unit Of Work When Using Entity Framework
  example: []
  syntax:
    content: 'public interface IExtendedUnitOfWork : IUnitOfWork, IDisposable'
    content.vb: Public Interface IExtendedUnitOfWork Inherits IUnitOfWork, IDisposable
  inheritedMembers:
  - Innovt.Domain.Core.Repository.IUnitOfWork.Commit
  - Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
  - Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(``0)
  id: Add``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: Add<T>(T)
  nameWithType: IExtendedUnitOfWork.Add<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Add
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 21
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Add Entity To Unit Of Work Context
  example: []
  syntax:
    content: 'void Add<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub Add(Of T As Class)(entity As T)
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add*
  nameWithType.vb: IExtendedUnitOfWork.Add(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add(Of T)(T)
  name.vb: Add(Of T)(T)
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add``1(System.Collections.Generic.IEnumerable{``0})
  id: Add``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: Add<T>(IEnumerable<T>)
  nameWithType: IExtendedUnitOfWork.Add<T>(IEnumerable<T>)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Add
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 28
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Add Entities To Unit Of Work Context
  example: []
  syntax:
    content: 'void Add<T>(IEnumerable<T> entities) where T : class'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub Add(Of T As Class)(entities As IEnumerable(Of T))
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add*
  nameWithType.vb: IExtendedUnitOfWork.Add(Of T)(IEnumerable(Of T))
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Add(Of T)(IEnumerable(Of T))
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(``0,System.Threading.CancellationToken)
  id: AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: AddAsync<T>(T, CancellationToken)
  nameWithType: IExtendedUnitOfWork.AddAsync<T>(T, CancellationToken)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync<T>(T, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddAsync
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 37
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Asynchronously adds an entity or a collection of entities.
  example: []
  syntax:
    content: 'Task AddAsync<T>(T entity, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function AddAsync(Of T As Class)(entity As T, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync*
  nameWithType.vb: IExtendedUnitOfWork.AddAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(T, CancellationToken)
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  id: AddAsync``1(System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: AddAsync<T>(IEnumerable<T>, CancellationToken)
  nameWithType: IExtendedUnitOfWork.AddAsync<T>(IEnumerable<T>, CancellationToken)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync<T>(System.Collections.Generic.IEnumerable<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddAsync
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 48
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  syntax:
    content: 'Task AddAsync<T>(IEnumerable<T> entities, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddAsync(Of T As Class)(entities As IEnumerable(Of T), cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync*
  nameWithType.vb: IExtendedUnitOfWork.AddAsync(Of T)(IEnumerable(Of T), CancellationToken)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(IEnumerable(Of T), CancellationToken)
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(``0)
  id: Remove``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: Remove<T>(T)
  nameWithType: IExtendedUnitOfWork.Remove<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Remove
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 56
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Removes an entity of type T from the repository.
  example: []
  syntax:
    content: 'void Remove<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to remove.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Sub Remove(Of T As Class)(entity As T)
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove*
  nameWithType.vb: IExtendedUnitOfWork.Remove(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove(Of T)(T)
  name.vb: Remove(Of T)(T)
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove``1(System.Collections.Generic.IEnumerable{``0})
  id: Remove``1(System.Collections.Generic.IEnumerable{``0})
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: Remove<T>(IEnumerable<T>)
  nameWithType: IExtendedUnitOfWork.Remove<T>(IEnumerable<T>)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Remove
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 63
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Removes multiple entities of type T from the repository.
  example: []
  syntax:
    content: 'void Remove<T>(IEnumerable<T> entities) where T : class'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The entities to remove.
    typeParameters:
    - id: T
      description: The type of the entities.
    content.vb: Sub Remove(Of T As Class)(entities As IEnumerable(Of T))
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove*
  nameWithType.vb: IExtendedUnitOfWork.Remove(Of T)(IEnumerable(Of T))
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Remove(Of T)(IEnumerable(Of T))
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update``1(``0)
  id: Update``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: Update<T>(T)
  nameWithType: IExtendedUnitOfWork.Update<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Update
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 70
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Updates an entity of type T in the repository.
  example: []
  syntax:
    content: 'void Update<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to update.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Sub Update(Of T As Class)(entity As T)
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update*
  nameWithType.vb: IExtendedUnitOfWork.Update(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update(Of T)(T)
  name.vb: Update(Of T)(T)
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach``1(``0)
  id: Attach``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: Attach<T>(T)
  nameWithType: IExtendedUnitOfWork.Attach<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Attach
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 77
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Attaches an entity of type T to the repository.
  example: []
  syntax:
    content: 'void Attach<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to attach.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Sub Attach(Of T As Class)(entity As T)
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach*
  nameWithType.vb: IExtendedUnitOfWork.Attach(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach(Of T)(T)
  name.vb: Attach(Of T)(T)
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach``1(``0)
  id: Detach``1(``0)
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: Detach<T>(T)
  nameWithType: IExtendedUnitOfWork.Detach<T>(T)
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Detach
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 84
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Detaches an entity of type T from the repository.
  example: []
  syntax:
    content: 'void Detach<T>(T entity) where T : class'
    parameters:
    - id: entity
      type: '{T}'
      description: The entity to detach.
    typeParameters:
    - id: T
      description: The type of the entity.
    content.vb: Sub Detach(Of T As Class)(entity As T)
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach*
  nameWithType.vb: IExtendedUnitOfWork.Detach(Of T)(T)
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach(Of T)(T)
  name.vb: Detach(Of T)(T)
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(System.String,System.Object[])
  id: ExecuteSqlCommand(System.String,System.Object[])
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: ExecuteSqlCommand(string, params object[])
  nameWithType: IExtendedUnitOfWork.ExecuteSqlCommand(string, params object[])
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteSqlCommand
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 92
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Executes a SQL command.
  example: []
  syntax:
    content: int ExecuteSqlCommand(string sql, params object[] parameters)
    parameters:
    - id: sql
      type: System.String
      description: The SQL command to execute.
    - id: parameters
      type: System.Object[]
      description: The parameters for the SQL command.
    return:
      type: System.Int32
      description: The number of affected rows.
    content.vb: Function ExecuteSqlCommand(sql As String, ParamArray parameters As Object()) As Integer
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand*
  nameWithType.vb: IExtendedUnitOfWork.ExecuteSqlCommand(String, ParamArray Object())
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand(String, ParamArray Object())
  name.vb: ExecuteSqlCommand(String, ParamArray Object())
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  id: ExecuteSqlCommandAsync(System.String,System.Threading.CancellationToken,System.Object[])
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: ExecuteSqlCommandAsync(string, CancellationToken, params object[])
  nameWithType: IExtendedUnitOfWork.ExecuteSqlCommandAsync(string, CancellationToken, params object[])
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(string, System.Threading.CancellationToken, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteSqlCommandAsync
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 101
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Asynchronously executes a SQL command.
  example: []
  syntax:
    content: Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters)
    parameters:
    - id: sql
      type: System.String
      description: The SQL command to execute.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The optional cancellation token.
    - id: parameters
      type: System.Object[]
      description: The parameters for the SQL command.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task representing the asynchronous operation, with the number of affected rows.
    content.vb: Function ExecuteSqlCommandAsync(sql As String, cancellationToken As CancellationToken = Nothing, ParamArray parameters As Object()) As Task(Of Integer)
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync*
  nameWithType.vb: IExtendedUnitOfWork.ExecuteSqlCommandAsync(String, CancellationToken, ParamArray Object())
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync(String, System.Threading.CancellationToken, ParamArray Object())
  name.vb: ExecuteSqlCommandAsync(String, CancellationToken, ParamArray Object())
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable``1
  commentId: M:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable``1
  id: Queryable``1
  parent: Innovt.Domain.Core.Repository.IExtendedUnitOfWork
  langs:
  - csharp
  - vb
  name: Queryable<T>()
  nameWithType: IExtendedUnitOfWork.Queryable<T>()
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable<T>()
  type: Method
  source:
    remote:
      path: src/Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Queryable
    path: Innovt.Domain.Core/Repository/IExtendedUnitOfWork.cs
    startLine: 109
  assemblies:
  - Innovt.Domain.Core
  namespace: Innovt.Domain.Core.Repository
  summary: Returns a queryable interface for entities of type T.
  example: []
  syntax:
    content: 'IQueryable<T> Queryable<T>() where T : class'
    typeParameters:
    - id: T
      description: The type of the entities.
    return:
      type: System.Linq.IQueryable{{T}}
      description: A queryable interface for the entities.
    content.vb: Function Queryable(Of T As Class)() As IQueryable(Of T)
  overload: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable*
  nameWithType.vb: IExtendedUnitOfWork.Queryable(Of T)()
  fullName.vb: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable(Of T)()
  name.vb: Queryable(Of T)()
references:
- uid: Innovt.Domain.Core.Repository
  commentId: N:Innovt.Domain.Core.Repository
  href: Innovt.html
  name: Innovt.Domain.Core.Repository
  nameWithType: Innovt.Domain.Core.Repository
  fullName: Innovt.Domain.Core.Repository
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Domain
    name: Domain
    href: Innovt.Domain.html
  - name: .
  - uid: Innovt.Domain.Core
    name: Core
    href: Innovt.Domain.Core.html
  - name: .
  - uid: Innovt.Domain.Core.Repository
    name: Repository
    href: Innovt.Domain.Core.Repository.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Domain
    name: Domain
    href: Innovt.Domain.html
  - name: .
  - uid: Innovt.Domain.Core
    name: Core
    href: Innovt.Domain.Core.html
  - name: .
  - uid: Innovt.Domain.Core.Repository
    name: Repository
    href: Innovt.Domain.Core.Repository.html
- uid: Innovt.Domain.Core.Repository.IUnitOfWork.Commit
  commentId: M:Innovt.Domain.Core.Repository.IUnitOfWork.Commit
  parent: Innovt.Domain.Core.Repository.IUnitOfWork
  href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Commit
  name: Commit()
  nameWithType: IUnitOfWork.Commit()
  fullName: Innovt.Domain.Core.Repository.IUnitOfWork.Commit()
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.Commit
    name: Commit
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Commit
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.Commit
    name: Commit
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Commit
  - name: (
  - name: )
- uid: Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
  commentId: M:Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
  parent: Innovt.Domain.Core.Repository.IUnitOfWork
  isExternal: true
  href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_CommitAsync_System_Threading_CancellationToken_
  name: CommitAsync(CancellationToken)
  nameWithType: IUnitOfWork.CommitAsync(CancellationToken)
  fullName: Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
    name: CommitAsync
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_CommitAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)
    name: CommitAsync
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_CommitAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
  commentId: M:Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
  parent: Innovt.Domain.Core.Repository.IUnitOfWork
  href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Rollback
  name: Rollback()
  nameWithType: IUnitOfWork.Rollback()
  fullName: Innovt.Domain.Core.Repository.IUnitOfWork.Rollback()
  spec.csharp:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
    name: Rollback
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Rollback
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Domain.Core.Repository.IUnitOfWork.Rollback
    name: Rollback
    href: Innovt.Domain.Core.Repository.IUnitOfWork.html#Innovt_Domain_Core_Repository_IUnitOfWork_Rollback
  - name: (
  - name: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Domain.Core.Repository.IUnitOfWork
  commentId: T:Innovt.Domain.Core.Repository.IUnitOfWork
  parent: Innovt.Domain.Core.Repository
  href: Innovt.Domain.Core.Repository.IUnitOfWork.html
  name: IUnitOfWork
  nameWithType: IUnitOfWork
  fullName: Innovt.Domain.Core.Repository.IUnitOfWork
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_Add__1___0_
  name: Add
  nameWithType: IExtendedUnitOfWork.Add
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_AddAsync__1___0_System_Threading_CancellationToken_
  name: AddAsync
  nameWithType: IExtendedUnitOfWork.AddAsync
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.AddAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_Remove__1___0_
  name: Remove
  nameWithType: IExtendedUnitOfWork.Remove
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Remove
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_Update__1___0_
  name: Update
  nameWithType: IExtendedUnitOfWork.Update
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Update
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_Attach__1___0_
  name: Attach
  nameWithType: IExtendedUnitOfWork.Attach
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Attach
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_Detach__1___0_
  name: Detach
  nameWithType: IExtendedUnitOfWork.Detach
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Detach
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_ExecuteSqlCommand_System_String_System_Object___
  name: ExecuteSqlCommand
  nameWithType: IExtendedUnitOfWork.ExecuteSqlCommand
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommand
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_ExecuteSqlCommandAsync_System_String_System_Threading_CancellationToken_System_Object___
  name: ExecuteSqlCommandAsync
  nameWithType: IExtendedUnitOfWork.ExecuteSqlCommandAsync
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.ExecuteSqlCommandAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable*
  commentId: Overload:Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable
  href: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html#Innovt_Domain_Core_Repository_IExtendedUnitOfWork_Queryable__1
  name: Queryable
  nameWithType: IExtendedUnitOfWork.Queryable
  fullName: Innovt.Domain.Core.Repository.IExtendedUnitOfWork.Queryable
- uid: System.Linq.IQueryable{{T}}
  commentId: T:System.Linq.IQueryable{``0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
