### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.Notification.NotificationHandleFactory
  commentId: T:Innovt.Cloud.AWS.Notification.NotificationHandleFactory
  id: NotificationHandleFactory
  parent: Innovt.Cloud.AWS.Notification
  children:
  - Innovt.Cloud.AWS.Notification.NotificationHandleFactory.#ctor(Innovt.Core.CrossCutting.Ioc.IContainer)
  - Innovt.Cloud.AWS.Notification.NotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
  - Innovt.Cloud.AWS.Notification.NotificationHandleFactory.CreateCustomHandle(Innovt.Notification.Core.Domain.NotificationMessageType)
  langs:
  - csharp
  - vb
  name: NotificationHandleFactory
  nameWithType: NotificationHandleFactory
  fullName: Innovt.Cloud.AWS.Notification.NotificationHandleFactory
  type: Class
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/NotificationHandleFactory.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: NotificationHandleFactory
    path: Innovt.Cloud.AWS.Notification/NotificationHandleFactory.cs
    startLine: 14
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: Factory for creating notification handlers based on the notification message type.
  example: []
  syntax:
    content: 'public class NotificationHandleFactory : INotificationHandleFactory'
    content.vb: Public Class NotificationHandleFactory Implements INotificationHandleFactory
  inheritance:
  - System.Object
  implements:
  - Innovt.Notification.Core.INotificationHandleFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.#ctor(Innovt.Core.CrossCutting.Ioc.IContainer)
  commentId: M:Innovt.Cloud.AWS.Notification.NotificationHandleFactory.#ctor(Innovt.Core.CrossCutting.Ioc.IContainer)
  id: '#ctor(Innovt.Core.CrossCutting.Ioc.IContainer)'
  parent: Innovt.Cloud.AWS.Notification.NotificationHandleFactory
  langs:
  - csharp
  - vb
  name: NotificationHandleFactory(IContainer)
  nameWithType: NotificationHandleFactory.NotificationHandleFactory(IContainer)
  fullName: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.NotificationHandleFactory(Innovt.Core.CrossCutting.Ioc.IContainer)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/NotificationHandleFactory.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Cloud.AWS.Notification/NotificationHandleFactory.cs
    startLine: 22
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.Notification.NotificationHandleFactory" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public NotificationHandleFactory(IContainer container)
    parameters:
    - id: container
      type: Innovt.Core.CrossCutting.Ioc.IContainer
      description: The IoC container.
    content.vb: Public Sub New(container As IContainer)
  overload: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.#ctor*
  nameWithType.vb: NotificationHandleFactory.New(IContainer)
  fullName.vb: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.New(Innovt.Core.CrossCutting.Ioc.IContainer)
  name.vb: New(IContainer)
- uid: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
  commentId: M:Innovt.Cloud.AWS.Notification.NotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
  id: Create(Innovt.Notification.Core.Domain.NotificationMessageType)
  parent: Innovt.Cloud.AWS.Notification.NotificationHandleFactory
  langs:
  - csharp
  - vb
  name: Create(NotificationMessageType)
  nameWithType: NotificationHandleFactory.Create(NotificationMessageType)
  fullName: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/NotificationHandleFactory.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Create
    path: Innovt.Cloud.AWS.Notification/NotificationHandleFactory.cs
    startLine: 32
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: Creates a notification handler based on the provided notification message type.
  example: []
  syntax:
    content: public virtual INotificationHandler Create(NotificationMessageType notificationMessageType)
    parameters:
    - id: notificationMessageType
      type: Innovt.Notification.Core.Domain.NotificationMessageType
      description: The notification message type.
    return:
      type: Innovt.Notification.Core.INotificationHandler
      description: A notification handler for the specified message type.
    content.vb: Public Overridable Function Create(notificationMessageType As NotificationMessageType) As INotificationHandler
  overload: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.Create*
  implements:
  - Innovt.Notification.Core.INotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
- uid: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.CreateCustomHandle(Innovt.Notification.Core.Domain.NotificationMessageType)
  commentId: M:Innovt.Cloud.AWS.Notification.NotificationHandleFactory.CreateCustomHandle(Innovt.Notification.Core.Domain.NotificationMessageType)
  id: CreateCustomHandle(Innovt.Notification.Core.Domain.NotificationMessageType)
  parent: Innovt.Cloud.AWS.Notification.NotificationHandleFactory
  langs:
  - csharp
  - vb
  name: CreateCustomHandle(NotificationMessageType)
  nameWithType: NotificationHandleFactory.CreateCustomHandle(NotificationMessageType)
  fullName: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.CreateCustomHandle(Innovt.Notification.Core.Domain.NotificationMessageType)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/NotificationHandleFactory.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateCustomHandle
    path: Innovt.Cloud.AWS.Notification/NotificationHandleFactory.cs
    startLine: 48
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: >-
    Creates a custom notification handler for the specified message type.

    Override this method to implement custom handling for specific message types.
  example: []
  syntax:
    content: public virtual INotificationHandler CreateCustomHandle(NotificationMessageType notificationMessageType)
    parameters:
    - id: notificationMessageType
      type: Innovt.Notification.Core.Domain.NotificationMessageType
      description: The notification message type.
    return:
      type: Innovt.Notification.Core.INotificationHandler
      description: A custom notification handler.
    content.vb: Public Overridable Function CreateCustomHandle(notificationMessageType As NotificationMessageType) As INotificationHandler
  overload: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.CreateCustomHandle*
references:
- uid: Innovt.Cloud.AWS.Notification
  commentId: N:Innovt.Cloud.AWS.Notification
  href: Innovt.html
  name: Innovt.Cloud.AWS.Notification
  nameWithType: Innovt.Cloud.AWS.Notification
  fullName: Innovt.Cloud.AWS.Notification
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Notification
    name: Notification
    href: Innovt.Cloud.AWS.Notification.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Notification
    name: Notification
    href: Innovt.Cloud.AWS.Notification.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Innovt.Notification.Core.INotificationHandleFactory
  commentId: T:Innovt.Notification.Core.INotificationHandleFactory
  parent: Innovt.Notification.Core
  href: Innovt.Notification.Core.INotificationHandleFactory.html
  name: INotificationHandleFactory
  nameWithType: INotificationHandleFactory
  fullName: Innovt.Notification.Core.INotificationHandleFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Notification.Core
  commentId: N:Innovt.Notification.Core
  href: Innovt.html
  name: Innovt.Notification.Core
  nameWithType: Innovt.Notification.Core
  fullName: Innovt.Notification.Core
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Notification
    name: Notification
    href: Innovt.Notification.html
  - name: .
  - uid: Innovt.Notification.Core
    name: Core
    href: Innovt.Notification.Core.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Notification
    name: Notification
    href: Innovt.Notification.html
  - name: .
  - uid: Innovt.Notification.Core
    name: Core
    href: Innovt.Notification.Core.html
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Cloud.AWS.Notification.NotificationHandleFactory
  commentId: T:Innovt.Cloud.AWS.Notification.NotificationHandleFactory
  href: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.html
  name: NotificationHandleFactory
  nameWithType: NotificationHandleFactory
  fullName: Innovt.Cloud.AWS.Notification.NotificationHandleFactory
- uid: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.#ctor*
  commentId: Overload:Innovt.Cloud.AWS.Notification.NotificationHandleFactory.#ctor
  href: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.html#Innovt_Cloud_AWS_Notification_NotificationHandleFactory__ctor_Innovt_Core_CrossCutting_Ioc_IContainer_
  name: NotificationHandleFactory
  nameWithType: NotificationHandleFactory.NotificationHandleFactory
  fullName: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.NotificationHandleFactory
  nameWithType.vb: NotificationHandleFactory.New
  fullName.vb: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.New
  name.vb: New
- uid: Innovt.Core.CrossCutting.Ioc.IContainer
  commentId: T:Innovt.Core.CrossCutting.Ioc.IContainer
  parent: Innovt.Core.CrossCutting.Ioc
  href: Innovt.Core.CrossCutting.Ioc.IContainer.html
  name: IContainer
  nameWithType: IContainer
  fullName: Innovt.Core.CrossCutting.Ioc.IContainer
- uid: Innovt.Core.CrossCutting.Ioc
  commentId: N:Innovt.Core.CrossCutting.Ioc
  href: Innovt.html
  name: Innovt.Core.CrossCutting.Ioc
  nameWithType: Innovt.Core.CrossCutting.Ioc
  fullName: Innovt.Core.CrossCutting.Ioc
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Ioc
    name: Ioc
    href: Innovt.Core.CrossCutting.Ioc.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Ioc
    name: Ioc
    href: Innovt.Core.CrossCutting.Ioc.html
- uid: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.Create*
  commentId: Overload:Innovt.Cloud.AWS.Notification.NotificationHandleFactory.Create
  href: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.html#Innovt_Cloud_AWS_Notification_NotificationHandleFactory_Create_Innovt_Notification_Core_Domain_NotificationMessageType_
  name: Create
  nameWithType: NotificationHandleFactory.Create
  fullName: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.Create
- uid: Innovt.Notification.Core.INotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
  commentId: M:Innovt.Notification.Core.INotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
  parent: Innovt.Notification.Core.INotificationHandleFactory
  href: Innovt.Notification.Core.INotificationHandleFactory.html#Innovt_Notification_Core_INotificationHandleFactory_Create_Innovt_Notification_Core_Domain_NotificationMessageType_
  name: Create(NotificationMessageType)
  nameWithType: INotificationHandleFactory.Create(NotificationMessageType)
  fullName: Innovt.Notification.Core.INotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
  spec.csharp:
  - uid: Innovt.Notification.Core.INotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
    name: Create
    href: Innovt.Notification.Core.INotificationHandleFactory.html#Innovt_Notification_Core_INotificationHandleFactory_Create_Innovt_Notification_Core_Domain_NotificationMessageType_
  - name: (
  - uid: Innovt.Notification.Core.Domain.NotificationMessageType
    name: NotificationMessageType
    href: Innovt.Notification.Core.Domain.NotificationMessageType.html
  - name: )
  spec.vb:
  - uid: Innovt.Notification.Core.INotificationHandleFactory.Create(Innovt.Notification.Core.Domain.NotificationMessageType)
    name: Create
    href: Innovt.Notification.Core.INotificationHandleFactory.html#Innovt_Notification_Core_INotificationHandleFactory_Create_Innovt_Notification_Core_Domain_NotificationMessageType_
  - name: (
  - uid: Innovt.Notification.Core.Domain.NotificationMessageType
    name: NotificationMessageType
    href: Innovt.Notification.Core.Domain.NotificationMessageType.html
  - name: )
- uid: Innovt.Notification.Core.Domain.NotificationMessageType
  commentId: T:Innovt.Notification.Core.Domain.NotificationMessageType
  parent: Innovt.Notification.Core.Domain
  href: Innovt.Notification.Core.Domain.NotificationMessageType.html
  name: NotificationMessageType
  nameWithType: NotificationMessageType
  fullName: Innovt.Notification.Core.Domain.NotificationMessageType
- uid: Innovt.Notification.Core.INotificationHandler
  commentId: T:Innovt.Notification.Core.INotificationHandler
  parent: Innovt.Notification.Core
  href: Innovt.Notification.Core.INotificationHandler.html
  name: INotificationHandler
  nameWithType: INotificationHandler
  fullName: Innovt.Notification.Core.INotificationHandler
- uid: Innovt.Notification.Core.Domain
  commentId: N:Innovt.Notification.Core.Domain
  href: Innovt.html
  name: Innovt.Notification.Core.Domain
  nameWithType: Innovt.Notification.Core.Domain
  fullName: Innovt.Notification.Core.Domain
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Notification
    name: Notification
    href: Innovt.Notification.html
  - name: .
  - uid: Innovt.Notification.Core
    name: Core
    href: Innovt.Notification.Core.html
  - name: .
  - uid: Innovt.Notification.Core.Domain
    name: Domain
    href: Innovt.Notification.Core.Domain.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Notification
    name: Notification
    href: Innovt.Notification.html
  - name: .
  - uid: Innovt.Notification.Core
    name: Core
    href: Innovt.Notification.Core.html
  - name: .
  - uid: Innovt.Notification.Core.Domain
    name: Domain
    href: Innovt.Notification.Core.Domain.html
- uid: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.CreateCustomHandle*
  commentId: Overload:Innovt.Cloud.AWS.Notification.NotificationHandleFactory.CreateCustomHandle
  href: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.html#Innovt_Cloud_AWS_Notification_NotificationHandleFactory_CreateCustomHandle_Innovt_Notification_Core_Domain_NotificationMessageType_
  name: CreateCustomHandle
  nameWithType: NotificationHandleFactory.CreateCustomHandle
  fullName: Innovt.Cloud.AWS.Notification.NotificationHandleFactory.CreateCustomHandle
