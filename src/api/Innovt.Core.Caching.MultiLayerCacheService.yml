### YamlMime:ManagedReference
items:
- uid: Innovt.Core.Caching.MultiLayerCacheService
  commentId: T:Innovt.Core.Caching.MultiLayerCacheService
  id: MultiLayerCacheService
  parent: Innovt.Core.Caching
  children:
  - Innovt.Core.Caching.MultiLayerCacheService.#ctor(Innovt.Core.Caching.ICacheService,Innovt.Core.Caching.ICacheService,Innovt.Core.CrossCutting.Log.ILogger)
  - Innovt.Core.Caching.MultiLayerCacheService.#ctor(Innovt.Core.Caching.ICacheService,Innovt.Core.CrossCutting.Log.ILogger)
  - Innovt.Core.Caching.MultiLayerCacheService.Dispose
  - Innovt.Core.Caching.MultiLayerCacheService.Finalize
  - Innovt.Core.Caching.MultiLayerCacheService.GetValue``1(System.String)
  - Innovt.Core.Caching.MultiLayerCacheService.Remove(System.String)
  - Innovt.Core.Caching.MultiLayerCacheService.SetValue``1(System.String,``0,System.TimeSpan)
  langs:
  - csharp
  - vb
  name: MultiLayerCacheService
  nameWithType: MultiLayerCacheService
  fullName: Innovt.Core.Caching.MultiLayerCacheService
  type: Class
  source:
    remote:
      path: src/Innovt.Core/Caching/MultiLayerCacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MultiLayerCacheService
    path: Innovt.Core/Caching/MultiLayerCacheService.cs
    startLine: 18
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Represents a multi-layer caching service that implements the <xref href="Innovt.Core.Caching.ICacheService" data-throw-if-not-resolved="false"></xref> interface.
  remarks: >-
    This class provides a caching service that supports multiple caching layers. It allows data retrieval and storage

    through a series of cache layers, falling back to subsequent layers if data is not found in earlier layers.
  example: []
  syntax:
    content: 'public sealed class MultiLayerCacheService : ICacheService, IDisposable'
    content.vb: Public NotInheritable Class MultiLayerCacheService Implements ICacheService, IDisposable
  inheritance:
  - System.Object
  implements:
  - Innovt.Core.Caching.ICacheService
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Core.Caching.MultiLayerCacheService.#ctor(Innovt.Core.Caching.ICacheService,Innovt.Core.CrossCutting.Log.ILogger)
  commentId: M:Innovt.Core.Caching.MultiLayerCacheService.#ctor(Innovt.Core.Caching.ICacheService,Innovt.Core.CrossCutting.Log.ILogger)
  id: '#ctor(Innovt.Core.Caching.ICacheService,Innovt.Core.CrossCutting.Log.ILogger)'
  parent: Innovt.Core.Caching.MultiLayerCacheService
  langs:
  - csharp
  - vb
  name: MultiLayerCacheService(ICacheService, ILogger)
  nameWithType: MultiLayerCacheService.MultiLayerCacheService(ICacheService, ILogger)
  fullName: Innovt.Core.Caching.MultiLayerCacheService.MultiLayerCacheService(Innovt.Core.Caching.ICacheService, Innovt.Core.CrossCutting.Log.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Core/Caching/MultiLayerCacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Core/Caching/MultiLayerCacheService.cs
    startLine: 34
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Initializes a new instance of the <xref href="Innovt.Core.Caching.MultiLayerCacheService" data-throw-if-not-resolved="false"></xref> class with a default caching layer.
  example: []
  syntax:
    content: public MultiLayerCacheService(ICacheService cacheDefaultLayer, ILogger logger)
    parameters:
    - id: cacheDefaultLayer
      type: Innovt.Core.Caching.ICacheService
      description: The default caching layer implementing <xref href="Innovt.Core.Caching.ICacheService" data-throw-if-not-resolved="false"></xref>.
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger implementation provided by <xref href="Innovt.Core.CrossCutting.Log.ILogger" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(cacheDefaultLayer As ICacheService, logger As ILogger)
  overload: Innovt.Core.Caching.MultiLayerCacheService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: >-
      Thrown when <code class="paramref">cacheDefaultLayer</code> or <code class="paramref">logger</code>

      is null.
  nameWithType.vb: MultiLayerCacheService.New(ICacheService, ILogger)
  fullName.vb: Innovt.Core.Caching.MultiLayerCacheService.New(Innovt.Core.Caching.ICacheService, Innovt.Core.CrossCutting.Log.ILogger)
  name.vb: New(ICacheService, ILogger)
- uid: Innovt.Core.Caching.MultiLayerCacheService.#ctor(Innovt.Core.Caching.ICacheService,Innovt.Core.Caching.ICacheService,Innovt.Core.CrossCutting.Log.ILogger)
  commentId: M:Innovt.Core.Caching.MultiLayerCacheService.#ctor(Innovt.Core.Caching.ICacheService,Innovt.Core.Caching.ICacheService,Innovt.Core.CrossCutting.Log.ILogger)
  id: '#ctor(Innovt.Core.Caching.ICacheService,Innovt.Core.Caching.ICacheService,Innovt.Core.CrossCutting.Log.ILogger)'
  parent: Innovt.Core.Caching.MultiLayerCacheService
  langs:
  - csharp
  - vb
  name: MultiLayerCacheService(ICacheService, ICacheService, ILogger)
  nameWithType: MultiLayerCacheService.MultiLayerCacheService(ICacheService, ICacheService, ILogger)
  fullName: Innovt.Core.Caching.MultiLayerCacheService.MultiLayerCacheService(Innovt.Core.Caching.ICacheService, Innovt.Core.Caching.ICacheService, Innovt.Core.CrossCutting.Log.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Core/Caching/MultiLayerCacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Core/Caching/MultiLayerCacheService.cs
    startLine: 52
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Initializes a new instance of the <xref href="Innovt.Core.Caching.MultiLayerCacheService" data-throw-if-not-resolved="false"></xref> class with multiple caching layers.
  example: []
  syntax:
    content: public MultiLayerCacheService(ICacheService cacheDefaultLayer, ICacheService cacheSecondLayer, ILogger logger)
    parameters:
    - id: cacheDefaultLayer
      type: Innovt.Core.Caching.ICacheService
      description: The default caching layer implementing <xref href="Innovt.Core.Caching.ICacheService" data-throw-if-not-resolved="false"></xref>.
    - id: cacheSecondLayer
      type: Innovt.Core.Caching.ICacheService
      description: The secondary caching layer implementing <xref href="Innovt.Core.Caching.ICacheService" data-throw-if-not-resolved="false"></xref>.
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger implementation provided by <xref href="Innovt.Core.CrossCutting.Log.ILogger" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(cacheDefaultLayer As ICacheService, cacheSecondLayer As ICacheService, logger As ILogger)
  overload: Innovt.Core.Caching.MultiLayerCacheService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: >-
      Thrown when <code class="paramref">cacheDefaultLayer</code>, <code class="paramref">cacheSecondLayer</code>,

      or <code class="paramref">logger</code> is null.
  nameWithType.vb: MultiLayerCacheService.New(ICacheService, ICacheService, ILogger)
  fullName.vb: Innovt.Core.Caching.MultiLayerCacheService.New(Innovt.Core.Caching.ICacheService, Innovt.Core.Caching.ICacheService, Innovt.Core.CrossCutting.Log.ILogger)
  name.vb: New(ICacheService, ICacheService, ILogger)
- uid: Innovt.Core.Caching.MultiLayerCacheService.GetValue``1(System.String)
  commentId: M:Innovt.Core.Caching.MultiLayerCacheService.GetValue``1(System.String)
  id: GetValue``1(System.String)
  parent: Innovt.Core.Caching.MultiLayerCacheService
  langs:
  - csharp
  - vb
  name: GetValue<T>(string)
  nameWithType: MultiLayerCacheService.GetValue<T>(string)
  fullName: Innovt.Core.Caching.MultiLayerCacheService.GetValue<T>(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/MultiLayerCacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetValue
    path: Innovt.Core/Caching/MultiLayerCacheService.cs
    startLine: 63
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Gets the cached value associated with the specified key.
  example: []
  syntax:
    content: public T GetValue<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: The unique identifier for the cached item.
    typeParameters:
    - id: T
      description: The type of the cached value.
    return:
      type: '{T}'
      description: The cached value if found; otherwise, the default value for the type.
    content.vb: Public Function GetValue(Of T)(key As String) As T
  overload: Innovt.Core.Caching.MultiLayerCacheService.GetValue*
  implements:
  - Innovt.Core.Caching.ICacheService.GetValue``1(System.String)
  nameWithType.vb: MultiLayerCacheService.GetValue(Of T)(String)
  fullName.vb: Innovt.Core.Caching.MultiLayerCacheService.GetValue(Of T)(String)
  name.vb: GetValue(Of T)(String)
- uid: Innovt.Core.Caching.MultiLayerCacheService.SetValue``1(System.String,``0,System.TimeSpan)
  commentId: M:Innovt.Core.Caching.MultiLayerCacheService.SetValue``1(System.String,``0,System.TimeSpan)
  id: SetValue``1(System.String,``0,System.TimeSpan)
  parent: Innovt.Core.Caching.MultiLayerCacheService
  langs:
  - csharp
  - vb
  name: SetValue<T>(string, T, TimeSpan)
  nameWithType: MultiLayerCacheService.SetValue<T>(string, T, TimeSpan)
  fullName: Innovt.Core.Caching.MultiLayerCacheService.SetValue<T>(string, T, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/MultiLayerCacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SetValue
    path: Innovt.Core/Caching/MultiLayerCacheService.cs
    startLine: 84
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Sets a value in the cache with the specified key and expiration duration.
  example: []
  syntax:
    content: public void SetValue<T>(string key, T entity, TimeSpan expiration)
    parameters:
    - id: key
      type: System.String
      description: The unique identifier for the cached item.
    - id: entity
      type: '{T}'
      description: The value to be cached.
    - id: expiration
      type: System.TimeSpan
      description: The time duration for which the value should be cached.
    typeParameters:
    - id: T
      description: The type of the value to be cached.
    content.vb: Public Sub SetValue(Of T)(key As String, entity As T, expiration As TimeSpan)
  overload: Innovt.Core.Caching.MultiLayerCacheService.SetValue*
  implements:
  - Innovt.Core.Caching.ICacheService.SetValue``1(System.String,{T},System.TimeSpan)
  nameWithType.vb: MultiLayerCacheService.SetValue(Of T)(String, T, TimeSpan)
  fullName.vb: Innovt.Core.Caching.MultiLayerCacheService.SetValue(Of T)(String, T, System.TimeSpan)
  name.vb: SetValue(Of T)(String, T, TimeSpan)
- uid: Innovt.Core.Caching.MultiLayerCacheService.Remove(System.String)
  commentId: M:Innovt.Core.Caching.MultiLayerCacheService.Remove(System.String)
  id: Remove(System.String)
  parent: Innovt.Core.Caching.MultiLayerCacheService
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: MultiLayerCacheService.Remove(string)
  fullName: Innovt.Core.Caching.MultiLayerCacheService.Remove(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/MultiLayerCacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Remove
    path: Innovt.Core/Caching/MultiLayerCacheService.cs
    startLine: 100
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Removes a cached value associated with the specified key.
  example: []
  syntax:
    content: public void Remove(string key)
    parameters:
    - id: key
      type: System.String
      description: The unique identifier for the cached item to be removed.
    content.vb: Public Sub Remove(key As String)
  overload: Innovt.Core.Caching.MultiLayerCacheService.Remove*
  implements:
  - Innovt.Core.Caching.ICacheService.Remove(System.String)
  nameWithType.vb: MultiLayerCacheService.Remove(String)
  fullName.vb: Innovt.Core.Caching.MultiLayerCacheService.Remove(String)
  name.vb: Remove(String)
- uid: Innovt.Core.Caching.MultiLayerCacheService.Dispose
  commentId: M:Innovt.Core.Caching.MultiLayerCacheService.Dispose
  id: Dispose
  parent: Innovt.Core.Caching.MultiLayerCacheService
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MultiLayerCacheService.Dispose()
  fullName: Innovt.Core.Caching.MultiLayerCacheService.Dispose()
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/MultiLayerCacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Dispose
    path: Innovt.Core/Caching/MultiLayerCacheService.cs
    startLine: 116
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Innovt.Core.Caching.MultiLayerCacheService.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Innovt.Core.Caching.MultiLayerCacheService.Finalize
  commentId: M:Innovt.Core.Caching.MultiLayerCacheService.Finalize
  id: Finalize
  parent: Innovt.Core.Caching.MultiLayerCacheService
  langs:
  - csharp
  - vb
  name: ~MultiLayerCacheService()
  nameWithType: MultiLayerCacheService.~MultiLayerCacheService()
  fullName: Innovt.Core.Caching.MultiLayerCacheService.~MultiLayerCacheService()
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/MultiLayerCacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Finalize
    path: Innovt.Core/Caching/MultiLayerCacheService.cs
    startLine: 125
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Finalizes an instance of the <xref href="Innovt.Core.Caching.MultiLayerCacheService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected ~MultiLayerCacheService()
    content.vb: 'Protected '
  overload: Innovt.Core.Caching.MultiLayerCacheService.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
references:
- uid: Innovt.Core.Caching.ICacheService
  commentId: T:Innovt.Core.Caching.ICacheService
  parent: Innovt.Core.Caching
  href: Innovt.Core.Caching.ICacheService.html
  name: ICacheService
  nameWithType: ICacheService
  fullName: Innovt.Core.Caching.ICacheService
- uid: Innovt.Core.Caching
  commentId: N:Innovt.Core.Caching
  href: Innovt.html
  name: Innovt.Core.Caching
  nameWithType: Innovt.Core.Caching
  fullName: Innovt.Core.Caching
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Caching
    name: Caching
    href: Innovt.Core.Caching.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Caching
    name: Caching
    href: Innovt.Core.Caching.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Core.Caching.MultiLayerCacheService
  commentId: T:Innovt.Core.Caching.MultiLayerCacheService
  href: Innovt.Core.Caching.MultiLayerCacheService.html
  name: MultiLayerCacheService
  nameWithType: MultiLayerCacheService
  fullName: Innovt.Core.Caching.MultiLayerCacheService
- uid: Innovt.Core.CrossCutting.Log.ILogger
  commentId: T:Innovt.Core.CrossCutting.Log.ILogger
  parent: Innovt.Core.CrossCutting.Log
  href: Innovt.Core.CrossCutting.Log.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Innovt.Core.CrossCutting.Log.ILogger
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Innovt.Core.Caching.MultiLayerCacheService.#ctor*
  commentId: Overload:Innovt.Core.Caching.MultiLayerCacheService.#ctor
  href: Innovt.Core.Caching.MultiLayerCacheService.html#Innovt_Core_Caching_MultiLayerCacheService__ctor_Innovt_Core_Caching_ICacheService_Innovt_Core_CrossCutting_Log_ILogger_
  name: MultiLayerCacheService
  nameWithType: MultiLayerCacheService.MultiLayerCacheService
  fullName: Innovt.Core.Caching.MultiLayerCacheService.MultiLayerCacheService
  nameWithType.vb: MultiLayerCacheService.New
  fullName.vb: Innovt.Core.Caching.MultiLayerCacheService.New
  name.vb: New
- uid: Innovt.Core.CrossCutting.Log
  commentId: N:Innovt.Core.CrossCutting.Log
  href: Innovt.html
  name: Innovt.Core.CrossCutting.Log
  nameWithType: Innovt.Core.CrossCutting.Log
  fullName: Innovt.Core.CrossCutting.Log
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
- uid: Innovt.Core.Caching.MultiLayerCacheService.GetValue*
  commentId: Overload:Innovt.Core.Caching.MultiLayerCacheService.GetValue
  href: Innovt.Core.Caching.MultiLayerCacheService.html#Innovt_Core_Caching_MultiLayerCacheService_GetValue__1_System_String_
  name: GetValue
  nameWithType: MultiLayerCacheService.GetValue
  fullName: Innovt.Core.Caching.MultiLayerCacheService.GetValue
- uid: Innovt.Core.Caching.ICacheService.GetValue``1(System.String)
  commentId: M:Innovt.Core.Caching.ICacheService.GetValue``1(System.String)
  parent: Innovt.Core.Caching.ICacheService
  isExternal: true
  href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_GetValue__1_System_String_
  name: GetValue<T>(string)
  nameWithType: ICacheService.GetValue<T>(string)
  fullName: Innovt.Core.Caching.ICacheService.GetValue<T>(string)
  nameWithType.vb: ICacheService.GetValue(Of T)(String)
  fullName.vb: Innovt.Core.Caching.ICacheService.GetValue(Of T)(String)
  name.vb: GetValue(Of T)(String)
  spec.csharp:
  - uid: Innovt.Core.Caching.ICacheService.GetValue``1(System.String)
    name: GetValue
    href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_GetValue__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.Caching.ICacheService.GetValue``1(System.String)
    name: GetValue
    href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_GetValue__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Core.Caching.MultiLayerCacheService.SetValue*
  commentId: Overload:Innovt.Core.Caching.MultiLayerCacheService.SetValue
  href: Innovt.Core.Caching.MultiLayerCacheService.html#Innovt_Core_Caching_MultiLayerCacheService_SetValue__1_System_String___0_System_TimeSpan_
  name: SetValue
  nameWithType: MultiLayerCacheService.SetValue
  fullName: Innovt.Core.Caching.MultiLayerCacheService.SetValue
- uid: Innovt.Core.Caching.ICacheService.SetValue``1(System.String,{T},System.TimeSpan)
  commentId: M:Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
  parent: Innovt.Core.Caching.ICacheService
  definition: Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
  href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_SetValue__1_System_String___0_System_TimeSpan_
  name: SetValue<T>(string, T, TimeSpan)
  nameWithType: ICacheService.SetValue<T>(string, T, TimeSpan)
  fullName: Innovt.Core.Caching.ICacheService.SetValue<T>(string, T, System.TimeSpan)
  nameWithType.vb: ICacheService.SetValue(Of T)(String, T, TimeSpan)
  fullName.vb: Innovt.Core.Caching.ICacheService.SetValue(Of T)(String, T, System.TimeSpan)
  name.vb: SetValue(Of T)(String, T, TimeSpan)
  spec.csharp:
  - uid: Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
    name: SetValue
    href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_SetValue__1_System_String___0_System_TimeSpan_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
    name: SetValue
    href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_SetValue__1_System_String___0_System_TimeSpan_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
  commentId: M:Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
  isExternal: true
  href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_SetValue__1_System_String___0_System_TimeSpan_
  name: SetValue<T>(string, T, TimeSpan)
  nameWithType: ICacheService.SetValue<T>(string, T, TimeSpan)
  fullName: Innovt.Core.Caching.ICacheService.SetValue<T>(string, T, System.TimeSpan)
  nameWithType.vb: ICacheService.SetValue(Of T)(String, T, TimeSpan)
  fullName.vb: Innovt.Core.Caching.ICacheService.SetValue(Of T)(String, T, System.TimeSpan)
  name.vb: SetValue(Of T)(String, T, TimeSpan)
  spec.csharp:
  - uid: Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
    name: SetValue
    href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_SetValue__1_System_String___0_System_TimeSpan_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
    name: SetValue
    href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_SetValue__1_System_String___0_System_TimeSpan_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: Innovt.Core.Caching.MultiLayerCacheService.Remove*
  commentId: Overload:Innovt.Core.Caching.MultiLayerCacheService.Remove
  href: Innovt.Core.Caching.MultiLayerCacheService.html#Innovt_Core_Caching_MultiLayerCacheService_Remove_System_String_
  name: Remove
  nameWithType: MultiLayerCacheService.Remove
  fullName: Innovt.Core.Caching.MultiLayerCacheService.Remove
- uid: Innovt.Core.Caching.ICacheService.Remove(System.String)
  commentId: M:Innovt.Core.Caching.ICacheService.Remove(System.String)
  parent: Innovt.Core.Caching.ICacheService
  isExternal: true
  href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_Remove_System_String_
  name: Remove(string)
  nameWithType: ICacheService.Remove(string)
  fullName: Innovt.Core.Caching.ICacheService.Remove(string)
  nameWithType.vb: ICacheService.Remove(String)
  fullName.vb: Innovt.Core.Caching.ICacheService.Remove(String)
  name.vb: Remove(String)
  spec.csharp:
  - uid: Innovt.Core.Caching.ICacheService.Remove(System.String)
    name: Remove
    href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_Remove_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.Caching.ICacheService.Remove(System.String)
    name: Remove
    href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_Remove_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.Caching.MultiLayerCacheService.Dispose*
  commentId: Overload:Innovt.Core.Caching.MultiLayerCacheService.Dispose
  href: Innovt.Core.Caching.MultiLayerCacheService.html#Innovt_Core_Caching_MultiLayerCacheService_Dispose
  name: Dispose
  nameWithType: MultiLayerCacheService.Dispose
  fullName: Innovt.Core.Caching.MultiLayerCacheService.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Innovt.Core.Caching.MultiLayerCacheService.Finalize*
  commentId: Overload:Innovt.Core.Caching.MultiLayerCacheService.Finalize
  href: Innovt.Core.Caching.MultiLayerCacheService.html#Innovt_Core_Caching_MultiLayerCacheService_Finalize
  name: ~MultiLayerCacheService
  nameWithType: MultiLayerCacheService.~MultiLayerCacheService
  fullName: Innovt.Core.Caching.MultiLayerCacheService.~MultiLayerCacheService
  spec.csharp:
  - name: "~"
  - uid: Innovt.Core.Caching.MultiLayerCacheService.Finalize*
    name: MultiLayerCacheService
    href: Innovt.Core.Caching.MultiLayerCacheService.html#Innovt_Core_Caching_MultiLayerCacheService_Finalize
