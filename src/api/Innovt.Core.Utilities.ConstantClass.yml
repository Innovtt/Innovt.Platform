### YamlMime:ManagedReference
items:
- uid: Innovt.Core.Utilities.ConstantClass
  commentId: T:Innovt.Core.Utilities.ConstantClass
  id: ConstantClass
  parent: Innovt.Core.Utilities
  children:
  - Innovt.Core.Utilities.ConstantClass.#ctor(System.String)
  - Innovt.Core.Utilities.ConstantClass.Equals(Innovt.Core.Utilities.ConstantClass)
  - Innovt.Core.Utilities.ConstantClass.Equals(System.Object)
  - Innovt.Core.Utilities.ConstantClass.Equals(System.String)
  - Innovt.Core.Utilities.ConstantClass.GetHashCode
  - Innovt.Core.Utilities.ConstantClass.ToString
  - Innovt.Core.Utilities.ConstantClass.Value
  - Innovt.Core.Utilities.ConstantClass.op_Equality(Innovt.Core.Utilities.ConstantClass,Innovt.Core.Utilities.ConstantClass)
  - Innovt.Core.Utilities.ConstantClass.op_Equality(Innovt.Core.Utilities.ConstantClass,System.String)
  - Innovt.Core.Utilities.ConstantClass.op_Equality(System.String,Innovt.Core.Utilities.ConstantClass)
  - Innovt.Core.Utilities.ConstantClass.op_Implicit(Innovt.Core.Utilities.ConstantClass)~System.String
  - Innovt.Core.Utilities.ConstantClass.op_Inequality(Innovt.Core.Utilities.ConstantClass,Innovt.Core.Utilities.ConstantClass)
  - Innovt.Core.Utilities.ConstantClass.op_Inequality(Innovt.Core.Utilities.ConstantClass,System.String)
  - Innovt.Core.Utilities.ConstantClass.op_Inequality(System.String,Innovt.Core.Utilities.ConstantClass)
  langs:
  - csharp
  - vb
  name: ConstantClass
  nameWithType: ConstantClass
  fullName: Innovt.Core.Utilities.ConstantClass
  type: Class
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConstantClass
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 11
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Represents a base class for constants with a string value.
  example: []
  syntax:
    content: public class ConstantClass
    content.vb: Public Class ConstantClass
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Core.Utilities.ConstantClass.#ctor(System.String)
  commentId: M:Innovt.Core.Utilities.ConstantClass.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: ConstantClass(string)
  nameWithType: ConstantClass.ConstantClass(string)
  fullName: Innovt.Core.Utilities.ConstantClass.ConstantClass(string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 17
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Initializes a new instance of the <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> class with the specified value.
  example: []
  syntax:
    content: protected ConstantClass(string value)
    parameters:
    - id: value
      type: System.String
      description: The constant value as a string.
    content.vb: Protected Sub New(value As String)
  overload: Innovt.Core.Utilities.ConstantClass.#ctor*
  nameWithType.vb: ConstantClass.New(String)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.New(String)
  name.vb: New(String)
- uid: Innovt.Core.Utilities.ConstantClass.Value
  commentId: P:Innovt.Core.Utilities.ConstantClass.Value
  id: Value
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ConstantClass.Value
  fullName: Innovt.Core.Utilities.ConstantClass.Value
  type: Property
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Value
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 25
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Gets the constant value as a string.
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Innovt.Core.Utilities.ConstantClass.Value*
- uid: Innovt.Core.Utilities.ConstantClass.Equals(System.Object)
  commentId: M:Innovt.Core.Utilities.ConstantClass.Equals(System.Object)
  id: Equals(System.Object)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: ConstantClass.Equals(object)
  fullName: Innovt.Core.Utilities.ConstantClass.Equals(object)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Equals
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 33
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: >-
    Determines whether this instance of <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> is equal to another object by comparing their

    string values.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with this instance.
    return:
      type: System.Boolean
      description: <code>true</code> if the objects are equal; otherwise, <code>false</code>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Innovt.Core.Utilities.ConstantClass.Equals*
  nameWithType.vb: ConstantClass.Equals(Object)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.Equals(Object)
  name.vb: Equals(Object)
- uid: Innovt.Core.Utilities.ConstantClass.Equals(Innovt.Core.Utilities.ConstantClass)
  commentId: M:Innovt.Core.Utilities.ConstantClass.Equals(Innovt.Core.Utilities.ConstantClass)
  id: Equals(Innovt.Core.Utilities.ConstantClass)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: Equals(ConstantClass)
  nameWithType: ConstantClass.Equals(ConstantClass)
  fullName: Innovt.Core.Utilities.ConstantClass.Equals(Innovt.Core.Utilities.ConstantClass)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Equals
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 44
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: >-
    Determines whether this instance of <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> is equal to another <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref>

    by comparing their string values.
  example: []
  syntax:
    content: public virtual bool Equals(ConstantClass obj)
    parameters:
    - id: obj
      type: Innovt.Core.Utilities.ConstantClass
      description: The <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> to compare with this instance.
    return:
      type: System.Boolean
      description: <code>true</code> if the objects are equal; otherwise, <code>false</code>.
    content.vb: Public Overridable Function Equals(obj As ConstantClass) As Boolean
  overload: Innovt.Core.Utilities.ConstantClass.Equals*
- uid: Innovt.Core.Utilities.ConstantClass.GetHashCode
  commentId: M:Innovt.Core.Utilities.ConstantClass.GetHashCode
  id: GetHashCode
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ConstantClass.GetHashCode()
  fullName: Innovt.Core.Utilities.ConstantClass.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetHashCode
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 53
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Returns the hash code for this instance of <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Innovt.Core.Utilities.ConstantClass.GetHashCode*
- uid: Innovt.Core.Utilities.ConstantClass.ToString
  commentId: M:Innovt.Core.Utilities.ConstantClass.ToString
  id: ToString
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ConstantClass.ToString()
  fullName: Innovt.Core.Utilities.ConstantClass.ToString()
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToString
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 62
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Innovt.Core.Utilities.ConstantClass.ToString*
- uid: Innovt.Core.Utilities.ConstantClass.Equals(System.String)
  commentId: M:Innovt.Core.Utilities.ConstantClass.Equals(System.String)
  id: Equals(System.String)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: Equals(string)
  nameWithType: ConstantClass.Equals(string)
  fullName: Innovt.Core.Utilities.ConstantClass.Equals(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Equals
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 73
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compares a <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance and a string for equality by comparing their string values.
  example: []
  syntax:
    content: protected virtual bool Equals(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> and string are equal; otherwise, <code>false</code>.
    content.vb: Protected Overridable Function Equals(value As String) As Boolean
  overload: Innovt.Core.Utilities.ConstantClass.Equals*
  nameWithType.vb: ConstantClass.Equals(String)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.Equals(String)
  name.vb: Equals(String)
- uid: Innovt.Core.Utilities.ConstantClass.op_Equality(Innovt.Core.Utilities.ConstantClass,Innovt.Core.Utilities.ConstantClass)
  commentId: M:Innovt.Core.Utilities.ConstantClass.op_Equality(Innovt.Core.Utilities.ConstantClass,Innovt.Core.Utilities.ConstantClass)
  id: op_Equality(Innovt.Core.Utilities.ConstantClass,Innovt.Core.Utilities.ConstantClass)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: operator ==(ConstantClass, ConstantClass)
  nameWithType: ConstantClass.operator ==(ConstantClass, ConstantClass)
  fullName: Innovt.Core.Utilities.ConstantClass.operator ==(Innovt.Core.Utilities.ConstantClass, Innovt.Core.Utilities.ConstantClass)
  type: Operator
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: op_Equality
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 84
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compares a <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance and a string for equality by comparing their string values.
  example: []
  syntax:
    content: public static bool operator ==(ConstantClass a, ConstantClass b)
    parameters:
    - id: a
      type: Innovt.Core.Utilities.ConstantClass
      description: The <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> to compare.
    - id: b
      type: Innovt.Core.Utilities.ConstantClass
      description: The string to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> and string are equal; otherwise, <code>false</code>.
    content.vb: Public Shared Operator =(a As ConstantClass, b As ConstantClass) As Boolean
  overload: Innovt.Core.Utilities.ConstantClass.op_Equality*
  nameWithType.vb: ConstantClass.=(ConstantClass, ConstantClass)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.=(Innovt.Core.Utilities.ConstantClass, Innovt.Core.Utilities.ConstantClass)
  name.vb: =(ConstantClass, ConstantClass)
- uid: Innovt.Core.Utilities.ConstantClass.op_Equality(Innovt.Core.Utilities.ConstantClass,System.String)
  commentId: M:Innovt.Core.Utilities.ConstantClass.op_Equality(Innovt.Core.Utilities.ConstantClass,System.String)
  id: op_Equality(Innovt.Core.Utilities.ConstantClass,System.String)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: operator ==(ConstantClass, string)
  nameWithType: ConstantClass.operator ==(ConstantClass, string)
  fullName: Innovt.Core.Utilities.ConstantClass.operator ==(Innovt.Core.Utilities.ConstantClass, string)
  type: Operator
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: op_Equality
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 95
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compares a string and a <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance for equality by comparing their string values.
  example: []
  syntax:
    content: public static bool operator ==(ConstantClass a, string b)
    parameters:
    - id: a
      type: Innovt.Core.Utilities.ConstantClass
      description: The string to compare.
    - id: b
      type: System.String
      description: The <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the string and <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> are equal; otherwise, <code>false</code>.
    content.vb: Public Shared Operator =(a As ConstantClass, b As String) As Boolean
  overload: Innovt.Core.Utilities.ConstantClass.op_Equality*
  nameWithType.vb: ConstantClass.=(ConstantClass, String)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.=(Innovt.Core.Utilities.ConstantClass, String)
  name.vb: =(ConstantClass, String)
- uid: Innovt.Core.Utilities.ConstantClass.op_Equality(System.String,Innovt.Core.Utilities.ConstantClass)
  commentId: M:Innovt.Core.Utilities.ConstantClass.op_Equality(System.String,Innovt.Core.Utilities.ConstantClass)
  id: op_Equality(System.String,Innovt.Core.Utilities.ConstantClass)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: operator ==(string, ConstantClass)
  nameWithType: ConstantClass.operator ==(string, ConstantClass)
  fullName: Innovt.Core.Utilities.ConstantClass.operator ==(string, Innovt.Core.Utilities.ConstantClass)
  type: Operator
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: op_Equality
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 106
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compares two <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instances for inequality by comparing their string values.
  example: []
  syntax:
    content: public static bool operator ==(string a, ConstantClass b)
    parameters:
    - id: a
      type: System.String
      description: The first <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> to compare.
    - id: b
      type: Innovt.Core.Utilities.ConstantClass
      description: The second <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the two <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instances are not equal; otherwise, <code>false</code>.
    content.vb: Public Shared Operator =(a As String, b As ConstantClass) As Boolean
  overload: Innovt.Core.Utilities.ConstantClass.op_Equality*
  nameWithType.vb: ConstantClass.=(String, ConstantClass)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.=(String, Innovt.Core.Utilities.ConstantClass)
  name.vb: =(String, ConstantClass)
- uid: Innovt.Core.Utilities.ConstantClass.op_Inequality(Innovt.Core.Utilities.ConstantClass,Innovt.Core.Utilities.ConstantClass)
  commentId: M:Innovt.Core.Utilities.ConstantClass.op_Inequality(Innovt.Core.Utilities.ConstantClass,Innovt.Core.Utilities.ConstantClass)
  id: op_Inequality(Innovt.Core.Utilities.ConstantClass,Innovt.Core.Utilities.ConstantClass)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: operator !=(ConstantClass, ConstantClass)
  nameWithType: ConstantClass.operator !=(ConstantClass, ConstantClass)
  fullName: Innovt.Core.Utilities.ConstantClass.operator !=(Innovt.Core.Utilities.ConstantClass, Innovt.Core.Utilities.ConstantClass)
  type: Operator
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: op_Inequality
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 117
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compares a <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance and a string for inequality by comparing their string values.
  example: []
  syntax:
    content: public static bool operator !=(ConstantClass a, ConstantClass b)
    parameters:
    - id: a
      type: Innovt.Core.Utilities.ConstantClass
      description: The <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> to compare.
    - id: b
      type: Innovt.Core.Utilities.ConstantClass
      description: The string to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> and string are not equal; otherwise, <code>false</code>.
    content.vb: Public Shared Operator <>(a As ConstantClass, b As ConstantClass) As Boolean
  overload: Innovt.Core.Utilities.ConstantClass.op_Inequality*
  nameWithType.vb: ConstantClass.<>(ConstantClass, ConstantClass)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.<>(Innovt.Core.Utilities.ConstantClass, Innovt.Core.Utilities.ConstantClass)
  name.vb: <>(ConstantClass, ConstantClass)
- uid: Innovt.Core.Utilities.ConstantClass.op_Inequality(Innovt.Core.Utilities.ConstantClass,System.String)
  commentId: M:Innovt.Core.Utilities.ConstantClass.op_Inequality(Innovt.Core.Utilities.ConstantClass,System.String)
  id: op_Inequality(Innovt.Core.Utilities.ConstantClass,System.String)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: operator !=(ConstantClass, string)
  nameWithType: ConstantClass.operator !=(ConstantClass, string)
  fullName: Innovt.Core.Utilities.ConstantClass.operator !=(Innovt.Core.Utilities.ConstantClass, string)
  type: Operator
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: op_Inequality
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 128
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compares a string and a <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance for inequality by comparing their string values.
  example: []
  syntax:
    content: public static bool operator !=(ConstantClass a, string b)
    parameters:
    - id: a
      type: Innovt.Core.Utilities.ConstantClass
      description: The string to compare.
    - id: b
      type: System.String
      description: The <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the string and <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> are not equal; otherwise, <code>false</code>.
    content.vb: Public Shared Operator <>(a As ConstantClass, b As String) As Boolean
  overload: Innovt.Core.Utilities.ConstantClass.op_Inequality*
  nameWithType.vb: ConstantClass.<>(ConstantClass, String)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.<>(Innovt.Core.Utilities.ConstantClass, String)
  name.vb: <>(ConstantClass, String)
- uid: Innovt.Core.Utilities.ConstantClass.op_Inequality(System.String,Innovt.Core.Utilities.ConstantClass)
  commentId: M:Innovt.Core.Utilities.ConstantClass.op_Inequality(System.String,Innovt.Core.Utilities.ConstantClass)
  id: op_Inequality(System.String,Innovt.Core.Utilities.ConstantClass)
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: operator !=(string, ConstantClass)
  nameWithType: ConstantClass.operator !=(string, ConstantClass)
  fullName: Innovt.Core.Utilities.ConstantClass.operator !=(string, Innovt.Core.Utilities.ConstantClass)
  type: Operator
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: op_Inequality
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 139
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compares a string and a <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance for inequality by comparing their string values.
  example: []
  syntax:
    content: public static bool operator !=(string a, ConstantClass b)
    parameters:
    - id: a
      type: System.String
      description: The string to compare.
    - id: b
      type: Innovt.Core.Utilities.ConstantClass
      description: The <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> to compare.
    return:
      type: System.Boolean
      description: <code>true</code> if the string and <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> are not equal; otherwise, <code>false</code>.
    content.vb: Public Shared Operator <>(a As String, b As ConstantClass) As Boolean
  overload: Innovt.Core.Utilities.ConstantClass.op_Inequality*
  nameWithType.vb: ConstantClass.<>(String, ConstantClass)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.<>(String, Innovt.Core.Utilities.ConstantClass)
  name.vb: <>(String, ConstantClass)
- uid: Innovt.Core.Utilities.ConstantClass.op_Implicit(Innovt.Core.Utilities.ConstantClass)~System.String
  commentId: M:Innovt.Core.Utilities.ConstantClass.op_Implicit(Innovt.Core.Utilities.ConstantClass)~System.String
  id: op_Implicit(Innovt.Core.Utilities.ConstantClass)~System.String
  parent: Innovt.Core.Utilities.ConstantClass
  langs:
  - csharp
  - vb
  name: implicit operator string(ConstantClass)
  nameWithType: ConstantClass.implicit operator string(ConstantClass)
  fullName: Innovt.Core.Utilities.ConstantClass.implicit operator string(Innovt.Core.Utilities.ConstantClass)
  type: Operator
  source:
    remote:
      path: src/Innovt.Core/Utilities/ConstantClass.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: op_Implicit
    path: Innovt.Core/Utilities/ConstantClass.cs
    startLine: 149
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Implicitly converts a <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance to a string by returning its string value.
  example: []
  syntax:
    content: public static implicit operator string(ConstantClass value)
    parameters:
    - id: value
      type: Innovt.Core.Utilities.ConstantClass
      description: The <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance to convert.
    return:
      type: System.String
      description: The string value of the <xref href="Innovt.Core.Utilities.ConstantClass" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Widening Operator CType(value As ConstantClass) As String
  overload: Innovt.Core.Utilities.ConstantClass.op_Implicit*
  nameWithType.vb: ConstantClass.CType(ConstantClass)
  fullName.vb: Innovt.Core.Utilities.ConstantClass.CType(Innovt.Core.Utilities.ConstantClass)
  name.vb: CType(ConstantClass)
references:
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Core.Utilities.ConstantClass
  commentId: T:Innovt.Core.Utilities.ConstantClass
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.ConstantClass.html
  name: ConstantClass
  nameWithType: ConstantClass
  fullName: Innovt.Core.Utilities.ConstantClass
- uid: Innovt.Core.Utilities.ConstantClass.#ctor*
  commentId: Overload:Innovt.Core.Utilities.ConstantClass.#ctor
  href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass__ctor_System_String_
  name: ConstantClass
  nameWithType: ConstantClass.ConstantClass
  fullName: Innovt.Core.Utilities.ConstantClass.ConstantClass
  nameWithType.vb: ConstantClass.New
  fullName.vb: Innovt.Core.Utilities.ConstantClass.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Core.Utilities.ConstantClass.Value*
  commentId: Overload:Innovt.Core.Utilities.ConstantClass.Value
  href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass_Value
  name: Value
  nameWithType: ConstantClass.Value
  fullName: Innovt.Core.Utilities.ConstantClass.Value
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.ConstantClass.Equals*
  commentId: Overload:Innovt.Core.Utilities.ConstantClass.Equals
  href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass_Equals_System_Object_
  name: Equals
  nameWithType: ConstantClass.Equals
  fullName: Innovt.Core.Utilities.ConstantClass.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Innovt.Core.Utilities.ConstantClass.GetHashCode*
  commentId: Overload:Innovt.Core.Utilities.ConstantClass.GetHashCode
  href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass_GetHashCode
  name: GetHashCode
  nameWithType: ConstantClass.GetHashCode
  fullName: Innovt.Core.Utilities.ConstantClass.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Innovt.Core.Utilities.ConstantClass.ToString*
  commentId: Overload:Innovt.Core.Utilities.ConstantClass.ToString
  href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass_ToString
  name: ToString
  nameWithType: ConstantClass.ToString
  fullName: Innovt.Core.Utilities.ConstantClass.ToString
- uid: Innovt.Core.Utilities.ConstantClass.op_Equality*
  commentId: Overload:Innovt.Core.Utilities.ConstantClass.op_Equality
  href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass_op_Equality_Innovt_Core_Utilities_ConstantClass_Innovt_Core_Utilities_ConstantClass_
  name: operator ==
  nameWithType: ConstantClass.operator ==
  fullName: Innovt.Core.Utilities.ConstantClass.operator ==
  nameWithType.vb: ConstantClass.=
  fullName.vb: Innovt.Core.Utilities.ConstantClass.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Innovt.Core.Utilities.ConstantClass.op_Equality*
    name: ==
    href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass_op_Equality_Innovt_Core_Utilities_ConstantClass_Innovt_Core_Utilities_ConstantClass_
- uid: Innovt.Core.Utilities.ConstantClass.op_Inequality*
  commentId: Overload:Innovt.Core.Utilities.ConstantClass.op_Inequality
  href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass_op_Inequality_Innovt_Core_Utilities_ConstantClass_Innovt_Core_Utilities_ConstantClass_
  name: operator !=
  nameWithType: ConstantClass.operator !=
  fullName: Innovt.Core.Utilities.ConstantClass.operator !=
  nameWithType.vb: ConstantClass.<>
  fullName.vb: Innovt.Core.Utilities.ConstantClass.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Innovt.Core.Utilities.ConstantClass.op_Inequality*
    name: '!='
    href: Innovt.Core.Utilities.ConstantClass.html#Innovt_Core_Utilities_ConstantClass_op_Inequality_Innovt_Core_Utilities_ConstantClass_Innovt_Core_Utilities_ConstantClass_
- uid: Innovt.Core.Utilities.ConstantClass.op_Implicit*
  commentId: Overload:Innovt.Core.Utilities.ConstantClass.op_Implicit
  name: implicit operator
  nameWithType: ConstantClass.implicit operator
  fullName: Innovt.Core.Utilities.ConstantClass.implicit operator
  nameWithType.vb: ConstantClass.CType
  fullName.vb: Innovt.Core.Utilities.ConstantClass.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
