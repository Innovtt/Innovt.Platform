{
  "api/Innovt.AspNetCore.ApiStartupBase.html": {
    "href": "api/Innovt.AspNetCore.ApiStartupBase.html",
    "title": "Class ApiStartupBase | Innovt Platform",
    "keywords": "Class ApiStartupBase Namespace Innovt.AspNetCore Assembly Innovt.AspNetCore.dll Base class for configuring API startup settings and dependencies. public abstract class ApiStartupBase Inheritance object ApiStartupBase Derived Startup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ApiStartupBase(IConfiguration, IWebHostEnvironment, string, bool) Initializes a new instance of the ApiStartupBase class with the specified configuration and environment. protected ApiStartupBase(IConfiguration configuration, IWebHostEnvironment environment, string appName, bool setDefaultJsonOptions = true) Parameters configuration IConfiguration The configuration for the application. environment IWebHostEnvironment The hosting environment for the application. appName string The name of the application. setDefaultJsonOptions bool This is the default convention for Serialization/Deserialization Exceptions ArgumentNullException Thrown if configuration, environment, or appName is null. ApiStartupBase(IConfiguration, IWebHostEnvironment, string, string, string, string, string?, string?, bool) Initializes a new instance of the ApiStartupBase class with additional API documentation details. protected ApiStartupBase(IConfiguration configuration, IWebHostEnvironment environment, string appName, string apiTitle, string apiDescription, string apiVersion, string? contactName = null, string? contactEmail = null, bool setDefaultJsonOptions = true) Parameters configuration IConfiguration The configuration for the application. environment IWebHostEnvironment The hosting environment for the application. appName string The name of the application. apiTitle string The title of the API. apiDescription string The description of the API. apiVersion string The version of the API. contactName string The name of the API contact (optional). contactEmail string The email of the API contact (optional). setDefaultJsonOptions bool This is the default convention for Serialization/Deserialization Exceptions ArgumentNullException Thrown if configuration, environment, appName, apiTitle, apiDescription, or apiVersion is null. Properties AppName Gets the name of the application. public string AppName { get; } Property Value string Configuration Gets the configuration for the application. public IConfiguration Configuration { get; } Property Value IConfiguration DefaultHealthPath Gets or sets the default health path for the application. protected string DefaultHealthPath { get; set; } Property Value string Documentation Gets or sets the API documentation details. protected DefaultApiDocumentation Documentation { get; set; } Property Value DefaultApiDocumentation Environment Gets the hosting environment for the application. public IWebHostEnvironment Environment { get; } Property Value IWebHostEnvironment Localization Gets or sets the localization settings for the API. protected DefaultApiLocalization Localization { get; set; } Property Value DefaultApiLocalization SetDefaultJsonOptions If true will set default Json Options(JsonSerializerOptions.PropertyNamingPolicy = JsonNamingPolicy.CamelCase) etc public bool SetDefaultJsonOptions { get; set; } Property Value bool Methods AddDefaultServices(IServiceCollection) Adds default services to the service collection. protected abstract void AddDefaultServices(IServiceCollection services) Parameters services IServiceCollection The service collection to add default services to. AddSwagger(IServiceCollection) Adds Swagger generation to the specified services. protected virtual void AddSwagger(IServiceCollection services) Parameters services IServiceCollection The service collection to add Swagger to. AddTracing(IServiceCollection) Adds tracing and telemetry to the specified services. protected virtual void AddTracing(IServiceCollection services) Parameters services IServiceCollection The service collection to add tracing to. Configure(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory) Configure Will Add All main Services as Default for Api and MVC Applications public void Configure(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory) Parameters app IApplicationBuilder env IWebHostEnvironment loggerFactory ILoggerFactory ConfigureApiBehavior() Configures API behavior options. protected virtual Action<ApiBehaviorOptions> ConfigureApiBehavior() Returns Action<ApiBehaviorOptions> An action that configures ApiBehaviorOptions. ConfigureApp(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory) Configures the application. public abstract void ConfigureApp(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory) Parameters app IApplicationBuilder The application builder. env IWebHostEnvironment The hosting environment. loggerFactory ILoggerFactory The logger factory. ConfigureCultures(IApplicationBuilder) Configures request cultures for the application. protected virtual void ConfigureCultures(IApplicationBuilder app) Parameters app IApplicationBuilder The application builder. ConfigureHealthChecks(IServiceCollection) Implement only the AddHealthChecks by default protected virtual void ConfigureHealthChecks(IServiceCollection services) Parameters services IServiceCollection ConfigureIoC(IServiceCollection) Configures the IoC container for the application. protected abstract void ConfigureIoC(IServiceCollection services) Parameters services IServiceCollection The service collection to configure for IoC. ConfigureOpenTelemetry(TracerProviderBuilder) Configures OpenTelemetry for tracing. protected abstract void ConfigureOpenTelemetry(TracerProviderBuilder builder) Parameters builder TracerProviderBuilder The TracerProviderBuilder for configuring tracing. ConfigureServices(IServiceCollection) Configure services will register default services for api and mvc applications. AddHealthChecks public virtual void ConfigureServices(IServiceCollection services) Parameters services IServiceCollection ConfigureSwaggerUi(IApplicationBuilder, IWebHostEnvironment) Configures Swagger UI for API documentation. protected virtual void ConfigureSwaggerUi(IApplicationBuilder app, IWebHostEnvironment env) Parameters app IApplicationBuilder The application builder. env IWebHostEnvironment The hosting environment. IsDevelopmentEnvironment() Checks if the application is running in a development environment. protected bool IsDevelopmentEnvironment() Returns bool True if the application is in development; otherwise, false."
  },
  "api/Innovt.AspNetCore.Application.Tests.Controllers.SampleController.html": {
    "href": "api/Innovt.AspNetCore.Application.Tests.Controllers.SampleController.html",
    "title": "Class SampleController | Innovt Platform",
    "keywords": "Class SampleController Namespace Innovt.AspNetCore.Application.Tests.Controllers Assembly Innovt.AspNetCore.Application.Tests.dll [EnableCors] [Produces(\"application/json\", new string[] { })] [Route(\"[controller]\")] [ApiController] public class SampleController : BaseApiController Inheritance object ControllerBase BaseApiController SampleController Inherited Members BaseApiController.Logger ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SampleController(ILogger) public SampleController(ILogger logger) Parameters logger ILogger Methods Add(Guid, AddUserViewModel, CancellationToken) [HttpPost(\"{userId:guid}\")] [ProducesResponseType(401)] [ProducesResponseType(404)] [ProducesResponseType(500)] [ProducesResponseType(201)] public IActionResult Add(Guid userId, AddUserViewModel command, CancellationToken cancellationToken = default) Parameters userId Guid command AddUserViewModel cancellationToken CancellationToken Returns IActionResult"
  },
  "api/Innovt.AspNetCore.Application.Tests.Controllers.html": {
    "href": "api/Innovt.AspNetCore.Application.Tests.Controllers.html",
    "title": "Namespace Innovt.AspNetCore.Application.Tests.Controllers | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Application.Tests.Controllers Classes SampleController"
  },
  "api/Innovt.AspNetCore.Application.Tests.Program.html": {
    "href": "api/Innovt.AspNetCore.Application.Tests.Program.html",
    "title": "Class Program | Innovt Platform",
    "keywords": "Class Program Namespace Innovt.AspNetCore.Application.Tests Assembly Innovt.AspNetCore.Application.Tests.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CreateHostBuilder(IWebHostBuilder) public static IWebHostBuilder CreateHostBuilder(IWebHostBuilder hostBuilder) Parameters hostBuilder IWebHostBuilder Returns IWebHostBuilder Main(string[]) public static Task Main(string[] args) Parameters args string[] Returns Task"
  },
  "api/Innovt.AspNetCore.Application.Tests.Startup.html": {
    "href": "api/Innovt.AspNetCore.Application.Tests.Startup.html",
    "title": "Class Startup | Innovt Platform",
    "keywords": "Class Startup Namespace Innovt.AspNetCore.Application.Tests Assembly Innovt.AspNetCore.Application.Tests.dll public class Startup : ApiStartupBase Inheritance object ApiStartupBase Startup Inherited Members ApiStartupBase.AppName ApiStartupBase.DefaultHealthPath ApiStartupBase.Documentation ApiStartupBase.Localization ApiStartupBase.SetDefaultJsonOptions ApiStartupBase.Configuration ApiStartupBase.Environment ApiStartupBase.IsDevelopmentEnvironment() ApiStartupBase.ConfigureHealthChecks(IServiceCollection) ApiStartupBase.AddTracing(IServiceCollection) ApiStartupBase.ConfigureServices(IServiceCollection) ApiStartupBase.ConfigureSwaggerUi(IApplicationBuilder, IWebHostEnvironment) ApiStartupBase.Configure(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory) ApiStartupBase.ConfigureApiBehavior() ApiStartupBase.ConfigureCultures(IApplicationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Startup(IConfiguration, IWebHostEnvironment) public Startup(IConfiguration configuration, IWebHostEnvironment env) Parameters configuration IConfiguration env IWebHostEnvironment Methods AddDefaultServices(IServiceCollection) Adds default services to the service collection. protected override void AddDefaultServices(IServiceCollection services) Parameters services IServiceCollection The service collection to add default services to. AddSwagger(IServiceCollection) Adds Swagger generation to the specified services. protected override void AddSwagger(IServiceCollection services) Parameters services IServiceCollection The service collection to add Swagger to. ConfigureApp(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory) Configures the application. public override void ConfigureApp(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory) Parameters app IApplicationBuilder The application builder. env IWebHostEnvironment The hosting environment. loggerFactory ILoggerFactory The logger factory. ConfigureIoC(IServiceCollection) Configures the IoC container for the application. protected override void ConfigureIoC(IServiceCollection services) Parameters services IServiceCollection The service collection to configure for IoC. ConfigureOpenTelemetry(TracerProviderBuilder) Configures OpenTelemetry for tracing. protected override void ConfigureOpenTelemetry(TracerProviderBuilder builder) Parameters builder TracerProviderBuilder The TracerProviderBuilder for configuring tracing."
  },
  "api/Innovt.AspNetCore.Application.Tests.ViewModels.AddUserViewModel.html": {
    "href": "api/Innovt.AspNetCore.Application.Tests.ViewModels.AddUserViewModel.html",
    "title": "Class AddUserViewModel | Innovt Platform",
    "keywords": "Class AddUserViewModel Namespace Innovt.AspNetCore.Application.Tests.ViewModels Assembly Innovt.AspNetCore.Application.Tests.dll public class AddUserViewModel Inheritance object AddUserViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ExternalId [JsonIgnore] public string? ExternalId { get; set; } Property Value string FirstName public string? FirstName { get; set; } Property Value string UserId [JsonIgnore] public string? UserId { get; set; } Property Value string"
  },
  "api/Innovt.AspNetCore.Application.Tests.ViewModels.html": {
    "href": "api/Innovt.AspNetCore.Application.Tests.ViewModels.html",
    "title": "Namespace Innovt.AspNetCore.Application.Tests.ViewModels | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Application.Tests.ViewModels Classes AddUserViewModel"
  },
  "api/Innovt.AspNetCore.Application.Tests.html": {
    "href": "api/Innovt.AspNetCore.Application.Tests.html",
    "title": "Namespace Innovt.AspNetCore.Application.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Application.Tests Classes Program Startup"
  },
  "api/Innovt.AspNetCore.Constants.html": {
    "href": "api/Innovt.AspNetCore.Constants.html",
    "title": "Class Constants | Innovt Platform",
    "keywords": "Class Constants Namespace Innovt.AspNetCore Assembly Innovt.AspNetCore.dll Class containing constants used in the application. public static class Constants Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Innovt.AspNetCore.Controllers.BaseApiController.html": {
    "href": "api/Innovt.AspNetCore.Controllers.BaseApiController.html",
    "title": "Class BaseApiController | Innovt Platform",
    "keywords": "Class BaseApiController Namespace Innovt.AspNetCore.Controllers Assembly Innovt.AspNetCore.dll Abstract base class for API controllers. [ApiController] public abstract class BaseApiController : ControllerBase Inheritance object ControllerBase BaseApiController Derived SampleController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BaseApiController(ILogger) Initializes a new instance of the BaseApiController class with the specified logger. protected BaseApiController(ILogger logger) Parameters logger ILogger The logger. Properties Logger Gets the logger. protected ILogger Logger { get; } Property Value ILogger"
  },
  "api/Innovt.AspNetCore.Controllers.html": {
    "href": "api/Innovt.AspNetCore.Controllers.html",
    "title": "Namespace Innovt.AspNetCore.Controllers | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Controllers Classes BaseApiController Abstract base class for API controllers."
  },
  "api/Innovt.AspNetCore.Extensions.MvcExtensions.html": {
    "href": "api/Innovt.AspNetCore.Extensions.MvcExtensions.html",
    "title": "Class MvcExtensions | Innovt Platform",
    "keywords": "Class MvcExtensions Namespace Innovt.AspNetCore.Extensions Assembly Innovt.AspNetCore.dll Extension methods for configuring MVC-related functionality. public static class MvcExtensions Inheritance object MvcExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ActiveAndInactiveList() Creates a select list containing \"Ativo\" and \"Inativo\" items. public static SelectList ActiveAndInactiveList() Returns SelectList The select list. AddBearerAuthorization(IServiceCollection, IConfiguration, string, bool, bool, bool, bool) Adds Bearer token authentication based on the provided configuration. public static void AddBearerAuthorization(this IServiceCollection services, IConfiguration configuration, string configSection = \"BearerAuthentication\", bool validateAudience = true, bool validateIssuer = true, bool validateLifetime = true, bool validateIssuerSigningKey = true) Parameters services IServiceCollection The service collection. configuration IConfiguration The configuration. configSection string The configuration section name. validateAudience bool Whether to validate audience. validateIssuer bool Whether to validate issuer. validateLifetime bool Whether to validate lifetime. validateIssuerSigningKey bool Whether to validate issuer signing key. AddBearerAuthorization(IServiceCollection, string, string, bool, bool, bool, bool, string[]?) Adds Bearer token authentication. public static void AddBearerAuthorization(this IServiceCollection services, string audienceId, string authority, bool validateAudience = true, bool validateIssuer = true, bool validateLifetime = true, bool validateIssuerSigningKey = true, string[]? validAudiences = null) Parameters services IServiceCollection The service collection. audienceId string The audience ID. authority string The authority. validateAudience bool Whether to validate audience. validateIssuer bool Whether to validate issuer. validateLifetime bool Whether to validate lifetime. validateIssuerSigningKey bool Whether to validate issuer signing key. validAudiences string[] The valid token audiences if you want to validate it. GetClaim(ClaimsPrincipal, string) Gets the value of a claim from the user's claims principal. public static string GetClaim(this ClaimsPrincipal user, string type = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\") Parameters user ClaimsPrincipal The claims principal. type string The claim type (default is ClaimTypes.Email). Returns string The claim value or an empty string if not found. Get<T>(ISession, string) Gets an object from the session and deserializes it from JSON. public static T Get<T>(this ISession session, string key) Parameters session ISession The session object. key string The key the object was stored under. Returns T The deserialized object. Type Parameters T The type of the object to be retrieved. HasFilter(ActionDescriptor, Type) Checks if the specified action descriptor has a filter of the given type. public static bool HasFilter(this ActionDescriptor action, Type filter) Parameters action ActionDescriptor The action descriptor. filter Type The type of filter to check for. Returns bool True if the action has the filter, otherwise false. IsLocal(HttpContext) Check if the request is local (Code from Web) public static bool IsLocal(this HttpContext context) Parameters context HttpContext The current context Returns bool Pager<T>(IHtmlHelper, PaginationBuilder<T>) Generates an HTML pager for pagination. public static IHtmlContent Pager<T>(this IHtmlHelper helper, PaginationBuilder<T> builder) where T : class Parameters helper IHtmlHelper The HTML helper. builder PaginationBuilder<T> The pagination builder. Returns IHtmlContent The HTML pager content. Type Parameters T The type of items being paginated. SetHeaderApplicationContext(IApplicationBuilder, string) Sets the application context header in the request headers. public static IApplicationBuilder SetHeaderApplicationContext(this IApplicationBuilder app, string headerContext) Parameters app IApplicationBuilder The application builder. headerContext string The header context value. Returns IApplicationBuilder The updated application builder. Set<T>(ISession, string, T) Sets an object in the session after serializing it to JSON. public static void Set<T>(this ISession session, string key, T value) Parameters session ISession The session object. key string The key to store the object under. value T The object to be stored. Type Parameters T The type of the object to be stored. UseApplicationScope(IApplicationBuilder, string) Adds the application scope to the request headers. public static IApplicationBuilder UseApplicationScope(this IApplicationBuilder app, string scope) Parameters app IApplicationBuilder The application builder. scope string The application scope. Returns IApplicationBuilder The updated application builder. UseRequestLocalization(IApplicationBuilder, IList<CultureInfo>) Default Cultures are en, en-US, pt-BR public static void UseRequestLocalization(this IApplicationBuilder app, IList<CultureInfo> supportedCultures = null) Parameters app IApplicationBuilder supportedCultures IList<CultureInfo> YesAndNoList() Creates a select list containing \"Sim\" and \"Não\" items. public static SelectList YesAndNoList() Returns SelectList The select list."
  },
  "api/Innovt.AspNetCore.Extensions.SwaggerExtensions.html": {
    "href": "api/Innovt.AspNetCore.Extensions.SwaggerExtensions.html",
    "title": "Class SwaggerExtensions | Innovt Platform",
    "keywords": "Class SwaggerExtensions Namespace Innovt.AspNetCore.Extensions Assembly Innovt.AspNetCore.dll Extension methods for configuring Swagger authorization schemes. public static class SwaggerExtensions Inheritance object SwaggerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConfigureBasicAuthorization(IServiceCollection, Action<SwaggerGenOptions>?) Configures Basic authentication for Swagger. public static void ConfigureBasicAuthorization(this IServiceCollection services, Action<SwaggerGenOptions>? customOptions = null) Parameters services IServiceCollection The IServiceCollection instance. customOptions Action<SwaggerGenOptions> Custom options for Swagger configuration. ConfigureBearerAuthorization(IServiceCollection, Action<SwaggerGenOptions>?) Configures Bearer token authorization for Swagger. public static void ConfigureBearerAuthorization(this IServiceCollection services, Action<SwaggerGenOptions>? customOptions = null) Parameters services IServiceCollection The IServiceCollection instance. customOptions Action<SwaggerGenOptions> Custom options for Swagger configuration."
  },
  "api/Innovt.AspNetCore.Extensions.html": {
    "href": "api/Innovt.AspNetCore.Extensions.html",
    "title": "Namespace Innovt.AspNetCore.Extensions | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Extensions Classes MvcExtensions Extension methods for configuring MVC-related functionality. SwaggerExtensions Extension methods for configuring Swagger authorization schemes."
  },
  "api/Innovt.AspNetCore.Filters.ApiExceptionFilter.html": {
    "href": "api/Innovt.AspNetCore.Filters.ApiExceptionFilter.html",
    "title": "Class ApiExceptionFilter | Innovt Platform",
    "keywords": "Class ApiExceptionFilter Namespace Innovt.AspNetCore.Filters Assembly Innovt.AspNetCore.dll An exception filter attribute for handling exceptions globally and providing standardized error responses. [AttributeUsage(AttributeTargets.All)] public sealed class ApiExceptionFilter : ExceptionFilterAttribute, IAsyncExceptionFilter, IExceptionFilter, IOrderedFilter, IFilterMetadata Inheritance object Attribute ExceptionFilterAttribute ApiExceptionFilter Implements IAsyncExceptionFilter IExceptionFilter IOrderedFilter IFilterMetadata Inherited Members ExceptionFilterAttribute.OnExceptionAsync(ExceptionContext) ExceptionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ApiExceptionFilter() Default Constructor public ApiExceptionFilter() ApiExceptionFilter(ILogger) Initializes a new instance of the ApiExceptionFilter class with a logger. public ApiExceptionFilter(ILogger logger) Parameters logger ILogger The logger to use for logging exceptions. ApiExceptionFilter(ILogger, IStringLocalizer<IExceptionResource>) Initializes a new instance of the ApiExceptionFilter class with a logger and a string localizer for exception messages. public ApiExceptionFilter(ILogger logger, IStringLocalizer<IExceptionResource> stringLocalizer) Parameters logger ILogger The logger to use for logging exceptions. stringLocalizer IStringLocalizer<IExceptionResource> The string localizer for localizing exception messages. Properties Logger Gets or sets the logger. public ILogger? Logger { get; } Property Value ILogger StringLocalizer Gets the string localizer for localizing exception messages. public IStringLocalizer<IExceptionResource> StringLocalizer { get; } Property Value IStringLocalizer<IExceptionResource> Methods OnException(ExceptionContext) Called after an action has thrown an Exception. public override void OnException(ExceptionContext context) Parameters context ExceptionContext The ExceptionContext."
  },
  "api/Innovt.AspNetCore.Filters.CaptchaValidatorFilterAttribute.html": {
    "href": "api/Innovt.AspNetCore.Filters.CaptchaValidatorFilterAttribute.html",
    "title": "Class CaptchaValidatorFilterAttribute | Innovt Platform",
    "keywords": "Class CaptchaValidatorFilterAttribute Namespace Innovt.AspNetCore.Filters Assembly Innovt.AspNetCore.dll Code by Rafael Cruzeiro: https://github.com/rcruzeiro/Core.Framework/tree/master/Core.Framework.reCAPTCHA public sealed class CaptchaValidatorFilterAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Inheritance object Attribute ActionFilterAttribute CaptchaValidatorFilterAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuting(ActionExecutingContext) ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CaptchaValidatorFilterAttribute() Initializes a new instance of the CaptchaValidatorFilterAttribute class. public CaptchaValidatorFilterAttribute() Properties AntiForgery Gets or sets the anti-forgery token. public string? AntiForgery { get; } Property Value string DefaultToken Gets or sets the default reCAPTCHA token to accept without validation. public string DefaultToken { get; set; } Property Value string HostName Gets or sets the hostname. public string? HostName { get; } Property Value string SecretKey Gets or sets the secret key for reCAPTCHA validation. public string? SecretKey { get; } Property Value string Methods OnActionExecutionAsync(ActionExecutingContext?, ActionExecutionDelegate) Overrides the OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) method to validate the reCAPTCHA token. public override Task OnActionExecutionAsync(ActionExecutingContext? context, ActionExecutionDelegate next) Parameters context ActionExecutingContext The action executing context. next ActionExecutionDelegate The action execution delegate. Returns Task A Task representing the asynchronous operation."
  },
  "api/Innovt.AspNetCore.Filters.CustomExceptionFilterAttribute.html": {
    "href": "api/Innovt.AspNetCore.Filters.CustomExceptionFilterAttribute.html",
    "title": "Class CustomExceptionFilterAttribute | Innovt Platform",
    "keywords": "Class CustomExceptionFilterAttribute Namespace Innovt.AspNetCore.Filters Assembly Innovt.AspNetCore.dll An exception filter that handles exceptions of type BusinessException. public sealed class CustomExceptionFilterAttribute : ExceptionFilterAttribute, IAsyncExceptionFilter, IExceptionFilter, IOrderedFilter, IFilterMetadata Inheritance object Attribute ExceptionFilterAttribute CustomExceptionFilterAttribute Implements IAsyncExceptionFilter IExceptionFilter IOrderedFilter IFilterMetadata Inherited Members ExceptionFilterAttribute.OnExceptionAsync(ExceptionContext) ExceptionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods OnException(ExceptionContext) Overrides the OnException(ExceptionContext) method to handle BusinessException . public override void OnException(ExceptionContext context) Parameters context ExceptionContext The exception context."
  },
  "api/Innovt.AspNetCore.Filters.InjectClaimParameterFilterAttribute.html": {
    "href": "api/Innovt.AspNetCore.Filters.InjectClaimParameterFilterAttribute.html",
    "title": "Class InjectClaimParameterFilterAttribute | Innovt Platform",
    "keywords": "Class InjectClaimParameterFilterAttribute Namespace Innovt.AspNetCore.Filters Assembly Innovt.AspNetCore.dll This Filter Will inject the username claim in the action Parameters [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public sealed class InjectClaimParameterFilterAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Inheritance object Attribute ActionFilterAttribute InjectClaimParameterFilterAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors InjectClaimParameterFilterAttribute() Using defaults: ExternalId and \"filter\",\"command\" public InjectClaimParameterFilterAttribute() InjectClaimParameterFilterAttribute(string, string, params string[]) Initializes a new instance of the InjectClaimParameterFilterAttribute class. public InjectClaimParameterFilterAttribute(string defaultAuthorizationProperty, string claimTypeCheck, params string[] actionParameters) Parameters defaultAuthorizationProperty string The default authorization property to inject the username. claimTypeCheck string The claim type that will be used to get the value. actionParameters string[] The action parameters to inject the username. InjectClaimParameterFilterAttribute(string, params string[]) Initializes a new instance of the InjectClaimParameterFilterAttribute class. public InjectClaimParameterFilterAttribute(string defaultAuthorizationProperty, params string[] actionParameters) Parameters defaultAuthorizationProperty string The default authorization property to inject the username. actionParameters string[] The action parameters to inject the username. Properties ActionParameters Gets the action parameters to inject the username. public string[] ActionParameters { get; } Property Value string[] ClaimTypeCheck Get the default claim type to check. public string ClaimTypeCheck { get; } Property Value string DefaultAuthorizationProperty Gets the default authorization property for injecting the username. public string DefaultAuthorizationProperty { get; } Property Value string Methods OnActionExecuting(ActionExecutingContext) Called before the action executes, after model binding is complete. public override void OnActionExecuting(ActionExecutingContext context) Parameters context ActionExecutingContext The ActionExecutingContext. OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Called asynchronously before the action, after model binding is complete. public override Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) Parameters context ActionExecutingContext The ActionExecutingContext. next ActionExecutionDelegate The ActionExecutionDelegate. Invoked to execute the next action filter or the action itself. Returns Task A Task that on completion indicates the filter has executed."
  },
  "api/Innovt.AspNetCore.Filters.Swagger.AddCustomHeaderParameter.html": {
    "href": "api/Innovt.AspNetCore.Filters.Swagger.AddCustomHeaderParameter.html",
    "title": "Class AddCustomHeaderParameter | Innovt Platform",
    "keywords": "Class AddCustomHeaderParameter Namespace Innovt.AspNetCore.Filters.Swagger Assembly Innovt.AspNetCore.dll You can use this class to add custom header to swagger. public class AddCustomHeaderParameter : IOperationFilter Inheritance object AddCustomHeaderParameter Implements IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors AddCustomHeaderParameter(string, string?, bool, OpenApiSchema) Initializes a new instance of the AddCustomHeaderParameter class using a specified schema. public AddCustomHeaderParameter(string name, string? description, bool required, OpenApiSchema apiSchema) Parameters name string The name of the custom header parameter. description string The description of the custom header parameter. required bool Indicates whether the custom header parameter is required. apiSchema OpenApiSchema The schema for the custom header parameter. AddCustomHeaderParameter(string, string?, bool, string, string) Initializes a new instance of the AddCustomHeaderParameter class. public AddCustomHeaderParameter(string name, string? description, bool required, string schemaType = \"string\", string schemaFormat = \"uuid\") Parameters name string The name of the custom header parameter. description string The description of the custom header parameter. required bool Indicates whether the custom header parameter is required. schemaType string The type of the custom header parameter schema (default is \"string\"). schemaFormat string The format of the custom header parameter schema (default is \"uuid\"). Methods Apply(OpenApiOperation, OperationFilterContext) public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters operation OpenApiOperation context OperationFilterContext"
  },
  "api/Innovt.AspNetCore.Filters.Swagger.html": {
    "href": "api/Innovt.AspNetCore.Filters.Swagger.html",
    "title": "Namespace Innovt.AspNetCore.Filters.Swagger | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Filters.Swagger Classes AddCustomHeaderParameter You can use this class to add custom header to swagger."
  },
  "api/Innovt.AspNetCore.Filters.SwaggerExcludeFilter.html": {
    "href": "api/Innovt.AspNetCore.Filters.SwaggerExcludeFilter.html",
    "title": "Class SwaggerExcludeFilter | Innovt Platform",
    "keywords": "Class SwaggerExcludeFilter Namespace Innovt.AspNetCore.Filters Assembly Innovt.AspNetCore.dll A filter used to exclude specified properties or parameters from Swagger documentation. public class SwaggerExcludeFilter : ISchemaFilter, IOperationFilter Inheritance object SwaggerExcludeFilter Implements ISchemaFilter IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SwaggerExcludeFilter() Initializes a new instance of the SwaggerExcludeFilter class. public SwaggerExcludeFilter() Methods Apply(OpenApiOperation, OperationFilterContext) public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters operation OpenApiOperation context OperationFilterContext Apply(OpenApiSchema, SchemaFilterContext) public void Apply(OpenApiSchema schema, SchemaFilterContext context) Parameters schema OpenApiSchema context SchemaFilterContext"
  },
  "api/Innovt.AspNetCore.Filters.html": {
    "href": "api/Innovt.AspNetCore.Filters.html",
    "title": "Namespace Innovt.AspNetCore.Filters | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Filters Classes ApiExceptionFilter An exception filter attribute for handling exceptions globally and providing standardized error responses. CaptchaValidatorFilterAttribute Code by Rafael Cruzeiro: https://github.com/rcruzeiro/Core.Framework/tree/master/Core.Framework.reCAPTCHA CustomExceptionFilterAttribute An exception filter that handles exceptions of type BusinessException. InjectClaimParameterFilterAttribute This Filter Will inject the username claim in the action Parameters SwaggerExcludeFilter A filter used to exclude specified properties or parameters from Swagger documentation."
  },
  "api/Innovt.AspNetCore.Handlers.BasicAuthenticationHandler.html": {
    "href": "api/Innovt.AspNetCore.Handlers.BasicAuthenticationHandler.html",
    "title": "Class BasicAuthenticationHandler | Innovt Platform",
    "keywords": "Class BasicAuthenticationHandler Namespace Innovt.AspNetCore.Handlers Assembly Innovt.AspNetCore.dll Custom authentication handler for handling basic authentication in ASP.NET Core. public class BasicAuthenticationHandler : AuthenticationHandler<AuthenticationSchemeOptions>, IAuthenticationHandler Inheritance object AuthenticationHandler<AuthenticationSchemeOptions> BasicAuthenticationHandler Implements IAuthenticationHandler Inherited Members AuthenticationHandler<AuthenticationSchemeOptions>.InitializeAsync(AuthenticationScheme, HttpContext) AuthenticationHandler<AuthenticationSchemeOptions>.InitializeEventsAsync() AuthenticationHandler<AuthenticationSchemeOptions>.CreateEventsAsync() AuthenticationHandler<AuthenticationSchemeOptions>.InitializeHandlerAsync() AuthenticationHandler<AuthenticationSchemeOptions>.BuildRedirectUri(string) AuthenticationHandler<AuthenticationSchemeOptions>.ResolveTarget(string) AuthenticationHandler<AuthenticationSchemeOptions>.AuthenticateAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleAuthenticateOnceAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleAuthenticateOnceSafeAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleForbiddenAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.HandleChallengeAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.ChallengeAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.ForbidAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.Scheme AuthenticationHandler<AuthenticationSchemeOptions>.Options AuthenticationHandler<AuthenticationSchemeOptions>.Context AuthenticationHandler<AuthenticationSchemeOptions>.Request AuthenticationHandler<AuthenticationSchemeOptions>.Response AuthenticationHandler<AuthenticationSchemeOptions>.OriginalPath AuthenticationHandler<AuthenticationSchemeOptions>.OriginalPathBase AuthenticationHandler<AuthenticationSchemeOptions>.Logger AuthenticationHandler<AuthenticationSchemeOptions>.UrlEncoder AuthenticationHandler<AuthenticationSchemeOptions>.Clock AuthenticationHandler<AuthenticationSchemeOptions>.TimeProvider AuthenticationHandler<AuthenticationSchemeOptions>.OptionsMonitor AuthenticationHandler<AuthenticationSchemeOptions>.Events AuthenticationHandler<AuthenticationSchemeOptions>.ClaimsIssuer AuthenticationHandler<AuthenticationSchemeOptions>.CurrentUri object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BasicAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions>, ILoggerFactory, UrlEncoder, ISystemClock, IBasicAuthService) Initializes a new instance of the BasicAuthenticationHandler class. public BasicAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock, IBasicAuthService authService) Parameters options IOptionsMonitor<AuthenticationSchemeOptions> The options for the authentication scheme. logger ILoggerFactory The logger factory. encoder UrlEncoder The URL encoder. clock ISystemClock The system clock. authService IBasicAuthService The custom basic authentication service. Fields SchemeName The scheme name for basic authentication. public const string SchemeName = \"BasicAuthentication\" Field Value string Methods HandleAuthenticateAsync() Allows derived types to handle authentication. protected override Task<AuthenticateResult> HandleAuthenticateAsync() Returns Task<AuthenticateResult> The AuthenticateResult."
  },
  "api/Innovt.AspNetCore.Handlers.HasScopeRequirement.html": {
    "href": "api/Innovt.AspNetCore.Handlers.HasScopeRequirement.html",
    "title": "Class HasScopeRequirement | Innovt Platform",
    "keywords": "Class HasScopeRequirement Namespace Innovt.AspNetCore.Handlers Assembly Innovt.AspNetCore.dll Requirement for checking if the user has a specific scope. public class HasScopeRequirement : AuthorizationHandler<HasScopeRequirement>, IAuthorizationHandler, IAuthorizationRequirement Inheritance object AuthorizationHandler<HasScopeRequirement> HasScopeRequirement Implements IAuthorizationHandler IAuthorizationRequirement Inherited Members AuthorizationHandler<HasScopeRequirement>.HandleAsync(AuthorizationHandlerContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors HasScopeRequirement() Constructor for HasScopeRequirement with default values. public HasScopeRequirement() HasScopeRequirement(string, string) Constructor public HasScopeRequirement(string scope, string issuer) Parameters scope string issuer string Methods HandleRequirementAsync(AuthorizationHandlerContext, HasScopeRequirement) HandleRequirementAsync protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, HasScopeRequirement requirement) Parameters context AuthorizationHandlerContext AuthorizationHandlerContext requirement HasScopeRequirement HasScopeRequirement Returns Task"
  },
  "api/Innovt.AspNetCore.Handlers.RolesAuthorizationHandler.html": {
    "href": "api/Innovt.AspNetCore.Handlers.RolesAuthorizationHandler.html",
    "title": "Class RolesAuthorizationHandler | Innovt Platform",
    "keywords": "Class RolesAuthorizationHandler Namespace Innovt.AspNetCore.Handlers Assembly Innovt.AspNetCore.dll Authorization handler for role-based authorization. public class RolesAuthorizationHandler : AuthorizationHandler<RolesAuthorizationRequirement>, IAuthorizationHandler Inheritance object AuthorizationHandler<RolesAuthorizationRequirement> RolesAuthorizationHandler Implements IAuthorizationHandler Inherited Members AuthorizationHandler<RolesAuthorizationRequirement>.HandleAsync(AuthorizationHandlerContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors RolesAuthorizationHandler(IAuthorizationRepository, ILogger) Constructs a new instance of RolesAuthorizationHandler. public RolesAuthorizationHandler(IAuthorizationRepository securityRepository, ILogger logger) Parameters securityRepository IAuthorizationRepository The security repository for retrieving user information. logger ILogger The logger for logging messages. Methods HandleRequirementAsync(AuthorizationHandlerContext, RolesAuthorizationRequirement) Handles the authorization requirement to check user roles. protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, RolesAuthorizationRequirement requirement) Parameters context AuthorizationHandlerContext The authorization context. requirement RolesAuthorizationRequirement The authorization requirement. Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.AspNetCore.Handlers.html": {
    "href": "api/Innovt.AspNetCore.Handlers.html",
    "title": "Namespace Innovt.AspNetCore.Handlers | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Handlers Classes BasicAuthenticationHandler Custom authentication handler for handling basic authentication in ASP.NET Core. HasScopeRequirement Requirement for checking if the user has a specific scope. RolesAuthorizationHandler Authorization handler for role-based authorization."
  },
  "api/Innovt.AspNetCore.Infrastructure.InvalidModelStateResponse.html": {
    "href": "api/Innovt.AspNetCore.Infrastructure.InvalidModelStateResponse.html",
    "title": "Class InvalidModelStateResponse | Innovt Platform",
    "keywords": "Class InvalidModelStateResponse Namespace Innovt.AspNetCore.Infrastructure Assembly Innovt.AspNetCore.dll Helper class for creating a custom bad request result with validation error details. public static class InvalidModelStateResponse Inheritance object InvalidModelStateResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateCustomErrorResponse(ActionContext) Create a custom bad request result public static BadRequestObjectResult CreateCustomErrorResponse(ActionContext actionContext) Parameters actionContext ActionContext Returns BadRequestObjectResult BadRequestObjectResult object"
  },
  "api/Innovt.AspNetCore.Infrastructure.html": {
    "href": "api/Innovt.AspNetCore.Infrastructure.html",
    "title": "Namespace Innovt.AspNetCore.Infrastructure | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Infrastructure Classes InvalidModelStateResponse Helper class for creating a custom bad request result with validation error details."
  },
  "api/Innovt.AspNetCore.Model.DefaultApiDocumentation.html": {
    "href": "api/Innovt.AspNetCore.Model.DefaultApiDocumentation.html",
    "title": "Class DefaultApiDocumentation | Innovt Platform",
    "keywords": "Class DefaultApiDocumentation Namespace Innovt.AspNetCore.Model Assembly Innovt.AspNetCore.dll Represents default documentation information for an API. public class DefaultApiDocumentation Inheritance object DefaultApiDocumentation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DefaultApiDocumentation(string, string, string, string?, string?) Initializes a new instance of the DefaultApiDocumentation class with the specified API details. public DefaultApiDocumentation(string apiTitle, string apiDescription, string apiVersion, string? contactName = null, string? contactEmail = null) Parameters apiTitle string The title of the API. apiDescription string The description of the API. apiVersion string The version of the API. contactName string The name of the contact person for the API (optional). contactEmail string The email of the contact person for the API (optional). Properties ApiDescription Gets or sets the description of the API. public string ApiDescription { get; set; } Property Value string ApiTitle Gets or sets the title of the API. public string ApiTitle { get; set; } Property Value string ApiVersion Gets or sets the version of the API. public string ApiVersion { get; set; } Property Value string ContactEmail Gets or sets the email of the contact person for the API (optional). public string? ContactEmail { get; set; } Property Value string ContactName Gets or sets the name of the contact person for the API (optional). public string? ContactName { get; set; } Property Value string"
  },
  "api/Innovt.AspNetCore.Model.DefaultApiLocalization.html": {
    "href": "api/Innovt.AspNetCore.Model.DefaultApiLocalization.html",
    "title": "Class DefaultApiLocalization | Innovt Platform",
    "keywords": "Class DefaultApiLocalization Namespace Innovt.AspNetCore.Model Assembly Innovt.AspNetCore.dll Represents default localization settings for an API. public class DefaultApiLocalization Inheritance object DefaultApiLocalization Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DefaultApiLocalization() Initializes a new instance of the DefaultApiLocalization class with default culture settings. public DefaultApiLocalization() Properties DefaultLocalizeResource Gets or sets the type of the default localization resource. public Type? DefaultLocalizeResource { get; set; } Property Value Type RequestCulture Gets or sets the request culture for the API. public CultureInfo RequestCulture { get; set; } Property Value CultureInfo SupportedCultures Gets or sets the list of supported cultures for the API. public IList<CultureInfo>? SupportedCultures { get; } Property Value IList<CultureInfo> Methods AddSupportedCulture(string) Adds a supported culture with the specified name to the list of supported cultures. protected DefaultApiLocalization AddSupportedCulture(string name) Parameters name string The name of the supported culture (e.g., \"pt-br\"). Returns DefaultApiLocalization The updated DefaultApiLocalization instance. Exceptions ArgumentNullException Thrown if the provided name is null."
  },
  "api/Innovt.AspNetCore.Model.ResponseError.html": {
    "href": "api/Innovt.AspNetCore.Model.ResponseError.html",
    "title": "Class ResponseError | Innovt Platform",
    "keywords": "Class ResponseError Namespace Innovt.AspNetCore.Model Assembly Innovt.AspNetCore.dll Represents an error response object returned by the API. public class ResponseError Inheritance object ResponseError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Code Gets or sets an error code associated with the error (optional). public string Code { get; set; } Property Value string Detail Gets or sets additional error details. public object Detail { get; set; } Property Value object Message Gets or sets a message describing the error. public string Message { get; set; } Property Value string TraceId Gets or sets a unique identifier for tracing the error. public string TraceId { get; set; } Property Value string"
  },
  "api/Innovt.AspNetCore.Model.html": {
    "href": "api/Innovt.AspNetCore.Model.html",
    "title": "Namespace Innovt.AspNetCore.Model | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Model Classes DefaultApiDocumentation Represents default documentation information for an API. DefaultApiLocalization Represents default localization settings for an API. ResponseError Represents an error response object returned by the API."
  },
  "api/Innovt.AspNetCore.Resources.IExceptionResource.html": {
    "href": "api/Innovt.AspNetCore.Resources.IExceptionResource.html",
    "title": "Interface IExceptionResource | Innovt Platform",
    "keywords": "Interface IExceptionResource Namespace Innovt.AspNetCore.Resources Assembly Innovt.AspNetCore.dll Marker interface for identifying exception resources. public interface IExceptionResource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Resources.html": {
    "href": "api/Innovt.AspNetCore.Resources.html",
    "title": "Namespace Innovt.AspNetCore.Resources | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Resources Interfaces IExceptionResource Marker interface for identifying exception resources."
  },
  "api/Innovt.AspNetCore.Tests.RolesAuthorizationHandlerTests.html": {
    "href": "api/Innovt.AspNetCore.Tests.RolesAuthorizationHandlerTests.html",
    "title": "Class RolesAuthorizationHandlerTests | Innovt Platform",
    "keywords": "Class RolesAuthorizationHandlerTests Namespace Innovt.AspNetCore.Tests Assembly Innovt.AspNetCore.Tests.dll [TestFixture] public class RolesAuthorizationHandlerTests Inheritance object RolesAuthorizationHandlerTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods ConstructorShould_ThrowException_If_Parameters_Is_NUll() [Test] public void ConstructorShould_ThrowException_If_Parameters_Is_NUll() HandleAsync_Fail_If_User_Does_Not_Exist() [Test] public Task HandleAsync_Fail_If_User_Does_Not_Exist() Returns Task HandleAsync_Fail_If_User_HasNoId() [Test] public Task HandleAsync_Fail_If_User_HasNoId() Returns Task HandleAsync_Fail_If_User_HasNoRoles() [Test] public Task HandleAsync_Fail_If_User_HasNoRoles() Returns Task HandleAsync_Fail_If_User_Has_NoMatting_Role(string, bool) [Test] [TestCase(\"Admin\", true)] [TestCase(\"User\", false)] public Task HandleAsync_Fail_If_User_Has_NoMatting_Role(string role, bool success) Parameters role string success bool Returns Task HandleAsync_Fail_If_User_Has_NoMatting_Scope() [Test] public Task HandleAsync_Fail_If_User_Has_NoMatting_Scope() Returns Task HandleAsync_Fail_If_User_Is_Not_Authenticated() [Test] public Task HandleAsync_Fail_If_User_Is_Not_Authenticated() Returns Task HandleAsync_Succeed_If_User_Has_Scope_And_Role() [Test] public Task HandleAsync_Succeed_If_User_Has_Scope_And_Role() Returns Task HandleAsync_When_User_Has_Scope_And_Role_And_ApplicationCode(string, string, bool) [Test] [TestCase(\"Buyer\", \"123456\", true)] [TestCase(\"User\", \"123456\", false)] public Task HandleAsync_When_User_Has_Scope_And_Role_And_ApplicationCode(string scope, string appCode, bool success) Parameters scope string appCode string success bool Returns Task HandleAsync_When_User_Has_WildCard_Scope(string, string, bool) [Test] [TestCase(\"*\", \"123456\", true)] [TestCase(\"*::User\", \"123456\", true)] [TestCase(\"User\", \"123456\", false)] public Task HandleAsync_When_User_Has_WildCard_Scope(string scope, string appCode, bool success) Parameters scope string appCode string success bool Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown()"
  },
  "api/Innovt.AspNetCore.Tests.html": {
    "href": "api/Innovt.AspNetCore.Tests.html",
    "title": "Namespace Innovt.AspNetCore.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Tests Classes RolesAuthorizationHandlerTests"
  },
  "api/Innovt.AspNetCore.Utility.ControllerUtil.html": {
    "href": "api/Innovt.AspNetCore.Utility.ControllerUtil.html",
    "title": "Class ControllerUtil | Innovt Platform",
    "keywords": "Class ControllerUtil Namespace Innovt.AspNetCore.Utility Assembly Innovt.AspNetCore.dll Utility class for reading and processing MVC controllers and actions. public static class ControllerUtil Inheritance object ControllerUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReadControllers(IActionDescriptorCollectionProvider) Reads and retrieves information about MVC controllers and their actions. public static IList<MvcControllerViewModel> ReadControllers(IActionDescriptorCollectionProvider actionDescriptorProvider) Parameters actionDescriptorProvider IActionDescriptorCollectionProvider The provider for action descriptors. Returns IList<MvcControllerViewModel> A list of MVC controller view models with associated actions. Exceptions ArgumentNullException Thrown if the actionDescriptorProvider is null."
  },
  "api/Innovt.AspNetCore.Utility.Pagination.PaginationBuilder-1.html": {
    "href": "api/Innovt.AspNetCore.Utility.Pagination.PaginationBuilder-1.html",
    "title": "Class PaginationBuilder<T> | Innovt Platform",
    "keywords": "Class PaginationBuilder<T> Namespace Innovt.AspNetCore.Utility.Pagination Assembly Innovt.AspNetCore.dll Builder class for generating pagination HTML elements. public class PaginationBuilder<T> where T : class Type Parameters T Type of items in the collection. Inheritance object PaginationBuilder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PaginationBuilder(PagedCollection<T>, string) Initializes a new instance of the PaginationBuilder class. public PaginationBuilder(PagedCollection<T> collection, string formId) Parameters collection PagedCollection<T> The paged collection of items. formId string The ID of the HTML form associated with the pagination. Properties Collection Gets or sets the paged collection of items. public PagedCollection<T> Collection { get; set; } Property Value PagedCollection<T> Methods BuildFooter() Builds the footer HTML for pagination. public virtual string BuildFooter() Returns string The HTML for the pagination footer. BuildHeader() public virtual string BuildHeader() Returns string BuildItem(int, bool) Builds the HTML for a pagination item. public virtual string BuildItem(int page, bool isCurrent) Parameters page int The page number associated with the item. isCurrent bool Indicates whether the item represents the current page. Returns string The HTML for the pagination item. BuildNext(string) Builds the HTML for the \"Next\" pagination button. public virtual string BuildNext(string nextText = \"Próximo\") Parameters nextText string The text to display for the \"Next\" button (default is \"Próximo\"). Returns string The HTML for the \"Next\" button. BuildPagerScript() Builds the pager script HTML for pagination functionality. public virtual string BuildPagerScript() Returns string The HTML for the pagination script. BuildPrevious(string) Builds the HTML for the \"Previous\" pagination button. public virtual string BuildPrevious(string previousText = \"Anterior\") Parameters previousText string The text to display for the \"Previous\" button (default is \"Anterior\"). Returns string The HTML for the \"Previous\" button."
  },
  "api/Innovt.AspNetCore.Utility.Pagination.html": {
    "href": "api/Innovt.AspNetCore.Utility.Pagination.html",
    "title": "Namespace Innovt.AspNetCore.Utility.Pagination | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Utility.Pagination Classes PaginationBuilder<T> Builder class for generating pagination HTML elements."
  },
  "api/Innovt.AspNetCore.Utility.html": {
    "href": "api/Innovt.AspNetCore.Utility.html",
    "title": "Namespace Innovt.AspNetCore.Utility | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Utility Classes ControllerUtil Utility class for reading and processing MVC controllers and actions."
  },
  "api/Innovt.AspNetCore.ViewModel.CreateOrEditViewModel.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.CreateOrEditViewModel.html",
    "title": "Class CreateOrEditViewModel | Innovt Platform",
    "keywords": "Class CreateOrEditViewModel Namespace Innovt.AspNetCore.ViewModel Assembly Innovt.AspNetCore.dll Base view model for creating or editing entities. public abstract class CreateOrEditViewModel : ViewModelBase Inheritance object ViewModelBase CreateOrEditViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CreateOrEditViewModel() Initializes a new instance of the CreateOrEditViewModel class. Sets the default action to \"Create\". protected CreateOrEditViewModel() Fields CreateAction Constant representing the \"Create\" action. public const string CreateAction = \"Create\" Field Value string EditAction Constant representing the \"Edit\" action. public const string EditAction = \"Edit\" Field Value string Properties Action Gets or sets the action to be performed (Create or Edit). public string Action { get; set; } Property Value string Id Gets or sets the identifier of the entity being created or edited. public int Id { get; set; } Property Value int IsCreate Gets a value indicating whether the action is \"Create\". public bool IsCreate { get; } Property Value bool IsEdit Gets a value indicating whether the action is \"Edit\". public bool IsEdit { get; } Property Value bool"
  },
  "api/Innovt.AspNetCore.ViewModel.ListViewModel-1.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.ListViewModel-1.html",
    "title": "Class ListViewModel<T> | Innovt Platform",
    "keywords": "Class ListViewModel<T> Namespace Innovt.AspNetCore.ViewModel Assembly Innovt.AspNetCore.dll Base view model for displaying a paginated list of entities. public abstract class ListViewModel<T> : ViewModelBase where T : class Type Parameters T Type of entities being displayed. Inheritance object ViewModelBase ListViewModel<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ListViewModel() Initializes a new instance of the ListViewModel class with default values. protected ListViewModel() ListViewModel(int, int) Initializes a new instance of the ListViewModel class with specified pagination parameters. protected ListViewModel(int page, int pageSize) Parameters page int The current page number. pageSize int The number of items per page. Properties Page Gets or sets the current page number. public int Page { get; set; } Property Value int PageSize Gets or sets the number of items per page. public int PageSize { get; set; } Property Value int Term Gets or sets a search term for filtering entities. public string Term { get; set; } Property Value string TotalRecords Gets or sets the total number of records/entities. public int TotalRecords { get; set; } Property Value int"
  },
  "api/Innovt.AspNetCore.ViewModel.MvcActionViewModel.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.MvcActionViewModel.html",
    "title": "Class MvcActionViewModel | Innovt Platform",
    "keywords": "Class MvcActionViewModel Namespace Innovt.AspNetCore.ViewModel Assembly Innovt.AspNetCore.dll View model representing an MVC action. public class MvcActionViewModel : ViewModelBase Inheritance object ViewModelBase MvcActionViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Controller Gets or sets the name of the associated controller. public string Controller { get; set; } Property Value string DisplayName Gets or sets the display name of the MVC action. public string DisplayName { get; set; } Property Value string Method Gets or sets the HTTP method used by the MVC action. public string Method { get; set; } Property Value string Name Gets or sets the name of the MVC action. public string Name { get; set; } Property Value string"
  },
  "api/Innovt.AspNetCore.ViewModel.MvcControllerViewModel.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.MvcControllerViewModel.html",
    "title": "Class MvcControllerViewModel | Innovt Platform",
    "keywords": "Class MvcControllerViewModel Namespace Innovt.AspNetCore.ViewModel Assembly Innovt.AspNetCore.dll View model representing an MVC controller. public class MvcControllerViewModel : ViewModelBase Inheritance object ViewModelBase MvcControllerViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Area Gets or sets the area associated with the MVC controller. public string Area { get; set; } Property Value string DisplayName Gets or sets the display name of the MVC controller. public string DisplayName { get; set; } Property Value string Name Gets or sets the name of the MVC controller. public string Name { get; set; } Property Value string Methods AddActions(IList<MvcActionViewModel>) Adds a list of MVC action view models to the controller. public void AddActions(IList<MvcActionViewModel> actions) Parameters actions IList<MvcActionViewModel> The list of MVC action view models to add. Exceptions ArgumentNullException Thrown if the actions list is null."
  },
  "api/Innovt.AspNetCore.ViewModel.ViewModelBase.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.ViewModelBase.html",
    "title": "Class ViewModelBase | Innovt Platform",
    "keywords": "Class ViewModelBase Namespace Innovt.AspNetCore.ViewModel Assembly Innovt.AspNetCore.dll Base abstract class for view models, providing common functionality and properties. public abstract class ViewModelBase Inheritance object ViewModelBase Derived CreateOrEditViewModel ListViewModel<T> MvcActionViewModel MvcControllerViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.ViewModel.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.html",
    "title": "Namespace Innovt.AspNetCore.ViewModel | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.ViewModel Classes CreateOrEditViewModel Base view model for creating or editing entities. ListViewModel<T> Base view model for displaying a paginated list of entities. MvcActionViewModel View model representing an MVC action. MvcControllerViewModel View model representing an MVC controller. ViewModelBase Base abstract class for view models, providing common functionality and properties."
  },
  "api/Innovt.AspNetCore.html": {
    "href": "api/Innovt.AspNetCore.html",
    "title": "Namespace Innovt.AspNetCore | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore Classes ApiStartupBase Base class for configuring API startup settings and dependencies. Constants Class containing constants used in the application."
  },
  "api/Innovt.Cloud.AWS.AwsBaseService.html": {
    "href": "api/Innovt.Cloud.AWS.AwsBaseService.html",
    "title": "Class AwsBaseService | Innovt Platform",
    "keywords": "Class AwsBaseService Namespace Innovt.Cloud.AWS Assembly Innovt.Cloud.AWS.dll An abstract base class for AWS services with common functionality for managing AWS service configurations, retries, and circuit breakers. public abstract class AwsBaseService : IDisposable Inheritance object AwsBaseService Implements IDisposable Derived RedisCacheService CognitoIdentityProvider Repository DataProducer<T> MailNotificationHandler SmsNotificationHandler S3FileSystem QueueService<T> StepFunctionService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors AwsBaseService(ILogger, IAwsConfiguration) protected AwsBaseService(ILogger logger, IAwsConfiguration configuration) Parameters logger ILogger configuration IAwsConfiguration AwsBaseService(ILogger, IAwsConfiguration, string) Initializes a new instance of the AwsBaseService class with a logger, AWS configuration, and AWS region. protected AwsBaseService(ILogger logger, IAwsConfiguration configuration, string region) Parameters logger ILogger The logger for logging service activities. configuration IAwsConfiguration The AWS configuration for the service. region string The AWS region for the service. Fields Configuration protected readonly IAwsConfiguration Configuration Field Value IAwsConfiguration Properties CircuitBreakerAllowedExceptions Gets or sets the number of allowed exceptions before the circuit breaker opens. protected int CircuitBreakerAllowedExceptions { get; set; } Property Value int CircuitBreakerDurationOfBreak Gets or sets the duration of the circuit breaker break when it opens. protected TimeSpan CircuitBreakerDurationOfBreak { get; set; } Property Value TimeSpan Logger Gets the logger for logging service activities. protected ILogger Logger { get; } Property Value ILogger RetryCount Gets or sets the number of retry attempts for AWS service calls. public int RetryCount { get; set; } Property Value int Methods CreateCircuitBreaker<T, T1>() protected virtual AsyncCircuitBreakerPolicy CreateCircuitBreaker<T, T1>() where T : Exception where T1 : Exception Returns AsyncCircuitBreakerPolicy Type Parameters T T1 CreateDefaultRetryAsyncPolicy() Basic Retry Policy using AmazonServiceException [CLSCompliant(false)] protected virtual AsyncRetryPolicy CreateDefaultRetryAsyncPolicy() Returns AsyncRetryPolicy CreateDefaultRetryPolicy() Creates a default retry policy for handling AmazonServiceException exceptions with specific HTTP status codes(ServiceUnavailable or InternalServerError). protected virtual RetryPolicy CreateDefaultRetryPolicy() Returns RetryPolicy CreateRetryAsyncPolicy<T>() Creates an asynchronous retry policy for handling exceptions of type T. protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T>() where T : Exception Returns AsyncRetryPolicy An asynchronous retry policy. Type Parameters T The type of exception to handle. CreateRetryAsyncPolicy<T, T1>() Creates an asynchronous retry policy for handling exceptions of type T and T1. protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1>() where T : Exception where T1 : Exception Returns AsyncRetryPolicy An asynchronous retry policy. Type Parameters T The first type of exception to handle. T1 The second type of exception to handle. CreateRetryAsyncPolicy<T, T1, T2>() protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2>() where T : Exception where T1 : Exception where T2 : Exception Returns AsyncRetryPolicy Type Parameters T T1 T2 CreateRetryAsyncPolicy<T, T1, T2, T3>() protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2, T3>() where T : Exception where T1 : Exception where T2 : Exception where T3 : Exception Returns AsyncRetryPolicy Type Parameters T T1 T2 T3 CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() where T : Exception where T1 : Exception where T2 : Exception where T3 : Exception where T4 : Exception Returns AsyncRetryPolicy Type Parameters T T1 T2 T3 T4 CreateService<T>() This method will decide about Configuration or Profile AWS Services protected T CreateService<T>() where T : IAmazonService Returns T Type Parameters T Dispose() Disposes of the resources used by the service. public void Dispose() Dispose(bool) Disposes of resources used by the AwsBaseService. protected virtual void Dispose(bool disposing) Parameters disposing bool True if called from the Dispose method; false if called from the finalizer. DisposeServices() Disposes of any services used by the AwsBaseService. protected abstract void DisposeServices() ~AwsBaseService() Finalizer for AwsBaseService. protected ~AwsBaseService() GetServiceRegionEndPoint() Gets the AWS service region endpoint based on the configured region. protected RegionEndpoint GetServiceRegionEndPoint() Returns RegionEndpoint The AWS service region endpoint."
  },
  "api/Innovt.Cloud.AWS.Caching.RedisCacheService.html": {
    "href": "api/Innovt.Cloud.AWS.Caching.RedisCacheService.html",
    "title": "Class RedisCacheService | Innovt Platform",
    "keywords": "Class RedisCacheService Namespace Innovt.Cloud.AWS.Caching Assembly Innovt.Cloud.AWS.Caching.dll Represents a caching service that uses Redis as the cache provider. public class RedisCacheService : AwsBaseService, ICacheService, IDisposable Inheritance object AwsBaseService RedisCacheService Implements ICacheService IDisposable Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors RedisCacheService(ILogger, IAwsConfiguration, RedisProviderConfiguration) Initializes a new instance of the RedisCacheService class. public RedisCacheService(ILogger logger, IAwsConfiguration configuration, RedisProviderConfiguration providerConfiguration) Parameters logger ILogger The logger instance for logging. configuration IAwsConfiguration The AWS configuration. providerConfiguration RedisProviderConfiguration The configuration for the Redis cache provider. Exceptions ArgumentNullException Thrown when providerConfiguration is null. Fields RedisProviderActivitySource protected static readonly ActivitySource RedisProviderActivitySource Field Value ActivitySource Methods DisposeServices() Disposes of resources used by the RedisCacheService. protected override void DisposeServices() GetValue<T>(string) Gets a cached value of type T associated with the specified key. public T GetValue<T>(string key) Parameters key string The key associated with the cached value. Returns T The cached value if found; otherwise, the default value for T. Type Parameters T The type of the cached value. Remove(string) Removes a cached value associated with the specified key. public void Remove(string key) Parameters key string The key associated with the cached value to remove. SetValue<T>(string, T, TimeSpan) Sets a cached value of type T associated with the specified key. public void SetValue<T>(string key, T entity, TimeSpan expiration) Parameters key string The key to associate with the cached value. entity T The value to cache. expiration TimeSpan The expiration time for the cached value. Type Parameters T The type of the value to cache."
  },
  "api/Innovt.Cloud.AWS.Caching.RedisProviderConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Caching.RedisProviderConfiguration.html",
    "title": "Class RedisProviderConfiguration | Innovt Platform",
    "keywords": "Class RedisProviderConfiguration Namespace Innovt.Cloud.AWS.Caching Assembly Innovt.Cloud.AWS.Caching.dll Represents the configuration settings for the Redis cache provider. public class RedisProviderConfiguration Inheritance object RedisProviderConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ConnectTimeout Gets or sets the maximum time (in milliseconds) to wait for a connection to the Redis server. public int? ConnectTimeout { get; set; } Property Value int? PoolTimeOutInSeconds Gets or sets the maximum time (in seconds) that a client is allowed to wait to acquire a connection from the pool. public int PoolTimeOutInSeconds { get; set; } Property Value int ReadOnlyHosts Gets or sets the list of Redis hosts that support only read operations. public IEnumerable<string> ReadOnlyHosts { get; set; } Property Value IEnumerable<string> ReadWriteHosts Gets or sets the list of Redis hosts that support both read and write operations. public IEnumerable<string> ReadWriteHosts { get; set; } Property Value IEnumerable<string>"
  },
  "api/Innovt.Cloud.AWS.Caching.html": {
    "href": "api/Innovt.Cloud.AWS.Caching.html",
    "title": "Namespace Innovt.Cloud.AWS.Caching | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Caching Classes RedisCacheService Represents a caching service that uses Redis as the cache provider. RedisProviderConfiguration Represents the configuration settings for the Redis cache provider."
  },
  "api/Innovt.Cloud.AWS.Cognito.CognitoIdentityProvider.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.CognitoIdentityProvider.html",
    "title": "Class CognitoIdentityProvider | Innovt Platform",
    "keywords": "Class CognitoIdentityProvider Namespace Innovt.Cloud.AWS.Cognito Assembly Innovt.Cloud.AWS.Cognito.dll Provides functionality for user management and authentication with Amazon Cognito Identity Provider. public abstract class CognitoIdentityProvider : AwsBaseService, IDisposable, ICognitoIdentityProvider Inheritance object AwsBaseService CognitoIdentityProvider Implements IDisposable ICognitoIdentityProvider Derived BaseIdentityProvider Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CognitoIdentityProvider(ILogger, IAwsConfiguration, string, string, string, string, bool) protected CognitoIdentityProvider(ILogger logger, IAwsConfiguration configuration, string clientId, string userPoolId, string domainEndPoint, string region = null, bool allowAutoConfirmUserWithSocialLogin = false) Parameters logger ILogger configuration IAwsConfiguration clientId string userPoolId string domainEndPoint string region string allowAutoConfirmUserWithSocialLogin bool Methods ChangePassword(ChangePasswordRequest, CancellationToken) Changes the password for a user with the specified access token. public virtual Task ChangePassword(ChangePasswordRequest command, CancellationToken cancellationToken = default) Parameters command ChangePasswordRequest A ChangePasswordRequest containing the necessary information to change the password. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task Remarks This method allows you to change the password for a user by providing an access token and the new proposed password. The previous password is also required for security verification. If successful, the user's password will be updated. Exceptions ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. ConfirmForgotPassword(ConfirmForgotPasswordRequest, CancellationToken) Confirms a user's forgotten password and sets a new password for the user. public Task ConfirmForgotPassword(ConfirmForgotPasswordRequest command, CancellationToken cancellationToken = default) Parameters command ConfirmForgotPasswordRequest A ConfirmForgotPasswordRequest containing the necessary information for confirmation. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task A task representing the asynchronous confirmation process. Remarks This method is used to confirm a user's forgotten password by providing the user's username, a new password, and a confirmation code received by the user. It sets the new password for the user if the confirmation is successful. Exceptions ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. ConfirmSignUp(ConfirmSignUpRequest, CancellationToken) Confirms the sign-up of a user with the specified confirmation code. public virtual Task ConfirmSignUp(ConfirmSignUpRequest request, CancellationToken cancellationToken = default) Parameters request ConfirmSignUpRequest A ConfirmSignUpRequest containing the necessary information to confirm the sign-up. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task Remarks This method allows you to confirm the sign-up of a user with the specified confirmation code. The confirmation code is typically sent to the user's email or phone number during the registration process. After successful confirmation, the user becomes active and can log in. Exceptions ArgumentNullException Thrown when the request is null. BusinessException Thrown when the request fails validation. DeleteUser(DeleteUserAccountRequest, CancellationToken) This method will delete the user using the username and the user pool id. It's important to have the admin delete user permission. public Task<bool> DeleteUser(DeleteUserAccountRequest command, CancellationToken cancellationToken = default) Parameters command DeleteUserAccountRequest cancellationToken CancellationToken Returns Task<bool> Exceptions Exception DisposeServices() Disposes of resources when they are no longer needed. protected override void DisposeServices() ForgotPassword(ForgotPasswordRequest, CancellationToken) Sends a forgot password request for a user. public virtual Task ForgotPassword(ForgotPasswordRequest command, CancellationToken cancellationToken = default) Parameters command ForgotPasswordRequest The ForgotPasswordRequest containing user information. cancellationToken CancellationToken A cancellation token for async tasks. Returns Task GetUser<T>(GetUserRequest, CancellationToken) Retrieves user information based on the specified request and response type. public virtual Task<T> GetUser<T>(GetUserRequest request, CancellationToken cancellationToken = default) where T : IGetUserResponse Parameters request GetUserRequest A GetUserRequest containing the criteria for retrieving user information. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task<T> An instance of the specified response type containing user information. Type Parameters T The type of response implementing IGetUserResponse to return. Remarks This method allows you to retrieve user information based on the specified request, such as the user's username or other custom fields. You can specify the response type as a generic parameter, which should implement the IGetUserResponse interface to provide a structured representation of user data. The method returns an instance of the specified response type populated with user information. Exceptions ArgumentNullException Thrown when the request is null. BusinessException Thrown when the request fails validation. GetUser<T>(string, CancellationToken) Get user information based on the specified request and response type. public virtual Task<T> GetUser<T>(string accessToken, CancellationToken cancellationToken = default) where T : IGetUserResponse Parameters accessToken string A valid access token. cancellationToken CancellationToken A cancellationToken token Returns Task<T> Null or a valid user Type Parameters T A response of type IGetUserResponse Exceptions ArgumentNullException Exception LinkSocialUser(LinkSocialAccountRequest, CancellationToken) Link user and social account. This is used to avoid billing issues and other problems. public Task<bool> LinkSocialUser(LinkSocialAccountRequest command, CancellationToken cancellationToken = default) Parameters command LinkSocialAccountRequest cancellationToken CancellationToken Returns Task<bool> Exceptions Exception RefreshToken(RefreshTokenRequest, CancellationToken) Refreshes an expired access token using a refresh token, allowing the user to remain authenticated. public virtual Task<RefreshTokenResponse> RefreshToken(RefreshTokenRequest command, CancellationToken cancellationToken = default) Parameters command RefreshTokenRequest The request containing the refresh token and context information. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task<RefreshTokenResponse> A RefreshTokenResponse containing the refreshed access token and associated details. Remarks This method is used to refresh an expired access token using a refresh token, allowing the user to remain authenticated without the need for re-entering credentials. The method constructs a refresh token authentication request, including user context data, and sends it to the Amazon Cognito Identity Provider service. The response contains the refreshed access token and related information. Exceptions BusinessException Thrown when the refresh token operation is not authorized. Exception Thrown for other exceptions during the refresh token operation. ResendConfirmationCode(ResendConfirmationCodeRequest, CancellationToken) Resends the confirmation code to a user with the specified username. public virtual Task ResendConfirmationCode(ResendConfirmationCodeRequest command, CancellationToken cancellationToken = default) Parameters command ResendConfirmationCodeRequest A ResendConfirmationCodeRequest containing the necessary information to resend the confirmation code. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task Remarks This method allows you to resend the confirmation code to a user with the specified username. The confirmation code is typically used during the user registration process to verify the user's email or phone number. Exceptions ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. RespondToAuthChallenge(RespondToAuthChallengeRequest, CancellationToken) Responds to an authentication challenge with the appropriate challenge responses. public Task<AuthChallengeResponse> RespondToAuthChallenge(RespondToAuthChallengeRequest command, CancellationToken cancellationToken = default) Parameters command RespondToAuthChallengeRequest A RespondToAuthChallengeRequest containing the necessary information for the challenge response. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task<AuthChallengeResponse> An AuthChallengeResponse containing the authentication result or metadata. Remarks This method is used to respond to various authentication challenges such as custom challenges, SMS Multi-Factor Authentication (MFA), and new password requirements. It provides the appropriate challenge responses based on the challenge type and returns authentication results or metadata. Exceptions ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. CriticalException Thrown when an unsupported challenge name is encountered. SignIn(OtpSignInRequest, CancellationToken) Signs in a user with the provided request for OTP process authentication. public virtual Task<SignInResponse> SignIn(OtpSignInRequest command, CancellationToken cancellationToken = default) Parameters command OtpSignInRequest cancellationToken CancellationToken Returns Task<SignInResponse> A SignInResponse with a valid token or null SignIn(SignInRequest, CancellationToken) Signs in a user with the provided authentication information. public virtual Task<SignInResponse> SignIn(SignInRequest command, CancellationToken cancellationToken = default) Parameters command SignInRequest cancellationToken CancellationToken Returns Task<SignInResponse> SignOut(SignOutRequest, CancellationToken) Signs out the user associated with the provided access token. public Task SignOut(SignOutRequest request, CancellationToken cancellationToken = default) Parameters request SignOutRequest A SignOutRequest object containing the access token to sign out the user. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task Remarks This method allows you to sign out the user associated with the provided access token. Signing out a user invalidates the access token, preventing further access to protected resources without reauthentication. Ensure that you provide a valid access token to successfully sign out the user. Exceptions ArgumentNullException Thrown when the request is null. BusinessException Thrown when the request fails validation. SignUp(ISignUpRequest, CancellationToken) Signs up a new user with the provided registration information. public virtual Task<SignUpResponse> SignUp(ISignUpRequest command, CancellationToken cancellationToken = default) Parameters command ISignUpRequest An ISignUpRequest object containing the user's registration information. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task<SignUpResponse> A SignUpResponse indicating whether the user was successfully signed up and their UUID (User Sub). Remarks This method allows you to sign up a new user with the provided registration information, including username, password, custom attributes, and other optional properties. After successful sign-up, the user may need to confirm their registration depending on the authentication flow and configuration. Exceptions ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. SocialSignIn(SocialSignInRequest, CancellationToken) Performs social sign-in using an authorization code obtained from an external identity provider. public virtual Task<OAuth2SignInResponse> SocialSignIn(SocialSignInRequest command, CancellationToken cancellationToken) Parameters command SocialSignInRequest The request containing the authorization code and context information. cancellationToken CancellationToken A cancellation token for cancelling the operation. Returns Task<OAuth2SignInResponse> A OAuth2SignInResponse containing user information and tokens for authentication. Remarks This method is used to perform social sign-in using an authorization code obtained from an external identity provider. It constructs an OAuth2 token request, sends it to the identity provider, and handles the response to authenticate the user. The method also retrieves user information and determines if the user needs to be registered in the system. Exceptions BusinessException Thrown when there is an error in the OAuth2 response. CriticalException Thrown when the user is not found in the system. Exception Thrown for other exceptions during the social sign-in process. UpdateUserAttributes(AdminUpdateUserAttributesRequest, CancellationToken) This method allow you to update user attributes without sending a token. Internally we are calling Admin Update User Attributes. public Task UpdateUserAttributes(AdminUpdateUserAttributesRequest command, CancellationToken cancellationToken = default) Parameters command AdminUpdateUserAttributesRequest cancellationToken CancellationToken Returns Task UpdateUserAttributes(UpdateUserAttributesRequest, CancellationToken) Updates user attributes. public virtual Task UpdateUserAttributes(UpdateUserAttributesRequest command, CancellationToken cancellationToken = default) Parameters command UpdateUserAttributesRequest The UpdateUserAttributesRequest containing user attributes. cancellationToken CancellationToken A cancellation token for async tasks. Returns Task"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.CodeMismatchException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.CodeMismatchException.html",
    "title": "Class CodeMismatchException | Innovt Platform",
    "keywords": "Class CodeMismatchException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when a code mismatch error occurs. This typically happens when a code provided by the user does not match the expected code. public class CodeMismatchException : BusinessException, ISerializable Inheritance object Exception BaseException BusinessException CodeMismatchException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CodeMismatchException() Initializes a new instance of the CodeMismatchException class. public CodeMismatchException()"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.ExpiredCodeException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.ExpiredCodeException.html",
    "title": "Class ExpiredCodeException | Innovt Platform",
    "keywords": "Class ExpiredCodeException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when an expired code error occurs. This typically happens when a time-limited code or token has expired and is no longer valid. public class ExpiredCodeException : BusinessException, ISerializable Inheritance object Exception BaseException BusinessException ExpiredCodeException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ExpiredCodeException() Initializes a new instance of the ExpiredCodeException class. public ExpiredCodeException()"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.InternalException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.InternalException.html",
    "title": "Class InternalException | Innovt Platform",
    "keywords": "Class InternalException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when an internal critical error occurs. This type of exception is used for errors that are considered critical and may require special handling. public class InternalException : CriticalException, ISerializable Inheritance object Exception BaseException CriticalException InternalException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors InternalException(Exception) Initializes a new instance of the InternalException class with a reference to the inner exception that is the cause of this exception. public InternalException(Exception ex) Parameters ex Exception The inner exception that is the cause of this exception. InternalException(SerializationInfo, StreamingContext) Initializes a new instance of the InternalException class with serialized data. protected InternalException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters serializationInfo SerializationInfo The SerializationInfo that holds the serialized object data about the exception being thrown. streamingContext StreamingContext The StreamingContext that contains contextual information about the source or destination. InternalException(string) public InternalException(string message) Parameters message string InternalException(string, Exception) Initializes a new instance of the InternalException class with a specified error message and a reference to the inner exception that is the cause of this exception. public InternalException(string message, Exception ex) Parameters message string The error message that describes the exception. ex Exception The inner exception that is the cause of this exception."
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.InvalidPasswordException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.InvalidPasswordException.html",
    "title": "Class InvalidPasswordException | Innovt Platform",
    "keywords": "Class InvalidPasswordException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when an invalid password is encountered. This exception typically indicates that a password provided by a user or a system does not meet the required criteria or is incorrect. public class InvalidPasswordException : BusinessException, ISerializable Inheritance object Exception BaseException BusinessException InvalidPasswordException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors InvalidPasswordException() Initializes a new instance of the InvalidPasswordException class with a predefined error code. public InvalidPasswordException()"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.PasswordResetRequiredException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.PasswordResetRequiredException.html",
    "title": "Class PasswordResetRequiredException | Innovt Platform",
    "keywords": "Class PasswordResetRequiredException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when a password reset is required for a user or system operation. This exception typically indicates that a user's password has expired or that a password reset has been initiated. public class PasswordResetRequiredException : BusinessException, ISerializable Inheritance object Exception BaseException BusinessException PasswordResetRequiredException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PasswordResetRequiredException() Initializes a new instance of the PasswordResetRequiredException class with a predefined error code. public PasswordResetRequiredException()"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNameAlreadyExistsException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNameAlreadyExistsException.html",
    "title": "Class UserNameAlreadyExistsException | Innovt Platform",
    "keywords": "Class UserNameAlreadyExistsException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when attempting to create a user account with a username that already exists in the system. public class UserNameAlreadyExistsException : BusinessException, ISerializable Inheritance object Exception BaseException BusinessException UserNameAlreadyExistsException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors UserNameAlreadyExistsException() Initializes a new instance of the UserNameAlreadyExistsException class with a predefined error code. public UserNameAlreadyExistsException()"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotAuthorizedException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotAuthorizedException.html",
    "title": "Class UserNotAuthorizedException | Innovt Platform",
    "keywords": "Class UserNotAuthorizedException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when a user is not authorized to perform a specific action or access a resource. public class UserNotAuthorizedException : BusinessException, ISerializable Inheritance object Exception BaseException BusinessException UserNotAuthorizedException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors UserNotAuthorizedException() Initializes a new instance of the UserNotAuthorizedException class with a predefined error code. public UserNotAuthorizedException()"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotConfirmedException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotConfirmedException.html",
    "title": "Class UserNotConfirmedException | Innovt Platform",
    "keywords": "Class UserNotConfirmedException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when a user is not confirmed or validated in the application. public class UserNotConfirmedException : BusinessException, ISerializable Inheritance object Exception BaseException BusinessException UserNotConfirmedException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors UserNotConfirmedException() Initializes a new instance of the UserNotConfirmedException class with a predefined error code. public UserNotConfirmedException() UserNotConfirmedException(Exception) public UserNotConfirmedException(Exception ex) Parameters ex Exception"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotFoundException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotFoundException.html",
    "title": "Class UserNotFoundException | Innovt Platform",
    "keywords": "Class UserNotFoundException Namespace Innovt.Cloud.AWS.Cognito.Exceptions Assembly Innovt.Cloud.AWS.Cognito.dll Exception thrown when a user is not found in the application. public class UserNotFoundException : BusinessException, ISerializable Inheritance object Exception BaseException BusinessException UserNotFoundException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors UserNotFoundException() Initializes a new instance of the UserNotFoundException class with a predefined error code. public UserNotFoundException()"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.html",
    "title": "Namespace Innovt.Cloud.AWS.Cognito.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Cognito.Exceptions Classes CodeMismatchException Exception thrown when a code mismatch error occurs. This typically happens when a code provided by the user does not match the expected code. ExpiredCodeException Exception thrown when an expired code error occurs. This typically happens when a time-limited code or token has expired and is no longer valid. InternalException Exception thrown when an internal critical error occurs. This type of exception is used for errors that are considered critical and may require special handling. InvalidPasswordException Exception thrown when an invalid password is encountered. This exception typically indicates that a password provided by a user or a system does not meet the required criteria or is incorrect. PasswordResetRequiredException Exception thrown when a password reset is required for a user or system operation. This exception typically indicates that a user's password has expired or that a password reset has been initiated. UserNameAlreadyExistsException Exception thrown when attempting to create a user account with a username that already exists in the system. UserNotAuthorizedException Exception thrown when a user is not authorized to perform a specific action or access a resource. UserNotConfirmedException Exception thrown when a user is not confirmed or validated in the application. UserNotFoundException Exception thrown when a user is not found in the application."
  },
  "api/Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html",
    "title": "Interface ICognitoIdentityProvider | Innovt Platform",
    "keywords": "Interface ICognitoIdentityProvider Namespace Innovt.Cloud.AWS.Cognito Assembly Innovt.Cloud.AWS.Cognito.dll public interface ICognitoIdentityProvider Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods ChangePassword(ChangePasswordRequest, CancellationToken) Change the password for an authenticated user. Task ChangePassword(ChangePasswordRequest command, CancellationToken cancellationToken = default) Parameters command ChangePasswordRequest The request object containing the necessary information to change the user's password. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task ConfirmForgotPassword(ConfirmForgotPasswordRequest, CancellationToken) Confirm a forgot password request and set a new password for the user. Task ConfirmForgotPassword(ConfirmForgotPasswordRequest command, CancellationToken cancellationToken = default) Parameters command ConfirmForgotPasswordRequest The request object containing the confirmation details. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task ConfirmSignUp(ConfirmSignUpRequest, CancellationToken) Confirm a user's sign-up by verifying the confirmation code. Task ConfirmSignUp(ConfirmSignUpRequest request, CancellationToken cancellationToken = default) Parameters request ConfirmSignUpRequest The request object containing the user's sign-up confirmation details. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task DeleteUser(DeleteUserAccountRequest, CancellationToken) This method allow you to delete a user account from the user pool. Task<bool> DeleteUser(DeleteUserAccountRequest command, CancellationToken cancellationToken = default) Parameters command DeleteUserAccountRequest cancellationToken CancellationToken Returns Task<bool> ForgotPassword(ForgotPasswordRequest, CancellationToken) Initiate a forgot password request for a user. Task ForgotPassword(ForgotPasswordRequest command, CancellationToken cancellationToken = default) Parameters command ForgotPasswordRequest The request object containing the user's information. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task GetUser<T>(GetUserRequest, CancellationToken) Retrieve user information based on the specified request. Task<T> GetUser<T>(GetUserRequest request, CancellationToken cancellationToken = default) where T : IGetUserResponse Parameters request GetUserRequest The request object containing the criteria to retrieve user information. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<T> The response object containing user information. Type Parameters T The response object type containing user information. Must implement the IGetUserResponse interface. GetUser<T>(string, CancellationToken) Retrieve user information based on the access token. Task<T> GetUser<T>(string accessToken, CancellationToken cancellationToken = default) where T : IGetUserResponse Parameters accessToken string A valid access token. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<T> The response object containing user information. Type Parameters T The response object type containing user information. Must implement the IGetUserResponse interface. LinkSocialUser(LinkSocialAccountRequest, CancellationToken) Link existent user account with a social user account to avoid billing issues and other problems. Task<bool> LinkSocialUser(LinkSocialAccountRequest command, CancellationToken cancellationToken = default) Parameters command LinkSocialAccountRequest The request object containing the user pool and email from user. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<bool> RefreshToken(RefreshTokenRequest, CancellationToken) Refresh the user's authentication token. Task<RefreshTokenResponse> RefreshToken(RefreshTokenRequest command, CancellationToken cancellationToken = default) Parameters command RefreshTokenRequest The request object containing the refresh token. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<RefreshTokenResponse> The response object containing the refreshed authentication token. ResendConfirmationCode(ResendConfirmationCodeRequest, CancellationToken) Resend a confirmation code to the user's email or phone number. Task ResendConfirmationCode(ResendConfirmationCodeRequest command, CancellationToken cancellationToken = default) Parameters command ResendConfirmationCodeRequest The request object containing the user's information. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task RespondToAuthChallenge(RespondToAuthChallengeRequest, CancellationToken) Respond to an authentication challenge during the sign-in process. Task<AuthChallengeResponse> RespondToAuthChallenge(RespondToAuthChallengeRequest command, CancellationToken cancellationToken = default) Parameters command RespondToAuthChallengeRequest The request object containing the challenge response. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<AuthChallengeResponse> The response object containing the result of the authentication challenge. SignIn(OtpSignInRequest, CancellationToken) Authenticate a user using one-time password (OTP) credentials. Task<SignInResponse> SignIn(OtpSignInRequest command, CancellationToken cancellationToken = default) Parameters command OtpSignInRequest The request object containing the OTP credentials. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<SignInResponse> The response object containing the authentication result. SignIn(SignInRequest, CancellationToken) Authenticate a user using standard credentials (username and password). Task<SignInResponse> SignIn(SignInRequest command, CancellationToken cancellationToken = default) Parameters command SignInRequest The request object containing the standard sign-in credentials. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<SignInResponse> The response object containing the authentication result. SignOut(SignOutRequest, CancellationToken) Sign a user out of the application. Task SignOut(SignOutRequest request, CancellationToken cancellationToken = default) Parameters request SignOutRequest The request object containing the access token. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task SignUp(ISignUpRequest, CancellationToken) Sign up a new user. Task<SignUpResponse> SignUp(ISignUpRequest command, CancellationToken cancellationToken = default) Parameters command ISignUpRequest The request object containing the user's sign-up details. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<SignUpResponse> The response object containing the sign-up confirmation details. SocialSignIn(SocialSignInRequest, CancellationToken) Authenticate a user using social media credentials. Task<OAuth2SignInResponse> SocialSignIn(SocialSignInRequest command, CancellationToken cancellationToken) Parameters command SocialSignInRequest The request object containing the social media sign-in credentials. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task<OAuth2SignInResponse> The response object containing the social media sign-in result. UpdateUserAttributes(AdminUpdateUserAttributesRequest, CancellationToken) This method allow you to update user attributes without sending a token. Internally we are calling Admin Update User Attributes. Task UpdateUserAttributes(AdminUpdateUserAttributesRequest command, CancellationToken cancellationToken = default) Parameters command AdminUpdateUserAttributesRequest cancellationToken CancellationToken Returns Task UpdateUserAttributes(UpdateUserAttributesRequest, CancellationToken) Update user attributes with new values. Task UpdateUserAttributes(UpdateUserAttributesRequest command, CancellationToken cancellationToken = default) Parameters command UpdateUserAttributesRequest The request object containing the updated user attributes. cancellationToken CancellationToken A token to cancel the operation if needed. Returns Task"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest.html",
    "title": "Class AdminUpdateUserAttributesRequest | Innovt Platform",
    "keywords": "Class AdminUpdateUserAttributesRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request to update user attributes. public class AdminUpdateUserAttributesRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase AdminUpdateUserAttributesRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Attributes Gets or sets the attributes to update for the user. public Dictionary<string, string> Attributes { get; set; } Property Value Dictionary<string, string> UserName Gets or sets the username associated with the user. [Required] public string UserName { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse.html",
    "title": "Class AuthChallengeResponse | Innovt Platform",
    "keywords": "Class AuthChallengeResponse Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents the response of an authentication challenge, including metadata and authentication result. public class AuthChallengeResponse Inheritance object AuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AuthenticationResult Gets or sets the authentication result of the challenge. public SignInResponse AuthenticationResult { get; set; } Property Value SignInResponse Metadata Gets or sets the metadata associated with the authentication challenge. public IDictionary<string, string> Metadata { get; set; } Property Value IDictionary<string, string>"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest.html",
    "title": "Class ChangePasswordRequest | Innovt Platform",
    "keywords": "Class ChangePasswordRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request to change a user's password, including required parameters and validation. public class ChangePasswordRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase ChangePasswordRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccessToken Gets or sets the access token associated with the user. [Required] public string AccessToken { get; set; } Property Value string ConfirmProposedPassword Gets or sets the confirmation of the proposed new password. [Required] [StringLength(18, MinimumLength = 4)] public string ConfirmProposedPassword { get; set; } Property Value string PreviousPassword Gets or sets the user's previous password. [Required] [StringLength(20, MinimumLength = 4)] public string PreviousPassword { get; set; } Property Value string ProposedPassword Gets or sets the proposed new password. [Required] [StringLength(18, MinimumLength = 4)] public string ProposedPassword { get; set; } Property Value string Methods Validate(ValidationContext) Validates the properties of the ChangePasswordRequest object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> An IEnumerable<T> containing validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest.html",
    "title": "Class ConfirmForgotPasswordRequest | Innovt Platform",
    "keywords": "Class ConfirmForgotPasswordRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request to confirm a forgotten password, including a password reset operation. public class ConfirmForgotPasswordRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase ConfirmForgotPasswordRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ConfirmPassword Gets or sets the confirmation of the new password. [Required] public string ConfirmPassword { get; set; } Property Value string ConfirmationCode Gets or sets the confirmation code used for password reset. [Required] public string ConfirmationCode { get; set; } Property Value string Password Gets or sets the new password for the user. [Required] public string Password { get; set; } Property Value string UserName Gets or sets the user's username. [Required] public string UserName { get; set; } Property Value string Methods Validate(ValidationContext) Validates the properties of the ConfirmForgotPasswordRequest object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> An IEnumerable<T> containing validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest.html",
    "title": "Class ConfirmSignUpRequest | Innovt Platform",
    "keywords": "Class ConfirmSignUpRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request to confirm a user sign-up. public class ConfirmSignUpRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase ConfirmSignUpRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ConfirmationCode Gets or sets the confirmation code associated with the user's sign-up request. [Required] [StringLength(20, MinimumLength = 4)] public virtual string ConfirmationCode { get; set; } Property Value string UserName Gets or sets the username of the user to confirm. [Required] public virtual string UserName { get; set; } Property Value string Methods Validate(ValidationContext) Validates the properties of the ConfirmSignUpRequest object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> An IEnumerable<T> containing validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest.html",
    "title": "Class DeleteUserAccountRequest | Innovt Platform",
    "keywords": "Class DeleteUserAccountRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request to update user attributes. public class DeleteUserAccountRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase DeleteUserAccountRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DeleteUserAccountRequest() public DeleteUserAccountRequest() DeleteUserAccountRequest(string) public DeleteUserAccountRequest(string userName) Parameters userName string Properties UserName [Required] public string UserName { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ErrorCode.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ErrorCode.html",
    "title": "Class ErrorCode | Innovt Platform",
    "keywords": "Class ErrorCode Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Provides a collection of error codes used in the application. public static class ErrorCode Inheritance object ErrorCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChallengeNotAvailable Gets the error code for \"ChallengeNotAvailable\". public static string ChallengeNotAvailable { get; } Property Value string CodeMismatch Gets the error code for \"CodeMismatch\". public static string CodeMismatch { get; } Property Value string ExpiredCode Gets the error code for \"ExpiredCode\". public static string ExpiredCode { get; } Property Value string InternalServerError Gets the error code for \"InternalServerError\". public static string InternalServerError { get; } Property Value string InvalidPassword Gets the error code for \"InvalidPassword\". public static string InvalidPassword { get; } Property Value string LimitExceeded Gets the error code for \"LimitExceeded\". public static string LimitExceeded { get; } Property Value string NotAuthorized Gets the error code for \"NotAuthorized\". public static string NotAuthorized { get; } Property Value string OAuthResponseError Gets the error code for \"OAuthResponseError\". public static string OAuthResponseError { get; } Property Value string PasswordResetRequired Gets the error code for \"PasswordResetRequired\". public static string PasswordResetRequired { get; } Property Value string TooManyRequests Gets the error code for \"TooManyRequests\". public static string TooManyRequests { get; } Property Value string UserNotConfirmed Gets the error code for \"UserNotConfirmed\". public static string UserNotConfirmed { get; } Property Value string UserNotFound Gets the error code for \"UserNotFound\". public static string UserNotFound { get; } Property Value string UsernameAlreadyExists Gets the error code for \"UsernameAlreadyExists\". public static string UsernameAlreadyExists { get; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest.html",
    "title": "Class ForgotPasswordRequest | Innovt Platform",
    "keywords": "Class ForgotPasswordRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request for initiating the forgot password process. public class ForgotPasswordRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase ForgotPasswordRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties UserName Gets or sets the username associated with the user who forgot their password. [Required] public virtual string UserName { get; set; } Property Value string Methods Validate(ValidationContext) Validates the ForgotPasswordRequest instance. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> An IEnumerable<T> containing validation errors, if any."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.GetUserRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.GetUserRequest.html",
    "title": "Class GetUserRequest | Innovt Platform",
    "keywords": "Class GetUserRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request for retrieving user information based on a specified field and value. public class GetUserRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase GetUserRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors GetUserRequest() Initializes a new instance of the GetUserRequest class with default settings. public GetUserRequest() GetUserRequest(string, string) Initializes a new instance of the GetUserRequest class with specified field and value. public GetUserRequest(string field, string value) Parameters field string The field to filter user retrieval. value string The value to match in the specified field. Properties ExcludeExternalUser Gets or sets a value indicating whether to exclude external users in the retrieval. public bool ExcludeExternalUser { get; set; } Property Value bool Field Gets or sets the field to filter user retrieval. public string Field { get; set; } Property Value string Value Gets or sets the value to match in the specified field. public string Value { get; set; } Property Value string Methods Validate(ValidationContext) Validates the GetUserRequest instance. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> An IEnumerable<T> containing validation errors, if any."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.IGetUserResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.IGetUserResponse.html",
    "title": "Interface IGetUserResponse | Innovt Platform",
    "keywords": "Interface IGetUserResponse Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents the response interface for retrieving user information. public interface IGetUserResponse Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties CustomAttributes Gets or sets custom attributes associated with the user. Dictionary<string, string> CustomAttributes { get; set; } Property Value Dictionary<string, string> FirstName Gets or sets the user's first name. string FirstName { get; set; } Property Value string LastName Gets or sets the user's last name. string LastName { get; set; } Property Value string Status Gets or sets the status of the user. string Status { get; set; } Property Value string UserCreateDate Gets or sets the date and time when the user was created. DateTime UserCreateDate { get; set; } Property Value DateTime UserLastModifiedDate Gets or sets the date and time when the user was last modified. DateTime UserLastModifiedDate { get; set; } Property Value DateTime UserName Gets or sets the user's username. string UserName { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.IRequestBase.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.IRequestBase.html",
    "title": "Interface IRequestBase | Innovt Platform",
    "keywords": "Interface IRequestBase Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents the base interface for request objects with validation support. public interface IRequestBase : IValidatableObject Inherited Members IValidatableObject.Validate(ValidationContext) Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties HttpHeader Gets or sets the collection of HTTP headers associated with the request. [JsonIgnore] Dictionary<string, string> HttpHeader { get; set; } Property Value Dictionary<string, string> IpAddress Gets or sets the IP address associated with the request. [JsonIgnore] string IpAddress { get; set; } Property Value string ServerName Gets or sets the server name associated with the request. [JsonIgnore] string ServerName { get; set; } Property Value string ServerPath Gets or sets the server path associated with the request. [JsonIgnore] string ServerPath { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest.html",
    "title": "Interface ISignUpRequest | Innovt Platform",
    "keywords": "Interface ISignUpRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents the interface for sign-up requests with user information and custom attributes. public interface ISignUpRequest : IRequestBase, IValidatableObject Inherited Members IRequestBase.HttpHeader IRequestBase.IpAddress IRequestBase.ServerPath IRequestBase.ServerName IValidatableObject.Validate(ValidationContext) Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties CustomAttributes Gets or sets the custom attributes associated with the sign-up request. Dictionary<string, string> CustomAttributes { get; set; } Property Value Dictionary<string, string> Password Gets or sets the password associated with the sign-up request. string Password { get; set; } Property Value string UserName Gets or sets the username associated with the sign-up request. string UserName { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest.html",
    "title": "Class LinkSocialAccountRequest | Innovt Platform",
    "keywords": "Class LinkSocialAccountRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request to update user attributes. public class LinkSocialAccountRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase LinkSocialAccountRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors LinkSocialAccountRequest() public LinkSocialAccountRequest() LinkSocialAccountRequest(string, string) public LinkSocialAccountRequest(string email, string userName) Parameters email string userName string Properties Email The email of the user to link the account. [Required] public string Email { get; set; } Property Value string UserName [Required] public string UserName { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse.html",
    "title": "Class OAuth2SignInResponse | Innovt Platform",
    "keywords": "Class OAuth2SignInResponse Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Gets or sets the error message associated with the sign-in response, if any. public class OAuth2SignInResponse : SignInResponse Inheritance object SignInResponse OAuth2SignInResponse Inherited Members SignInResponse.IdToken SignInResponse.AccessToken SignInResponse.ExpiresIn SignInResponse.RefreshToken SignInResponse.TokenType SignInResponse.SignInType SignInResponse.Session SignInResponse.ChallengeName SignInResponse.ChallengeParameters object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Email Gets or sets the email address of the user. public string Email { get; set; } Property Value string Error public string Error { get; set; } Property Value string FirstName Gets or sets the first name of the user. public string FirstName { get; set; } Property Value string LastName Gets or sets the last name of the user. public string LastName { get; set; } Property Value string NeedRegister Gets or sets a flag indicating whether the user needs to register. public bool NeedRegister { get; set; } Property Value bool Picture Gets or sets the URL of the user's profile picture. public string Picture { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest.html",
    "title": "Class OtpSignInRequest | Innovt Platform",
    "keywords": "Class OtpSignInRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request for one-time password (OTP) sign-in. public class OtpSignInRequest : SignInRequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase SignInRequestBase OtpSignInRequest Implements IRequestBase IValidatableObject Inherited Members SignInRequestBase.UserName RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Validate(ValidationContext) Validates the request data. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> An enumerable collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest.html",
    "title": "Class RefreshTokenRequest | Innovt Platform",
    "keywords": "Class RefreshTokenRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request for refreshing an authentication token using a refresh token. public class RefreshTokenRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase RefreshTokenRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties RefreshToken Gets or sets the refresh token. [Required] public string RefreshToken { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request data. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> An enumerable collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse.html",
    "title": "Class RefreshTokenResponse | Innovt Platform",
    "keywords": "Class RefreshTokenResponse Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a response containing refreshed authentication tokens. public class RefreshTokenResponse Inheritance object RefreshTokenResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccessToken Gets or sets the access token. public string AccessToken { get; set; } Property Value string ExpiresIn Gets or sets the expiration time of the access token in seconds. public int ExpiresIn { get; set; } Property Value int IdToken Gets or sets the ID token. public string IdToken { get; set; } Property Value string TokenType Gets or sets the type of token (e.g., \"Bearer\"). public string TokenType { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.RequestBase.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.RequestBase.html",
    "title": "Class RequestBase | Innovt Platform",
    "keywords": "Class RequestBase Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Base class for request objects used in API calls. public abstract class RequestBase : IRequestBase, IValidatableObject Inheritance object RequestBase Implements IRequestBase IValidatableObject Derived AdminUpdateUserAttributesRequest ChangePasswordRequest ConfirmForgotPasswordRequest ConfirmSignUpRequest DeleteUserAccountRequest ForgotPasswordRequest GetUserRequest LinkSocialAccountRequest RefreshTokenRequest ResendConfirmationCodeRequest RespondToAuthChallengeRequest SignInRequestBase SignOutRequest SocialSignInRequest UpdateUserAttributesRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties HttpHeader Gets or sets the HTTP headers associated with the request. [JsonIgnore] public Dictionary<string, string> HttpHeader { get; set; } Property Value Dictionary<string, string> IpAddress Gets or sets the IP address of the requester. [JsonIgnore] public string IpAddress { get; set; } Property Value string ServerName Gets or sets the server name for the request. [JsonIgnore] public string ServerName { get; set; } Property Value string ServerPath Gets or sets the server path for the request. [JsonIgnore] public string ServerPath { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public abstract IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest.html",
    "title": "Class ResendConfirmationCodeRequest | Innovt Platform",
    "keywords": "Class ResendConfirmationCodeRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request for resending a confirmation code to a user. public class ResendConfirmationCodeRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase ResendConfirmationCodeRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties UserName Gets or sets the user's username for whom the confirmation code will be resent. [Required] public virtual string UserName { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest.html",
    "title": "Class RespondToAuthChallengeRequest | Innovt Platform",
    "keywords": "Class RespondToAuthChallengeRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request for responding to an authentication challenge. public class RespondToAuthChallengeRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase RespondToAuthChallengeRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ChallengeName Gets or sets the name of the challenge. [Required] public virtual string ChallengeName { get; set; } Property Value string ConfirmationCode Gets or sets the confirmation code used to respond to the challenge. public virtual string ConfirmationCode { get; set; } Property Value string Password Gets or sets the user's password used to respond to the challenge. public virtual string Password { get; set; } Property Value string Session Gets or sets the session token associated with the authentication challenge. [Required] public virtual string Session { get; set; } Property Value string UserName Gets or sets the user's username. [Required] public virtual string UserName { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignInRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignInRequest.html",
    "title": "Class SignInRequest | Innovt Platform",
    "keywords": "Class SignInRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request for user sign-in. public class SignInRequest : SignInRequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase SignInRequestBase SignInRequest Implements IRequestBase IValidatableObject Inherited Members SignInRequestBase.UserName RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Password Gets or sets the user's password. [Required] [StringLength(30, MinimumLength = 4)] public virtual string Password { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignInRequestBase.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignInRequestBase.html",
    "title": "Class SignInRequestBase | Innovt Platform",
    "keywords": "Class SignInRequestBase Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a base class for sign-in requests. public abstract class SignInRequestBase : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase SignInRequestBase Implements IRequestBase IValidatableObject Derived OtpSignInRequest SignInRequest Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName RequestBase.Validate(ValidationContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties UserName Gets or sets the user's username. [Required] public string UserName { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignInResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignInResponse.html",
    "title": "Class SignInResponse | Innovt Platform",
    "keywords": "Class SignInResponse Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a response containing sign-in information. public class SignInResponse Inheritance object SignInResponse Derived OAuth2SignInResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccessToken Gets or sets the access token. public string AccessToken { get; set; } Property Value string ChallengeName Gets or sets the challenge name. public string ChallengeName { get; set; } Property Value string ChallengeParameters Gets or sets the challenge parameters. public Dictionary<string, string> ChallengeParameters { get; set; } Property Value Dictionary<string, string> ExpiresIn Gets or sets the expiration time in seconds for the access token. public int ExpiresIn { get; set; } Property Value int IdToken Gets or sets the ID token. public string IdToken { get; set; } Property Value string RefreshToken Gets or sets the refresh token. public string RefreshToken { get; set; } Property Value string Session Gets or sets the session. public string Session { get; set; } Property Value string SignInType Gets or sets the sign-in type. public string SignInType { get; set; } Property Value string TokenType Gets or sets the token type. public string TokenType { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignOutRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignOutRequest.html",
    "title": "Class SignOutRequest | Innovt Platform",
    "keywords": "Class SignOutRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request to sign out with an access token. public class SignOutRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase SignOutRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccessToken Gets or sets the access token used for signing out. [Required] public virtual string AccessToken { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignUpResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignUpResponse.html",
    "title": "Class SignUpResponse | Innovt Platform",
    "keywords": "Class SignUpResponse Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents the response from a user sign-up operation. public class SignUpResponse Inheritance object SignUpResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Confirmed Gets or sets a value indicating whether the user's sign-up has been confirmed. public bool Confirmed { get; set; } Property Value bool UUID Gets or sets the unique identifier (UUID) associated with the user. public string UUID { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest.html",
    "title": "Class SocialSignInRequest | Innovt Platform",
    "keywords": "Class SocialSignInRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request for social sign-in using an OAuth code and redirect URI. public class SocialSignInRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase SocialSignInRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Code Gets or sets the OAuth code obtained from the social authentication provider. [Required] public virtual string Code { get; set; } Property Value string RedirectUri Gets or sets the redirect URI to which the user is redirected after social authentication. [Required] public virtual string RedirectUri { get; set; } Property Value string Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest.html",
    "title": "Class UpdateUserAttributesRequest | Innovt Platform",
    "keywords": "Class UpdateUserAttributesRequest Namespace Innovt.Cloud.AWS.Cognito.Model Assembly Innovt.Cloud.AWS.Cognito.dll Represents a request to update user attributes. public class UpdateUserAttributesRequest : RequestBase, IRequestBase, IValidatableObject Inheritance object RequestBase UpdateUserAttributesRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccessToken Gets or sets the access token associated with the user. [Required] public string AccessToken { get; set; } Property Value string Attributes Gets or sets the attributes to update for the user. public Dictionary<string, string> Attributes { get; set; } Property Value Dictionary<string, string> Methods Validate(ValidationContext) Validates the request object. public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.html",
    "title": "Namespace Innovt.Cloud.AWS.Cognito.Model | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Cognito.Model Classes AdminUpdateUserAttributesRequest Represents a request to update user attributes. AuthChallengeResponse Represents the response of an authentication challenge, including metadata and authentication result. ChangePasswordRequest Represents a request to change a user's password, including required parameters and validation. ConfirmForgotPasswordRequest Represents a request to confirm a forgotten password, including a password reset operation. ConfirmSignUpRequest Represents a request to confirm a user sign-up. DeleteUserAccountRequest Represents a request to update user attributes. ErrorCode Provides a collection of error codes used in the application. ForgotPasswordRequest Represents a request for initiating the forgot password process. GetUserRequest Represents a request for retrieving user information based on a specified field and value. LinkSocialAccountRequest Represents a request to update user attributes. OAuth2SignInResponse Gets or sets the error message associated with the sign-in response, if any. OtpSignInRequest Represents a request for one-time password (OTP) sign-in. RefreshTokenRequest Represents a request for refreshing an authentication token using a refresh token. RefreshTokenResponse Represents a response containing refreshed authentication tokens. RequestBase Base class for request objects used in API calls. ResendConfirmationCodeRequest Represents a request for resending a confirmation code to a user. RespondToAuthChallengeRequest Represents a request for responding to an authentication challenge. SignInRequest Represents a request for user sign-in. SignInRequestBase Represents a base class for sign-in requests. SignInResponse Represents a response containing sign-in information. SignOutRequest Represents a request to sign out with an access token. SignUpResponse Represents the response from a user sign-up operation. SocialSignInRequest Represents a request for social sign-in using an OAuth code and redirect URI. UpdateUserAttributesRequest Represents a request to update user attributes. Interfaces IGetUserResponse Represents the response interface for retrieving user information. IRequestBase Represents the base interface for request objects with validation support. ISignUpRequest Represents the interface for sign-up requests with user information and custom attributes."
  },
  "api/Innovt.Cloud.AWS.Cognito.Tests.BaseIdentityProvider.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Tests.BaseIdentityProvider.html",
    "title": "Class BaseIdentityProvider | Innovt Platform",
    "keywords": "Class BaseIdentityProvider Namespace Innovt.Cloud.AWS.Cognito.Tests Assembly Innovt.Cloud.AWS.Cognito.Tests.dll public class BaseIdentityProvider : CognitoIdentityProvider, IDisposable, ICognitoIdentityProvider Inheritance object AwsBaseService CognitoIdentityProvider BaseIdentityProvider Implements IDisposable ICognitoIdentityProvider Inherited Members CognitoIdentityProvider.ForgotPassword(ForgotPasswordRequest, CancellationToken) CognitoIdentityProvider.SignIn(OtpSignInRequest, CancellationToken) CognitoIdentityProvider.SignIn(SignInRequest, CancellationToken) CognitoIdentityProvider.SignOut(SignOutRequest, CancellationToken) CognitoIdentityProvider.SignUp(ISignUpRequest, CancellationToken) CognitoIdentityProvider.ConfirmSignUp(ConfirmSignUpRequest, CancellationToken) CognitoIdentityProvider.ResendConfirmationCode(ResendConfirmationCodeRequest, CancellationToken) CognitoIdentityProvider.ChangePassword(ChangePasswordRequest, CancellationToken) CognitoIdentityProvider.GetUser<T>(GetUserRequest, CancellationToken) CognitoIdentityProvider.GetUser<T>(string, CancellationToken) CognitoIdentityProvider.RespondToAuthChallenge(RespondToAuthChallengeRequest, CancellationToken) CognitoIdentityProvider.ConfirmForgotPassword(ConfirmForgotPasswordRequest, CancellationToken) CognitoIdentityProvider.SocialSignIn(SocialSignInRequest, CancellationToken) CognitoIdentityProvider.RefreshToken(RefreshTokenRequest, CancellationToken) CognitoIdentityProvider.LinkSocialUser(LinkSocialAccountRequest, CancellationToken) CognitoIdentityProvider.DeleteUser(DeleteUserAccountRequest, CancellationToken) CognitoIdentityProvider.UpdateUserAttributes(AdminUpdateUserAttributesRequest, CancellationToken) CognitoIdentityProvider.UpdateUserAttributes(UpdateUserAttributesRequest, CancellationToken) CognitoIdentityProvider.DisposeServices() AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BaseIdentityProvider(ILogger, IAwsConfiguration, string, string, string, string?) public BaseIdentityProvider(ILogger logger, IAwsConfiguration configuration, string clientId, string userPoolId, string domainEndPoint, string? region) Parameters logger ILogger configuration IAwsConfiguration clientId string userPoolId string domainEndPoint string region string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Tests.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Tests.Tests.html",
    "title": "Class Tests | Innovt Platform",
    "keywords": "Class Tests Namespace Innovt.Cloud.AWS.Cognito.Tests Assembly Innovt.Cloud.AWS.Cognito.Tests.dll public class Tests Inheritance object Tests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Setup() [SetUp] public void Setup()"
  },
  "api/Innovt.Cloud.AWS.Cognito.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.Cognito.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Cognito.Tests Classes BaseIdentityProvider Tests"
  },
  "api/Innovt.Cloud.AWS.Cognito.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.html",
    "title": "Namespace Innovt.Cloud.AWS.Cognito | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Cognito Classes CognitoIdentityProvider Provides functionality for user management and authentication with Amazon Cognito Identity Provider. Interfaces ICognitoIdentityProvider"
  },
  "api/Innovt.Cloud.AWS.Configuration.AssumeRoleAWSConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.AssumeRoleAWSConfiguration.html",
    "title": "Class AssumeRoleAWSConfiguration | Innovt Platform",
    "keywords": "Class AssumeRoleAWSConfiguration Namespace Innovt.Cloud.AWS.Configuration Assembly Innovt.Cloud.AWS.dll Represents the configuration for assuming a role in AWS. public class AssumeRoleAWSConfiguration : IAssumeRoleAWSConfiguration, IAwsConfiguration, IConfiguration Inheritance object AssumeRoleAWSConfiguration Implements IAssumeRoleAWSConfiguration IAwsConfiguration IConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors AssumeRoleAWSConfiguration(IAwsConfiguration, string, string, string) Initializes a new instance of the AssumeRoleAWSConfiguration class. public AssumeRoleAWSConfiguration(IAwsConfiguration configuration, string roleArn, string roleSessionName = null, string roleExternalId = null) Parameters configuration IAwsConfiguration The AWS configuration. roleArn string The Amazon Resource Name (ARN) of the role to assume. roleSessionName string The name to use for the assumed role session. roleExternalId string An external ID to use when assuming the role. Exceptions ArgumentNullException Thrown when configuration or roleArn is null. Properties AccessKey Gets or sets the AWS access key. public string AccessKey { get; set; } Property Value string AccountNumber Gets or sets the AWS account number. public string AccountNumber { get; set; } Property Value string ExternalId Gets or sets the external ID to use when assuming the role. public string ExternalId { get; set; } Property Value string Profile Gets or sets the AWS profile. public string Profile { get; set; } Property Value string Region Gets or sets the AWS region. public string Region { get; set; } Property Value string RoleArn Gets or sets the Amazon Resource Name (ARN) of the role to assume. public string RoleArn { get; set; } Property Value string RoleSessionName Gets or sets the name to use for the assumed role session. public string RoleSessionName { get; set; } Property Value string SecretKey Gets or sets the AWS secret key. public string SecretKey { get; set; } Property Value string Methods GetCredential() Gets the AWS credentials for assuming the specified role. public AWSCredentials GetCredential() Returns AWSCredentials The AWS credentials for assuming the role. Exceptions ConfigurationException Thrown when the source credentials are invalid."
  },
  "api/Innovt.Cloud.AWS.Configuration.DefaultAWSConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.DefaultAWSConfiguration.html",
    "title": "Class DefaultAWSConfiguration | Innovt Platform",
    "keywords": "Class DefaultAWSConfiguration Namespace Innovt.Cloud.AWS.Configuration Assembly Innovt.Cloud.AWS.dll Represents the default AWS configuration used for AWS authentication and credentials. public class DefaultAWSConfiguration : IAwsConfiguration, IConfiguration Inheritance object DefaultAWSConfiguration Implements IAwsConfiguration IConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DefaultAWSConfiguration() Initializes a new instance of the DefaultAWSConfiguration class. public DefaultAWSConfiguration() DefaultAWSConfiguration(IConfiguration, string) This Constructor will use the Autobind from GetSection. public DefaultAWSConfiguration(IConfiguration configuration, string sectionName = \"AWS\") Parameters configuration IConfiguration IConfiguration from .Net Core sectionName string The default is AWS. DefaultAWSConfiguration(string) The default profile name public DefaultAWSConfiguration(string profileName) Parameters profileName string Exceptions ArgumentNullException DefaultAWSConfiguration(string, string, string, string, string) Initializes a new instance of the DefaultAWSConfiguration class with provided credentials. public DefaultAWSConfiguration(string accessKey, string secretKey, string region, string accountNumber = null, string sessionToken = null) Parameters accessKey string The AWS access key. secretKey string The AWS secret key. region string The AWS region. accountNumber string The AWS account number. sessionToken string The AWS session token (optional). Exceptions ArgumentNullException Thrown when accessKey, secretKey, or region is null. Properties AccessKey Gets or sets the AWS access key for authentication. public string AccessKey { get; set; } Property Value string AccountNumber Gets or sets the AWS account number associated with the AWS credentials. public string AccountNumber { get; set; } Property Value string Profile Gets or sets the AWS named profile to be used for AWS credentials. If set, other credentials will be ignored. public string Profile { get; set; } Property Value string Region Gets or sets the AWS region for AWS service requests. public string Region { get; set; } Property Value string SecretKey Gets or sets the AWS secret key for authentication. public string SecretKey { get; set; } Property Value string SessionToken Gets or sets the AWS session token for temporary credentials. public string SessionToken { get; set; } Property Value string Methods GetCredential() Gets the AWS credentials based on the configured profile or provided access and secret keys. public AWSCredentials GetCredential() Returns AWSCredentials The AWS credentials."
  },
  "api/Innovt.Cloud.AWS.Configuration.IAssumeRoleAWSConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.IAssumeRoleAWSConfiguration.html",
    "title": "Interface IAssumeRoleAWSConfiguration | Innovt Platform",
    "keywords": "Interface IAssumeRoleAWSConfiguration Namespace Innovt.Cloud.AWS.Configuration Assembly Innovt.Cloud.AWS.dll Represents the configuration for assuming an AWS IAM role. public interface IAssumeRoleAWSConfiguration : IAwsConfiguration, IConfiguration Inherited Members IAwsConfiguration.AccountNumber IAwsConfiguration.Profile IAwsConfiguration.GetCredential() IConfiguration.SecretKey IConfiguration.AccessKey IConfiguration.Region Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ExternalId Gets or sets an external identifier used when assuming the IAM role (optional). string ExternalId { get; set; } Property Value string RoleArn Gets or sets the Amazon Resource Name (ARN) of the IAM role to be assumed. string RoleArn { get; set; } Property Value string RoleSessionName Gets or sets the name of the assumed role session (optional). string RoleSessionName { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Configuration.IAwsConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.IAwsConfiguration.html",
    "title": "Interface IAwsConfiguration | Innovt Platform",
    "keywords": "Interface IAwsConfiguration Namespace Innovt.Cloud.AWS.Configuration Assembly Innovt.Cloud.AWS.dll public interface IAwsConfiguration : IConfiguration Inherited Members IConfiguration.SecretKey IConfiguration.AccessKey IConfiguration.Region Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccountNumber string AccountNumber { get; set; } Property Value string Profile string Profile { get; set; } Property Value string Methods GetCredential() AWSCredentials GetCredential() Returns AWSCredentials"
  },
  "api/Innovt.Cloud.AWS.Configuration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.html",
    "title": "Namespace Innovt.Cloud.AWS.Configuration | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Configuration Classes AssumeRoleAWSConfiguration Represents the configuration for assuming a role in AWS. DefaultAWSConfiguration Represents the default AWS configuration used for AWS authentication and credentials. Interfaces IAssumeRoleAWSConfiguration Represents the configuration for assuming an AWS IAM role. IAwsConfiguration"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Converters.DateTimeOffsetConverter.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Converters.DateTimeOffsetConverter.html",
    "title": "Class DateTimeOffsetConverter | Innovt Platform",
    "keywords": "Class DateTimeOffsetConverter Namespace Innovt.Cloud.AWS.Dynamo.Converters Assembly Innovt.Cloud.AWS.Dynamo.dll public class DateTimeOffsetConverter : IPropertyConverter Inheritance object DateTimeOffsetConverter Implements IPropertyConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods FromEntry(DynamoDBEntry) Here is from DateTimeOffSet to Date public object FromEntry(DynamoDBEntry entry) Parameters entry DynamoDBEntry Returns object ToEntry(object) Convert object to DynamoDBEntry public DynamoDBEntry ToEntry(object value) Parameters value object Object to be deserialized Returns DynamoDBEntry Object deserialized as DynamoDBEntry"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Converters.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Converters.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Converters | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Converters Classes DateTimeOffsetConverter"
  },
  "api/Innovt.Cloud.AWS.Dynamo.DynamoContext.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.DynamoContext.html",
    "title": "Class DynamoContext | Innovt Platform",
    "keywords": "Class DynamoContext Namespace Innovt.Cloud.AWS.Dynamo Assembly Innovt.Cloud.AWS.Dynamo.dll This class is responsible for managing the context of the DynamoDB for Code First strategy. public abstract class DynamoContext Inheritance object DynamoContext Derived SampleDynamoContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DynamoContext() protected DynamoContext() Properties Entities public Dictionary<string, object> Entities { get; } Property Value Dictionary<string, object> Methods GetPropertyConverter(Type) public IPropertyConverter GetPropertyConverter(Type type) Parameters type Type Returns IPropertyConverter GetTypeBuilder<T>() public EntityTypeBuilder<T> GetTypeBuilder<T>() Returns EntityTypeBuilder<T> Type Parameters T HasTypeBuilder<T>() public bool HasTypeBuilder<T>() Returns bool Type Parameters T OnModelCreating(ModelBuilder) protected abstract void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Exceptions.MissingEntityMapException.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Exceptions.MissingEntityMapException.html",
    "title": "Class MissingEntityMapException | Innovt Platform",
    "keywords": "Class MissingEntityMapException Namespace Innovt.Cloud.AWS.Dynamo.Exceptions Assembly Innovt.Cloud.AWS.Dynamo.dll public class MissingEntityMapException : CriticalException, ISerializable Inheritance object Exception BaseException CriticalException MissingEntityMapException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors MissingEntityMapException(string) public MissingEntityMapException(string typeName) Parameters typeName string MissingEntityMapException(Type) public MissingEntityMapException(Type type) Parameters type Type"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Exceptions.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Exceptions.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Exceptions Classes MissingEntityMapException"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.BaseDataModel-2.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.BaseDataModel-2.html",
    "title": "Class BaseDataModel<TDataModel, TDomain> | Innovt Platform",
    "keywords": "Class BaseDataModel<TDataModel, TDomain> Namespace Innovt.Cloud.AWS.Dynamo.Mapping Assembly Innovt.Cloud.AWS.Dynamo.dll Base abstract class representing a data model that can be mapped to/from a domain model. public abstract class BaseDataModel<TDataModel, TDomain> : ITableMessage where TDataModel : class where TDomain : class Type Parameters TDataModel The type of the data model. TDomain The type of the domain model. Inheritance object BaseDataModel<TDataModel, TDomain> Implements ITableMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties EntityType Gets or sets the entity type. [DynamoDBProperty] public string EntityType { get; set; } Property Value string Id Gets or sets the unique identifier. public string Id { get; set; } Property Value string Pk Gets or sets the partition key for DynamoDB. [DynamoDBHashKey(\"PK\")] public string Pk { get; set; } Property Value string Sk Gets or sets the sort key for DynamoDB. [DynamoDBRangeKey(\"SK\")] public string Sk { get; set; } Property Value string Methods CustomDataModelMap(TDataModel, TDomain) Custom mapping logic from domain model to data model. protected abstract void CustomDataModelMap(TDataModel dataModel, TDomain domain) Parameters dataModel TDataModel The data model. domain TDomain The domain model. CustomDomainMap(TDomain, TDataModel) Custom mapping logic from data model to domain model. protected abstract void CustomDomainMap(TDomain tDomain, TDataModel dataModel) Parameters tDomain TDomain The domain model. dataModel TDataModel The data model. GetEntityType() Protected abstract method to get the entity type. protected abstract string GetEntityType() Returns string The entity type. ToDataModel(IList<TDomain>) Converts a list of domain models to a list of data models. public IList<TDataModel> ToDataModel(IList<TDomain> domains) Parameters domains IList<TDomain> The list of domain models to convert. Returns IList<TDataModel> The converted list of data models. ToDataModel(TDomain) Converts a domain model to a data model. public virtual TDataModel ToDataModel(TDomain domain) Parameters domain TDomain The domain model to convert. Returns TDataModel The converted data model. ToDomain(IList<TDataModel>) Converts a list of data models to a list of domain models. public IList<TDomain> ToDomain(IList<TDataModel> dataModels) Parameters dataModels IList<TDataModel> The list of data models to convert. Returns IList<TDomain> The converted list of domain models. ToDomain(TDataModel) Converts a data model to a domain model. public virtual TDomain ToDomain(TDataModel dataModel) Parameters dataModel TDataModel The data model to convert. Returns TDomain The converted domain model."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html",
    "title": "Class EntityTypeBuilder<TEntity> | Innovt Platform",
    "keywords": "Class EntityTypeBuilder<TEntity> Namespace Innovt.Cloud.AWS.Dynamo.Mapping.Builder Assembly Innovt.Cloud.AWS.Dynamo.dll A builder for defining the entity type and its properties for use with DynamoDB. public sealed class EntityTypeBuilder<TEntity> Type Parameters TEntity The type of the entity being defined. Inheritance object EntityTypeBuilder<TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties EntityType Gets or sets the entity type for the DynamoDB table. public string EntityType { get; } Property Value string HashKeyPrefix public string HashKeyPrefix { get; } Property Value string KeySeparator Define the key prefix separator public string KeySeparator { get; } Property Value string Pk Gets or sets the partition key for the DynamoDB table. public string Pk { get; } Property Value string RangeKeyPrefix Gets or sets the range key prefix for the DynamoDB table. public string RangeKeyPrefix { get; } Property Value string Sk Gets or sets the sort key for the DynamoDB table. public string Sk { get; } Property Value string TableName Gets or sets the table name associated with the entity type. public string TableName { get; } Property Value string Methods AutoMap(bool) Starts a reflection process to auto map all properties of the entity type. public EntityTypeBuilder<TEntity> AutoMap(bool withDefaultKeys = true) Parameters withDefaultKeys bool Returns EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. GetProperties() Returns all properties defined for the entity type. public IReadOnlyCollection<PropertyTypeBuilder<TEntity>> GetProperties() Returns IReadOnlyCollection<PropertyTypeBuilder<TEntity>> GetProperty(string) Gets a property by its column name or Name public PropertyTypeBuilder<TEntity> GetProperty(string name) Parameters name string Returns PropertyTypeBuilder<TEntity> Ignore(string) Ignores a property by name during mapping. public EntityTypeBuilder<TEntity> Ignore(string name) Parameters name string The name of the property to ignore. Returns EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. Ignore<TProperty>(Expression<Func<TEntity, TProperty>>) Ignores a property during mapping. public EntityTypeBuilder<TEntity> Ignore<TProperty>(Expression<Func<TEntity, TProperty>> expression) Parameters expression Expression<Func<TEntity, TProperty>> The property to ignore. Returns EntityTypeBuilder<TEntity> Type Parameters TProperty Property(string) Defines a property for the entity using a specified property name. public PropertyTypeBuilder<TEntity> Property(string name) Parameters name string The name of the property. Returns PropertyTypeBuilder<TEntity> The property type builder for further property configuration. Property<TProperty>(Expression<Func<TEntity, TProperty>>) Defines a property for the entity using a provided property function. public PropertyTypeBuilder<TEntity> Property<TProperty>(Expression<Func<TEntity, TProperty>> propertyExpression) Parameters propertyExpression Expression<Func<TEntity, TProperty>> The property function to generate the property. Returns PropertyTypeBuilder<TEntity> The property type builder for further property configuration. Type Parameters TProperty WithDefaultKeys() Initializes a new instance of the EntityTypeBuilder<TEntity> class. In this case the default PK and SK will be created public EntityTypeBuilder<TEntity> WithDefaultKeys() Returns EntityTypeBuilder<TEntity> WithEntityType(string) Sets the entity type for the DynamoDB table using a specified entity type. public EntityTypeBuilder<TEntity> WithEntityType(string entityTypeName) Parameters entityTypeName string The entity type to set. Returns EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. WithEntityType<TProperty>(Expression<Func<TEntity, TProperty>>) Sets the entity type for the DynamoDB table using a provided entity type function. public EntityTypeBuilder<TEntity> WithEntityType<TProperty>(Expression<Func<TEntity, TProperty>> expression) Parameters expression Expression<Func<TEntity, TProperty>> The entity type function to generate the entity type. Returns EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. Type Parameters TProperty WithHashKey(string) Sets the partition key for the DynamoDB table using a specified partition key. public PropertyTypeBuilder<TEntity> WithHashKey(string hashKey = \"PK\") Parameters hashKey string The partition key to set. Returns PropertyTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. WithHashKeyPrefix(string) public EntityTypeBuilder<TEntity> WithHashKeyPrefix(string hashKeyPrefix) Parameters hashKeyPrefix string Returns EntityTypeBuilder<TEntity> WithHashKey<TProperty>(Expression<Func<TEntity, TProperty>>) Sets the partition key for the DynamoDB table using a provided hash key function. public PropertyTypeBuilder<TEntity> WithHashKey<TProperty>(Expression<Func<TEntity, TProperty>> expression) Parameters expression Expression<Func<TEntity, TProperty>> The hash key function to generate the partition key. Returns PropertyTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. Type Parameters TProperty WithRangeKey(string) Sets the range key for the DynamoDB table using a specified sort key. public PropertyTypeBuilder<TEntity> WithRangeKey(string rangeKey = \"SK\") Parameters rangeKey string The sort key to set. Returns PropertyTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. WithRangeKeyPrefix(string) Sets the sort/Range key prefix for the DynamoDB table. public EntityTypeBuilder<TEntity> WithRangeKeyPrefix(string rangeKeyPrefix) Parameters rangeKeyPrefix string Returns EntityTypeBuilder<TEntity> WithRangeKey<TProperty>(Expression<Func<TEntity, TProperty>>) Sets the sort key for the DynamoDB table using a provided sort key function. public PropertyTypeBuilder<TEntity> WithRangeKey<TProperty>(Expression<Func<TEntity, TProperty>> expression) Parameters expression Expression<Func<TEntity, TProperty>> The sort key function to generate the sort key. Returns PropertyTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. Type Parameters TProperty WithTableName(string, string) Sets the table name associated with the entity type. public EntityTypeBuilder<TEntity> WithTableName(string tableName, string keySeparator = null) Parameters tableName string The table name to set. keySeparator string If you want to define a key prefix like USER#ID the separator will be # Returns EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html",
    "title": "Class PropertyTypeBuilder<T> | Innovt Platform",
    "keywords": "Class PropertyTypeBuilder<T> Namespace Innovt.Cloud.AWS.Dynamo.Mapping.Builder Assembly Innovt.Cloud.AWS.Dynamo.dll Represents a builder for defining the properties of an entity type. public class PropertyTypeBuilder<T> Type Parameters T The type of the entity. Inheritance object PropertyTypeBuilder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PropertyTypeBuilder(Func<T, string>, EntityTypeBuilder<T>) Initializes a new instance of the PropertyTypeBuilder<T> class with a specified property name. public PropertyTypeBuilder(Func<T, string> propertyName, EntityTypeBuilder<T> builder) Parameters propertyName Func<T, string> The function to retrieve the property name. builder EntityTypeBuilder<T> This is the main build to help the user with fluent api PropertyTypeBuilder(Func<T, string>, Type, EntityTypeBuilder<T>) Initializes a new instance of the PropertyTypeBuilder<T> class with a specified property name and type. public PropertyTypeBuilder(Func<T, string> propertyName, Type propertyType, EntityTypeBuilder<T> builder) Parameters propertyName Func<T, string> The function to retrieve the property name. propertyType Type The type of the property. builder EntityTypeBuilder<T> This is the main build to help the user with fluent api Properties Builder public EntityTypeBuilder<T> Builder { get; set; } Property Value EntityTypeBuilder<T> ColumnName Gets or sets the column name associated with the property. if the column name is not set, the property name is used. public string ColumnName { get; } Property Value string HasMapAction Has map actions is when you need to map some property. public bool HasMapAction { get; } Property Value bool MaxLength The max length of the property public int MaxLength { get; } Property Value int Name Gets the name of the property. public string Name { get; } Property Value string Required Gets a value if the field is required. public bool Required { get; } Property Value bool Template This template property will be user to create values for the property dynamicaly. public string Template { get; } Property Value string Type Gets the type of the property. public Type Type { get; } Property Value Type Methods AsBinary() Specifies that the property is of binary type. public PropertyTypeBuilder<T> AsBinary() Returns PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. AsDecimal() Specifies that the property is of decimal type. public PropertyTypeBuilder<T> AsDecimal() Returns PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. AsString() Specifies that the property is of string type. public PropertyTypeBuilder<T> AsString() Returns PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. GetValue(T) Get the instance value using a fixed value or a delegate. public object GetValue(T entity) Parameters entity T Returns object InvokeMaps(T) public void InvokeMaps(T entity) Parameters entity T IsRequired(bool) Define when a fi public PropertyTypeBuilder<T> IsRequired(bool isRequired = true) Parameters isRequired bool Default value if true. Returns PropertyTypeBuilder<T> SetDynamicValue(Func<T, object>) Define a delegate to set the value of the property based on the entity. public PropertyTypeBuilder<T> SetDynamicValue(Func<T, object> valueDelegate) Parameters valueDelegate Func<T, object> Returns PropertyTypeBuilder<T> Exceptions ArgumentNullException WithColumnName(string) Specifies a custom column name for the property in the database. public PropertyTypeBuilder<T> WithColumnName(string name) Parameters name string The custom column name. Returns PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. WithMap(Action<T>) Define a delegate to parse the property. public PropertyTypeBuilder<T> WithMap(Action<T> parserDelegate) Parameters parserDelegate Action<T> The action to parse the property. Returns PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. WithMaxLength(int) Specifies that the property is of decimal type. public PropertyTypeBuilder<T> WithMaxLength(int maxLength) Parameters maxLength int Returns PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. WithTemplate(string) public PropertyTypeBuilder<T> WithTemplate(string template) Parameters template string Returns PropertyTypeBuilder<T> WithValue(object) public PropertyTypeBuilder<T> WithValue(object value) Parameters value object Returns PropertyTypeBuilder<T>"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Mapping.Builder | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Mapping.Builder Classes EntityTypeBuilder<TEntity> A builder for defining the entity type and its properties for use with DynamoDB. PropertyTypeBuilder<T> Represents a builder for defining the properties of an entity type."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.IEntityTypeDataModelMapper-1.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.IEntityTypeDataModelMapper-1.html",
    "title": "Interface IEntityTypeDataModelMapper<T> | Innovt Platform",
    "keywords": "Interface IEntityTypeDataModelMapper<T> Namespace Innovt.Cloud.AWS.Dynamo.Mapping Assembly Innovt.Cloud.AWS.Dynamo.dll Interface for configuring the mapping between an entity type and its corresponding data model using an EntityTypeBuilder. public interface IEntityTypeDataModelMapper<T> where T : class Type Parameters T The type of the entity. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Configure(EntityTypeBuilder<T>) Configures the mapping between the entity type and its corresponding data model using the provided EntityTypeBuilder. void Configure(EntityTypeBuilder<T> builder) Parameters builder EntityTypeBuilder<T> The EntityTypeBuilder used to configure the mapping."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.ModelBuilder.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.ModelBuilder.html",
    "title": "Class ModelBuilder | Innovt Platform",
    "keywords": "Class ModelBuilder Namespace Innovt.Cloud.AWS.Dynamo.Mapping Assembly Innovt.Cloud.AWS.Dynamo.dll public class ModelBuilder Inheritance object ModelBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Converters public Dictionary<Type, IPropertyConverter> Converters { get; } Property Value Dictionary<Type, IPropertyConverter> Entities public Dictionary<string, object> Entities { get; } Property Value Dictionary<string, object> Methods AddConfiguration<T>(IEntityTypeDataModelMapper<T>) public ModelBuilder AddConfiguration<T>(IEntityTypeDataModelMapper<T> entityTypeDataModelMapper) where T : class Parameters entityTypeDataModelMapper IEntityTypeDataModelMapper<T> Returns ModelBuilder Type Parameters T AddPropertyConverter(Type, IPropertyConverter) public ModelBuilder AddPropertyConverter(Type type, IPropertyConverter converter) Parameters type Type converter IPropertyConverter Returns ModelBuilder Entity<TEntity>() public EntityTypeBuilder<TEntity> Entity<TEntity>() where TEntity : class Returns EntityTypeBuilder<TEntity> Type Parameters TEntity"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Mapping | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Mapping Classes BaseDataModel<TDataModel, TDomain> Base abstract class representing a data model that can be mapped to/from a domain model. ModelBuilder Interfaces IEntityTypeDataModelMapper<T> Interface for configuring the mapping between an entity type and its corresponding data model using an EntityTypeBuilder."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Repository.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Repository.html",
    "title": "Class Repository | Innovt Platform",
    "keywords": "Class Repository Namespace Innovt.Cloud.AWS.Dynamo Assembly Innovt.Cloud.AWS.Dynamo.dll Base repository class for interacting with AWS DynamoDB tables. public abstract class Repository : AwsBaseService, ITableRepository, IDisposable Inheritance object AwsBaseService Repository Implements ITableRepository IDisposable Derived SampleRepository Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Repository(ILogger, IAwsConfiguration) Initializes a new instance of the Repository class. protected Repository(ILogger logger, IAwsConfiguration configuration) Parameters logger ILogger The logger. configuration IAwsConfiguration AWS configuration. Repository(ILogger, IAwsConfiguration, DynamoContext) Initializes a new instance of the Repository class using a context map. protected Repository(ILogger logger, IAwsConfiguration configuration, DynamoContext context) Parameters logger ILogger configuration IAwsConfiguration context DynamoContext Exceptions ArgumentNullException Repository(ILogger, IAwsConfiguration, string) Initializes a new instance of the Repository class. protected Repository(ILogger logger, IAwsConfiguration configuration, string region) Parameters logger ILogger The logger. configuration IAwsConfiguration AWS configuration. region string The AWS region. Methods AddAsync<T>(IList<T>, CancellationToken) Adds a list of items to the DynamoDB table. public Task AddAsync<T>(IList<T> messages, CancellationToken cancellationToken = default) where T : class Parameters messages IList<T> The list of items to add. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task Type Parameters T The type of items to add. Exceptions ArgumentNullException Thrown if the messages parameter is null. AddAsync<T>(T, CancellationToken) Asynchronously adds a single item to the repository. public Task AddAsync<T>(T message, CancellationToken cancellationToken = default) where T : class Parameters message T The item to add. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous add operation. Type Parameters T The type of item to add. BatchGetItem<T>(BatchGetItemRequest, CancellationToken) Gets a batch of items from the DynamoDB table based on the specified batch get item request. public Task<List<T>> BatchGetItem<T>(BatchGetItemRequest batchGetItemRequest, CancellationToken cancellationToken = default) where T : class Parameters batchGetItemRequest BatchGetItemRequest The batch get item request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<List<T>> The list of items retrieved. Type Parameters T The type of items to get. Exceptions ArgumentNullException Thrown when the batch get item request is null. BatchWriteItem(BatchWriteItemRequest, CancellationToken) Writes a batch of items to the DynamoDB table based on the specified batch write item request. public Task<BatchWriteItemResponse> BatchWriteItem(BatchWriteItemRequest batchWriteItemRequest, CancellationToken cancellationToken = default) Parameters batchWriteItemRequest BatchWriteItemRequest The batch write item request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<BatchWriteItemResponse> The response indicating the result of the batch write operation. Exceptions ArgumentNullException Thrown when the batch write item request is null. CreateDefaultRetryAsyncPolicy() Creates the default asynchronous retry policy for handling exceptions during operations. protected override AsyncRetryPolicy CreateDefaultRetryAsyncPolicy() Returns AsyncRetryPolicy The asynchronous retry policy instance. DeleteAsync<T>(List<T>, CancellationToken) Asynchronously a list of item that are from the same type. public Task DeleteAsync<T>(List<T> messages, CancellationToken cancellationToken = default) where T : class Parameters messages List<T> cancellationToken CancellationToken Returns Task Type Parameters T DeleteAsync<T>(object, string, CancellationToken) Asynchronously deletes an item using its identifier and optional range key. public Task DeleteAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class Parameters id object The identifier of the item. rangeKey string The range key for the item (optional). cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous delete operation. Type Parameters T The type of item to delete. DeleteAsync<T>(T, CancellationToken) Asynchronously deletes an item using its value. public Task DeleteAsync<T>(T message, CancellationToken cancellationToken = default) where T : class Parameters message T The item to delete. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous delete operation. Type Parameters T The type of item to delete. DisposeServices() Disposes the DynamoDB context and AmazonDynamoDBClient resources. protected override void DisposeServices() ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken) Executes a SQL statement asynchronously and returns the response containing items of type T. public Task<ExecuteSqlStatementResponse<T>> ExecuteStatementAsync<T>(ExecuteSqlStatementRequest sqlStatementRequest, CancellationToken cancellationToken = default) where T : class Parameters sqlStatementRequest ExecuteSqlStatementRequest The SQL statement request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<ExecuteSqlStatementResponse<T>> The response containing items of type T. Type Parameters T The type of items to be returned. Exceptions ArgumentNullException Thrown when the SQL statement request is null. GetByIdAsync<T>(object, string, CancellationToken) Asynchronously retrieves an item by its identifier. public Task<T> GetByIdAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class Parameters id object The identifier of the item. rangeKey string The range key for the item (optional). cancellationToken CancellationToken The cancellation token. Returns Task<T> An item of type T if found; otherwise, null. Type Parameters T The type of item to retrieve. QueryAsync<T>(QueryRequest, CancellationToken) Queries the DynamoDB table using a query request and returns a list of items. public Task<IList<T>> QueryAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<IList<T>> A list of items based on the query request. Type Parameters T The type of items to query. QueryAsync<T>(object, CancellationToken) Queries the DynamoDB table and returns a list of items with the specified id. public Task<IList<T>> QueryAsync<T>(object id, CancellationToken cancellationToken = default) where T : class Parameters id object The id to query. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<IList<T>> A list of items with the specified id. Type Parameters T The type of items to query. QueryFirstAsync<T>(object, CancellationToken) Asynchronously queries and retrieves the first item of type T by its identifier. public Task<T> QueryFirstAsync<T>(object id, CancellationToken cancellationToken = default) where T : class Parameters id object The identifier of the item. cancellationToken CancellationToken The cancellation token. Returns Task<T> An item of type T if found; otherwise, null. Type Parameters T The type of item to retrieve. QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken) Queries the DynamoDB table and returns the first or default item based on the query request. public Task<T> QueryFirstOrDefaultAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<T> The first or default item based on the query request. Type Parameters T The type of item to query. QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken) Queries the DynamoDB table using a query request and splits the results into two types based on a key. public Task<(IList<TResult1> first, IList<TResult2> second)> QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest request, string splitBy, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request. splitBy string The key to split the results. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<(IList<TResult1> first, IList<TResult2> second)> Tuple containing lists of items split based on the specified key. Type Parameters T The type of items to query. TResult1 The first type to split the results into. TResult2 The second type to split the results into. QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken) Queries the DynamoDB table using a query request and splits the results into three types based on specified keys. public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request. splitBy string[] The keys to split the results. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> Tuple containing lists of items split based on the specified keys. Type Parameters T The type of items to query. TResult1 The first type to split the results into. TResult2 The second type to split the results into. TResult3 The third type to split the results into. QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken) Queries the DynamoDB table using a query request and splits the results into four types based on specified keys. public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request. splitBy string[] The keys to split the results. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> Tuple containing lists of items split based on the specified keys. Type Parameters T The type of items to query. TResult1 The first type to split the results into. TResult2 The second type to split the results into. TResult3 The third type to split the results into. TResult4 The fourth type to split the results into. QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken) Queries the DynamoDB table using a query request and splits the results into five types based on specified keys. public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request. splitBy string[] The keys to split the results. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> Tuple containing lists of items split based on the specified keys. Type Parameters T The type of items to query. TResult1 The first type to split the results into. TResult2 The second type to split the results into. TResult3 The third type to split the results into. TResult4 The fourth type to split the results into. TResult5 The fifth type to split the results into. QueryPaginatedByAsync<T>(QueryRequest, CancellationToken) Queries the DynamoDB table using a query request and returns a paginated collection of items. public Task<PagedCollection<T>> QueryPaginatedByAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<PagedCollection<T>> A paginated collection of items based on the query request. Type Parameters T The type of items to query. ScanAsync<T>(ScanRequest, CancellationToken) Scans the DynamoDB table based on the specified scan request. public Task<IList<T>> ScanAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class Parameters request ScanRequest The scan request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<IList<T>> The list of scanned items. Type Parameters T The type of items to scan. ScanPaginatedByAsync<T>(ScanRequest, CancellationToken) Scans the DynamoDB table based on the specified scan request and returns a paginated collection of items. public Task<PagedCollection<T>> ScanPaginatedByAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class Parameters request ScanRequest The scan request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<PagedCollection<T>> A paginated collection of items based on the scan request. Type Parameters T The type of items to scan. Exceptions ArgumentNullException Thrown when the request is null. TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken) Writes a batch of transactional write items to the DynamoDB table. public Task TransactWriteItemsAsync(TransactionWriteRequest request, CancellationToken cancellationToken) Parameters request TransactionWriteRequest The transaction write request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task Task representing the asynchronous operation. Exceptions ArgumentNullException Thrown when the request is null. BusinessException Thrown when the number of transactItems is invalid. UpdateAsync(string, Dictionary<string, AttributeValue>, Dictionary<string, AttributeValueUpdate>, CancellationToken) Updates an item in the DynamoDB table based on the provided parameters. protected Task UpdateAsync(string tableName, Dictionary<string, AttributeValue> key, Dictionary<string, AttributeValueUpdate> attributeUpdates, CancellationToken cancellationToken = default) Parameters tableName string The name of the DynamoDB table. key Dictionary<string, AttributeValue> The key of the item to update. attributeUpdates Dictionary<string, AttributeValueUpdate> The attribute updates for the item. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task Task representing the asynchronous update operation. Exceptions ArgumentNullException Thrown when key or attributeUpdates is null. UpdateAsync<T>(UpdateItemRequest, CancellationToken) Updates an item in the DynamoDB table based on the provided update item request. protected Task<T> UpdateAsync<T>(UpdateItemRequest updateItemRequest, CancellationToken cancellationToken = default) Parameters updateItemRequest UpdateItemRequest The update item request. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<T> The updated item of type T. Type Parameters T The type of item to update. Exceptions ArgumentNullException Thrown when updateItemRequest is null. UpdateAsync<T>(T, CancellationToken) This method will perform an update operation on the table. The operation is based on the primary key and type is PUT. public Task<T> UpdateAsync<T>(T instance, CancellationToken cancellationToken = default) where T : class Parameters instance T The instance that you want to update cancellationToken CancellationToken A cancellation token. Returns Task<T> Type Parameters T The instance updated. Exceptions ArgumentNullException"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.DynamoHelperTests.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.DynamoHelperTests.html",
    "title": "Class DynamoHelperTests | Innovt Platform",
    "keywords": "Class DynamoHelperTests Namespace Innovt.Cloud.AWS.Dynamo.Tests Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll [TestFixture] public class DynamoHelperTests Inheritance object DynamoHelperTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CreateExpressionAttributeValues() [Test] public void CreateExpressionAttributeValues()"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.EntityTypeBuilderTests.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.EntityTypeBuilderTests.html",
    "title": "Class EntityTypeBuilderTests | Innovt Platform",
    "keywords": "Class EntityTypeBuilderTests Namespace Innovt.Cloud.AWS.Dynamo.Tests Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll [TestFixture] public class EntityTypeBuilderTests Inheritance object EntityTypeBuilderTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AddTheSamePropertyShouldBeIgnored() [Test] public void AddTheSamePropertyShouldBeIgnored() CheckMaxLength() [Test] public void CheckMaxLength() ConfigureShouldReturnAllMappedAttributes() [Test] public void ConfigureShouldReturnAllMappedAttributes() IgnoringProperties() [Test] public void IgnoringProperties()"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.Address.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.Address.html",
    "title": "Class Address | Innovt Platform",
    "keywords": "Class Address Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll Represents a user in the application. public class Address : ITableMessage Inheritance object Address Implements ITableMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id Gets or sets the unique identifier for the table message. public string Id { get; set; } Property Value string Street public string Street { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.BaseUser.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.BaseUser.html",
    "title": "Class BaseUser | Innovt Platform",
    "keywords": "Class BaseUser Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll Represents a user in the application. public class BaseUser : BaseUserOne Inheritance object Entity Entity<Guid> BaseUserOne BaseUser Derived User Inherited Members Entity<Guid>.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Picture public string Picture { get; set; } Property Value string Picture2 public string Picture2 { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.BaseUserOne.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.BaseUserOne.html",
    "title": "Class BaseUserOne | Innovt Platform",
    "keywords": "Class BaseUserOne Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll public class BaseUserOne : Entity<Guid> Inheritance object Entity Entity<Guid> BaseUserOne Derived BaseUser Inherited Members Entity<Guid>.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.Company.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.Company.html",
    "title": "Class Company | Innovt Platform",
    "keywords": "Class Company Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll Represents a user in the application. public class Company : ITableMessage Inheritance object Company Implements ITableMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id Gets or sets the unique identifier for the table message. public string Id { get; set; } Property Value string Name public string Name { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.CompanyMap.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.CompanyMap.html",
    "title": "Class CompanyMap | Innovt Platform",
    "keywords": "Class CompanyMap Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll Implementation of IEntityTypeDataModelMapper for mapping the UserSample entity to its corresponding data model. public class CompanyMap : IEntityTypeDataModelMapper<Company> Inheritance object CompanyMap Implements IEntityTypeDataModelMapper<Company> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Configure(EntityTypeBuilder<Company>) Configures the mapping between the UserSample entity and its corresponding data model using the provided EntityTypeBuilder. public void Configure(EntityTypeBuilder<Company> builder) Parameters builder EntityTypeBuilder<Company> The EntityTypeBuilder used to configure the mapping."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.User.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.User.html",
    "title": "Class User | Innovt Platform",
    "keywords": "Class User Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll public class User : BaseUser Inheritance object Entity Entity<Guid> BaseUserOne BaseUser User Inherited Members BaseUser.Picture2 BaseUser.Picture Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors User() public User() Properties Context public string Context { get; set; } Property Value string CreatedAt public DateTimeOffset? CreatedAt { get; set; } Property Value DateTimeOffset? Email public string Email { get; set; } Property Value string FirstName public string FirstName { get; set; } Property Value string Id public string Id { get; set; } Property Value string IsActive public bool IsActive { get; set; } Property Value bool JobPositionId public int JobPositionId { get; set; } Property Value int LastAccess public DateTime? LastAccess { get; set; } Property Value DateTime? LastName public string LastName { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.UserMap.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.UserMap.html",
    "title": "Class UserMap | Innovt Platform",
    "keywords": "Class UserMap Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll Implementation of IEntityTypeDataModelMapper for mapping the UserSample entity to its corresponding data model. public class UserMap : IEntityTypeDataModelMapper<User> Inheritance object UserMap Implements IEntityTypeDataModelMapper<User> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Configure(EntityTypeBuilder<User>) Configures the mapping between the UserSample entity and its corresponding data model using the provided EntityTypeBuilder. public void Configure(EntityTypeBuilder<User> builder) Parameters builder EntityTypeBuilder<User> The EntityTypeBuilder used to configure the mapping."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Mapping.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Tests.Mapping Classes Address Represents a user in the application. BaseUser Represents a user in the application. BaseUserOne Company Represents a user in the application. CompanyMap Implementation of IEntityTypeDataModelMapper for mapping the UserSample entity to its corresponding data model. User UserMap Implementation of IEntityTypeDataModelMapper for mapping the UserSample entity to its corresponding data model."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.RepositoryTests.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.RepositoryTests.html",
    "title": "Class RepositoryTests | Innovt Platform",
    "keywords": "Class RepositoryTests Namespace Innovt.Cloud.AWS.Dynamo.Tests Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll [TestFixture] [Ignore(\"Only for local tests\")] public class RepositoryTests Inheritance object RepositoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AddDeleteAndQuery() [Test] public Task AddDeleteAndQuery() Returns Task ContextAddAndDeleteBatch() [Test] public Task ContextAddAndDeleteBatch() Returns Task TearDown() [TearDown] public void TearDown() TearUp() [SetUp] public void TearUp() UpdateOperation() [Test] public Task UpdateOperation() Returns Task"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.SampleDynamoContext.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.SampleDynamoContext.html",
    "title": "Class SampleDynamoContext | Innovt Platform",
    "keywords": "Class SampleDynamoContext Namespace Innovt.Cloud.AWS.Dynamo.Tests Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll public class SampleDynamoContext : DynamoContext Inheritance object DynamoContext SampleDynamoContext Inherited Members DynamoContext.Entities DynamoContext.HasTypeBuilder<T>() DynamoContext.GetTypeBuilder<T>() DynamoContext.GetPropertyConverter(Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods OnModelCreating(ModelBuilder) protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.SampleRepository.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.SampleRepository.html",
    "title": "Class SampleRepository | Innovt Platform",
    "keywords": "Class SampleRepository Namespace Innovt.Cloud.AWS.Dynamo.Tests Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll public class SampleRepository : Repository, ITableRepository, IDisposable Inheritance object AwsBaseService Repository SampleRepository Implements ITableRepository IDisposable Inherited Members Repository.ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken) Repository.BatchGetItem<T>(BatchGetItemRequest, CancellationToken) Repository.CreateDefaultRetryAsyncPolicy() Repository.DisposeServices() Repository.AddAsync<T>(T, CancellationToken) Repository.AddAsync<T>(IList<T>, CancellationToken) Repository.TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken) Repository.BatchWriteItem(BatchWriteItemRequest, CancellationToken) Repository.DeleteAsync<T>(T, CancellationToken) Repository.DeleteAsync<T>(List<T>, CancellationToken) Repository.DeleteAsync<T>(object, string, CancellationToken) Repository.UpdateAsync<T>(T, CancellationToken) Repository.UpdateAsync(string, Dictionary<string, AttributeValue>, Dictionary<string, AttributeValueUpdate>, CancellationToken) Repository.UpdateAsync<T>(UpdateItemRequest, CancellationToken) Repository.QueryFirstAsync<T>(object, CancellationToken) Repository.GetByIdAsync<T>(object, string, CancellationToken) Repository.QueryAsync<T>(object, CancellationToken) Repository.QueryAsync<T>(QueryRequest, CancellationToken) Repository.QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken) Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken) Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken) Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken) Repository.QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken) Repository.QueryPaginatedByAsync<T>(QueryRequest, CancellationToken) Repository.ScanAsync<T>(ScanRequest, CancellationToken) Repository.ScanPaginatedByAsync<T>(ScanRequest, CancellationToken) AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SampleRepository(DynamoContext, ILogger, IAwsConfiguration) public SampleRepository(DynamoContext dynamoContext, ILogger logger, IAwsConfiguration configuration) Parameters dynamoContext DynamoContext logger ILogger configuration IAwsConfiguration"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Specifications.UserByIdSpecification.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Specifications.UserByIdSpecification.html",
    "title": "Class UserByIdSpecification | Innovt Platform",
    "keywords": "Class UserByIdSpecification Namespace Innovt.Cloud.AWS.Dynamo.Tests.Specifications Assembly Innovt.Cloud.AWS.Dynamo.Tests.dll public class UserByIdSpecification : ISpecification<User> Inheritance object UserByIdSpecification Implements ISpecification<User> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors UserByIdSpecification(Guid) public UserByIdSpecification(Guid id) Parameters id Guid Properties Id public Guid Id { get; set; } Property Value Guid Page public int? Page { get; set; } Property Value int? PageSize public int? PageSize { get; set; } Property Value int? Methods SatisfiedBy() Check if this specification is satisfied by a specific expression lambda public Expression<Func<User, bool>> SatisfiedBy() Returns Expression<Func<User, bool>>"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.Specifications.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.Specifications.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Tests.Specifications | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Tests.Specifications Classes UserByIdSpecification"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Tests Classes DynamoHelperTests EntityTypeBuilderTests RepositoryTests SampleDynamoContext SampleRepository"
  },
  "api/Innovt.Cloud.AWS.Dynamo.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo Classes DynamoContext This class is responsible for managing the context of the DynamoDB for Code First strategy. Repository Base repository class for interacting with AWS DynamoDB tables."
  },
  "api/Innovt.Cloud.AWS.Kinesis.DataProducer-1.html": {
    "href": "api/Innovt.Cloud.AWS.Kinesis.DataProducer-1.html",
    "title": "Class DataProducer<T> | Innovt Platform",
    "keywords": "Class DataProducer<T> Namespace Innovt.Cloud.AWS.Kinesis Assembly Innovt.Cloud.AWS.Kinesis.dll Represents a data producer for publishing data to an Amazon Kinesis stream. public class DataProducer<T> : AwsBaseService, IDisposable where T : class, IDataStream Type Parameters T The type of data streams to be published. Inheritance object AwsBaseService DataProducer<T> Implements IDisposable Derived EventHandler Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DataProducer(string, ILogger, IAwsConfiguration) Initializes a new instance of the DataProducer<T> class with the specified bus name, logger, and AWS configuration. protected DataProducer(string busName, ILogger logger, IAwsConfiguration configuration) Parameters busName string The name of the Kinesis data stream (bus) to which data will be published. logger ILogger The logger for logging informational and error messages. configuration IAwsConfiguration The AWS configuration used to create AWS service clients. DataProducer(string, ILogger, IAwsConfiguration, string) Initializes a new instance of the DataProducer<T> class with the specified bus name, logger, AWS configuration, and AWS region. protected DataProducer(string busName, ILogger logger, IAwsConfiguration configuration, string region) Parameters busName string The name of the Kinesis data stream (bus) to which data will be published. logger ILogger The logger for logging informational and error messages. configuration IAwsConfiguration The AWS configuration used to create AWS service clients. region string The AWS region in which the Kinesis data stream is located. Fields ActivityDataProducer protected static readonly ActivitySource ActivityDataProducer Field Value ActivitySource Methods DisposeServices() Disposes the Amazon Kinesis client when the service is no longer needed. protected override void DisposeServices() Publish(IEnumerable<T>, CancellationToken) Publishes a collection of data streams to the Kinesis data stream asynchronously. public Task Publish(IEnumerable<T> events, CancellationToken cancellationToken = default) Parameters events IEnumerable<T> The collection of data streams to be published. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task Task representing the asynchronous publish operation. Publish(T, CancellationToken) Publishes a single data stream to the Kinesis data stream asynchronously. public Task Publish(T data, CancellationToken cancellationToken = default) Parameters data T The data stream to be published. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task Task representing the asynchronous publish operation."
  },
  "api/Innovt.Cloud.AWS.Kinesis.EventHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Kinesis.EventHandler.html",
    "title": "Class EventHandler | Innovt Platform",
    "keywords": "Class EventHandler Namespace Innovt.Cloud.AWS.Kinesis Assembly Innovt.Cloud.AWS.Kinesis.dll The event handler for processing domain events and publishing them to an AWS Kinesis stream. public class EventHandler : DataProducer<DomainEvent>, IDisposable, IEventHandler Inheritance object AwsBaseService DataProducer<DomainEvent> EventHandler Implements IDisposable IEventHandler Inherited Members DataProducer<DomainEvent>.ActivityDataProducer DataProducer<DomainEvent>.Publish(DomainEvent, CancellationToken) DataProducer<DomainEvent>.Publish(IEnumerable<DomainEvent>, CancellationToken) DataProducer<DomainEvent>.DisposeServices() AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors EventHandler(string, ILogger, IAwsConfiguration) Initializes a new instance of the EventHandler class with the specified parameters. public EventHandler(string busName, ILogger logger, IAwsConfiguration configuration) Parameters busName string The name of the AWS Kinesis stream to publish events to. logger ILogger The logger instance for logging events. configuration IAwsConfiguration The AWS configuration for accessing AWS services. EventHandler(string, ILogger, IAwsConfiguration, string) Initializes a new instance of the EventHandler class with the specified parameters. public EventHandler(string busName, ILogger logger, IAwsConfiguration configuration, string region) Parameters busName string The name of the AWS Kinesis stream to publish events to. logger ILogger The logger instance for logging events. configuration IAwsConfiguration The AWS configuration for accessing AWS services. region string The AWS region to use."
  },
  "api/Innovt.Cloud.AWS.Kinesis.html": {
    "href": "api/Innovt.Cloud.AWS.Kinesis.html",
    "title": "Namespace Innovt.Cloud.AWS.Kinesis | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Kinesis Classes DataProducer<T> Represents a data producer for publishing data to an Amazon Kinesis stream. EventHandler The event handler for processing domain events and publishing them to an AWS Kinesis stream."
  },
  "api/Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html",
    "title": "Class BaseEventProcessor | Innovt Platform",
    "keywords": "Class BaseEventProcessor Namespace Innovt.Cloud.AWS.Lambda Assembly Innovt.Cloud.AWS.Lambda.dll Represents a base class for event processors with common functionality such as logging, IOC container setup, and configuration. public abstract class BaseEventProcessor Inheritance object BaseEventProcessor Derived EventProcessor<T> EventProcessor<T, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BaseEventProcessor() protected BaseEventProcessor() BaseEventProcessor(ILogger) Initializes a new instance of the BaseEventProcessor class. protected BaseEventProcessor(ILogger logger) Parameters logger ILogger BaseEventProcessor(ILogger, IConfigurationRoot) Allows to use the configuration and logger from outside. In This case, the method SetupConfiguration will not be called. protected BaseEventProcessor(ILogger logger, IConfigurationRoot configuration) Parameters logger ILogger The logger provider. configuration IConfigurationRoot The configuration to be used. Exceptions ArgumentNullException If the logger or configuration is null. BaseEventProcessor(IConfigurationRoot) Allows to use the configuration from outside. In This case, the method SetupConfiguration will not be called. protected BaseEventProcessor(IConfigurationRoot configuration) Parameters configuration IConfigurationRoot The configuration to be used. Exceptions ArgumentNullException If the logger or configuration is null. Fields EventProcessorActivitySource Initializes a new instance of the BaseEventProcessor class with an optional logger. protected static readonly ActivitySource EventProcessorActivitySource Field Value ActivitySource Properties Configuration Gets or sets the configuration root for accessing application settings. protected IConfigurationRoot Configuration { get; set; } Property Value IConfigurationRoot Context Gets or sets the Lambda context associated with the event processing. protected ILambdaContext Context { get; set; } Property Value ILambdaContext Logger Gets or sets the logger for recording processing information. protected ILogger Logger { get; } Property Value ILogger Methods EnrichConfiguration(ConfigurationBuilder) Configures additional sources for enriching the application configuration. protected virtual void EnrichConfiguration(ConfigurationBuilder configurationBuilder) Parameters configurationBuilder ConfigurationBuilder The configuration builder to which additional sources can be added. InitializeLogger(IContainer) Initializes the logger with an optional logger instance or creates a new logger if not provided. protected void InitializeLogger(IContainer iocContainer = null) Parameters iocContainer IContainer An optional logger instance to use. SetupConfiguration() Sets up the application configuration using environment variables and JSON files. When the configuration is already set, this method does nothing. protected virtual void SetupConfiguration() SetupIoc() Sets up the Inversion of Control (IOC) container for managing dependencies. protected void SetupIoc() SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected abstract IContainer SetupIocContainer() Returns IContainer The configured IOC container. StartBaseActivity(string) Starts a new activity for tracing and adds relevant tags and baggage information. protected Activity StartBaseActivity(string activityName) Parameters activityName string The name of the activity to start. Returns Activity The started Activity."
  },
  "api/Innovt.Cloud.AWS.Lambda.BatchFailureResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.BatchFailureResponse.html",
    "title": "Class BatchFailureResponse | Innovt Platform",
    "keywords": "Class BatchFailureResponse Namespace Innovt.Cloud.AWS.Lambda Assembly Innovt.Cloud.AWS.Lambda.dll Represents a response containing information about batch item failures. public class BatchFailureResponse Inheritance object BatchFailureResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties BatchItemFailures Gets the list of batch item failures identified by their item identifiers. [JsonPropertyName(\"batchItemFailures\")] public IList<ItemFailureIdentifier> BatchItemFailures { get; } Property Value IList<ItemFailureIdentifier> Methods AddItem(string) Adds a batch item failure to the response using its item identifier. public void AddItem(string itemIdentifier) Parameters itemIdentifier string The identifier of the failed item to add to the response. AddItems(IEnumerable<string>) Adds multiple batch item failures to the response using their item identifiers. public void AddItems(IEnumerable<string> itemsIdentifier) Parameters itemsIdentifier IEnumerable<string> A collection of item identifiers for the failed items to add to the response."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.ChallengeResultItem.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.ChallengeResultItem.html",
    "title": "Class ChallengeResultItem | Innovt Platform",
    "keywords": "Class ChallengeResultItem Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents an item containing information about a challenge result. [DataContract] public class ChallengeResultItem Inheritance object ChallengeResultItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ChallengeMetadata Gets or sets metadata associated with the challenge. public string ChallengeMetadata { get; set; } Property Value string ChallengeName Gets or sets the name of the challenge. public string ChallengeName { get; set; } Property Value string ChallengeResult Gets or sets a value indicating whether the challenge was successful. public bool ChallengeResult { get; set; } Property Value bool"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.ClaimOverrideDetails.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.ClaimOverrideDetails.html",
    "title": "Class ClaimOverrideDetails | Innovt Platform",
    "keywords": "Class ClaimOverrideDetails Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents details for overriding claims in a token. [DataContract] public class ClaimOverrideDetails Inheritance object ClaimOverrideDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ClaimsToAddOrOverride Gets or sets the claims to add or override in the token. [DataMember(Name = \"claimsToAddOrOverride\")] [JsonPropertyName(\"claimsToAddOrOverride\")] public Dictionary<string, string> ClaimsToAddOrOverride { get; set; } Property Value Dictionary<string, string> ClaimsToSuppress Gets or sets the claims to suppress in the token. [DataMember(Name = \"claimsToSuppress\")] [JsonPropertyName(\"claimsToSuppress\")] public List<string> ClaimsToSuppress { get; set; } Property Value List<string> GroupOverrideDetails Gets or sets group override details associated with the token. [DataMember(Name = \"groupOverrideDetails\")] [JsonPropertyName(\"groupOverrideDetails\")] public GroupConfiguration GroupOverrideDetails { get; set; } Property Value GroupConfiguration"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeEvent.html",
    "title": "Class CreateAuthChallengeEvent | Innovt Platform",
    "keywords": "Class CreateAuthChallengeEvent Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Class to represents an event for creating authentication challenges. public class CreateAuthChallengeEvent : TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse> Inheritance object TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse> CreateAuthChallengeEvent Inherited Members TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.Version TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.Region TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.UserPoolId TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.UserName TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.CallerContext TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.TriggerSource TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.Request TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeRequest.html",
    "title": "Class CreateAuthChallengeRequest | Innovt Platform",
    "keywords": "Class CreateAuthChallengeRequest Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Class to represents a request for creating authentication challenges. public class CreateAuthChallengeRequest : TriggerRequest Inheritance object TriggerRequest CreateAuthChallengeRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ChallengeName Gets or sets the name of the authentication challenge. [DataMember(Name = \"challengeName\")] [JsonPropertyName(\"challengeName\")] public string ChallengeName { get; set; } Property Value string ClientMetadata Gets or sets the client-specific metadata associated with the request. [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Dictionary<string, string> Session Gets or sets a list of challenge result items associated with the user's session. [DataMember(Name = \"session\")] [JsonPropertyName(\"session\")] public List<ChallengeResultItem> Session { get; set; } Property Value List<ChallengeResultItem> UserNotFound Gets or sets a value indicating whether the user was not found. [DataMember(Name = \"userNotFound\")] [JsonPropertyName(\"userNotFound\")] public bool UserNotFound { get; set; } Property Value bool"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeResponse.html",
    "title": "Class CreateAuthChallengeResponse | Innovt Platform",
    "keywords": "Class CreateAuthChallengeResponse Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Class to represents a response for creating authentication challenges. public class CreateAuthChallengeResponse : TriggerResponse Inheritance object TriggerResponse CreateAuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ChallengeMetadata Gets or sets metadata associated with the authentication challenge. [DataMember(Name = \"challengeMetadata\")] [JsonPropertyName(\"challengeMetadata\")] public string ChallengeMetadata { get; set; } Property Value string PrivateChallengeParameters Gets or sets the private challenge parameters associated with the response. [DataMember(Name = \"privateChallengeParameters\")] [JsonPropertyName(\"privateChallengeParameters\")] public Dictionary<string, string> PrivateChallengeParameters { get; set; } Property Value Dictionary<string, string> PublicChallengeParameters Gets or sets the public challenge parameters associated with the response. [DataMember(Name = \"publicChallengeParameters\")] [JsonPropertyName(\"publicChallengeParameters\")] public Dictionary<string, string> PublicChallengeParameters { get; set; } Property Value Dictionary<string, string>"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge Classes CreateAuthChallengeEvent Class to represents an event for creating authentication challenges. CreateAuthChallengeRequest Class to represents a request for creating authentication challenges. CreateAuthChallengeResponse Class to represents a response for creating authentication challenges."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeEvent.html",
    "title": "Class DefineAuthChallengeEvent | Innovt Platform",
    "keywords": "Class DefineAuthChallengeEvent Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents an event for defining authentication challenges. public class DefineAuthChallengeEvent : TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse> Inheritance object TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse> DefineAuthChallengeEvent Inherited Members TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.Version TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.Region TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.UserPoolId TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.UserName TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.CallerContext TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.TriggerSource TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.Request TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeRequest.html",
    "title": "Class DefineAuthChallengeRequest | Innovt Platform",
    "keywords": "Class DefineAuthChallengeRequest Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a request for defining authentication challenges. public class DefineAuthChallengeRequest : TriggerRequest Inheritance object TriggerRequest DefineAuthChallengeRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ClientMetadata Gets or sets the client-specific metadata associated with the request. [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Dictionary<string, string> Session Gets or sets a list of challenge result items associated with the user's session. [DataMember(Name = \"session\")] [JsonPropertyName(\"session\")] public List<ChallengeResultItem> Session { get; set; } Property Value List<ChallengeResultItem> UserNotFound Gets or sets a value indicating whether the user was not found. [DataMember(Name = \"userNotFound\")] [JsonPropertyName(\"userNotFound\")] public bool UserNotFound { get; set; } Property Value bool"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeResponse.html",
    "title": "Class DefineAuthChallengeResponse | Innovt Platform",
    "keywords": "Class DefineAuthChallengeResponse Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a response for defining authentication challenges. [DataContract] public class DefineAuthChallengeResponse : TriggerResponse Inheritance object TriggerResponse DefineAuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ChallengeName Gets or sets the name of the authentication challenge. [DataMember(Name = \"challengeName\")] [JsonPropertyName(\"challengeName\")] public string ChallengeName { get; set; } Property Value string FailAuthentication Gets or sets a value indicating whether authentication should fail. [DataMember(Name = \"failAuthentication\")] [JsonPropertyName(\"failAuthentication\")] public bool? FailAuthentication { get; set; } Property Value bool? IssueTokens Gets or sets a value indicating whether to issue tokens. [DataMember(Name = \"issueTokens\")] [JsonPropertyName(\"issueTokens\")] public bool? IssueTokens { get; set; } Property Value bool?"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge Classes DefineAuthChallengeEvent Represents an event for defining authentication challenges. DefineAuthChallengeRequest Represents a request for defining authentication challenges. DefineAuthChallengeResponse Represents a response for defining authentication challenges."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.GroupConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.GroupConfiguration.html",
    "title": "Class GroupConfiguration | Innovt Platform",
    "keywords": "Class GroupConfiguration Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents configuration for overriding groups and IAM roles. [DataContract] public class GroupConfiguration Inheritance object GroupConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties GroupsToOverride Gets or sets the list of groups to override. [DataMember(Name = \"groupsToOverride\")] [JsonPropertyName(\"groupsToOverride\")] public List<string> GroupsToOverride { get; set; } Property Value List<string> IamRolesToOverride Gets or sets the list of IAM roles to override. [DataMember(Name = \"iamRolesToOverride\")] [JsonPropertyName(\"iamRolesToOverride\")] public List<string> IamRolesToOverride { get; set; } Property Value List<string> PreferredRole Gets or sets the preferred role. [DataMember(Name = \"preferredRole\")] [JsonPropertyName(\"preferredRole\")] public string PreferredRole { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationEvent.html",
    "title": "Class PostConfirmationEvent | Innovt Platform",
    "keywords": "Class PostConfirmationEvent Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents an event for post-confirmation actions. public class PostConfirmationEvent : TriggerEvent<PostConfirmationRequest, PostConfirmationResponse> Inheritance object TriggerEvent<PostConfirmationRequest, PostConfirmationResponse> PostConfirmationEvent Inherited Members TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.Version TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.Region TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.UserPoolId TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.UserName TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.CallerContext TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.TriggerSource TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.Request TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationRequest.html",
    "title": "Class PostConfirmationRequest | Innovt Platform",
    "keywords": "Class PostConfirmationRequest Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a request for post-confirmation actions. public class PostConfirmationRequest : TriggerRequest Inheritance object TriggerRequest PostConfirmationRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ClientMetadata Gets or sets the client-specific metadata associated with the request. [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Dictionary<string, string>"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationResponse.html",
    "title": "Class PostConfirmationResponse | Innovt Platform",
    "keywords": "Class PostConfirmationResponse Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a response for post-confirmation actions. public class PostConfirmationResponse : TriggerResponse Inheritance object TriggerResponse PostConfirmationResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation Classes PostConfirmationEvent Represents an event for post-confirmation actions. PostConfirmationRequest Represents a request for post-confirmation actions. PostConfirmationResponse Represents a response for post-confirmation actions."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupEvent.html",
    "title": "Class PreSignupEvent | Innovt Platform",
    "keywords": "Class PreSignupEvent Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents an event for post-confirmation actions. public class PreSignupEvent : TriggerEvent<PreSignupRequest, PreSignupResponse> Inheritance object TriggerEvent<PreSignupRequest, PreSignupResponse> PreSignupEvent Inherited Members TriggerEvent<PreSignupRequest, PreSignupResponse>.Version TriggerEvent<PreSignupRequest, PreSignupResponse>.Region TriggerEvent<PreSignupRequest, PreSignupResponse>.UserPoolId TriggerEvent<PreSignupRequest, PreSignupResponse>.UserName TriggerEvent<PreSignupRequest, PreSignupResponse>.CallerContext TriggerEvent<PreSignupRequest, PreSignupResponse>.TriggerSource TriggerEvent<PreSignupRequest, PreSignupResponse>.Request TriggerEvent<PreSignupRequest, PreSignupResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupRequest.html",
    "title": "Class PreSignupRequest | Innovt Platform",
    "keywords": "Class PreSignupRequest Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a request for post-confirmation actions. public class PreSignupRequest : TriggerRequest Inheritance object TriggerRequest PreSignupRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ClientMetadata Gets or sets the client-specific metadata associated with the request. [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Dictionary<string, string> ValidationData One or more name-value pairs containing the validation data in the request to register a user. The validation data is set and then passed from the client in the request to register a user. You can pass this data to your Lambda function by using the ClientMetadata parameter in the InitiateAuth and AdminInitiateAuth API actions. [DataMember(Name = \"validationData\")] [JsonPropertyName(\"validationData\")] public Dictionary<string, string> ValidationData { get; set; } Property Value Dictionary<string, string>"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupResponse.html",
    "title": "Class PreSignupResponse | Innovt Platform",
    "keywords": "Class PreSignupResponse Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a response for post-confirmation actions. public class PreSignupResponse : TriggerResponse Inheritance object TriggerResponse PreSignupResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AutoConfirmUser Set to true to auto-confirm the user, or false otherwise. public bool AutoConfirmUser { get; set; } Property Value bool AutoVerifyEmail Set to true to set as verified the phone number of a user who is signing up, or false otherwise. If autoVerifyPhone is set to true, the phone_number attribute must have a valid, non-null value. Otherwise an error will occur and the user will not be able to complete sign-up. public bool AutoVerifyEmail { get; set; } Property Value bool AutoVerifyPhone Set to true to set as verified the email of a user who is signing up, or false otherwise. If autoVerifyEmail is set to true, the email attribute must have a valid, non-null value. Otherwise an error will occur and the user will not be able to complete sign-up. public bool AutoVerifyPhone { get; set; } Property Value bool"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup Classes PreSignupEvent Represents an event for post-confirmation actions. PreSignupRequest Represents a request for post-confirmation actions. PreSignupResponse Represents a response for post-confirmation actions."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationEvent.html",
    "title": "Class PreTokenGenerationEvent | Innovt Platform",
    "keywords": "Class PreTokenGenerationEvent Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents an event for pre-token generation actions. public class PreTokenGenerationEvent : TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse> Inheritance object TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse> PreTokenGenerationEvent Inherited Members TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.Version TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.Region TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.UserPoolId TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.UserName TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.CallerContext TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.TriggerSource TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.Request TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationRequest.html",
    "title": "Class PreTokenGenerationRequest | Innovt Platform",
    "keywords": "Class PreTokenGenerationRequest Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a request for pre-token generation actions. public class PreTokenGenerationRequest : TriggerRequest Inheritance object TriggerRequest PreTokenGenerationRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ClientMetadata Gets or sets the client-specific metadata associated with the request. [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Dictionary<string, string> GroupConfiguration Gets or sets the group configuration associated with the request. [DataMember(Name = \"groupConfiguration\")] [JsonPropertyName(\"groupConfiguration\")] public GroupConfiguration GroupConfiguration { get; set; } Property Value GroupConfiguration"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationResponse.html",
    "title": "Class PreTokenGenerationResponse | Innovt Platform",
    "keywords": "Class PreTokenGenerationResponse Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a response for pre-token generation actions. public class PreTokenGenerationResponse : TriggerResponse Inheritance object TriggerResponse PreTokenGenerationResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ClaimsOverrideDetails Gets or sets the claim override details associated with the response. [DataMember(Name = \"claimsOverrideDetails\")] [JsonPropertyName(\"claimsOverrideDetails\")] public ClaimOverrideDetails ClaimsOverrideDetails { get; set; } Property Value ClaimOverrideDetails"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration Classes PreTokenGenerationEvent Represents an event for pre-token generation actions. PreTokenGenerationRequest Represents a request for pre-token generation actions. PreTokenGenerationResponse Represents a response for pre-token generation actions."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests.DefineAuthChallengeHandlerTests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests.DefineAuthChallengeHandlerTests.html",
    "title": "Class DefineAuthChallengeHandlerTests | Innovt Platform",
    "keywords": "Class DefineAuthChallengeHandlerTests Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests.dll [TestFixture] public class DefineAuthChallengeHandlerTests Inheritance object DefineAuthChallengeHandlerTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods ParseEvent_Whit_IssueToken_Null_Returns_NUll() [Test] public void ParseEvent_Whit_IssueToken_Null_Returns_NUll() ParseEvent_Whit_IssueToken_Returns_Value() [Test] public void ParseEvent_Whit_IssueToken_Returns_Value()"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests.VerifyAuthChallengeHandlerTests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests.VerifyAuthChallengeHandlerTests.html",
    "title": "Class VerifyAuthChallengeHandlerTests | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeHandlerTests Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests.dll [TestFixture] public class VerifyAuthChallengeHandlerTests Inheritance object VerifyAuthChallengeHandlerTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Parse_With_ChallengeAnswer_AsString_Returns_TheValue() [Test] public void Parse_With_ChallengeAnswer_AsString_Returns_TheValue()"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.Tests Classes DefineAuthChallengeHandlerTests VerifyAuthChallengeHandlerTests"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext.html",
    "title": "Class TriggerCallerContext | Innovt Platform",
    "keywords": "Class TriggerCallerContext Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents context information about the trigger caller. public class TriggerCallerContext Inheritance object TriggerCallerContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AwsSdkVersion Gets or sets the AWS SDK version used by the caller. [DataMember(Name = \"awsSdkVersion\")] [JsonPropertyName(\"awsSdkVersion\")] public string AwsSdkVersion { get; set; } Property Value string ClientId Gets or sets the client ID associated with the caller. [DataMember(Name = \"clientId\")] [JsonPropertyName(\"clientId\")] public string ClientId { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html",
    "title": "Class TriggerEvent<TRequest, TResponse> | Innovt Platform",
    "keywords": "Class TriggerEvent<TRequest, TResponse> Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a base class for trigger events with request and response types. [DataContract] public abstract class TriggerEvent<TRequest, TResponse> where TRequest : TriggerRequest, new() where TResponse : TriggerResponse, new() Type Parameters TRequest The type of the trigger request. TResponse The type of the trigger response. Inheritance object TriggerEvent<TRequest, TResponse> Derived CreateAuthChallengeEvent DefineAuthChallengeEvent PostConfirmationEvent PreSignupEvent PreTokenGenerationEvent VerifyAuthChallengeEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties CallerContext Gets or sets the caller context associated with the event. [DataMember(Name = \"callerContext\")] [JsonPropertyName(\"callerContext\")] public TriggerCallerContext CallerContext { get; set; } Property Value TriggerCallerContext Region Gets or sets the region associated with the event. [DataMember(Name = \"region\")] [JsonPropertyName(\"region\")] public string Region { get; set; } Property Value string Request Gets or sets the request associated with the event. [DataMember(Name = \"request\")] [JsonPropertyName(\"request\")] public TRequest Request { get; set; } Property Value TRequest Response Gets or sets the response associated with the event. [DataMember(Name = \"response\")] [JsonPropertyName(\"response\")] public TResponse Response { get; set; } Property Value TResponse TriggerSource Gets or sets the trigger source associated with the event. [DataMember(Name = \"triggerSource\")] [JsonPropertyName(\"triggerSource\")] public string TriggerSource { get; set; } Property Value string UserName Gets or sets the user name associated with the event. [DataMember(Name = \"userName\")] [JsonPropertyName(\"userName\")] public string UserName { get; set; } Property Value string UserPoolId Gets or sets the user pool ID associated with the event. [DataMember(Name = \"userPoolId\")] [JsonPropertyName(\"userPoolId\")] public string UserPoolId { get; set; } Property Value string Version Gets or sets the version associated with the event. [DataMember(Name = \"version\")] [JsonPropertyName(\"version\")] public string Version { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerRequest.html",
    "title": "Class TriggerRequest | Innovt Platform",
    "keywords": "Class TriggerRequest Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a base class for trigger request objects. [DataContract] public abstract class TriggerRequest Inheritance object TriggerRequest Derived CreateAuthChallengeRequest DefineAuthChallengeRequest PostConfirmationRequest PreSignupRequest PreTokenGenerationRequest VerifyAuthChallengeRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties UserAttributes Gets or sets user attributes associated with the request. [DataMember(Name = \"userAttributes\")] [JsonPropertyName(\"userAttributes\")] public Dictionary<string, string> UserAttributes { get; set; } Property Value Dictionary<string, string>"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerResponse.html",
    "title": "Class TriggerResponse | Innovt Platform",
    "keywords": "Class TriggerResponse Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a base class for trigger response objects. [DataContract] public abstract class TriggerResponse Inheritance object TriggerResponse Derived CreateAuthChallengeResponse DefineAuthChallengeResponse PostConfirmationResponse PreSignupResponse PreTokenGenerationResponse VerifyAuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeEvent.html",
    "title": "Class VerifyAuthChallengeEvent | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeEvent Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents an event for verifying authentication challenges. public class VerifyAuthChallengeEvent : TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse> Inheritance object TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse> VerifyAuthChallengeEvent Inherited Members TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.Version TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.Region TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.UserPoolId TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.UserName TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.CallerContext TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.TriggerSource TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.Request TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeRequest.html",
    "title": "Class VerifyAuthChallengeRequest | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeRequest Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a request for verifying authentication challenges. public class VerifyAuthChallengeRequest : TriggerRequest Inheritance object TriggerRequest VerifyAuthChallengeRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ChallengeAnswer Gets or sets the challenge answer provided by the user. [DataMember(Name = \"challengeAnswer\")] [JsonPropertyName(\"challengeAnswer\")] public string ChallengeAnswer { get; set; } Property Value string ClientMetadata Gets or sets client-specific metadata associated with the request. [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Dictionary<string, string> PrivateChallengeParameters Gets or sets private challenge parameters associated with the request. [DataMember(Name = \"privateChallengeParameters\")] [JsonPropertyName(\"privateChallengeParameters\")] public Dictionary<string, string> PrivateChallengeParameters { get; set; } Property Value Dictionary<string, string> UserNotFound Gets or sets a value indicating whether the user was not found. [DataMember(Name = \"userNotFound\")] [JsonPropertyName(\"userNotFound\")] public bool UserNotFound { get; set; } Property Value bool"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeResponse.html",
    "title": "Class VerifyAuthChallengeResponse | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeResponse Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge Assembly Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Represents a response for verifying authentication challenges. public class VerifyAuthChallengeResponse : TriggerResponse Inheritance object TriggerResponse VerifyAuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AnswerCorrect Gets or sets a value indicating whether the challenge answer is correct. [DataMember(Name = \"answerCorrect\")] [JsonPropertyName(\"answerCorrect\")] public bool? AnswerCorrect { get; set; } Property Value bool?"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge Classes VerifyAuthChallengeEvent Represents an event for verifying authentication challenges. VerifyAuthChallengeRequest Represents a request for verifying authentication challenges. VerifyAuthChallengeResponse Represents a response for verifying authentication challenges."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Classes ChallengeResultItem Represents an item containing information about a challenge result. ClaimOverrideDetails Represents details for overriding claims in a token. GroupConfiguration Represents configuration for overriding groups and IAM roles. TriggerCallerContext Represents context information about the trigger caller. TriggerEvent<TRequest, TResponse> Represents a base class for trigger events with request and response types. TriggerRequest Represents a base class for trigger request objects. TriggerResponse Represents a base class for trigger response objects."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.CreateAuthChallengeHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.CreateAuthChallengeHandler.html",
    "title": "Class CreateAuthChallengeHandler | Innovt Platform",
    "keywords": "Class CreateAuthChallengeHandler Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll An abstract base class for handling authentication challenge creation events. public abstract class CreateAuthChallengeHandler : EventProcessor<CreateAuthChallengeEvent, CreateAuthChallengeEvent> Inheritance object BaseEventProcessor EventProcessor<CreateAuthChallengeEvent, CreateAuthChallengeEvent> CreateAuthChallengeHandler Inherited Members EventProcessor<CreateAuthChallengeEvent, CreateAuthChallengeEvent>.Process(CreateAuthChallengeEvent, ILambdaContext) EventProcessor<CreateAuthChallengeEvent, CreateAuthChallengeEvent>.Handle(CreateAuthChallengeEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CreateAuthChallengeHandler() Initializes a new instance of the CreateAuthChallengeHandler class. protected CreateAuthChallengeHandler() CreateAuthChallengeHandler(ILogger) Initializes a new instance of the CreateAuthChallengeHandler class with a logger. protected CreateAuthChallengeHandler(ILogger logger) Parameters logger ILogger An ILogger instance for logging."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.DefineAuthChallengeHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.DefineAuthChallengeHandler.html",
    "title": "Class DefineAuthChallengeHandler | Innovt Platform",
    "keywords": "Class DefineAuthChallengeHandler Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll An abstract base class for handling the definition of authentication challenges. public abstract class DefineAuthChallengeHandler : EventProcessor<DefineAuthChallengeEvent, DefineAuthChallengeEvent> Inheritance object BaseEventProcessor EventProcessor<DefineAuthChallengeEvent, DefineAuthChallengeEvent> DefineAuthChallengeHandler Inherited Members EventProcessor<DefineAuthChallengeEvent, DefineAuthChallengeEvent>.Process(DefineAuthChallengeEvent, ILambdaContext) EventProcessor<DefineAuthChallengeEvent, DefineAuthChallengeEvent>.Handle(DefineAuthChallengeEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DefineAuthChallengeHandler() Initializes a new instance of the DefineAuthChallengeHandler class. protected DefineAuthChallengeHandler() DefineAuthChallengeHandler(ILogger) Initializes a new instance of the DefineAuthChallengeHandler class with a logger. protected DefineAuthChallengeHandler(ILogger logger) Parameters logger ILogger An ILogger instance for logging."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PostConfirmationHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PostConfirmationHandler.html",
    "title": "Class PostConfirmationHandler | Innovt Platform",
    "keywords": "Class PostConfirmationHandler Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll An abstract base class for handling post-confirmation events. public abstract class PostConfirmationHandler : EventProcessor<PostConfirmationEvent, PostConfirmationEvent> Inheritance object BaseEventProcessor EventProcessor<PostConfirmationEvent, PostConfirmationEvent> PostConfirmationHandler Inherited Members EventProcessor<PostConfirmationEvent, PostConfirmationEvent>.Process(PostConfirmationEvent, ILambdaContext) EventProcessor<PostConfirmationEvent, PostConfirmationEvent>.Handle(PostConfirmationEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PostConfirmationHandler() Initializes a new instance of the PostConfirmationHandler class. protected PostConfirmationHandler() PostConfirmationHandler(ILogger) Initializes a new instance of the PostConfirmationHandler class with a logger. protected PostConfirmationHandler(ILogger logger) Parameters logger ILogger An ILogger instance for logging."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PreSignupHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PreSignupHandler.html",
    "title": "Class PreSignupHandler | Innovt Platform",
    "keywords": "Class PreSignupHandler Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll An abstract base class for handling pre-signup generation events. public abstract class PreSignupHandler : EventProcessor<PreSignupEvent, PreSignupEvent> Inheritance object BaseEventProcessor EventProcessor<PreSignupEvent, PreSignupEvent> PreSignupHandler Inherited Members EventProcessor<PreSignupEvent, PreSignupEvent>.Process(PreSignupEvent, ILambdaContext) EventProcessor<PreSignupEvent, PreSignupEvent>.Handle(PreSignupEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PreSignupHandler() Initializes a new instance of the PreSignupHandler class. protected PreSignupHandler() PreSignupHandler(ILogger) Initializes a new instance of the PreSignupHandler class with a logger. protected PreSignupHandler(ILogger logger) Parameters logger ILogger An ILogger instance for logging."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PreTokenGenerationHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PreTokenGenerationHandler.html",
    "title": "Class PreTokenGenerationHandler | Innovt Platform",
    "keywords": "Class PreTokenGenerationHandler Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll An abstract base class for handling pre-token generation events. public abstract class PreTokenGenerationHandler : EventProcessor<PreTokenGenerationEvent, PreTokenGenerationEvent> Inheritance object BaseEventProcessor EventProcessor<PreTokenGenerationEvent, PreTokenGenerationEvent> PreTokenGenerationHandler Inherited Members EventProcessor<PreTokenGenerationEvent, PreTokenGenerationEvent>.Process(PreTokenGenerationEvent, ILambdaContext) EventProcessor<PreTokenGenerationEvent, PreTokenGenerationEvent>.Handle(PreTokenGenerationEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PreTokenGenerationHandler() Initializes a new instance of the PreTokenGenerationHandler class. protected PreTokenGenerationHandler() PreTokenGenerationHandler(ILogger) Initializes a new instance of the PreTokenGenerationHandler class with a logger. protected PreTokenGenerationHandler(ILogger logger) Parameters logger ILogger An ILogger instance for logging."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.VerifyAuthChallengeHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.VerifyAuthChallengeHandler.html",
    "title": "Class VerifyAuthChallengeHandler | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeHandler Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll An abstract base class for handling verification of authentication challenges. public abstract class VerifyAuthChallengeHandler : EventProcessor<VerifyAuthChallengeEvent, VerifyAuthChallengeEvent> Inheritance object BaseEventProcessor EventProcessor<VerifyAuthChallengeEvent, VerifyAuthChallengeEvent> VerifyAuthChallengeHandler Inherited Members EventProcessor<VerifyAuthChallengeEvent, VerifyAuthChallengeEvent>.Process(VerifyAuthChallengeEvent, ILambdaContext) EventProcessor<VerifyAuthChallengeEvent, VerifyAuthChallengeEvent>.Handle(VerifyAuthChallengeEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors VerifyAuthChallengeHandler() Initializes a new instance of the VerifyAuthChallengeHandler class. protected VerifyAuthChallengeHandler() VerifyAuthChallengeHandler(ILogger) Initializes a new instance of the VerifyAuthChallengeHandler class with a logger. protected VerifyAuthChallengeHandler(ILogger logger) Parameters logger ILogger An ILogger instance for logging."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers Classes CreateAuthChallengeHandler An abstract base class for handling authentication challenge creation events. DefineAuthChallengeHandler An abstract base class for handling the definition of authentication challenges. PostConfirmationHandler An abstract base class for handling post-confirmation events. PreSignupHandler An abstract base class for handling pre-signup generation events. PreTokenGenerationHandler An abstract base class for handling pre-token generation events. VerifyAuthChallengeHandler An abstract base class for handling verification of authentication challenges."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.CreateAuthChallengeJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.CreateAuthChallengeJsonSerializerContext.html",
    "title": "Class CreateAuthChallengeJsonSerializerContext | Innovt Platform",
    "keywords": "Class CreateAuthChallengeJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll A custom JSON serializer context for handling serialization of CreateAuthChallenge-related objects. [JsonSerializable(typeof(CreateAuthChallengeEvent))] [JsonSerializable(typeof(CreateAuthChallengeRequest))] [JsonSerializable(typeof(CreateAuthChallengeResponse))] public class CreateAuthChallengeJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext CreateAuthChallengeJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CreateAuthChallengeJsonSerializerContext() public CreateAuthChallengeJsonSerializerContext() CreateAuthChallengeJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public CreateAuthChallengeJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties Boolean Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<bool> Boolean { get; } Property Value JsonTypeInfo<bool> ChallengeResultItem Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<ChallengeResultItem> ChallengeResultItem { get; } Property Value JsonTypeInfo<ChallengeResultItem> CreateAuthChallengeEvent Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<CreateAuthChallengeEvent> CreateAuthChallengeEvent { get; } Property Value JsonTypeInfo<CreateAuthChallengeEvent> CreateAuthChallengeRequest Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<CreateAuthChallengeRequest> CreateAuthChallengeRequest { get; } Property Value JsonTypeInfo<CreateAuthChallengeRequest> CreateAuthChallengeResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<CreateAuthChallengeResponse> CreateAuthChallengeResponse { get; } Property Value JsonTypeInfo<CreateAuthChallengeResponse> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static CreateAuthChallengeJsonSerializerContext Default { get; } Property Value CreateAuthChallengeJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions ListChallengeResultItem Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<List<ChallengeResultItem>> ListChallengeResultItem { get; } Property Value JsonTypeInfo<List<ChallengeResultItem>> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.DefineAuthChallengeJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.DefineAuthChallengeJsonSerializerContext.html",
    "title": "Class DefineAuthChallengeJsonSerializerContext | Innovt Platform",
    "keywords": "Class DefineAuthChallengeJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll A custom JSON serializer context for handling serialization of objects related to DefineAuthChallenge. [JsonSerializable(typeof(DefineAuthChallengeEvent))] [JsonSerializable(typeof(DefineAuthChallengeRequest))] [JsonSerializable(typeof(DefineAuthChallengeResponse))] public class DefineAuthChallengeJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext DefineAuthChallengeJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DefineAuthChallengeJsonSerializerContext() public DefineAuthChallengeJsonSerializerContext() DefineAuthChallengeJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public DefineAuthChallengeJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties Boolean Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<bool> Boolean { get; } Property Value JsonTypeInfo<bool> ChallengeResultItem Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<ChallengeResultItem> ChallengeResultItem { get; } Property Value JsonTypeInfo<ChallengeResultItem> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static DefineAuthChallengeJsonSerializerContext Default { get; } Property Value DefineAuthChallengeJsonSerializerContext DefineAuthChallengeEvent Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<DefineAuthChallengeEvent> DefineAuthChallengeEvent { get; } Property Value JsonTypeInfo<DefineAuthChallengeEvent> DefineAuthChallengeRequest Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<DefineAuthChallengeRequest> DefineAuthChallengeRequest { get; } Property Value JsonTypeInfo<DefineAuthChallengeRequest> DefineAuthChallengeResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<DefineAuthChallengeResponse> DefineAuthChallengeResponse { get; } Property Value JsonTypeInfo<DefineAuthChallengeResponse> DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions ListChallengeResultItem Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<List<ChallengeResultItem>> ListChallengeResultItem { get; } Property Value JsonTypeInfo<List<ChallengeResultItem>> NullableBoolean Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<bool?> NullableBoolean { get; } Property Value JsonTypeInfo<bool?> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PostConfirmationJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PostConfirmationJsonSerializerContext.html",
    "title": "Class PostConfirmationJsonSerializerContext | Innovt Platform",
    "keywords": "Class PostConfirmationJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll A custom JSON serializer context for handling serialization of objects related to PostConfirmation events. [JsonSerializable(typeof(PostConfirmationEvent))] [JsonSerializable(typeof(PostConfirmationRequest))] [JsonSerializable(typeof(PostConfirmationResponse))] public class PostConfirmationJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext PostConfirmationJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PostConfirmationJsonSerializerContext() public PostConfirmationJsonSerializerContext() PostConfirmationJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public PostConfirmationJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static PostConfirmationJsonSerializerContext Default { get; } Property Value PostConfirmationJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions PostConfirmationEvent Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PostConfirmationEvent> PostConfirmationEvent { get; } Property Value JsonTypeInfo<PostConfirmationEvent> PostConfirmationRequest Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PostConfirmationRequest> PostConfirmationRequest { get; } Property Value JsonTypeInfo<PostConfirmationRequest> PostConfirmationResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PostConfirmationResponse> PostConfirmationResponse { get; } Property Value JsonTypeInfo<PostConfirmationResponse> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PreSignupJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PreSignupJsonSerializerContext.html",
    "title": "Class PreSignupJsonSerializerContext | Innovt Platform",
    "keywords": "Class PreSignupJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll A custom JSON serializer context for handling serialization of objects related to PreSignup events. [JsonSerializable(typeof(PreSignupEvent))] [JsonSerializable(typeof(PreSignupRequest))] [JsonSerializable(typeof(PreSignupResponse))] public class PreSignupJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext PreSignupJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PreSignupJsonSerializerContext() public PreSignupJsonSerializerContext() PreSignupJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public PreSignupJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties Boolean Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<bool> Boolean { get; } Property Value JsonTypeInfo<bool> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static PreSignupJsonSerializerContext Default { get; } Property Value PreSignupJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions PreSignupEvent Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PreSignupEvent> PreSignupEvent { get; } Property Value JsonTypeInfo<PreSignupEvent> PreSignupRequest Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PreSignupRequest> PreSignupRequest { get; } Property Value JsonTypeInfo<PreSignupRequest> PreSignupResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PreSignupResponse> PreSignupResponse { get; } Property Value JsonTypeInfo<PreSignupResponse> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PreTokenGenerationJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PreTokenGenerationJsonSerializerContext.html",
    "title": "Class PreTokenGenerationJsonSerializerContext | Innovt Platform",
    "keywords": "Class PreTokenGenerationJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll A custom JSON serializer context for handling serialization of objects related to PreTokenGeneration events. [JsonSerializable(typeof(PreTokenGenerationEvent))] [JsonSerializable(typeof(PreTokenGenerationRequest))] [JsonSerializable(typeof(PreTokenGenerationResponse))] public class PreTokenGenerationJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext PreTokenGenerationJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors PreTokenGenerationJsonSerializerContext() public PreTokenGenerationJsonSerializerContext() PreTokenGenerationJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public PreTokenGenerationJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties ClaimOverrideDetails Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<ClaimOverrideDetails> ClaimOverrideDetails { get; } Property Value JsonTypeInfo<ClaimOverrideDetails> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static PreTokenGenerationJsonSerializerContext Default { get; } Property Value PreTokenGenerationJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions GroupConfiguration Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<GroupConfiguration> GroupConfiguration { get; } Property Value JsonTypeInfo<GroupConfiguration> ListString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<List<string>> ListString { get; } Property Value JsonTypeInfo<List<string>> PreTokenGenerationEvent Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PreTokenGenerationEvent> PreTokenGenerationEvent { get; } Property Value JsonTypeInfo<PreTokenGenerationEvent> PreTokenGenerationRequest Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PreTokenGenerationRequest> PreTokenGenerationRequest { get; } Property Value JsonTypeInfo<PreTokenGenerationRequest> PreTokenGenerationResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<PreTokenGenerationResponse> PreTokenGenerationResponse { get; } Property Value JsonTypeInfo<PreTokenGenerationResponse> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.VerifyAuthChallengeJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.VerifyAuthChallengeJsonSerializerContext.html",
    "title": "Class VerifyAuthChallengeJsonSerializerContext | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly Innovt.Cloud.AWS.Lambda.Cognito.dll A custom JSON serializer context for handling serialization of objects related to VerifyAuthChallenge events. [JsonSerializable(typeof(VerifyAuthChallengeEvent))] [JsonSerializable(typeof(VerifyAuthChallengeRequest))] [JsonSerializable(typeof(VerifyAuthChallengeResponse))] public class VerifyAuthChallengeJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext VerifyAuthChallengeJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors VerifyAuthChallengeJsonSerializerContext() public VerifyAuthChallengeJsonSerializerContext() VerifyAuthChallengeJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public VerifyAuthChallengeJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties Boolean Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<bool> Boolean { get; } Property Value JsonTypeInfo<bool> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static VerifyAuthChallengeJsonSerializerContext Default { get; } Property Value VerifyAuthChallengeJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions NullableBoolean Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<bool?> NullableBoolean { get; } Property Value JsonTypeInfo<bool?> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value JsonTypeInfo<TriggerCallerContext> VerifyAuthChallengeEvent Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<VerifyAuthChallengeEvent> VerifyAuthChallengeEvent { get; } Property Value JsonTypeInfo<VerifyAuthChallengeEvent> VerifyAuthChallengeRequest Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<VerifyAuthChallengeRequest> VerifyAuthChallengeRequest { get; } Property Value JsonTypeInfo<VerifyAuthChallengeRequest> VerifyAuthChallengeResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<VerifyAuthChallengeResponse> VerifyAuthChallengeResponse { get; } Property Value JsonTypeInfo<VerifyAuthChallengeResponse> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers Classes CreateAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of CreateAuthChallenge-related objects. DefineAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to DefineAuthChallenge. PostConfirmationJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PostConfirmation events. PreSignupJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PreSignup events. PreTokenGenerationJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PreTokenGeneration events. VerifyAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to VerifyAuthChallenge events."
  },
  "api/Innovt.Cloud.AWS.Lambda.CustomRuntime.Bootstrap.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.CustomRuntime.Bootstrap.html",
    "title": "Class Bootstrap | Innovt Platform",
    "keywords": "Class Bootstrap Namespace Innovt.Cloud.AWS.Lambda.CustomRuntime Assembly Innovt.Cloud.AWS.Lambda.CustomRuntime.dll The Bootstrap class provides a method to run asynchronous Lambda functions. public static class Bootstrap Inheritance object Bootstrap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RunAsync<T>(Func<T, ILambdaContext, Task>, CancellationToken) public static Task RunAsync<T>(Func<T, ILambdaContext, Task> func, CancellationToken cancellationToken) Parameters func Func<T, ILambdaContext, Task> cancellationToken CancellationToken Returns Task Type Parameters T"
  },
  "api/Innovt.Cloud.AWS.Lambda.CustomRuntime.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.CustomRuntime.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.CustomRuntime | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.CustomRuntime Classes Bootstrap The Bootstrap class provides a method to run asynchronous Lambda functions."
  },
  "api/Innovt.Cloud.AWS.Lambda.EventProcessor-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.EventProcessor-1.html",
    "title": "Class EventProcessor<T> | Innovt Platform",
    "keywords": "Class EventProcessor<T> Namespace Innovt.Cloud.AWS.Lambda Assembly Innovt.Cloud.AWS.Lambda.dll Represents a base class for event processors that handle specific event types without producing a result. public abstract class EventProcessor<T> : BaseEventProcessor where T : class Type Parameters T The type of the event to process. Inheritance object BaseEventProcessor EventProcessor<T> Derived S3EventProcessor CustomEventProcessor Inherited Members BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors EventProcessor() Initializes a new instance of the EventProcessor<T> class without a logger. protected EventProcessor() EventProcessor(ILogger) Initializes a new instance of the EventProcessor<T> class with a logger. protected EventProcessor(ILogger logger) Parameters logger ILogger The logger to use for logging events and errors. Methods Handle(T, ILambdaContext) Handles the event message. protected abstract Task Handle(T message, ILambdaContext context) Parameters message T The event message to handle. context ILambdaContext The Lambda context associated with the event processing. Returns Task Process(T, ILambdaContext) Processes the specified event message. public Task Process(T message, ILambdaContext context) Parameters message T The event message to process. context ILambdaContext The Lambda context associated with the event processing. Returns Task"
  },
  "api/Innovt.Cloud.AWS.Lambda.EventProcessor-2.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.EventProcessor-2.html",
    "title": "Class EventProcessor<T, TResult> | Innovt Platform",
    "keywords": "Class EventProcessor<T, TResult> Namespace Innovt.Cloud.AWS.Lambda Assembly Innovt.Cloud.AWS.Lambda.dll Represents a base class for event processors that handle specific event types and produce a result. public abstract class EventProcessor<T, TResult> : BaseEventProcessor where T : class Type Parameters T The type of the event to process. TResult The type of the result produced by the event processing. Inheritance object BaseEventProcessor EventProcessor<T, TResult> Derived CreateAuthChallengeHandler DefineAuthChallengeHandler PostConfirmationHandler PreSignupHandler PreTokenGenerationHandler VerifyAuthChallengeHandler KinesisProcessorBase<TBody> SqsEventProcessor<TBody> Inherited Members BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors EventProcessor() Initializes a new instance of the EventProcessor<T, TResult> class without a logger. protected EventProcessor() EventProcessor(ILogger) Initializes a new instance of the EventProcessor<T, TResult> class with a logger. protected EventProcessor(ILogger logger) Parameters logger ILogger The logger to use for logging events and errors. Methods Handle(T, ILambdaContext) Handles the event message and produces a result. protected abstract Task<TResult> Handle(T message, ILambdaContext context) Parameters message T The event message to handle. context ILambdaContext The Lambda context associated with the event processing. Returns Task<TResult> The result of handling the event message. Process(T, ILambdaContext) Processes the specified event message and produces a result. public Task<TResult> Process(T message, ILambdaContext context) Parameters message T The event message to process. context ILambdaContext The Lambda context associated with the event processing. Returns Task<TResult> The result of processing the event message."
  },
  "api/Innovt.Cloud.AWS.Lambda.Helpers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Helpers.html",
    "title": "Class Helpers | Innovt Platform",
    "keywords": "Class Helpers Namespace Innovt.Cloud.AWS.Lambda Assembly Innovt.Cloud.AWS.Lambda.dll A utility class containing helper methods for common tasks in AWS Lambda functions. public static class Helpers Inheritance object Helpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildConfiguration(string, string, ILambdaContext) Builds a configuration object based on an environment variable and default value. public static IConfigurationRoot BuildConfiguration(string environmentVariableName, string defaultValue, ILambdaContext context = null) Parameters environmentVariableName string The name of the environment variable containing the configuration name. defaultValue string The default configuration name to use if the environment variable is not found. context ILambdaContext The Lambda context associated with the function execution (optional). Returns IConfigurationRoot An IConfigurationRoot object representing the configuration. GetEnvironmentVariable(string, string, ILambdaContext) Retrieves the value of an environment variable or a default value. public static string GetEnvironmentVariable(string varName, string defaultValue, ILambdaContext context = null) Parameters varName string The name of the environment variable to retrieve. defaultValue string The default value to use if the environment variable is not found. context ILambdaContext The Lambda context associated with the function execution (optional). Returns string The value of the environment variable if found, or the default value if not found."
  },
  "api/Innovt.Cloud.AWS.Lambda.ItemFailureIdentifier.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.ItemFailureIdentifier.html",
    "title": "Class ItemFailureIdentifier | Innovt Platform",
    "keywords": "Class ItemFailureIdentifier Namespace Innovt.Cloud.AWS.Lambda Assembly Innovt.Cloud.AWS.Lambda.dll Represents an identifier for an item that has failed in a batch operation. public sealed class ItemFailureIdentifier Inheritance object ItemFailureIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ItemFailureIdentifier() Initializes a new instance of the ItemFailureIdentifier class. public ItemFailureIdentifier() ItemFailureIdentifier(string) public ItemFailureIdentifier(string itemIdentifier) Parameters itemIdentifier string Properties ItemIdentifier Gets or sets the identifier of the failed item. [JsonPropertyName(\"itemIdentifier\")] public string ItemIdentifier { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDataProcessor-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDataProcessor-1.html",
    "title": "Class KinesisDataProcessor<TBody> | Innovt Platform",
    "keywords": "Class KinesisDataProcessor<TBody> Namespace Innovt.Cloud.AWS.Lambda.Kinesis Assembly Innovt.Cloud.AWS.Lambda.Kinesis.dll Represents a base class for processing Kinesis data streams in batch, where each batch consists of messages of type TBody. public abstract class KinesisDataProcessor<TBody> : KinesisDataProcessorBatch<TBody> where TBody : class, IDataStream Type Parameters TBody The type of messages in the data stream. Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDataProcessorBatch<TBody> KinesisDataProcessor<TBody> Derived KinesisDataInvoiceProcessor KinesisDataInvoiceProcessor2 Inherited Members KinesisDataProcessorBatch<TBody>.DeserializeBody(string, string) KinesisDataProcessorBatch<TBody>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<TBody>.ReportBatchFailures KinesisProcessorBase<TBody>.IsEmptyMessage(TBody) KinesisProcessorBase<TBody>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDataProcessor(ILogger, bool) Initializes a new instance of the KinesisDataProcessor<TBody> class with optional logging and batch failure reporting. protected KinesisDataProcessor(ILogger logger, bool reportBatchFailures = false) Parameters logger ILogger An optional logger for recording processing information. reportBatchFailures bool Specifies whether to report batch processing failures. KinesisDataProcessor(bool) Initializes a new instance of the KinesisDataProcessor<TBody> class with optional batch failure reporting. protected KinesisDataProcessor(bool reportBatchFailures = false) Parameters reportBatchFailures bool Specifies whether to report batch processing failures. Methods ProcessMessage(TBody) Processes an individual Kinesis message of type TBody. protected abstract Task ProcessMessage(TBody message) Parameters message TBody The Kinesis message to process. Returns Task A task representing the asynchronous processing operation. ProcessMessages(IList<TBody>) Processes a batch of Kinesis messages represented as a list of TBody objects. protected override Task<BatchFailureResponse> ProcessMessages(IList<TBody> messages) Parameters messages IList<TBody> The list of Kinesis messages to process. Returns Task<BatchFailureResponse> A BatchFailureResponse containing information about failed message processing."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDataProcessorBatch-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDataProcessorBatch-1.html",
    "title": "Class KinesisDataProcessorBatch<TBody> | Innovt Platform",
    "keywords": "Class KinesisDataProcessorBatch<TBody> Namespace Innovt.Cloud.AWS.Lambda.Kinesis Assembly Innovt.Cloud.AWS.Lambda.Kinesis.dll Represents a base class for processing Kinesis data streams in batch, where each batch consists of messages of type TBody. public abstract class KinesisDataProcessorBatch<TBody> : KinesisProcessorBase<TBody> where TBody : class, IDataStream Type Parameters TBody The type of messages in the data stream. Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDataProcessorBatch<TBody> Derived KinesisDataProcessor<TBody> KinesisDataInvoiceProcessorBatch Inherited Members KinesisProcessorBase<TBody>.ReportBatchFailures KinesisProcessorBase<TBody>.IsEmptyMessage(TBody) KinesisProcessorBase<TBody>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDataProcessorBatch(ILogger, bool) Initializes a new instance of the KinesisDataProcessorBatch<TBody> class with optional logging and batch failure reporting. protected KinesisDataProcessorBatch(ILogger logger, bool reportBatchFailures = false) Parameters logger ILogger An optional logger for recording processing information. reportBatchFailures bool Specifies whether to report batch processing failures. KinesisDataProcessorBatch(bool) Initializes a new instance of the KinesisDataProcessorBatch<TBody> class with optional batch failure reporting. protected KinesisDataProcessorBatch(bool reportBatchFailures = false) Parameters reportBatchFailures bool Specifies whether to report batch processing failures. Methods DeserializeBody(string, string) Deserializes the content of a Kinesis message into an instance of type TBody. protected override TBody DeserializeBody(string content, string partition) Parameters content string The content of the Kinesis message. partition string The partition associated with the message. Returns TBody An instance of type TBody representing the deserialized message. Handle(KinesisEvent, ILambdaContext) Handles a Kinesis event by processing a batch of messages. protected override Task<BatchFailureResponse> Handle(KinesisEvent message, ILambdaContext context) Parameters message KinesisEvent The Kinesis event containing multiple records. context ILambdaContext The Lambda execution context. Returns Task<BatchFailureResponse> A BatchFailureResponse containing information about failed message processing. ProcessMessages(IList<TBody>) Processes a batch of messages of type TBody. protected abstract Task<BatchFailureResponse> ProcessMessages(IList<TBody> messages) Parameters messages IList<TBody> The batch of messages to process. Returns Task<BatchFailureResponse> A BatchFailureResponse containing information about failed message processing."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDomainEventProcessor-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDomainEventProcessor-1.html",
    "title": "Class KinesisDomainEventProcessor<TBody> | Innovt Platform",
    "keywords": "Class KinesisDomainEventProcessor<TBody> Namespace Innovt.Cloud.AWS.Lambda.Kinesis Assembly Innovt.Cloud.AWS.Lambda.Kinesis.dll Represents a base class for processing domain-specific Kinesis events, where each event is of type TBody. public abstract class KinesisDomainEventProcessor<TBody> : KinesisDomainEventProcessorBatch<TBody> where TBody : DomainEvent Type Parameters TBody The type of domain-specific events to process. Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDomainEventProcessorBatch<TBody> KinesisDomainEventProcessor<TBody> Derived KinesisDomainEventEmptyInvoiceProcessor KinesisDomainEventInvoiceProcessor Inherited Members KinesisDomainEventProcessorBatch<TBody>.DeserializeBody(string, string) KinesisDomainEventProcessorBatch<TBody>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<TBody>.ReportBatchFailures KinesisProcessorBase<TBody>.IsEmptyMessage(TBody) KinesisProcessorBase<TBody>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDomainEventProcessor(ILogger, bool) Initializes a new instance of the KinesisDomainEventProcessor<TBody> class with optional logging and batch failure reporting. protected KinesisDomainEventProcessor(ILogger logger, bool reportBatchFailures = false) Parameters logger ILogger An optional logger for recording processing information. reportBatchFailures bool Specifies whether to report batch processing failures. KinesisDomainEventProcessor(bool) Initializes a new instance of the KinesisDomainEventProcessor<TBody> class with optional batch failure reporting. protected KinesisDomainEventProcessor(bool reportBatchFailures = false) Parameters reportBatchFailures bool Specifies whether to report batch processing failures. Methods ProcessMessage(TBody) Processes a single domain-specific event of type TBody. protected abstract Task ProcessMessage(TBody message) Parameters message TBody The domain-specific event to process. Returns Task A task representing the asynchronous operation. ProcessMessages(IList<TBody>) Processes a batch of domain-specific events of type TBody. protected override Task<BatchFailureResponse> ProcessMessages(IList<TBody> messages) Parameters messages IList<TBody> The batch of domain-specific events to process. Returns Task<BatchFailureResponse> A BatchFailureResponse containing information about failed event processing."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDomainEventProcessorBatch-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDomainEventProcessorBatch-1.html",
    "title": "Class KinesisDomainEventProcessorBatch<TBody> | Innovt Platform",
    "keywords": "Class KinesisDomainEventProcessorBatch<TBody> Namespace Innovt.Cloud.AWS.Lambda.Kinesis Assembly Innovt.Cloud.AWS.Lambda.Kinesis.dll public abstract class KinesisDomainEventProcessorBatch<TBody> : KinesisProcessorBase<TBody> where TBody : DomainEvent Type Parameters TBody Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDomainEventProcessorBatch<TBody> Derived KinesisDomainEventProcessor<TBody> KinesisDomainEventInvoiceProcessorBatch Inherited Members KinesisProcessorBase<TBody>.ReportBatchFailures KinesisProcessorBase<TBody>.IsEmptyMessage(TBody) KinesisProcessorBase<TBody>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDomainEventProcessorBatch(ILogger, bool) Initializes a new instance of the KinesisDomainEventProcessorBatch<TBody> class with optional logging and batch failure reporting. protected KinesisDomainEventProcessorBatch(ILogger logger, bool reportBatchFailures = false) Parameters logger ILogger An optional logger for recording processing information. reportBatchFailures bool Specifies whether to report batch processing failures. KinesisDomainEventProcessorBatch(bool) Initializes a new instance of the KinesisDomainEventProcessorBatch<TBody> class with optional batch failure reporting. protected KinesisDomainEventProcessorBatch(bool reportBatchFailures = false) Parameters reportBatchFailures bool Specifies whether to report batch processing failures. Methods DeserializeBody(string, string) Deserializes the content of a Kinesis message into an instance of type TBody. protected override TBody DeserializeBody(string content, string partition) Parameters content string The content of the Kinesis message. partition string The partition associated with the message. Returns TBody An instance of type TBody representing the deserialized message. Handle(KinesisEvent, ILambdaContext) Handles a Kinesis event by processing a batch of domain-specific events. protected override Task<BatchFailureResponse> Handle(KinesisEvent message, ILambdaContext context) Parameters message KinesisEvent The Kinesis event containing multiple records. context ILambdaContext The Lambda execution context. Returns Task<BatchFailureResponse> A BatchFailureResponse containing information about failed event processing. ProcessMessages(IList<TBody>) Processes a batch of domain-specific events of type TBody. protected abstract Task<BatchFailureResponse> ProcessMessages(IList<TBody> messages) Parameters messages IList<TBody> The batch of domain-specific events to process. Returns Task<BatchFailureResponse> A BatchFailureResponse containing information about failed event processing."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisProcessorBase-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisProcessorBase-1.html",
    "title": "Class KinesisProcessorBase<TBody> | Innovt Platform",
    "keywords": "Class KinesisProcessorBase<TBody> Namespace Innovt.Cloud.AWS.Lambda.Kinesis Assembly Innovt.Cloud.AWS.Lambda.Kinesis.dll Represents a base class for processing Kinesis events with content of type TBody. public abstract class KinesisProcessorBase<TBody> : EventProcessor<KinesisEvent, BatchFailureResponse> where TBody : IDataStream Type Parameters TBody The type of content contained in the Kinesis events. Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> Derived KinesisDataProcessorBatch<TBody> KinesisDomainEventProcessorBatch<TBody> Inherited Members EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisProcessorBase(ILogger, bool) Initializes a new instance of the KinesisProcessorBase<TBody> class with optional logging and batch failure reporting. protected KinesisProcessorBase(ILogger logger, bool reportBatchFailures = false) Parameters logger ILogger An optional logger for recording processing information. reportBatchFailures bool Specifies whether to report batch processing failures. KinesisProcessorBase(bool) Initializes a new instance of the KinesisProcessorBase<TBody> class with optional batch failure reporting. protected KinesisProcessorBase(bool reportBatchFailures = false) Parameters reportBatchFailures bool Specifies whether to report batch processing failures. Properties ReportBatchFailures Gets or sets a value indicating whether batch processing failures should be reported. protected bool ReportBatchFailures { get; set; } Property Value bool Methods DeserializeBody(string, string) Deserializes the content of a Kinesis event record into an instance of type TBody. protected abstract TBody DeserializeBody(string content, string partition) Parameters content string The content of the Kinesis event record. partition string The partition associated with the message. Returns TBody An instance of type TBody representing the deserialized content. IsEmptyMessage(TBody) Checks if a Kinesis message of type TBody is empty and should be discarded. protected bool IsEmptyMessage(TBody message) Parameters message TBody The Kinesis message to check. Returns bool True if the message is empty and should be discarded; otherwise, false. ParseRecord(KinesisEventRecord) Parses a Kinesis event record and returns its content as an instance of type TBody. protected Task<TBody> ParseRecord(KinesisEvent.KinesisEventRecord record) Parameters record KinesisEvent.KinesisEventRecord The Kinesis event record to parse. Returns Task<TBody> An instance of type TBody representing the parsed content."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Serializers.KinesisEventJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Serializers.KinesisEventJsonSerializerContext.html",
    "title": "Class KinesisEventJsonSerializerContext | Innovt Platform",
    "keywords": "Class KinesisEventJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Serializers Assembly Innovt.Cloud.AWS.Lambda.Kinesis.dll Represents a JSON serializer context for Kinesis events. [JsonSerializable(typeof(KinesisEvent))] [JsonSerializable(typeof(BatchFailureResponse))] public class KinesisEventJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext KinesisEventJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisEventJsonSerializerContext() public KinesisEventJsonSerializerContext() KinesisEventJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public KinesisEventJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties BatchFailureResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<BatchFailureResponse> BatchFailureResponse { get; } Property Value JsonTypeInfo<BatchFailureResponse> Boolean Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<bool> Boolean { get; } Property Value JsonTypeInfo<bool> DateTime Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<DateTime> DateTime { get; } Property Value JsonTypeInfo<DateTime> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static KinesisEventJsonSerializerContext Default { get; } Property Value KinesisEventJsonSerializerContext EncryptionType Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<EncryptionType> EncryptionType { get; } Property Value JsonTypeInfo<EncryptionType> GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions IListItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<IList<ItemFailureIdentifier>> IListItemFailureIdentifier { get; } Property Value JsonTypeInfo<IList<ItemFailureIdentifier>> IListKinesisEventRecord Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<IList<KinesisEvent.KinesisEventRecord>> IListKinesisEventRecord { get; } Property Value JsonTypeInfo<IList<KinesisEvent.KinesisEventRecord>> Int32 Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<int> Int32 { get; } Property Value JsonTypeInfo<int> Int64 Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<long> Int64 { get; } Property Value JsonTypeInfo<long> ItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<ItemFailureIdentifier> ItemFailureIdentifier { get; } Property Value JsonTypeInfo<ItemFailureIdentifier> KinesisEvent Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<KinesisEvent> KinesisEvent { get; } Property Value JsonTypeInfo<KinesisEvent> KinesisEventRecord Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<KinesisEvent.KinesisEventRecord> KinesisEventRecord { get; } Property Value JsonTypeInfo<KinesisEvent.KinesisEventRecord> MemoryStream Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<MemoryStream> MemoryStream { get; } Property Value JsonTypeInfo<MemoryStream> Record Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<KinesisEvent.Record> Record { get; } Property Value JsonTypeInfo<KinesisEvent.Record> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Serializers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Serializers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Serializers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Serializers Classes KinesisEventJsonSerializerContext Represents a JSON serializer context for Kinesis events."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.IDataServiceMock-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.IDataServiceMock-1.html",
    "title": "Interface IDataServiceMock<T> | Innovt Platform",
    "keywords": "Interface IDataServiceMock<T> Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public interface IDataServiceMock<T> where T : class Type Parameters T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods InicializeIoc() void InicializeIoc() ProcessMessage(IDataStream<T>) void ProcessMessage(IDataStream<T> domainEvent) Parameters domainEvent IDataStream<T>"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.IDomainEventServiceMock-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.IDomainEventServiceMock-1.html",
    "title": "Interface IDomainEventServiceMock<T> | Innovt Platform",
    "keywords": "Interface IDomainEventServiceMock<T> Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public interface IDomainEventServiceMock<T> where T : DomainEvent Type Parameters T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods InicializeIoc() void InicializeIoc() ProcessMessage(T) BatchFailureResponse ProcessMessage(T domainEvent) Parameters domainEvent T Returns BatchFailureResponse"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.IServiceMock.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.IServiceMock.html",
    "title": "Interface IServiceMock | Innovt Platform",
    "keywords": "Interface IServiceMock Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public interface IServiceMock Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods InitializeIoc() void InitializeIoc() ProcessMessage(string?) BatchFailureResponse ProcessMessage(string? traceId = null) Parameters traceId string Returns BatchFailureResponse"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.KinesisProcessorTests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.KinesisProcessorTests.html",
    "title": "Class KinesisProcessorTests | Innovt Platform",
    "keywords": "Class KinesisProcessorTests Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll [TestFixture] public class KinesisProcessorTests Inheritance object KinesisProcessorTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods DeserializeDataStream() [Test] public Task DeserializeDataStream() Returns Task DeserializeDomainEvent() [Test] public Task DeserializeDomainEvent() Returns Task Process() [Test] public Task Process() Returns Task ProcessShouldCallIoc() [Test] public Task ProcessShouldCallIoc() Returns Task ProcessShouldDiscardEmptyMessage() [Test] public Task ProcessShouldDiscardEmptyMessage() Returns Task ProcessShouldSetTraceIdWhenBodyHasNoTraceId() [Test] public Task ProcessShouldSetTraceIdWhenBodyHasNoTraceId() Returns Task ProcessThrowExceptionIfContextIsNull() [Test] public void ProcessThrowExceptionIfContextIsNull() ProcessThrowExceptionIfMessageIsNull() [Test] public void ProcessThrowExceptionIfMessageIsNull() ProcessWithoutKinesisDataThrowsException() [Test] public void ProcessWithoutKinesisDataThrowsException() ProcessWithoutMessageReturnWithoutCallHandle() [Test] public Task ProcessWithoutMessageReturnWithoutCallHandle() Returns Task Process_WithCustomLogger() [Test] public Task Process_WithCustomLogger() Returns Task Setup() [SetUp] public void Setup() SimpleFunctionTest() [Test] public Task SimpleFunctionTest() Returns Task"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.BaseInvoice.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.BaseInvoice.html",
    "title": "Class BaseInvoice | Innovt Platform",
    "keywords": "Class BaseInvoice Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class BaseInvoice Inheritance object BaseInvoice Derived Invoice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties NetValue public decimal NetValue { get; set; } Property Value decimal"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.Invoice.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.Invoice.html",
    "title": "Class Invoice | Innovt Platform",
    "keywords": "Class Invoice Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class Invoice : BaseInvoice, IDataStream Inheritance object BaseInvoice Invoice Implements IDataStream Inherited Members BaseInvoice.NetValue object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ApproximateArrivalTimestamp Gets or sets the approximate arrival timestamp of the data stream. public DateTime ApproximateArrivalTimestamp { get; set; } Property Value DateTime EventId Gets or sets the event identifier associated with the data stream. public string? EventId { get; set; } Property Value string Partition Gets or sets the partition identifier of the data stream. public string? Partition { get; set; } Property Value string PublishedAt Gets or sets the date and time when the data stream was published. public DateTimeOffset? PublishedAt { get; set; } Property Value DateTimeOffset? TraceId Gets or sets the trace identifier associated with the data stream. public string? TraceId { get; set; } Property Value string Version Gets or sets the version of the data stream. public string Version { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.InvoiceDomainEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.InvoiceDomainEvent.html",
    "title": "Class InvoiceDomainEvent | Innovt Platform",
    "keywords": "Class InvoiceDomainEvent Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class InvoiceDomainEvent : DomainEvent, IDataStream Inheritance object DomainEvent InvoiceDomainEvent Implements IDataStream Inherited Members DomainEvent.Name DomainEvent.CreatedAt DomainEvent.EventId DomainEvent.Version DomainEvent.Partition DomainEvent.PublishedAt DomainEvent.TraceId DomainEvent.ApproximateArrivalTimestamp DomainEvent.Empty(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors InvoiceDomainEvent() public InvoiceDomainEvent() Properties NetValue public decimal NetValue { get; set; } Property Value decimal"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDataInvoiceProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDataInvoiceProcessor.html",
    "title": "Class KinesisDataInvoiceProcessor | Innovt Platform",
    "keywords": "Class KinesisDataInvoiceProcessor Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class KinesisDataInvoiceProcessor : KinesisDataProcessor<Invoice> Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<Invoice> KinesisDataProcessorBatch<Invoice> KinesisDataProcessor<Invoice> KinesisDataInvoiceProcessor Inherited Members KinesisDataProcessor<Invoice>.ProcessMessages(IList<Invoice>) KinesisDataProcessorBatch<Invoice>.DeserializeBody(string, string) KinesisDataProcessorBatch<Invoice>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<Invoice>.ReportBatchFailures KinesisProcessorBase<Invoice>.IsEmptyMessage(Invoice) KinesisProcessorBase<Invoice>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDataInvoiceProcessor(IServiceMock) public KinesisDataInvoiceProcessor(IServiceMock serviceMock) Parameters serviceMock IServiceMock Methods ProcessMessage(Invoice) Processes an individual Kinesis message of type Invoice. protected override Task ProcessMessage(Invoice message) Parameters message Invoice The Kinesis message to process. Returns Task A task representing the asynchronous processing operation. SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDataInvoiceProcessor2.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDataInvoiceProcessor2.html",
    "title": "Class KinesisDataInvoiceProcessor2 | Innovt Platform",
    "keywords": "Class KinesisDataInvoiceProcessor2 Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class KinesisDataInvoiceProcessor2 : KinesisDataProcessor<DataStream<BaseInvoice>> Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<DataStream<BaseInvoice>> KinesisDataProcessorBatch<DataStream<BaseInvoice>> KinesisDataProcessor<DataStream<BaseInvoice>> KinesisDataInvoiceProcessor2 Inherited Members KinesisDataProcessor<DataStream<BaseInvoice>>.ProcessMessages(IList<DataStream<BaseInvoice>>) KinesisDataProcessorBatch<DataStream<BaseInvoice>>.DeserializeBody(string, string) KinesisDataProcessorBatch<DataStream<BaseInvoice>>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<DataStream<BaseInvoice>>.ReportBatchFailures KinesisProcessorBase<DataStream<BaseInvoice>>.IsEmptyMessage(DataStream<BaseInvoice>) KinesisProcessorBase<DataStream<BaseInvoice>>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDataInvoiceProcessor2(IDataServiceMock<BaseInvoice>) public KinesisDataInvoiceProcessor2(IDataServiceMock<BaseInvoice> serviceMock) Parameters serviceMock IDataServiceMock<BaseInvoice> Methods ProcessMessage(DataStream<BaseInvoice>) Processes an individual Kinesis message of type DataStream<BaseInvoice>. protected override Task ProcessMessage(DataStream<BaseInvoice> message) Parameters message DataStream<BaseInvoice> The Kinesis message to process. Returns Task A task representing the asynchronous processing operation. SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDataInvoiceProcessorBatch.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDataInvoiceProcessorBatch.html",
    "title": "Class KinesisDataInvoiceProcessorBatch | Innovt Platform",
    "keywords": "Class KinesisDataInvoiceProcessorBatch Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class KinesisDataInvoiceProcessorBatch : KinesisDataProcessorBatch<Invoice> Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<Invoice> KinesisDataProcessorBatch<Invoice> KinesisDataInvoiceProcessorBatch Inherited Members KinesisDataProcessorBatch<Invoice>.DeserializeBody(string, string) KinesisDataProcessorBatch<Invoice>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<Invoice>.ReportBatchFailures KinesisProcessorBase<Invoice>.IsEmptyMessage(Invoice) KinesisProcessorBase<Invoice>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDataInvoiceProcessorBatch(IServiceMock, bool) public KinesisDataInvoiceProcessorBatch(IServiceMock serviceMock, bool reportItemFailures = false) Parameters serviceMock IServiceMock reportItemFailures bool Methods ProcessMessages(IList<Invoice>) Processes a batch of messages of type Invoice. protected override Task<BatchFailureResponse> ProcessMessages(IList<Invoice> messages) Parameters messages IList<Invoice> The batch of messages to process. Returns Task<BatchFailureResponse> A BatchFailureResponse containing information about failed message processing. SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDomainEventEmptyInvoiceProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDomainEventEmptyInvoiceProcessor.html",
    "title": "Class KinesisDomainEventEmptyInvoiceProcessor | Innovt Platform",
    "keywords": "Class KinesisDomainEventEmptyInvoiceProcessor Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class KinesisDomainEventEmptyInvoiceProcessor : KinesisDomainEventProcessor<DomainEvent> Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<DomainEvent> KinesisDomainEventProcessorBatch<DomainEvent> KinesisDomainEventProcessor<DomainEvent> KinesisDomainEventEmptyInvoiceProcessor Inherited Members KinesisDomainEventProcessor<DomainEvent>.ProcessMessages(IList<DomainEvent>) KinesisDomainEventProcessorBatch<DomainEvent>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<DomainEvent>.ReportBatchFailures KinesisProcessorBase<DomainEvent>.IsEmptyMessage(DomainEvent) KinesisProcessorBase<DomainEvent>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDomainEventEmptyInvoiceProcessor(IDomainEventServiceMock<DomainEvent>) public KinesisDomainEventEmptyInvoiceProcessor(IDomainEventServiceMock<DomainEvent> domainEventServiceMock) Parameters domainEventServiceMock IDomainEventServiceMock<DomainEvent> Methods DeserializeBody(string, string?) Deserializes the content of a Kinesis message into an instance of type DomainEvent. protected override DomainEvent DeserializeBody(string content, string? partition) Parameters content string The content of the Kinesis message. partition string The partition associated with the message. Returns DomainEvent An instance of type DomainEvent representing the deserialized message. ProcessMessage(DomainEvent) Processes a single domain-specific event of type DomainEvent. protected override Task ProcessMessage(DomainEvent message) Parameters message DomainEvent The domain-specific event to process. Returns Task A task representing the asynchronous operation. SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDomainEventInvoiceProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDomainEventInvoiceProcessor.html",
    "title": "Class KinesisDomainEventInvoiceProcessor | Innovt Platform",
    "keywords": "Class KinesisDomainEventInvoiceProcessor Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class KinesisDomainEventInvoiceProcessor : KinesisDomainEventProcessor<InvoiceDomainEvent> Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<InvoiceDomainEvent> KinesisDomainEventProcessorBatch<InvoiceDomainEvent> KinesisDomainEventProcessor<InvoiceDomainEvent> KinesisDomainEventInvoiceProcessor Inherited Members KinesisDomainEventProcessor<InvoiceDomainEvent>.ProcessMessages(IList<InvoiceDomainEvent>) KinesisDomainEventProcessorBatch<InvoiceDomainEvent>.DeserializeBody(string, string) KinesisDomainEventProcessorBatch<InvoiceDomainEvent>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<InvoiceDomainEvent>.ReportBatchFailures KinesisProcessorBase<InvoiceDomainEvent>.IsEmptyMessage(InvoiceDomainEvent) KinesisProcessorBase<InvoiceDomainEvent>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDomainEventInvoiceProcessor(IDomainEventServiceMock<InvoiceDomainEvent>) public KinesisDomainEventInvoiceProcessor(IDomainEventServiceMock<InvoiceDomainEvent> domainEventServiceMock) Parameters domainEventServiceMock IDomainEventServiceMock<InvoiceDomainEvent> Methods ProcessMessage(InvoiceDomainEvent) Processes a single domain-specific event of type InvoiceDomainEvent. protected override Task ProcessMessage(InvoiceDomainEvent message) Parameters message InvoiceDomainEvent The domain-specific event to process. Returns Task A task representing the asynchronous operation. SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDomainEventInvoiceProcessorBatch.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.KinesisDomainEventInvoiceProcessorBatch.html",
    "title": "Class KinesisDomainEventInvoiceProcessorBatch | Innovt Platform",
    "keywords": "Class KinesisDomainEventInvoiceProcessorBatch Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Assembly Innovt.Cloud.AWS.Lambda.Kinesis.Tests.dll public class KinesisDomainEventInvoiceProcessorBatch : KinesisDomainEventProcessorBatch<InvoiceDomainEvent> Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<InvoiceDomainEvent> KinesisDomainEventProcessorBatch<InvoiceDomainEvent> KinesisDomainEventInvoiceProcessorBatch Inherited Members KinesisDomainEventProcessorBatch<InvoiceDomainEvent>.DeserializeBody(string, string) KinesisDomainEventProcessorBatch<InvoiceDomainEvent>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<InvoiceDomainEvent>.ReportBatchFailures KinesisProcessorBase<InvoiceDomainEvent>.IsEmptyMessage(InvoiceDomainEvent) KinesisProcessorBase<InvoiceDomainEvent>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors KinesisDomainEventInvoiceProcessorBatch(IDomainEventServiceMock<InvoiceDomainEvent>) public KinesisDomainEventInvoiceProcessorBatch(IDomainEventServiceMock<InvoiceDomainEvent> domainEventServiceMock) Parameters domainEventServiceMock IDomainEventServiceMock<InvoiceDomainEvent> Methods ProcessMessages(IList<InvoiceDomainEvent>) Processes a batch of domain-specific events of type InvoiceDomainEvent. protected override Task<BatchFailureResponse> ProcessMessages(IList<InvoiceDomainEvent> messages) Parameters messages IList<InvoiceDomainEvent> The batch of domain-specific events to process. Returns Task<BatchFailureResponse> A BatchFailureResponse containing information about failed event processing. SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests.Processors Classes BaseInvoice Invoice InvoiceDomainEvent KinesisDataInvoiceProcessor KinesisDataInvoiceProcessor2 KinesisDataInvoiceProcessorBatch KinesisDomainEventEmptyInvoiceProcessor KinesisDomainEventInvoiceProcessor KinesisDomainEventInvoiceProcessorBatch"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Tests Classes KinesisProcessorTests Interfaces IDataServiceMock<T> IDomainEventServiceMock<T> IServiceMock"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis Classes KinesisDataProcessorBatch<TBody> Represents a base class for processing Kinesis data streams in batch, where each batch consists of messages of type TBody. KinesisDataProcessor<TBody> Represents a base class for processing Kinesis data streams in batch, where each batch consists of messages of type TBody. KinesisDomainEventProcessorBatch<TBody> KinesisDomainEventProcessor<TBody> Represents a base class for processing domain-specific Kinesis events, where each event is of type TBody. KinesisProcessorBase<TBody> Represents a base class for processing Kinesis events with content of type TBody."
  },
  "api/Innovt.Cloud.AWS.Lambda.S3.S3EventProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.S3.S3EventProcessor.html",
    "title": "Class S3EventProcessor | Innovt Platform",
    "keywords": "Class S3EventProcessor Namespace Innovt.Cloud.AWS.Lambda.S3 Assembly Innovt.Cloud.AWS.Lambda.S3.dll The abstract S3EventProcessor class serves as the base class for processing Amazon S3 events in AWS Lambda functions. public abstract class S3EventProcessor : EventProcessor<S3Event> Inheritance object BaseEventProcessor EventProcessor<S3Event> S3EventProcessor Inherited Members EventProcessor<S3Event>.Process(S3Event, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors S3EventProcessor() Initializes a new instance of the S3EventProcessor class with default settings. protected S3EventProcessor() S3EventProcessor(ILogger) Initializes a new instance of the S3EventProcessor class with the specified logger. protected S3EventProcessor(ILogger logger) Parameters logger ILogger The logger used for logging events and messages. Methods Handle(S3Event, ILambdaContext) Handles the processing of an incoming S3Event, which may contain multiple S3 event records. protected override Task Handle(S3Event message, ILambdaContext context) Parameters message S3Event The S3Event containing one or more S3 event records. context ILambdaContext The ILambdaContext providing information about the Lambda function's execution environment. Returns Task A Task representing the asynchronous processing operation. ProcessMessage(S3EventNotificationRecord) Handles the processing of an individual S3 event record. protected abstract Task ProcessMessage(S3Event.S3EventNotificationRecord message) Parameters message S3Event.S3EventNotificationRecord The S3Event.S3EventNotificationRecord representing a single S3 event record. Returns Task A Task representing the asynchronous processing operation."
  },
  "api/Innovt.Cloud.AWS.Lambda.S3.Serializers.S3EventJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.S3.Serializers.S3EventJsonSerializerContext.html",
    "title": "Class S3EventJsonSerializerContext | Innovt Platform",
    "keywords": "Class S3EventJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.S3.Serializers Assembly Innovt.Cloud.AWS.Lambda.S3.dll Represents a JSON serializer context for S3 Serializer for AOT Support [JsonSerializable(typeof(S3Event))] [JsonSerializable(typeof(BatchFailureResponse))] public class S3EventJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext S3EventJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors S3EventJsonSerializerContext() public S3EventJsonSerializerContext() S3EventJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public S3EventJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties BatchFailureResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<BatchFailureResponse> BatchFailureResponse { get; } Property Value JsonTypeInfo<BatchFailureResponse> DateTime Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<DateTime> DateTime { get; } Property Value JsonTypeInfo<DateTime> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static S3EventJsonSerializerContext Default { get; } Property Value S3EventJsonSerializerContext GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions IListItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<IList<ItemFailureIdentifier>> IListItemFailureIdentifier { get; } Property Value JsonTypeInfo<IList<ItemFailureIdentifier>> Int64 Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<long> Int64 { get; } Property Value JsonTypeInfo<long> ItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<ItemFailureIdentifier> ItemFailureIdentifier { get; } Property Value JsonTypeInfo<ItemFailureIdentifier> ListS3EventNotificationRecord Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<List<S3Event.S3EventNotificationRecord>> ListS3EventNotificationRecord { get; } Property Value JsonTypeInfo<List<S3Event.S3EventNotificationRecord>> RequestParametersEntity Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.RequestParametersEntity> RequestParametersEntity { get; } Property Value JsonTypeInfo<S3Event.RequestParametersEntity> ResponseElementsEntity Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.ResponseElementsEntity> ResponseElementsEntity { get; } Property Value JsonTypeInfo<S3Event.ResponseElementsEntity> S3BucketEntity Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.S3BucketEntity> S3BucketEntity { get; } Property Value JsonTypeInfo<S3Event.S3BucketEntity> S3Entity Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.S3Entity> S3Entity { get; } Property Value JsonTypeInfo<S3Event.S3Entity> S3Event Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event> S3Event { get; } Property Value JsonTypeInfo<S3Event> S3EventNotificationRecord Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.S3EventNotificationRecord> S3EventNotificationRecord { get; } Property Value JsonTypeInfo<S3Event.S3EventNotificationRecord> S3GlacierEventDataEntity Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.S3GlacierEventDataEntity> S3GlacierEventDataEntity { get; } Property Value JsonTypeInfo<S3Event.S3GlacierEventDataEntity> S3ObjectEntity Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.S3ObjectEntity> S3ObjectEntity { get; } Property Value JsonTypeInfo<S3Event.S3ObjectEntity> S3RestoreEventDataEntity Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.S3RestoreEventDataEntity> S3RestoreEventDataEntity { get; } Property Value JsonTypeInfo<S3Event.S3RestoreEventDataEntity> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> UserIdentityEntity Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<S3Event.UserIdentityEntity> UserIdentityEntity { get; } Property Value JsonTypeInfo<S3Event.UserIdentityEntity> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.S3.Serializers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.S3.Serializers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.S3.Serializers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.S3.Serializers Classes S3EventJsonSerializerContext Represents a JSON serializer context for S3 Serializer for AOT Support"
  },
  "api/Innovt.Cloud.AWS.Lambda.S3.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.S3.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.S3 | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.S3 Classes S3EventProcessor The abstract S3EventProcessor class serves as the base class for processing Amazon S3 events in AWS Lambda functions."
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.Serializers.SqsEventJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.Serializers.SqsEventJsonSerializerContext.html",
    "title": "Class SqsEventJsonSerializerContext | Innovt Platform",
    "keywords": "Class SqsEventJsonSerializerContext Namespace Innovt.Cloud.AWS.Lambda.Sqs.Serializers Assembly Innovt.Cloud.AWS.Lambda.Sqs.dll Represents a JSON serializer context for Sqs Serializer for AOT Support [JsonSerializable(typeof(SQSEvent))] [JsonSerializable(typeof(BatchFailureResponse))] public class SqsEventJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext SqsEventJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SqsEventJsonSerializerContext() public SqsEventJsonSerializerContext() SqsEventJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public SqsEventJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties BatchFailureResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<BatchFailureResponse> BatchFailureResponse { get; } Property Value JsonTypeInfo<BatchFailureResponse> Boolean Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<bool> Boolean { get; } Property Value JsonTypeInfo<bool> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static SqsEventJsonSerializerContext Default { get; } Property Value SqsEventJsonSerializerContext DictionaryStringMessageAttribute Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<Dictionary<string, SQSEvent.MessageAttribute>> DictionaryStringMessageAttribute { get; } Property Value JsonTypeInfo<Dictionary<string, SQSEvent.MessageAttribute>> DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions IListItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<IList<ItemFailureIdentifier>> IListItemFailureIdentifier { get; } Property Value JsonTypeInfo<IList<ItemFailureIdentifier>> Int32 Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<int> Int32 { get; } Property Value JsonTypeInfo<int> Int64 Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<long> Int64 { get; } Property Value JsonTypeInfo<long> ItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<ItemFailureIdentifier> ItemFailureIdentifier { get; } Property Value JsonTypeInfo<ItemFailureIdentifier> ListMemoryStream Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<List<MemoryStream>> ListMemoryStream { get; } Property Value JsonTypeInfo<List<MemoryStream>> ListSQSMessage Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<List<SQSEvent.SQSMessage>> ListSQSMessage { get; } Property Value JsonTypeInfo<List<SQSEvent.SQSMessage>> ListString Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<List<string>> ListString { get; } Property Value JsonTypeInfo<List<string>> MemoryStream Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<MemoryStream> MemoryStream { get; } Property Value JsonTypeInfo<MemoryStream> MessageAttribute Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<SQSEvent.MessageAttribute> MessageAttribute { get; } Property Value JsonTypeInfo<SQSEvent.MessageAttribute> SQSEvent Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<SQSEvent> SQSEvent { get; } Property Value JsonTypeInfo<SQSEvent> SQSMessage Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<SQSEvent.SQSMessage> SQSMessage { get; } Property Value JsonTypeInfo<SQSEvent.SQSMessage> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.Serializers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.Serializers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Sqs.Serializers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Sqs.Serializers Classes SqsEventJsonSerializerContext Represents a JSON serializer context for Sqs Serializer for AOT Support"
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor-1.html",
    "title": "Class SqsEventProcessor<TBody> | Innovt Platform",
    "keywords": "Class SqsEventProcessor<TBody> Namespace Innovt.Cloud.AWS.Lambda.Sqs Assembly Innovt.Cloud.AWS.Lambda.Sqs.dll public abstract class SqsEventProcessor<TBody> : EventProcessor<SQSEvent, BatchFailureResponse> where TBody : class Type Parameters TBody Inheritance object BaseEventProcessor EventProcessor<SQSEvent, BatchFailureResponse> SqsEventProcessor<TBody> Derived CustomSqsEventProcessor Function Inherited Members EventProcessor<SQSEvent, BatchFailureResponse>.Process(SQSEvent, ILambdaContext) EventProcessor<SQSEvent, BatchFailureResponse>.Handle(SQSEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SqsEventProcessor(ILogger, ISerializer, bool, bool) Initializes a new instance of the SqsEventProcessor class with the specified logger, serializer, FIFO queue setting, and report batch failures setting. protected SqsEventProcessor(ILogger logger, ISerializer serializer, bool isFifo = false, bool reportBatchFailures = false) Parameters logger ILogger The logger used for logging events and messages. serializer ISerializer The serializer used for message deserialization. isFifo bool A boolean indicating whether the SQS queue is FIFO (First-In-First-Out). reportBatchFailures bool A boolean indicating whether to report batch processing failures. SqsEventProcessor(ILogger, bool, bool) Initializes a new instance of the SqsEventProcessor class with the specified logger, FIFO queue setting, and report batch failures setting. protected SqsEventProcessor(ILogger logger, bool isFifo = false, bool reportBatchFailures = false) Parameters logger ILogger The logger used for logging events and messages. isFifo bool A boolean indicating whether the SQS queue is FIFO (First-In-First-Out). reportBatchFailures bool A boolean indicating whether to report batch processing failures. SqsEventProcessor(bool, bool) Initializes a new instance of the SqsEventProcessor class with the specified FIFO queue setting and report batch failures setting. protected SqsEventProcessor(bool isFifo = false, bool reportBatchFailures = false) Parameters isFifo bool A boolean indicating whether the SQS queue is FIFO (First-In-First-Out). reportBatchFailures bool A boolean indicating whether to report batch processing failures. Properties ReportBatchFailures Gets or sets a boolean indicating whether to report batch processing failures. protected bool ReportBatchFailures { get; set; } Property Value bool Methods Handle(SQSEvent, ILambdaContext) Handles the processing of an incoming SQSEvent, which may contain multiple SQS event records. protected override Task<BatchFailureResponse> Handle(SQSEvent message, ILambdaContext context) Parameters message SQSEvent The SQSEvent containing one or more SQS event records. context ILambdaContext The ILambdaContext providing information about the Lambda function's execution environment. Returns Task<BatchFailureResponse> A Task representing the asynchronous processing operation. ProcessMessage(QueueMessage<TBody>) Handles the processing of an individual SQS message. protected abstract Task ProcessMessage(QueueMessage<TBody> message) Parameters message QueueMessage<TBody> The QueueMessage object containing information about the SQS message. Returns Task A Task representing the asynchronous processing operation."
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.Tests.CustomSqsEventProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.Tests.CustomSqsEventProcessor.html",
    "title": "Class CustomSqsEventProcessor | Innovt Platform",
    "keywords": "Class CustomSqsEventProcessor Namespace Innovt.Cloud.AWS.Lambda.Sqs.Tests Assembly Innovt.Cloud.AWS.Lambda.Sqs.Tests.dll public class CustomSqsEventProcessor : SqsEventProcessor<Person> Inheritance object BaseEventProcessor EventProcessor<SQSEvent, BatchFailureResponse> SqsEventProcessor<Person> CustomSqsEventProcessor Inherited Members SqsEventProcessor<Person>.ReportBatchFailures SqsEventProcessor<Person>.Handle(SQSEvent, ILambdaContext) EventProcessor<SQSEvent, BatchFailureResponse>.Process(SQSEvent, ILambdaContext) EventProcessor<SQSEvent, BatchFailureResponse>.Handle(SQSEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CustomSqsEventProcessor() public CustomSqsEventProcessor() CustomSqsEventProcessor(ILogger) public CustomSqsEventProcessor(ILogger logger) Parameters logger ILogger CustomSqsEventProcessor(bool, bool) public CustomSqsEventProcessor(bool isFifo, bool reportBatchItemFailures) Parameters isFifo bool reportBatchItemFailures bool Methods ProcessMessage(QueueMessage<Person>) Handles the processing of an individual SQS message. protected override Task ProcessMessage(QueueMessage<Person> message) Parameters message QueueMessage<Person> The QueueMessage object containing information about the SQS message. Returns Task A Task representing the asynchronous processing operation. SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.Tests.Person.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.Tests.Person.html",
    "title": "Class Person | Innovt Platform",
    "keywords": "Class Person Namespace Innovt.Cloud.AWS.Lambda.Sqs.Tests Assembly Innovt.Cloud.AWS.Lambda.Sqs.Tests.dll public class Person Inheritance object Person Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Person(string) public Person(string name) Parameters name string Properties Name public string Name { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.Tests.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.Tests.Tests.html",
    "title": "Class Tests | Innovt Platform",
    "keywords": "Class Tests Namespace Innovt.Cloud.AWS.Lambda.Sqs.Tests Assembly Innovt.Cloud.AWS.Lambda.Sqs.Tests.dll public class Tests Inheritance object Tests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Handle_BatchMessage_ForFifoQueue_Returns_TheRemainingMessages_WhenFindTheFirstFailure() [Test] public Task Handle_BatchMessage_ForFifoQueue_Returns_TheRemainingMessages_WhenFindTheFirstFailure() Returns Task Handle_BatchMessage_Returns_EmptyBatchResponseWhen_ThereIsNoFailures() [Test] public Task Handle_BatchMessage_Returns_EmptyBatchResponseWhen_ThereIsNoFailures() Returns Task Handle_BatchMessage_Returns_Empty_When_ThereIsNoMessages() [Test] public Task Handle_BatchMessage_Returns_Empty_When_ThereIsNoMessages() Returns Task Handle_BatchMessage_Returns_Exception_WhenFunctionDoesNotReportItemFailuers() [Test] public void Handle_BatchMessage_Returns_Exception_WhenFunctionDoesNotReportItemFailuers() Handle_BatchMessage_Returns_FailedMessages_WhenQueueIsStandard() [Test] public Task Handle_BatchMessage_Returns_FailedMessages_WhenQueueIsStandard() Returns Task Setup() [SetUp] public void Setup()"
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Sqs.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Sqs.Tests Classes CustomSqsEventProcessor Person Tests"
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Sqs | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Sqs Classes SqsEventProcessor<TBody>"
  },
  "api/Innovt.Cloud.AWS.Lambda.Tests.CustomEventProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Tests.CustomEventProcessor.html",
    "title": "Class CustomEventProcessor | Innovt Platform",
    "keywords": "Class CustomEventProcessor Namespace Innovt.Cloud.AWS.Lambda.Tests Assembly Innovt.Cloud.AWS.Lambda.Tests.dll public class CustomEventProcessor : EventProcessor<Person> Inheritance object BaseEventProcessor EventProcessor<Person> CustomEventProcessor Inherited Members EventProcessor<Person>.Process(Person, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CustomEventProcessor() public CustomEventProcessor() CustomEventProcessor(ILogger?) public CustomEventProcessor(ILogger? logger) Parameters logger ILogger Methods Handle(Person, ILambdaContext) Handles the event message. protected override Task Handle(Person message, ILambdaContext context) Parameters message Person The event message to handle. context ILambdaContext The Lambda context associated with the event processing. Returns Task SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Innovt.Cloud.AWS.Lambda.Tests.Person.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Tests.Person.html",
    "title": "Class Person | Innovt Platform",
    "keywords": "Class Person Namespace Innovt.Cloud.AWS.Lambda.Tests Assembly Innovt.Cloud.AWS.Lambda.Tests.dll public class Person Inheritance object Person Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Name public string Name { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.Lambda.Tests.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Tests.Tests.html",
    "title": "Class Tests | Innovt Platform",
    "keywords": "Class Tests Namespace Innovt.Cloud.AWS.Lambda.Tests Assembly Innovt.Cloud.AWS.Lambda.Tests.dll [TestFixture] public class Tests Inheritance object Tests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Process_Calls_LoggError_When_Function_ThrowsException() [Test] public Task Process_Calls_LoggError_When_Function_ThrowsException() Returns Task Process_Throws_Exception_When_CustomLogger_IsNull() [Test] public void Process_Throws_Exception_When_CustomLogger_IsNull() Process_Use_Default_Logger() [Test] public Task Process_Use_Default_Logger() Returns Task Process_Use_Default_Logger_When_CustomLogger_IsNull() [Test] public Task Process_Use_Default_Logger_When_CustomLogger_IsNull() Returns Task Setup() [SetUp] public void Setup()"
  },
  "api/Innovt.Cloud.AWS.Lambda.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Tests Classes CustomEventProcessor Person Tests"
  },
  "api/Innovt.Cloud.AWS.Lambda.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda Classes BaseEventProcessor Represents a base class for event processors with common functionality such as logging, IOC container setup, and configuration. BatchFailureResponse Represents a response containing information about batch item failures. EventProcessor<T> Represents a base class for event processors that handle specific event types without producing a result. EventProcessor<T, TResult> Represents a base class for event processors that handle specific event types and produce a result. Helpers A utility class containing helper methods for common tasks in AWS Lambda functions. ItemFailureIdentifier Represents an identifier for an item that has failed in a batch operation."
  },
  "api/Innovt.Cloud.AWS.Notification.MailNotificationHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Notification.MailNotificationHandler.html",
    "title": "Class MailNotificationHandler | Innovt Platform",
    "keywords": "Class MailNotificationHandler Namespace Innovt.Cloud.AWS.Notification Assembly Innovt.Cloud.AWS.Notification.dll Handles sending notifications via email using Amazon Simple Email Service (SES). public class MailNotificationHandler : AwsBaseService, IDisposable, INotificationHandler Inheritance object AwsBaseService MailNotificationHandler Implements IDisposable INotificationHandler Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors MailNotificationHandler(ILogger, IAwsConfiguration) Initializes a new instance of the MailNotificationHandler class. public MailNotificationHandler(ILogger logger, IAwsConfiguration configuration) Parameters logger ILogger The logger. configuration IAwsConfiguration The AWS configuration. MailNotificationHandler(ILogger, IAwsConfiguration, string) Initializes a new instance of the MailNotificationHandler class with a specified region. public MailNotificationHandler(ILogger logger, IAwsConfiguration configuration, string region) Parameters logger ILogger The logger. configuration IAwsConfiguration The AWS configuration. region string The AWS region. Properties DefaultCharset Gets or sets the default charset for the email. public string DefaultCharset { get; set; } Property Value string Methods DisposeServices() Disposes of the Amazon Simple Email Service (SES) client instance. protected override void DisposeServices() SendAsync(NotificationMessage, CancellationToken) Sends a notification via email asynchronously. public Task<dynamic> SendAsync(NotificationMessage message, CancellationToken cancellationToken = default) Parameters message NotificationMessage The notification message. cancellationToken CancellationToken The cancellation token. Returns Task<dynamic> A dynamic response from the email sending operation."
  },
  "api/Innovt.Cloud.AWS.Notification.NotificationHandleFactory.html": {
    "href": "api/Innovt.Cloud.AWS.Notification.NotificationHandleFactory.html",
    "title": "Class NotificationHandleFactory | Innovt Platform",
    "keywords": "Class NotificationHandleFactory Namespace Innovt.Cloud.AWS.Notification Assembly Innovt.Cloud.AWS.Notification.dll Factory for creating notification handlers based on the notification message type. public class NotificationHandleFactory : INotificationHandleFactory Inheritance object NotificationHandleFactory Implements INotificationHandleFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors NotificationHandleFactory(IContainer) Initializes a new instance of the NotificationHandleFactory class. public NotificationHandleFactory(IContainer container) Parameters container IContainer The IoC container. Methods Create(NotificationMessageType) Creates a notification handler based on the provided notification message type. public virtual INotificationHandler Create(NotificationMessageType notificationMessageType) Parameters notificationMessageType NotificationMessageType The notification message type. Returns INotificationHandler A notification handler for the specified message type. CreateCustomHandle(NotificationMessageType) Creates a custom notification handler for the specified message type. Override this method to implement custom handling for specific message types. public virtual INotificationHandler CreateCustomHandle(NotificationMessageType notificationMessageType) Parameters notificationMessageType NotificationMessageType The notification message type. Returns INotificationHandler A custom notification handler."
  },
  "api/Innovt.Cloud.AWS.Notification.SmsNotificationHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Notification.SmsNotificationHandler.html",
    "title": "Class SmsNotificationHandler | Innovt Platform",
    "keywords": "Class SmsNotificationHandler Namespace Innovt.Cloud.AWS.Notification Assembly Innovt.Cloud.AWS.Notification.dll SMS notification handler using Amazon Simple Notification Service (SNS). public class SmsNotificationHandler : AwsBaseService, IDisposable, INotificationHandler Inheritance object AwsBaseService SmsNotificationHandler Implements IDisposable INotificationHandler Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SmsNotificationHandler(ILogger, IAwsConfiguration) Initializes a new instance of the SmsNotificationHandler class. public SmsNotificationHandler(ILogger logger, IAwsConfiguration configuration) Parameters logger ILogger The logger. configuration IAwsConfiguration The AWS configuration. SmsNotificationHandler(ILogger, IAwsConfiguration, string) Initializes a new instance of the SmsNotificationHandler class with a specific AWS region. public SmsNotificationHandler(ILogger logger, IAwsConfiguration configuration, string region) Parameters logger ILogger The logger. configuration IAwsConfiguration The AWS configuration. region string The AWS region. Methods DisposeServices() Disposes the resources used by the SMS notification handler. protected override void DisposeServices() SendAsync(NotificationMessage, CancellationToken) Sends an SMS notification asynchronously. public Task<dynamic> SendAsync(NotificationMessage message, CancellationToken cancellationToken = default) Parameters message NotificationMessage The notification message. cancellationToken CancellationToken The cancellation token. Returns Task<dynamic> A dynamic result representing the delivery status of the SMS."
  },
  "api/Innovt.Cloud.AWS.Notification.html": {
    "href": "api/Innovt.Cloud.AWS.Notification.html",
    "title": "Namespace Innovt.Cloud.AWS.Notification | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Notification Classes MailNotificationHandler Handles sending notifications via email using Amazon Simple Email Service (SES). NotificationHandleFactory Factory for creating notification handlers based on the notification message type. SmsNotificationHandler SMS notification handler using Amazon Simple Notification Service (SNS)."
  },
  "api/Innovt.Cloud.AWS.S3.S3FileSystem.html": {
    "href": "api/Innovt.Cloud.AWS.S3.S3FileSystem.html",
    "title": "Class S3FileSystem | Innovt Platform",
    "keywords": "Class S3FileSystem Namespace Innovt.Cloud.AWS.S3 Assembly Innovt.Cloud.AWS.S3.dll Amazon S3 file system implementation. public class S3FileSystem : AwsBaseService, IDisposable, IFileSystem Inheritance object AwsBaseService S3FileSystem Implements IDisposable IFileSystem Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors S3FileSystem(ILogger, IAwsConfiguration) Initializes a new instance of the S3FileSystem class. public S3FileSystem(ILogger logger, IAwsConfiguration configuration) Parameters logger ILogger The logger. configuration IAwsConfiguration The AWS configuration. S3FileSystem(ILogger, IAwsConfiguration, string) Initializes a new instance of the S3FileSystem class with a specific AWS region. public S3FileSystem(ILogger logger, IAwsConfiguration configuration, string region) Parameters logger ILogger The logger. configuration IAwsConfiguration The AWS configuration. region string The AWS region. Methods CopyObject(string, string, string, string, string, string, CancellationToken) Asynchronously copies an object (file or folder) from the source bucket to the destination bucket. public Task<bool> CopyObject(string sourceBucket, string sourceKey, string destinationBucket, string destinationKey, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters sourceBucket string The source bucket name. sourceKey string The source key of the object to copy. destinationBucket string The destination bucket name. destinationKey string The destination key for the copied object. serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control for the copied object (optional). cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<bool> True if the object was successfully copied; otherwise, false. DeleteObject(string, string) Synchronously deletes an object (file or folder) from the specified Amazon S3 bucket. public bool DeleteObject(string bucketName, string key) Parameters bucketName string The name of the S3 bucket. key string The key of the object to delete. Returns bool True if the object was successfully deleted; otherwise, false. DeleteObjectAsync(string, string, CancellationToken) Asynchronously deletes an object (file or folder) from the specified Amazon S3 bucket. public Task<bool> DeleteObjectAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. key string The key of the object to delete. cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<bool> True if the object was successfully deleted; otherwise, false. DisposeServices() Disposes the S3 client instance. protected override void DisposeServices() Download(string, string, string) Downloads a file from an Amazon S3 bucket. public void Download(string bucketName, string fileName, string destination) Parameters bucketName string The name of the S3 bucket. fileName string The name of the file to download. destination string The local file path to save the downloaded file. DownloadStream(string) Downloads a file from an Amazon S3 bucket as a stream using the provided URL. public Stream DownloadStream(string url) Parameters url string The URL of the file to download from Amazon S3. Returns Stream A stream containing the downloaded file's content. DownloadStream(string, string) Downloads a file from an Amazon S3 bucket as a stream. public Stream DownloadStream(string bucketName, string fileName) Parameters bucketName string The name of the S3 bucket. fileName string The name of the file to download. Returns Stream A stream containing the downloaded file's content. DownloadStreamAsync(string, string, CancellationToken) Asynchronously downloads a file from an Amazon S3 bucket as a stream. public Task<Stream> DownloadStreamAsync(string bucketName, string fileName, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. fileName string The name of the file to download. cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<Stream> A stream containing the downloaded file's content. DownloadStreamAsync(string, CancellationToken) Asynchronously downloads a file from an Amazon S3 bucket as a stream using the provided URL. public Task<Stream> DownloadStreamAsync(string url, CancellationToken cancellationToken = default) Parameters url string The URL of the file to download from Amazon S3. cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<Stream> A stream containing the downloaded file's content. ExtractBucketFromGetUrl(string) Extracts bucket name and file key from the S3 bucket URL. public (string bucket, string fileKey) ExtractBucketFromGetUrl(string bucketUrl) Parameters bucketUrl string The S3 bucket URL. Returns (string bucket, string fileKey) A tuple containing the bucket name and the file key. FileExistsAsync(string, string, CancellationToken) Asynchronously checks if a file exists in the specified Amazon S3 bucket. public Task<bool> FileExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. key string The key representing the file in the S3 bucket. cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<bool> True if the file exists; otherwise, false. FolderExists(string, string) Synchronously checks if a folder exists in the specified Amazon S3 bucket. public bool FolderExists(string bucketName, string key) Parameters bucketName string The name of the S3 bucket. key string The key representing the folder in the S3 bucket. Returns bool True if the folder exists; otherwise, false. FolderExistsAsync(string, string, CancellationToken) Asynchronously checks if a folder exists in the specified Amazon S3 bucket. public Task<bool> FolderExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. key string The key representing the folder in the S3 bucket. cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<bool> True if the folder exists; otherwise, false. GeneratePreSignedUrl(string, string, DateTime, IDictionary<string, object>) Generates a pre-signed URL for accessing an object in the S3 bucket. public string GeneratePreSignedUrl(string bucketName, string key, DateTime expiration, IDictionary<string, object> additionalProperties) Parameters bucketName string The name of the S3 bucket. key string The key of the object in the S3 bucket. expiration DateTime The expiration date and time for the pre-signed URL. additionalProperties IDictionary<string, object> Additional properties for the pre-signed URL (optional). Returns string The pre-signed URL for accessing the object. GetObjectContentAsync(string, string, Encoding, CancellationToken) Gets the content of the object from the specified URL asynchronously. public Task<string> GetObjectContentAsync(string bucketName, string key, Encoding encoding, CancellationToken cancellationToken = default) Parameters bucketName string The Bucket name. key string The file url encoding Encoding cancellationToken CancellationToken Returns Task<string> GetObjectContentAsync(string, Encoding, CancellationToken) Asynchronously gets the content of an object from a specified URL with the given encoding. public Task<string> GetObjectContentAsync(string url, Encoding encoding, CancellationToken cancellationToken = default) Parameters url string The URL of the object to retrieve. encoding Encoding The encoding to use for reading the object's content. cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<string> The content of the object as a string. GetObjectFromJsonAsync<T>(Uri, CancellationToken) When you need to get a content from Json file as an typed method. public Task<T> GetObjectFromJsonAsync<T>(Uri filePath, CancellationToken cancellationToken = default) Parameters filePath Uri cancellationToken CancellationToken Returns Task<T> Type Parameters T GetPreSignedUrl(string, string, DateTime) Gets a pre-signed URL for accessing an object in the S3 bucket. public string GetPreSignedUrl(string bucketName, string key, DateTime expires) Parameters bucketName string The name of the S3 bucket. key string The key of the object in the S3 bucket. expires DateTime The expiration date and time for the pre-signed URL. Returns string The pre-signed URL for accessing the object. PutObject(string, Stream, string, string, string, string) Uploads a stream to an Amazon S3 bucket. public string PutObject(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters bucketName string The name of the S3 bucket. stream Stream The stream to upload. fileName string The name to assign to the uploaded file. contentType string The content type of the file (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control list (optional). Returns string The key of the uploaded object in the S3 bucket. PutObject(string, string, string, string, string) Uploads a file to an Amazon S3 bucket. public string PutObject(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters bucketName string The name of the S3 bucket. filePath string The local file path of the file to upload. contentType string The content type of the file (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control list (optional). Returns string The key of the uploaded object in the S3 bucket. PutObjectAsync(string, Stream, string, string, string, string, CancellationToken) Asynchronously uploads a stream to an Amazon S3 bucket. public Task<string> PutObjectAsync(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. stream Stream The stream to upload. fileName string The name to assign to the uploaded file. contentType string The content type of the file (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control list (optional). cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<string> The key of the uploaded object in the S3 bucket. PutObjectAsync(string, string, string, string, string, CancellationToken) Asynchronously uploads a file to an Amazon S3 bucket. public Task<string> PutObjectAsync(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. filePath string The local file path of the file to upload. contentType string The content type of the file (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control list (optional). cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<string> The key of the uploaded object in the S3 bucket. Upload(string, Stream, string, IList<KeyValuePair<string, string>>, string, string) Uploads a file to the specified Amazon S3 bucket from a stream. public string Upload(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters bucketName string The name of the S3 bucket. stream Stream The stream containing the file content to upload. fileName string The name of the file to upload. metadata IList<KeyValuePair<string, string>> Metadata key-value pairs for the uploaded file (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control for the uploaded file (optional). Returns string The URL of the uploaded file. Upload(string, string, IList<KeyValuePair<string, string>>, string, string) Uploads a file to the specified Amazon S3 bucket from a local file path. public string Upload(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters bucketName string The name of the S3 bucket. filePath string The local file path to upload. metadata IList<KeyValuePair<string, string>> Metadata key-value pairs for the uploaded file (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control for the uploaded file (optional). Returns string The URL of the uploaded file. UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Asynchronously uploads an object serialized as JSON to the specified Amazon S3 bucket. public Task<string> UploadAsJsonAsync<T>(string bucketName, T obj, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. obj T The object to serialize and upload. fileName string The name of the file to use for the uploaded object. metadata IList<KeyValuePair<string, string>> Metadata key-value pairs for the uploaded object (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control for the uploaded object (optional). cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<string> The URL of the uploaded object. Type Parameters T The type of the object to serialize. UploadAsync(string, Stream, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Asynchronously uploads a file to the specified Amazon S3 bucket from a stream. public Task<string> UploadAsync(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. stream Stream The stream containing the file content to upload. fileName string The name of the file to upload. metadata IList<KeyValuePair<string, string>> Metadata key-value pairs for the uploaded file (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control for the uploaded file (optional). cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<string> The URL of the uploaded file. UploadAsync(string, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Asynchronously uploads an object from a local file path to the specified Amazon S3 bucket. public Task<string> UploadAsync(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. filePath string The local file path to upload. metadata IList<KeyValuePair<string, string>> Metadata key-value pairs for the uploaded object (optional). serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control for the uploaded object (optional). cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task<string> The URL of the uploaded object. UploadDirectoryAsync(string, string, string, string, CancellationToken) Asynchronously uploads a directory to the specified Amazon S3 bucket. public Task UploadDirectoryAsync(string bucketName, string directory, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the S3 bucket. directory string The path of the local directory to upload. serverSideEncryptionMethod string The server-side encryption method (optional). fileAcl string The file access control for the uploaded files (optional). cancellationToken CancellationToken A token to cancel the asynchronous operation (optional). Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.Cloud.AWS.S3.Tests.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.S3.Tests.Tests.html",
    "title": "Class Tests | Innovt Platform",
    "keywords": "Class Tests Namespace Innovt.Cloud.AWS.S3.Tests Assembly Innovt.Cloud.AWS.S3.Tests.dll public class Tests Inheritance object Tests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Setup() [SetUp] public void Setup()"
  },
  "api/Innovt.Cloud.AWS.S3.Tests.UserDto.html": {
    "href": "api/Innovt.Cloud.AWS.S3.Tests.UserDto.html",
    "title": "Class UserDto | Innovt Platform",
    "keywords": "Class UserDto Namespace Innovt.Cloud.AWS.S3.Tests Assembly Innovt.Cloud.AWS.S3.Tests.dll public class UserDto Inheritance object UserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties LastName public string? LastName { get; set; } Property Value string Name public string? Name { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.S3.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.S3.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.S3.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.S3.Tests Classes Tests UserDto"
  },
  "api/Innovt.Cloud.AWS.S3.html": {
    "href": "api/Innovt.Cloud.AWS.S3.html",
    "title": "Namespace Innovt.Cloud.AWS.S3 | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.S3 Classes S3FileSystem Amazon S3 file system implementation."
  },
  "api/Innovt.Cloud.AWS.SQS.QueueService-1.html": {
    "href": "api/Innovt.Cloud.AWS.SQS.QueueService-1.html",
    "title": "Class QueueService<T> | Innovt Platform",
    "keywords": "Class QueueService<T> Namespace Innovt.Cloud.AWS.SQS Assembly Innovt.Cloud.AWS.SQS.dll Provides functionalities to interact with an Amazon SQS queue for a specified message type T. public class QueueService<T> : AwsBaseService, IDisposable, IQueueService<T> where T : IQueueMessage Type Parameters T Type of the messages in the queue, must implement IQueueMessage. Inheritance object AwsBaseService QueueService<T> Implements IDisposable IQueueService<T> Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors QueueService(ILogger, IAwsConfiguration, string, ISerializer) Initializes a new instance of the QueueService<T> class. public QueueService(ILogger logger, IAwsConfiguration configuration, string queueName = null, ISerializer serializer = null) Parameters logger ILogger Logger instance. configuration IAwsConfiguration AWS configuration. queueName string Optional queue name, defaults to the name of type T. serializer ISerializer Custom serializer (optional). QueueService(ILogger, IAwsConfiguration, string, string, ISerializer) Initializes a new instance of the QueueService<T> class. public QueueService(ILogger logger, IAwsConfiguration configuration, string region, string queueName = null, ISerializer serializer = null) Parameters logger ILogger Logger instance. configuration IAwsConfiguration AWS configuration. region string queueName string Optional queue name, defaults to the name of type T. serializer ISerializer Custom serializer (optional). Properties QueueName Gets the name of the queue. public string QueueName { get; protected set; } Property Value string QueueUrl Gets the URL of the queue. public string QueueUrl { get; } Property Value string Methods ApproximateMessageCountAsync(CancellationToken) Retrieves the approximate message count of the queue asynchronously. public Task<int> ApproximateMessageCountAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Cancellation token (optional). Returns Task<int> The approximate message count of the queue. CreateIfNotExistAsync(CancellationToken) public Task CreateIfNotExistAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task DeQueueAsync(string, CancellationToken) Dequeues a message asynchronously from the queue using the provided pop receipt. public Task DeQueueAsync(string popReceipt, CancellationToken cancellationToken = default) Parameters popReceipt string The pop receipt of the message to be dequeued. cancellationToken CancellationToken Cancellation token (optional). Returns Task A task representing the asynchronous operation. DisposeServices() Disposes of the Amazon SQS client. protected override void DisposeServices() EnQueueAsync<TK>(TK, int?, CancellationToken) public Task<string> EnQueueAsync<TK>(TK message, int? visibilityTimeoutInSeconds = null, CancellationToken cancellationToken = default) Parameters message TK visibilityTimeoutInSeconds int? cancellationToken CancellationToken // Gets and sets the property DelaySeconds. The length of time, in seconds, for which to delay a specific message. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a positive DelaySeconds value become available for processing after the delay period is finished. If you don't specify a value, the default value for the queue applies. When you set FifoQueue , you can't set DelaySeconds per message. You can set this parameter only on a queue level. Returns Task<string> Type Parameters TK EnQueueBatchAsync(IEnumerable<MessageBatchRequest>, int?, CancellationToken) Enqueues a batch of messages asynchronously to the queue. public Task<IList<MessageQueueResult>> EnQueueBatchAsync(IEnumerable<MessageBatchRequest> message, int? delaySeconds = null, CancellationToken cancellationToken = default) Parameters message IEnumerable<MessageBatchRequest> The messages to be enqueued. delaySeconds int? The delay in seconds for message delivery (optional). cancellationToken CancellationToken Cancellation token (optional). Returns Task<IList<MessageQueueResult>> A list of message queue results indicating success or failure for each message. GetMessagesAsync(int, int?, int?, CancellationToken) Enable user to receive messages public Task<IList<T>> GetMessagesAsync(int quantity, int? waitTimeInSeconds = null, int? visibilityTimeoutInSeconds = null, CancellationToken cancellationToken = default) Parameters quantity int 1-10 waitTimeInSeconds int? To enable long pooling visibilityTimeoutInSeconds int? cancellationToken CancellationToken Returns Task<IList<T>>"
  },
  "api/Innovt.Cloud.AWS.SQS.Tests.SimpleMessage.html": {
    "href": "api/Innovt.Cloud.AWS.SQS.Tests.SimpleMessage.html",
    "title": "Class SimpleMessage | Innovt Platform",
    "keywords": "Class SimpleMessage Namespace Innovt.Cloud.AWS.SQS.Tests Assembly Innovt.Cloud.AWS.SQS.Tests.dll public class SimpleMessage : IQueueMessage Inheritance object SimpleMessage Implements IQueueMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ApproximateFirstReceiveTimestamp Gets or sets the approximate timestamp when the message was first received. public double? ApproximateFirstReceiveTimestamp { get; set; } Property Value double? ApproximateReceiveCount Gets or sets the approximate number of times the message has been received. public int? ApproximateReceiveCount { get; set; } Property Value int? Attributes Gets or sets the attributes associated with the message in the form of key-value pairs. public Dictionary<string, string> Attributes { get; set; } Property Value Dictionary<string, string> MessageId Gets or sets the unique identifier of the message. public string MessageId { get; set; } Property Value string ReceiptHandle Gets or sets the receipt handle for the message. public string ReceiptHandle { get; set; } Property Value string TraceId Gets or sets the trace ID associated with the message. public string TraceId { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.AWS.SQS.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.SQS.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.SQS.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.SQS.Tests Classes SimpleMessage"
  },
  "api/Innovt.Cloud.AWS.SQS.html": {
    "href": "api/Innovt.Cloud.AWS.SQS.html",
    "title": "Namespace Innovt.Cloud.AWS.SQS | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.SQS Classes QueueService<T> Provides functionalities to interact with an Amazon SQS queue for a specified message type T."
  },
  "api/Innovt.Cloud.AWS.StepFunction.StepFunctionService.html": {
    "href": "api/Innovt.Cloud.AWS.StepFunction.StepFunctionService.html",
    "title": "Class StepFunctionService | Innovt Platform",
    "keywords": "Class StepFunctionService Namespace Innovt.Cloud.AWS.StepFunction Assembly Innovt.Cloud.AWS.StepFunction.dll Represents a service for interacting with AWS Step Functions. public class StepFunctionService : AwsBaseService, IDisposable, IStateMachine Inheritance object AwsBaseService StepFunctionService Implements IDisposable IStateMachine Inherited Members AwsBaseService.Configuration AwsBaseService.RetryCount AwsBaseService.CircuitBreakerAllowedExceptions AwsBaseService.CircuitBreakerDurationOfBreak AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors StepFunctionService(ILogger, IAwsConfiguration) Initializes a new instance of the StepFunctionService class. public StepFunctionService(ILogger logger, IAwsConfiguration configuration) Parameters logger ILogger The logger instance. configuration IAwsConfiguration The AWS configuration instance. StepFunctionService(ILogger, IAwsConfiguration, string) Initializes a new instance of the StepFunctionService class with a specific region. public StepFunctionService(ILogger logger, IAwsConfiguration configuration, string region) Parameters logger ILogger The logger instance. configuration IAwsConfiguration The AWS configuration instance. region string The AWS region. Methods DisposeServices() Disposes of the Amazon Step Functions client. protected override void DisposeServices() SendTaskFailure(string, string, string, CancellationToken) Sends a failure response for a task in the state machine. public Task SendTaskFailure(string taskToken, string reason, string taskError, CancellationToken cancellationToken) Parameters taskToken string The token for the task. reason string The reason for the failure. taskError string The error associated with the failure. cancellationToken CancellationToken Cancellation token. Returns Task A task representing the asynchronous operation. SendTaskHeartbeat(string, CancellationToken) Sends a heartbeat for a task in the state machine. public Task SendTaskHeartbeat(string taskToken, CancellationToken cancellationToken) Parameters taskToken string The token for the task. cancellationToken CancellationToken Cancellation token. Returns Task A task representing the asynchronous operation. SendTaskSuccess(string, object, CancellationToken) Sends a success response for a task in the state machine. public Task SendTaskSuccess(string taskToken, object output, CancellationToken cancellationToken) Parameters taskToken string The token for the task. output object The output of the task. cancellationToken CancellationToken Cancellation token. Returns Task A task representing the asynchronous operation. StartExecution(object, string, string, CancellationToken) Starts the execution of a state machine. public Task StartExecution(object input, string stateMachineArn, string executionId, CancellationToken cancellationToken) Parameters input object The input for the execution. stateMachineArn string The ARN of the state machine. executionId string The execution ID. cancellationToken CancellationToken Cancellation token. Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.Cloud.AWS.StepFunction.html": {
    "href": "api/Innovt.Cloud.AWS.StepFunction.html",
    "title": "Namespace Innovt.Cloud.AWS.StepFunction | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.StepFunction Classes StepFunctionService Represents a service for interacting with AWS Step Functions."
  },
  "api/Innovt.Cloud.AWS.Tests.AssumeRoleAWSConfigurationTests.html": {
    "href": "api/Innovt.Cloud.AWS.Tests.AssumeRoleAWSConfigurationTests.html",
    "title": "Class AssumeRoleAWSConfigurationTests | Innovt Platform",
    "keywords": "Class AssumeRoleAWSConfigurationTests Namespace Innovt.Cloud.AWS.Tests Assembly Innovt.Cloud.AWS.Tests.dll [TestFixture] public class AssumeRoleAWSConfigurationTests Inheritance object AssumeRoleAWSConfigurationTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AssumeRoleAWSConfigurationShouldReturnProvidedRoleInfos() [Test] public void AssumeRoleAWSConfigurationShouldReturnProvidedRoleInfos() GetCredentialWithoutProfileReturnDefaultProfile() [Test] [Ignore(\"Only for local tests\")] public void GetCredentialWithoutProfileReturnDefaultProfile()"
  },
  "api/Innovt.Cloud.AWS.Tests.DefaultAWSConfigurationTests.html": {
    "href": "api/Innovt.Cloud.AWS.Tests.DefaultAWSConfigurationTests.html",
    "title": "Class DefaultAWSConfigurationTests | Innovt Platform",
    "keywords": "Class DefaultAWSConfigurationTests Namespace Innovt.Cloud.AWS.Tests Assembly Innovt.Cloud.AWS.Tests.dll [TestFixture] [Ignore(\"Only local tests\")] public class DefaultAWSConfigurationTests Inheritance object DefaultAWSConfigurationTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods GetCredentialWithAccessKeyAnSecretReturnsValidCredential() [Test] public void GetCredentialWithAccessKeyAnSecretReturnsValidCredential() GetCredentialWithInvalidProfileThrowsException() [Test] public void GetCredentialWithInvalidProfileThrowsException() GetCredentialWithoutProfileReturnDefaultProfile() [Test] public void GetCredentialWithoutProfileReturnDefaultProfile()"
  },
  "api/Innovt.Cloud.AWS.Tests.html": {
    "href": "api/Innovt.Cloud.AWS.Tests.html",
    "title": "Namespace Innovt.Cloud.AWS.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Tests Classes AssumeRoleAWSConfigurationTests DefaultAWSConfigurationTests"
  },
  "api/Innovt.Cloud.AWS.html": {
    "href": "api/Innovt.Cloud.AWS.html",
    "title": "Namespace Innovt.Cloud.AWS | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS Classes AwsBaseService An abstract base class for AWS services with common functionality for managing AWS service configurations, retries, and circuit breakers."
  },
  "api/Innovt.Cloud.File.IFileSystem.html": {
    "href": "api/Innovt.Cloud.File.IFileSystem.html",
    "title": "Interface IFileSystem | Innovt Platform",
    "keywords": "Interface IFileSystem Namespace Innovt.Cloud.File Assembly Innovt.Cloud.dll Interface for File System public interface IFileSystem Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CopyObject(string, string, string, string, string, string, CancellationToken) Copy a file from one bucket to another Task<bool> CopyObject(string sourceBucket, string sourceKey, string destinationBucket, string destinationKey, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters sourceBucket string sourceKey string destinationBucket string destinationKey string serverSideEncryptionMethod string fileAcl string cancellationToken CancellationToken Returns Task<bool> DeleteObject(string, string) Deletes an object from the specified bucket. bool DeleteObject(string bucketName, string key) Parameters bucketName string key string Returns bool DeleteObjectAsync(string, string, CancellationToken) Deletes an object from the specified bucket. Task<bool> DeleteObjectAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters bucketName string key string cancellationToken CancellationToken Returns Task<bool> Download(string, string, string) Downloads a file from the specified bucket and saves it to the destination path. void Download(string bucketName, string fileName, string destination) Parameters bucketName string fileName string destination string DownloadStream(string) Downloads a file from the provided URL and returns the stream. Stream DownloadStream(string url) Parameters url string Returns Stream DownloadStream(string, string) Downloads a file from the specified bucket and file name synchronously and returns the stream. Stream DownloadStream(string bucketName, string fileName) Parameters bucketName string The name of the bucket. fileName string The name of the file to download. Returns Stream The stream of the downloaded file. DownloadStreamAsync(string, string, CancellationToken) Downloads a file from the specified bucket and file name asynchronously and returns the stream. Task<Stream> DownloadStreamAsync(string bucketName, string fileName, CancellationToken cancellationToken = default) Parameters bucketName string The name of the bucket. fileName string The name of the file to download. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<Stream> The stream of the downloaded file. DownloadStreamAsync(string, CancellationToken) Downloads a file from the provided URL asynchronously and returns the stream. Task<Stream> DownloadStreamAsync(string url, CancellationToken cancellationToken = default) Parameters url string The URL of the file to download. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<Stream> The stream of the downloaded file. ExtractBucketFromGetUrl(string) Extracts the bucket name and file key from the provided URL. (string bucket, string fileKey) ExtractBucketFromGetUrl(string bucketUrl) Parameters bucketUrl string The URL containing bucket information. Returns (string bucket, string fileKey) A tuple containing the bucket name and file key. FileExistsAsync(string, string, CancellationToken) Checks if a file exists in the specified bucket asynchronously. Task<bool> FileExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters bucketName string The name of the bucket. key string The key of the file. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<bool> True if the file exists; otherwise, false. FolderExists(string, string) Checks if a folder exists in the specified bucket. bool FolderExists(string bucketName, string key) Parameters bucketName string The name of the bucket. key string The key of the folder. Returns bool True if the folder exists; otherwise, false. FolderExistsAsync(string, string, CancellationToken) Checks if a folder exists in the specified bucket asynchronously. Task<bool> FolderExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters bucketName string The name of the bucket. key string The key of the folder. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<bool> True if the folder exists; otherwise, false. GeneratePreSignedUrl(string, string, DateTime, IDictionary<string, object>) Generates a pre-signed URL for accessing the object in the specified bucket. string GeneratePreSignedUrl(string bucketName, string key, DateTime expiration, IDictionary<string, object> additionalProperties) Parameters bucketName string The name of the bucket. key string The key of the object. expiration DateTime The expiration date and time for the pre-signed URL. additionalProperties IDictionary<string, object> Additional properties for customizing the URL generation. Returns string The pre-signed URL for accessing the object. GetObjectContentAsync(string, string, Encoding, CancellationToken) Gets the content of the object from the specified URL asynchronously. Task<string> GetObjectContentAsync(string bucketName, string key, Encoding encoding, CancellationToken cancellationToken = default) Parameters bucketName string The Bucket name. key string The file url encoding Encoding cancellationToken CancellationToken Returns Task<string> GetObjectContentAsync(string, Encoding, CancellationToken) Gets the content of the object from the specified URL asynchronously. Task<string> GetObjectContentAsync(string url, Encoding encoding, CancellationToken cancellationToken = default) Parameters url string The URL of the object. encoding Encoding The encoding to use for reading the content. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<string> The content of the object as a string. GetObjectFromJsonAsync<T>(Uri, CancellationToken) Deserializes a JSON object from the content of a file specified by a URI. Task<T> GetObjectFromJsonAsync<T>(Uri filePath, CancellationToken cancellationToken = default) Parameters filePath Uri The URI pointing to the JSON file. cancellationToken CancellationToken Returns Task<T> The deserialized object of type T. Type Parameters T The type of the object to deserialize to. GetPreSignedUrl(string, string, DateTime) Gets a pre-signed URL for accessing the object in the specified bucket. string GetPreSignedUrl(string bucketName, string key, DateTime expires) Parameters bucketName string The name of the bucket. key string The key of the object. expires DateTime The expiration date and time for the pre-signed URL. Returns string The pre-signed URL for accessing the object. PutObject(string, Stream, string, string, string, string) Uploads a file from a stream to the specified bucket. string PutObject(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters bucketName string stream Stream fileName string contentType string serverSideEncryptionMethod string fileAcl string Returns string PutObject(string, string, string, string, string) Uploads a file from a local file path to the specified bucket. string PutObject(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters bucketName string filePath string contentType string serverSideEncryptionMethod string fileAcl string Returns string PutObjectAsync(string, Stream, string, string, string, string, CancellationToken) Uploads an object from a stream to the specified bucket asynchronously. Task<string> PutObjectAsync(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the bucket. stream Stream The stream containing the object to upload. fileName string The name of the file to upload. contentType string The content type of the object. serverSideEncryptionMethod string The server-side encryption method to use. fileAcl string The access control for the object. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<string> The unique identifier of the uploaded object. PutObjectAsync(string, string, string, string, string, CancellationToken) Uploads an object from a local file to the specified bucket asynchronously. Task<string> PutObjectAsync(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the bucket. filePath string The local file path of the object to upload. contentType string The content type of the object. serverSideEncryptionMethod string The server-side encryption method to use. fileAcl string The access control for the object. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<string> The unique identifier of the uploaded object. Upload(string, Stream, string, IList<KeyValuePair<string, string>>, string, string) Uploads an object from a stream to the specified bucket synchronously. string Upload(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters bucketName string The name of the bucket. stream Stream The stream containing the object to upload. fileName string The name of the file to upload. metadata IList<KeyValuePair<string, string>> Metadata for the object. serverSideEncryptionMethod string The server-side encryption method to use. fileAcl string The access control for the object. Returns string The unique identifier of the uploaded object. Upload(string, string, IList<KeyValuePair<string, string>>, string, string) Uploads an object from a local file to the specified bucket synchronously. string Upload(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters bucketName string The name of the bucket. filePath string The local file path of the object to upload. metadata IList<KeyValuePair<string, string>> Metadata for the object. serverSideEncryptionMethod string The server-side encryption method to use. fileAcl string The access control for the object. Returns string The unique identifier of the uploaded object. UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Uploads an object as JSON to the specified bucket. Task<string> UploadAsJsonAsync<T>(string bucketName, T obj, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string obj T fileName string metadata IList<KeyValuePair<string, string>> serverSideEncryptionMethod string fileAcl string cancellationToken CancellationToken Returns Task<string> Type Parameters T UploadAsync(string, Stream, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Uploads an object from a stream to the specified bucket asynchronously. Task<string> UploadAsync(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the bucket. stream Stream The stream containing the object to upload. fileName string The name of the file to upload. metadata IList<KeyValuePair<string, string>> Metadata for the object. serverSideEncryptionMethod string The server-side encryption method to use. fileAcl string The access control for the object. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<string> The unique identifier of the uploaded object. UploadAsync(string, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Uploads an object from a local file to the specified bucket asynchronously. Task<string> UploadAsync(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string The name of the bucket. filePath string The local file path of the object to upload. metadata IList<KeyValuePair<string, string>> Metadata for the object. serverSideEncryptionMethod string The server-side encryption method to use. fileAcl string The access control for the object. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task<string> The unique identifier of the uploaded object. UploadDirectoryAsync(string, string, string, string, CancellationToken) Uploads all files in a directory to the specified bucket. Task UploadDirectoryAsync(string bucketName, string directory, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters bucketName string directory string serverSideEncryptionMethod string fileAcl string cancellationToken CancellationToken Returns Task"
  },
  "api/Innovt.Cloud.File.html": {
    "href": "api/Innovt.Cloud.File.html",
    "title": "Namespace Innovt.Cloud.File | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.File Interfaces IFileSystem Interface for File System"
  },
  "api/Innovt.Cloud.IConfiguration.html": {
    "href": "api/Innovt.Cloud.IConfiguration.html",
    "title": "Interface IConfiguration | Innovt Platform",
    "keywords": "Interface IConfiguration Namespace Innovt.Cloud Assembly Innovt.Cloud.dll Interface to be used for configuration [CLSCompliant(true)] public interface IConfiguration Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccessKey Gets or sets the access key for accessing the service. string AccessKey { get; set; } Property Value string Region Gets or sets the region associated with the service. string Region { get; set; } Property Value string SecretKey Gets or sets the secret key for accessing the service. string SecretKey { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Queue.IQueueMessage.html": {
    "href": "api/Innovt.Cloud.Queue.IQueueMessage.html",
    "title": "Interface IQueueMessage | Innovt Platform",
    "keywords": "Interface IQueueMessage Namespace Innovt.Cloud.Queue Assembly Innovt.Cloud.dll Represents a message in a queue. public interface IQueueMessage Extension Methods QueueExtensions.ParseQueueAttributes(IQueueMessage, Dictionary<string, string>) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ApproximateFirstReceiveTimestamp Gets or sets the approximate timestamp when the message was first received. double? ApproximateFirstReceiveTimestamp { get; set; } Property Value double? ApproximateReceiveCount Gets or sets the approximate number of times the message has been received. int? ApproximateReceiveCount { get; set; } Property Value int? Attributes Gets or sets the attributes associated with the message in the form of key-value pairs. Dictionary<string, string> Attributes { get; set; } Property Value Dictionary<string, string> MessageId Gets or sets the unique identifier of the message. string MessageId { get; set; } Property Value string ReceiptHandle Gets or sets the receipt handle for the message. string ReceiptHandle { get; set; } Property Value string TraceId Gets or sets the trace ID associated with the message. string TraceId { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Queue.IQueueService-1.html": {
    "href": "api/Innovt.Cloud.Queue.IQueueService-1.html",
    "title": "Interface IQueueService<T> | Innovt Platform",
    "keywords": "Interface IQueueService<T> Namespace Innovt.Cloud.Queue Assembly Innovt.Cloud.dll Defines the operations for interacting with a queue service for a specific type of queue messages. public interface IQueueService<T> where T : IQueueMessage Type Parameters T The type of queue messages. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods ApproximateMessageCountAsync(CancellationToken) Retrieves the approximate number of messages in the queue asynchronously. Task<int> ApproximateMessageCountAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<int> The approximate message count in the queue. CreateIfNotExistAsync(CancellationToken) Creates the queue if it does not already exist asynchronously. Task CreateIfNotExistAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task A task representing the asynchronous operation. DeQueueAsync(string, CancellationToken) Removes a message from the queue asynchronously. Task DeQueueAsync(string popReceipt, CancellationToken cancellationToken = default) Parameters popReceipt string The pop receipt of the message to be removed. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task A task representing the asynchronous operation. EnQueueAsync<TK>(TK, int?, CancellationToken) Enqueues a message asynchronously. Task<string> EnQueueAsync<TK>(TK message, int? visibilityTimeoutInSeconds = null, CancellationToken cancellationToken = default) Parameters message TK The message to be enqueued. visibilityTimeoutInSeconds int? The duration for which the enqueued message is invisible to other consumers. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<string> The message ID associated with the enqueued message. Type Parameters TK The type of the message to be enqueued. EnQueueBatchAsync(IEnumerable<MessageBatchRequest>, int?, CancellationToken) Enqueues a batch of messages asynchronously. Task<IList<MessageQueueResult>> EnQueueBatchAsync(IEnumerable<MessageBatchRequest> message, int? delaySeconds = null, CancellationToken cancellationToken = default) Parameters message IEnumerable<MessageBatchRequest> The collection of messages to be enqueued. delaySeconds int? The delay in seconds before the messages become available for retrieval. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<IList<MessageQueueResult>> A list of message enqueue results. GetMessagesAsync(int, int?, int?, CancellationToken) Retrieves a list of messages from the queue asynchronously. Task<IList<T>> GetMessagesAsync(int quantity, int? waitTimeInSeconds = null, int? visibilityTimeoutInSeconds = null, CancellationToken cancellationToken = default) Parameters quantity int The number of messages to retrieve. waitTimeInSeconds int? The maximum time to wait for messages to become available. visibilityTimeoutInSeconds int? The duration for which retrieved messages are invisible to other consumers. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<IList<T>> A list of retrieved messages."
  },
  "api/Innovt.Cloud.Queue.MessageBatchRequest.html": {
    "href": "api/Innovt.Cloud.Queue.MessageBatchRequest.html",
    "title": "Class MessageBatchRequest | Innovt Platform",
    "keywords": "Class MessageBatchRequest Namespace Innovt.Cloud.Queue Assembly Innovt.Cloud.dll Represents a message and its associated ID in a batch for enqueueing. public class MessageBatchRequest Inheritance object MessageBatchRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id Gets or sets the ID associated with the message. public string Id { get; set; } Property Value string Message Gets or sets the message to be enqueued. public object Message { get; set; } Property Value object"
  },
  "api/Innovt.Cloud.Queue.MessageQueueResult.html": {
    "href": "api/Innovt.Cloud.Queue.MessageQueueResult.html",
    "title": "Class MessageQueueResult | Innovt Platform",
    "keywords": "Class MessageQueueResult Namespace Innovt.Cloud.Queue Assembly Innovt.Cloud.dll Represents the result of enqueuing a message into a message queue. public class MessageQueueResult Inheritance object MessageQueueResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Error Gets or sets an error message in case of a failed enqueue operation. public string Error { get; set; } Property Value string Id Gets or sets the ID associated with the enqueued message. public string Id { get; set; } Property Value string Success Gets or sets a value indicating whether the enqueue operation was successful. public bool Success { get; set; } Property Value bool"
  },
  "api/Innovt.Cloud.Queue.QueueExtensions.html": {
    "href": "api/Innovt.Cloud.Queue.QueueExtensions.html",
    "title": "Class QueueExtensions | Innovt Platform",
    "keywords": "Class QueueExtensions Namespace Innovt.Cloud.Queue Assembly Innovt.Cloud.dll Extension methods for parsing queue message attributes. public static class QueueExtensions Inheritance object QueueExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseQueueAttributes(IQueueMessage, Dictionary<string, string>) Parses queue message attributes and updates the provided queueMessage. public static void ParseQueueAttributes(this IQueueMessage queueMessage, Dictionary<string, string> queueAttributes) Parameters queueMessage IQueueMessage The queue message. queueAttributes Dictionary<string, string> The queue attributes to parse."
  },
  "api/Innovt.Cloud.Queue.QueueMessage-1.html": {
    "href": "api/Innovt.Cloud.Queue.QueueMessage-1.html",
    "title": "Class QueueMessage<T> | Innovt Platform",
    "keywords": "Class QueueMessage<T> Namespace Innovt.Cloud.Queue Assembly Innovt.Cloud.dll Represents a message in a queue with a specified body type. public class QueueMessage<T> : IQueueMessage Type Parameters T The type of the message body. Inheritance object QueueMessage<T> Implements IQueueMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods QueueExtensions.ParseQueueAttributes(IQueueMessage, Dictionary<string, string>) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors QueueMessage() Initializes a new instance of the QueueMessage<T> class. public QueueMessage() QueueMessage(Dictionary<string, string>) Initializes a new instance of the QueueMessage<T> class with specified attributes. public QueueMessage(Dictionary<string, string> attributes) Parameters attributes Dictionary<string, string> The attributes associated with the message. QueueMessage(T) Initializes a new instance of the QueueMessage<T> class with a specified body. public QueueMessage(T body) Parameters body T The body of the message. Properties ApproximateFirstReceiveTimestamp Gets or sets the approximate timestamp when the message was first received. public double? ApproximateFirstReceiveTimestamp { get; set; } Property Value double? ApproximateReceiveCount Gets or sets the approximate number of times the message has been received. public int? ApproximateReceiveCount { get; set; } Property Value int? Attributes Gets or sets the attributes associated with the message in the form of key-value pairs. public Dictionary<string, string> Attributes { get; set; } Property Value Dictionary<string, string> Body Gets or sets the body of the message. public T Body { get; set; } Property Value T MessageId Gets or sets the ID associated with the message. public string MessageId { get; set; } Property Value string ReceiptHandle Gets or sets the receipt handle for the message. public string ReceiptHandle { get; set; } Property Value string TraceId Gets or sets the trace ID associated with the message. public string TraceId { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Queue.SimpleQueueMessage-1.html": {
    "href": "api/Innovt.Cloud.Queue.SimpleQueueMessage-1.html",
    "title": "Class SimpleQueueMessage<T> | Innovt Platform",
    "keywords": "Class SimpleQueueMessage<T> Namespace Innovt.Cloud.Queue Assembly Innovt.Cloud.dll Represents a simple queue message. public class SimpleQueueMessage<T> Type Parameters T The type of value held in the message. Inheritance object SimpleQueueMessage<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SimpleQueueMessage() Initializes a new instance of the SimpleQueueMessage<T> class. public SimpleQueueMessage() SimpleQueueMessage(T) Initializes a new instance of the SimpleQueueMessage<T> class with a specified value. public SimpleQueueMessage(T value) Parameters value T The value to be set for the message. Properties Value Gets or sets the value of the queue message. public T Value { get; set; } Property Value T"
  },
  "api/Innovt.Cloud.Queue.html": {
    "href": "api/Innovt.Cloud.Queue.html",
    "title": "Namespace Innovt.Cloud.Queue | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.Queue Classes MessageBatchRequest Represents a message and its associated ID in a batch for enqueueing. MessageQueueResult Represents the result of enqueuing a message into a message queue. QueueExtensions Extension methods for parsing queue message attributes. QueueMessage<T> Represents a message in a queue with a specified body type. SimpleQueueMessage<T> Represents a simple queue message. Interfaces IQueueMessage Represents a message in a queue. IQueueService<T> Defines the operations for interacting with a queue service for a specific type of queue messages."
  },
  "api/Innovt.Cloud.StateMachine.IStateMachine.html": {
    "href": "api/Innovt.Cloud.StateMachine.IStateMachine.html",
    "title": "Interface IStateMachine | Innovt Platform",
    "keywords": "Interface IStateMachine Namespace Innovt.Cloud.StateMachine Assembly Innovt.Cloud.dll Represents a state machine interface. public interface IStateMachine Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods SendTaskFailure(string, string, string, CancellationToken) Sends a failure signal for a task to the state machine. Task SendTaskFailure(string taskToken, string reason, string taskError, CancellationToken cancellationToken) Parameters taskToken string The token representing the task. reason string The reason for task failure. taskError string The error associated with the task failure. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task A task representing the asynchronous operation. SendTaskHeartbeat(string, CancellationToken) Sends a heartbeat signal for a task to the state machine. Task SendTaskHeartbeat(string taskToken, CancellationToken cancellationToken) Parameters taskToken string The token representing the task. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task A task representing the asynchronous operation. SendTaskSuccess(string, object, CancellationToken) Sends a success signal for a task to the state machine. Task SendTaskSuccess(string taskToken, object output, CancellationToken cancellationToken) Parameters taskToken string The token representing the task. output object The output of the task. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task A task representing the asynchronous operation. StartExecution(object, string, string, CancellationToken) Starts the execution of the state machine. Task StartExecution(object input, string stateMachineArn, string executionId, CancellationToken cancellationToken) Parameters input object The input for the state machine. stateMachineArn string The Amazon Resource Name (ARN) of the state machine. executionId string The execution ID for this execution. cancellationToken CancellationToken The cancellation token to cancel the asynchronous operation. Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.Cloud.StateMachine.html": {
    "href": "api/Innovt.Cloud.StateMachine.html",
    "title": "Namespace Innovt.Cloud.StateMachine | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.StateMachine Interfaces IStateMachine Represents a state machine interface."
  },
  "api/Innovt.Cloud.Table.BaseRequest.html": {
    "href": "api/Innovt.Cloud.Table.BaseRequest.html",
    "title": "Class BaseRequest | Innovt Platform",
    "keywords": "Class BaseRequest Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a base request for querying or scanning a database. public class BaseRequest Inheritance object BaseRequest Derived QueryRequest ScanRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AttributesToGet Gets or sets the attributes to retrieve in the query or scan. public string AttributesToGet { get; set; } Property Value string ExpressionAttributeNames Used to define the attributes that you can customize. public Dictionary<string, string> ExpressionAttributeNames { get; set; } Property Value Dictionary<string, string> Filter Gets or sets the filter to apply to the query or scan. public object Filter { get; set; } Property Value object FilterExpression Gets or sets the filter expression for the query or scan. public string FilterExpression { get; set; } Property Value string IndexName Gets or sets the index name to query or scan. public string IndexName { get; set; } Property Value string Page Gets or sets the page token for pagination in the query or scan. public string Page { get; set; } Property Value string PageSize Gets or sets the page size for the query or scan. public int? PageSize { get; set; } Property Value int?"
  },
  "api/Innovt.Cloud.Table.BatchGetItem.html": {
    "href": "api/Innovt.Cloud.Table.BatchGetItem.html",
    "title": "Class BatchGetItem | Innovt Platform",
    "keywords": "Class BatchGetItem Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a request to batch get items from a database. public class BatchGetItem Inheritance object BatchGetItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ConsistentRead Gets or sets a value indicating whether a consistent read is requested. public bool ConsistentRead { get; set; } Property Value bool ExpressionAttributeNames Gets or sets the expression attribute names used in the request. public Dictionary<string, string> ExpressionAttributeNames { get; set; } Property Value Dictionary<string, string> Keys Gets or sets the keys for which items will be retrieved in the batch. Each key is represented as a dictionary of attribute names and values. public List<Dictionary<string, object>> Keys { get; set; } Property Value List<Dictionary<string, object>> ProjectionExpression Gets or sets the projection expression for retrieving specific attributes. public string ProjectionExpression { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Table.BatchGetItemRequest.html": {
    "href": "api/Innovt.Cloud.Table.BatchGetItemRequest.html",
    "title": "Class BatchGetItemRequest | Innovt Platform",
    "keywords": "Class BatchGetItemRequest Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a request to batch get items from multiple tables. public class BatchGetItemRequest Inheritance object BatchGetItemRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BatchGetItemRequest() Initializes a new instance of the BatchGetItemRequest class. public BatchGetItemRequest() BatchGetItemRequest(string, BatchGetItem) Initializes a new instance of the BatchGetItemRequest class with a table name and batch request item. public BatchGetItemRequest(string tableName, BatchGetItem batchRequestItem) Parameters tableName string The name of the table. batchRequestItem BatchGetItem The batch request item for the specified table. Properties Items Gets the items to be retrieved in the batch, keyed by table name. public Dictionary<string, BatchGetItem> Items { get; } Property Value Dictionary<string, BatchGetItem> Methods AddItem(string, BatchGetItem) Adds a batch request item for a specific table. public void AddItem(string tableName, BatchGetItem batchRequestItem) Parameters tableName string The name of the table. batchRequestItem BatchGetItem The batch request item for the specified table. Exceptions ArgumentNullException Thrown when batchRequestItem is null."
  },
  "api/Innovt.Cloud.Table.BatchWriteItem.html": {
    "href": "api/Innovt.Cloud.Table.BatchWriteItem.html",
    "title": "Class BatchWriteItem | Innovt Platform",
    "keywords": "Class BatchWriteItem Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a request to batch write items to a database. public class BatchWriteItem Inheritance object BatchWriteItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties DeleteRequest Gets or sets a collection of items to be deleted in the batch. The key represents the table name and the value represents the item to delete. public Dictionary<string, object> DeleteRequest { get; set; } Property Value Dictionary<string, object> PutRequest Gets or sets a collection of items to be added or updated in the batch. The key represents the table name and the value represents the item to put. public Dictionary<string, object> PutRequest { get; set; } Property Value Dictionary<string, object>"
  },
  "api/Innovt.Cloud.Table.BatchWriteItemRequest.html": {
    "href": "api/Innovt.Cloud.Table.BatchWriteItemRequest.html",
    "title": "Class BatchWriteItemRequest | Innovt Platform",
    "keywords": "Class BatchWriteItemRequest Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a request to batch write items to multiple tables. public class BatchWriteItemRequest Inheritance object BatchWriteItemRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BatchWriteItemRequest() Initializes a new instance of the BatchWriteItemRequest class. public BatchWriteItemRequest() Properties Items Gets the items to be written in the batch, grouped by table name. public Dictionary<string, List<BatchWriteItem>> Items { get; } Property Value Dictionary<string, List<BatchWriteItem>> MaxRetry Gets or sets the maximum number of retry attempts in case of failures. public int MaxRetry { get; set; } Property Value int RetryDelay Gets or sets the delay between retry attempts in case of failures. public TimeSpan RetryDelay { get; set; } Property Value TimeSpan Methods AddItem(string, BatchWriteItem) Adds a batch write item for a specific table. public void AddItem(string tableName, BatchWriteItem batchRequestItem) Parameters tableName string The name of the table. batchRequestItem BatchWriteItem The batch write item for the specified table. Exceptions ArgumentNullException Thrown when batchRequestItem is null."
  },
  "api/Innovt.Cloud.Table.BatchWriteItemResponse.html": {
    "href": "api/Innovt.Cloud.Table.BatchWriteItemResponse.html",
    "title": "Class BatchWriteItemResponse | Innovt Platform",
    "keywords": "Class BatchWriteItemResponse Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a response from a batch write items operation. public class BatchWriteItemResponse Inheritance object BatchWriteItemResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BatchWriteItemResponse() Initializes a new instance of the BatchWriteItemResponse class. public BatchWriteItemResponse() Properties Success Gets a value indicating whether the batch write operation was successful. public bool Success { get; } Property Value bool UnprocessedItems Gets the unprocessed items from the batch write operation, grouped by table name. public Dictionary<string, List<BatchWriteItem>> UnprocessedItems { get; set; } Property Value Dictionary<string, List<BatchWriteItem>>"
  },
  "api/Innovt.Cloud.Table.ExecuteSqlStatementRequest.html": {
    "href": "api/Innovt.Cloud.Table.ExecuteSqlStatementRequest.html",
    "title": "Class ExecuteSqlStatementRequest | Innovt Platform",
    "keywords": "Class ExecuteSqlStatementRequest Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a request to execute an SQL statement. public class ExecuteSqlStatementRequest Inheritance object ExecuteSqlStatementRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ConsistentRead Gets or sets a flag indicating whether to perform a consistent read. public bool ConsistentRead { get; set; } Property Value bool NextToken Gets or sets a token that can be used for paginating results if necessary. public string NextToken { get; set; } Property Value string Statment Gets or sets the SQL statement to be executed. public string Statment { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Table.ExecuteSqlStatementResponse-1.html": {
    "href": "api/Innovt.Cloud.Table.ExecuteSqlStatementResponse-1.html",
    "title": "Class ExecuteSqlStatementResponse<T> | Innovt Platform",
    "keywords": "Class ExecuteSqlStatementResponse<T> Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a response from executing an SQL statement, including a list of items of type T. public class ExecuteSqlStatementResponse<T> where T : class Type Parameters T The type of items in the response. Inheritance object ExecuteSqlStatementResponse<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Items Gets or sets a list of items of type T returned by the SQL statement execution. public IList<T> Items { get; set; } Property Value IList<T> NextToken Gets or sets a token that can be used for paginating results if necessary. public string NextToken { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Table.ITableMessage.html": {
    "href": "api/Innovt.Cloud.Table.ITableMessage.html",
    "title": "Interface ITableMessage | Innovt Platform",
    "keywords": "Interface ITableMessage Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a message associated with a table, defining a unique identifier. public interface ITableMessage Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id Gets or sets the unique identifier for the table message. string Id { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Table.ITableRepository.html": {
    "href": "api/Innovt.Cloud.Table.ITableRepository.html",
    "title": "Interface ITableRepository | Innovt Platform",
    "keywords": "Interface ITableRepository Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Interface representing a repository for interacting with a table. public interface ITableRepository : IDisposable Inherited Members IDisposable.Dispose() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AddAsync<T>(IList<T>, CancellationToken) Asynchronously adds multiple items to the repository. Task AddAsync<T>(IList<T> messages, CancellationToken cancellationToken = default) where T : class Parameters messages IList<T> The list of items to add. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous add operation. Type Parameters T The type of items to add. AddAsync<T>(T, CancellationToken) Asynchronously adds a single item to the repository. Task AddAsync<T>(T message, CancellationToken cancellationToken = default) where T : class Parameters message T The item to add. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous add operation. Type Parameters T The type of item to add. BatchGetItem<T>(BatchGetItemRequest, CancellationToken) Asynchronously retrieves multiple items in a batch. Task<List<T>> BatchGetItem<T>(BatchGetItemRequest batchGetItemRequest, CancellationToken cancellationToken = default) where T : class Parameters batchGetItemRequest BatchGetItemRequest The batch get item request. cancellationToken CancellationToken The cancellation token. Returns Task<List<T>> A list of items of type T. Type Parameters T The type of items to retrieve. BatchWriteItem(BatchWriteItemRequest, CancellationToken) Asynchronously performs a batch write operation. Task<BatchWriteItemResponse> BatchWriteItem(BatchWriteItemRequest batchWriteItemRequest, CancellationToken cancellationToken = default) Parameters batchWriteItemRequest BatchWriteItemRequest The batch write item request. cancellationToken CancellationToken The cancellation token. Returns Task<BatchWriteItemResponse> A response from the batch write operation. DeleteAsync<T>(List<T>, CancellationToken) Asynchronously a list of item that are from the same type. Task DeleteAsync<T>(List<T> messages, CancellationToken cancellationToken = default) where T : class Parameters messages List<T> cancellationToken CancellationToken Returns Task Type Parameters T DeleteAsync<T>(object, string, CancellationToken) Asynchronously deletes an item using its identifier and optional range key. Task DeleteAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class Parameters id object The identifier of the item. rangeKey string The range key for the item (optional). cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous delete operation. Type Parameters T The type of item to delete. DeleteAsync<T>(T, CancellationToken) Asynchronously deletes an item using its value. Task DeleteAsync<T>(T message, CancellationToken cancellationToken = default) where T : class Parameters message T The item to delete. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous delete operation. Type Parameters T The type of item to delete. ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken) Executes an SQL statement asynchronously and retrieves the results. Task<ExecuteSqlStatementResponse<T>> ExecuteStatementAsync<T>(ExecuteSqlStatementRequest sqlStatementRequest, CancellationToken cancellationToken = default) where T : class Parameters sqlStatementRequest ExecuteSqlStatementRequest The SQL statement request. cancellationToken CancellationToken The cancellation token. Returns Task<ExecuteSqlStatementResponse<T>> A response containing the results of the SQL statement execution. Type Parameters T The type of results to expect. GetByIdAsync<T>(object, string, CancellationToken) Asynchronously retrieves an item by its identifier. Task<T> GetByIdAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class Parameters id object The identifier of the item. rangeKey string The range key for the item (optional). cancellationToken CancellationToken The cancellation token. Returns Task<T> An item of type T if found; otherwise, null. Type Parameters T The type of item to retrieve. QueryAsync<T>(QueryRequest, CancellationToken) Asynchronously queries and retrieves a list of items of type T based on the provided query request. Task<IList<T>> QueryAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request specifying the query parameters. cancellationToken CancellationToken The cancellation token. Returns Task<IList<T>> A list of items of type T based on the query request. Type Parameters T The type of items to retrieve. QueryAsync<T>(object, CancellationToken) Asynchronously queries and retrieves a list of items of type T by their identifier. Task<IList<T>> QueryAsync<T>(object id, CancellationToken cancellationToken = default) where T : class Parameters id object The identifier of the items. cancellationToken CancellationToken The cancellation token. Returns Task<IList<T>> A list of items of type T. Type Parameters T The type of items to retrieve. QueryFirstAsync<T>(object, CancellationToken) Asynchronously queries and retrieves the first item of type T by its identifier. Task<T> QueryFirstAsync<T>(object id, CancellationToken cancellationToken = default) where T : class Parameters id object The identifier of the item. cancellationToken CancellationToken The cancellation token. Returns Task<T> An item of type T if found; otherwise, null. Type Parameters T The type of item to retrieve. QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken) Asynchronously queries and retrieves the first item of type T based on the provided query request. Task<T> QueryFirstOrDefaultAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request specifying the query parameters. cancellationToken CancellationToken The cancellation token. Returns Task<T> The first item of type T based on the query request; otherwise, null. Type Parameters T The type of item to retrieve. QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken) Asynchronously queries and retrieves multiple sets of results from a single query. Task<(IList<TResult1> first, IList<TResult2> second)> QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest request, string splitBy, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request. splitBy string The parameter to split the results by. cancellationToken CancellationToken The cancellation token. Returns Task<(IList<TResult1> first, IList<TResult2> second)> Tuple containing the first and second result sets. Type Parameters T The type of items to retrieve. TResult1 The type of the first result set. TResult2 The type of the second result set. QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken) Asynchronously queries and retrieves multiple sets of results from a single query. Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request specifying the query parameters. splitBy string[] The parameter to split the results by. cancellationToken CancellationToken The cancellation token. Returns Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> Tuple containing the first, second, and third result sets. Type Parameters T The type of items to retrieve. TResult1 The type of the first result set. TResult2 The type of the second result set. TResult3 The type of the third result set. QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken) Asynchronously queries and retrieves multiple sets of results from a single query. Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request specifying the query parameters. splitBy string[] The parameter to split the results by. cancellationToken CancellationToken The cancellation token. Returns Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> Tuple containing the first, second, third, and fourth result sets. Type Parameters T The type of items to retrieve. TResult1 The type of the first result set. TResult2 The type of the second result set. TResult3 The type of the third result set. TResult4 The type of the fourth result set. QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken) Asynchronously queries and retrieves multiple sets of results from a single query. Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request specifying the query parameters. splitBy string[] The parameter to split the results by. cancellationToken CancellationToken The cancellation token. Returns Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> Tuple containing the first, second, third, fourth, and fifth result sets. Type Parameters T The type of items to retrieve. TResult1 The type of the first result set. TResult2 The type of the second result set. TResult3 The type of the third result set. TResult4 The type of the fourth result set. TResult5 The type of the fifth result set. QueryPaginatedByAsync<T>(QueryRequest, CancellationToken) Asynchronously queries and retrieves a paged collection of items of type T based on the provided query request. Task<PagedCollection<T>> QueryPaginatedByAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class Parameters request QueryRequest The query request specifying the query parameters. cancellationToken CancellationToken The cancellation token. Returns Task<PagedCollection<T>> A paged collection of items of type T based on the query request. Type Parameters T The type of items to retrieve. ScanAsync<T>(ScanRequest, CancellationToken) Asynchronously scans and retrieves a list of items of type T based on the provided scan request. Task<IList<T>> ScanAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class Parameters request ScanRequest The scan request specifying the scan parameters. cancellationToken CancellationToken The cancellation token. Returns Task<IList<T>> A list of items of type T based on the scan request. Type Parameters T The type of items to retrieve. ScanPaginatedByAsync<T>(ScanRequest, CancellationToken) Asynchronously scans and retrieves a paged collection of items of type T based on the provided scan request. Task<PagedCollection<T>> ScanPaginatedByAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class Parameters request ScanRequest The scan request specifying the scan parameters. cancellationToken CancellationToken The cancellation token. Returns Task<PagedCollection<T>> A paged collection of items of type T based on the scan request. Type Parameters T The type of items to retrieve. TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken) Asynchronously performs a transactional write of items. Task TransactWriteItemsAsync(TransactionWriteRequest request, CancellationToken cancellationToken) Parameters request TransactionWriteRequest The transaction write request specifying the items to write. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous transactional write operation. UpdateAsync<T>(T, CancellationToken) This method will perform an update operation on the table. The operation is based on the primary key and type is PUT. Task<T> UpdateAsync<T>(T instance, CancellationToken cancellationToken = default) where T : class Parameters instance T The instance that you want to update cancellationToken CancellationToken A cancellation token. Returns Task<T> Type Parameters T The instance updated."
  },
  "api/Innovt.Cloud.Table.QueryRequest.html": {
    "href": "api/Innovt.Cloud.Table.QueryRequest.html",
    "title": "Class QueryRequest | Innovt Platform",
    "keywords": "Class QueryRequest Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a request for querying a data source. public class QueryRequest : BaseRequest, ICloneable Inheritance object BaseRequest QueryRequest Implements ICloneable Inherited Members BaseRequest.IndexName BaseRequest.Filter BaseRequest.AttributesToGet BaseRequest.PageSize BaseRequest.Page BaseRequest.FilterExpression BaseRequest.ExpressionAttributeNames object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties KeyConditionExpression Gets or sets the key condition expression used in the query. public string KeyConditionExpression { get; set; } Property Value string ScanIndexForward Gets or sets a value indicating whether to scan the index forward or backward. public bool ScanIndexForward { get; set; } Property Value bool Methods Clone() Creates a deep copy of the current instance. public object Clone() Returns object A new instance of QueryRequest that is a copy of the current instance."
  },
  "api/Innovt.Cloud.Table.ScanRequest.html": {
    "href": "api/Innovt.Cloud.Table.ScanRequest.html",
    "title": "Class ScanRequest | Innovt Platform",
    "keywords": "Class ScanRequest Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a request for scanning a data source. public sealed class ScanRequest : BaseRequest Inheritance object BaseRequest ScanRequest Inherited Members BaseRequest.IndexName BaseRequest.Filter BaseRequest.AttributesToGet BaseRequest.PageSize BaseRequest.Page BaseRequest.FilterExpression BaseRequest.ExpressionAttributeNames object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.TableMessage.html": {
    "href": "api/Innovt.Cloud.Table.TableMessage.html",
    "title": "Class TableMessage | Innovt Platform",
    "keywords": "Class TableMessage Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a message associated with a table, implementing the ITableMessage interface. public class TableMessage : ITableMessage Inheritance object TableMessage Implements ITableMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors TableMessage() Default constructor for TableMessage. public TableMessage() TableMessage(string) Constructor for TableMessage with an identifier. public TableMessage(string id) Parameters id string The unique identifier for the message. TableMessage(string, string) Constructor for TableMessage with an identifier and a range key. public TableMessage(string id, string rangeKey) Parameters id string The unique identifier for the message. rangeKey string The range key for the message. Properties Id Gets or sets the unique identifier for the message. public string Id { get; set; } Property Value string RangeKey Gets or sets the range key associated with the message. public string RangeKey { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Table.TransactionWriteItem.html": {
    "href": "api/Innovt.Cloud.Table.TransactionWriteItem.html",
    "title": "Class TransactionWriteItem | Innovt Platform",
    "keywords": "Class TransactionWriteItem Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents an item within a transaction for write operations. public class TransactionWriteItem Inheritance object TransactionWriteItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ConditionExpression Gets or sets the condition expression for the transaction item. public string ConditionExpression { get; set; } Property Value string ExpressionAttributeValues Represents a dictionary of attribute values to be used in expressions. public Dictionary<string, object> ExpressionAttributeValues { get; set; } Property Value Dictionary<string, object> Items Only for Put operations public Dictionary<string, object> Items { get; set; } Property Value Dictionary<string, object> Keys Represents a dictionary of keys, typically used for key-value pairs. public Dictionary<string, object> Keys { get; set; } Property Value Dictionary<string, object> OperationType Gets or sets the type of write operation in the transaction. public TransactionWriteOperationType OperationType { get; set; } Property Value TransactionWriteOperationType TableName Gets or sets the name of the table associated with the transaction item. public string TableName { get; set; } Property Value string UpdateExpression Only for update operations public string UpdateExpression { get; set; } Property Value string"
  },
  "api/Innovt.Cloud.Table.TransactionWriteOperationType.html": {
    "href": "api/Innovt.Cloud.Table.TransactionWriteOperationType.html",
    "title": "Enum TransactionWriteOperationType | Innovt Platform",
    "keywords": "Enum TransactionWriteOperationType Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Defines the types of write operations within a transaction. public enum TransactionWriteOperationType Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Fields Check = 3 Represents a \"Check\" operation in the transaction. Delete = 2 Represents a \"Delete\" operation in the transaction. Put = 0 Represents a \"Put\" operation in the transaction. Update = 1 Represents an \"Update\" operation in the transaction."
  },
  "api/Innovt.Cloud.Table.TransactionWriteRequest.html": {
    "href": "api/Innovt.Cloud.Table.TransactionWriteRequest.html",
    "title": "Class TransactionWriteRequest | Innovt Platform",
    "keywords": "Class TransactionWriteRequest Namespace Innovt.Cloud.Table Assembly Innovt.Cloud.dll Represents a request for a transactional write operation. public class TransactionWriteRequest Inheritance object TransactionWriteRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors TransactionWriteRequest() Default constructor for TransactionWriteRequest. public TransactionWriteRequest() Properties ClientRequestToken Gets or sets a client-provided request token to ensure idempotent execution of the transaction. public string ClientRequestToken { get; set; } Property Value string TransactItems Gets or sets a list of transactional write items to be included in the transaction. public IList<TransactionWriteItem> TransactItems { get; set; } Property Value IList<TransactionWriteItem> Methods AddItem(TransactionWriteItem) Add a new item to the transaction public void AddItem(TransactionWriteItem item) Parameters item TransactionWriteItem"
  },
  "api/Innovt.Cloud.Table.html": {
    "href": "api/Innovt.Cloud.Table.html",
    "title": "Namespace Innovt.Cloud.Table | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.Table Classes BaseRequest Represents a base request for querying or scanning a database. BatchGetItem Represents a request to batch get items from a database. BatchGetItemRequest Represents a request to batch get items from multiple tables. BatchWriteItem Represents a request to batch write items to a database. BatchWriteItemRequest Represents a request to batch write items to multiple tables. BatchWriteItemResponse Represents a response from a batch write items operation. ExecuteSqlStatementRequest Represents a request to execute an SQL statement. ExecuteSqlStatementResponse<T> Represents a response from executing an SQL statement, including a list of items of type T. QueryRequest Represents a request for querying a data source. ScanRequest Represents a request for scanning a data source. TableMessage Represents a message associated with a table, implementing the ITableMessage interface. TransactionWriteItem Represents an item within a transaction for write operations. TransactionWriteRequest Represents a request for a transactional write operation. Interfaces ITableMessage Represents a message associated with a table, defining a unique identifier. ITableRepository Interface representing a repository for interacting with a table. Enums TransactionWriteOperationType Defines the types of write operations within a transaction."
  },
  "api/Innovt.Cloud.html": {
    "href": "api/Innovt.Cloud.html",
    "title": "Namespace Innovt.Cloud | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud Interfaces IConfiguration Interface to be used for configuration"
  },
  "api/Innovt.Contrib.Authorization.Platform.Tests.Tests.html": {
    "href": "api/Innovt.Contrib.Authorization.Platform.Tests.Tests.html",
    "title": "Class Tests | Innovt Platform",
    "keywords": "Class Tests Namespace Innovt.Contrib.Authorization.Platform.Tests Assembly Innovt.Contrib.Authorization.Platform.Tests.dll [TestFixture] public class Tests Inheritance object Tests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AddUser_ShouldThrowException_When_Command_Is_Null() [Test] public void AddUser_ShouldThrowException_When_Command_Is_Null() Setup() [SetUp] public void Setup()"
  },
  "api/Innovt.Contrib.Authorization.Platform.Tests.html": {
    "href": "api/Innovt.Contrib.Authorization.Platform.Tests.html",
    "title": "Namespace Innovt.Contrib.Authorization.Platform.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Contrib.Authorization.Platform.Tests Classes Tests"
  },
  "api/Innovt.Core.Attributes.ArrayValidatorAttribute.html": {
    "href": "api/Innovt.Core.Attributes.ArrayValidatorAttribute.html",
    "title": "Class ArrayValidatorAttribute | Innovt Platform",
    "keywords": "Class ArrayValidatorAttribute Namespace Innovt.Core.Attributes Assembly Innovt.Core.dll Custom validation attribute for arrays. public sealed class ArrayValidatorAttribute : RequiredAttribute Inheritance object Attribute ValidationAttribute RequiredAttribute ArrayValidatorAttribute Inherited Members RequiredAttribute.AllowEmptyStrings ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This attribute is used to validate whether an object is an array and, in the case of string arrays, whether any of the strings in the array are empty or contain only whitespace. Methods IsValid(object) Determines whether the specified value is a valid array. public override bool IsValid(object value) Parameters value object The value to validate. Returns bool true if the value is a valid array; otherwise, false."
  },
  "api/Innovt.Core.Attributes.ModelExcludeFilterAttribute.html": {
    "href": "api/Innovt.Core.Attributes.ModelExcludeFilterAttribute.html",
    "title": "Class ModelExcludeFilterAttribute | Innovt Platform",
    "keywords": "Class ModelExcludeFilterAttribute Namespace Innovt.Core.Attributes Assembly Innovt.Core.dll You can use it for different purpose at the framework [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public sealed class ModelExcludeFilterAttribute : Attribute Inheritance object Attribute ModelExcludeFilterAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ModelExcludeFilterAttribute(string) Initializes a new instance of the ModelExcludeFilterAttribute class. public ModelExcludeFilterAttribute(string propertyName = null) Parameters propertyName string The name of the property to be excluded (optional). ModelExcludeFilterAttribute(params string[]) Initializes a new instance of the ModelExcludeFilterAttribute class. public ModelExcludeFilterAttribute(params string[] excludeAttributes) Parameters excludeAttributes string[] An array of property names to be excluded. Properties ExcludeAttributes Gets or sets an array of property names to be excluded when applying filters. public string[] ExcludeAttributes { get; } Property Value string[]"
  },
  "api/Innovt.Core.Attributes.RequiredGuidAttribute.html": {
    "href": "api/Innovt.Core.Attributes.RequiredGuidAttribute.html",
    "title": "Class RequiredGuidAttribute | Innovt Platform",
    "keywords": "Class RequiredGuidAttribute Namespace Innovt.Core.Attributes Assembly Innovt.Core.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field|AttributeTargets.Parameter)] public sealed class RequiredGuidAttribute : RequiredAttribute Inheritance object Attribute ValidationAttribute RequiredAttribute RequiredGuidAttribute Inherited Members RequiredAttribute.AllowEmptyStrings ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods IsValid(object) Determines whether the specified value is a non-empty Guid. public override bool IsValid(object value) Parameters value object The value to validate. Returns bool true if the value is a non-empty Guid; otherwise, false."
  },
  "api/Innovt.Core.Attributes.RequiredNumberGreaterThanZeroAttribute.html": {
    "href": "api/Innovt.Core.Attributes.RequiredNumberGreaterThanZeroAttribute.html",
    "title": "Class RequiredNumberGreaterThanZeroAttribute | Innovt Platform",
    "keywords": "Class RequiredNumberGreaterThanZeroAttribute Namespace Innovt.Core.Attributes Assembly Innovt.Core.dll Attribute used to validate that a numeric property, field, or parameter is greater than zero. [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field|AttributeTargets.Parameter)] public sealed class RequiredNumberGreaterThanZeroAttribute : ValidationAttribute Inheritance object Attribute ValidationAttribute RequiredNumberGreaterThanZeroAttribute Inherited Members ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This attribute is applied to properties, fields, or parameters and is used to ensure that the value is a numeric value greater than zero. It can be used for data validation in various scenarios. Methods IsValid(object) Determines whether the specified value is a numeric value greater than zero. public override bool IsValid(object value) Parameters value object The value to validate. Returns bool true if the value is a numeric value greater than zero; otherwise, false."
  },
  "api/Innovt.Core.Attributes.html": {
    "href": "api/Innovt.Core.Attributes.html",
    "title": "Namespace Innovt.Core.Attributes | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Attributes Classes ArrayValidatorAttribute Custom validation attribute for arrays. ModelExcludeFilterAttribute You can use it for different purpose at the framework RequiredGuidAttribute RequiredNumberGreaterThanZeroAttribute Attribute used to validate that a numeric property, field, or parameter is greater than zero."
  },
  "api/Innovt.Core.Caching.ICacheService.html": {
    "href": "api/Innovt.Core.Caching.ICacheService.html",
    "title": "Interface ICacheService | Innovt Platform",
    "keywords": "Interface ICacheService Namespace Innovt.Core.Caching Assembly Innovt.Core.dll Represents a caching service interface for storing and retrieving data. public interface ICacheService : IDisposable Inherited Members IDisposable.Dispose() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This interface defines methods for retrieving and caching data, as well as removing cached data. Implement this interface to create a caching service for your application. Methods GetValueOrCreate<T>(string, Func<CancellationToken, Task<T>>, TimeSpan, CancellationToken) Asynchronously retrieves a cached value associated with the specified key, or creates and caches it if not found. Task<T> GetValueOrCreate<T>(string key, Func<CancellationToken, Task<T>> factory, TimeSpan expiration, CancellationToken cancellationToken) Parameters key string The unique identifier for the cached item. factory Func<CancellationToken, Task<T>> A factory function to create the value if not found. expiration TimeSpan The time duration for which the value should be cached. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<T> The cached value if found, or a newly created value from the factory function if not found. Type Parameters T The type of the cached value. GetValue<T>(string) Gets the cached value associated with the specified key. T GetValue<T>(string key) Parameters key string The unique identifier for the cached item. Returns T The cached value if found; otherwise, the default value for the type. Type Parameters T The type of the cached value. GetValue<T>(string, Func<CancellationToken, Task<T>>, CancellationToken) Task<T> GetValue<T>(string key, Func<CancellationToken, Task<T>> factory, CancellationToken cancellationToken) Parameters key string factory Func<CancellationToken, Task<T>> cancellationToken CancellationToken Returns Task<T> Type Parameters T Remove(string) Removes a cached value associated with the specified key. void Remove(string key) Parameters key string The unique identifier for the cached item to be removed. SetValue<T>(string, T, TimeSpan) Sets a value in the cache with the specified key and expiration duration. void SetValue<T>(string key, T entity, TimeSpan expiration) Parameters key string The unique identifier for the cached item. entity T The value to be cached. expiration TimeSpan The time duration for which the value should be cached. Type Parameters T The type of the value to be cached."
  },
  "api/Innovt.Core.Caching.LocalCache.html": {
    "href": "api/Innovt.Core.Caching.LocalCache.html",
    "title": "Class LocalCache | Innovt Platform",
    "keywords": "Class LocalCache Namespace Innovt.Core.Caching Assembly Innovt.Core.dll Represents a local caching service that implements the ICacheService interface using an in-memory cache provided by IMemoryCache. public sealed class LocalCache : ICacheService, IDisposable Inheritance object LocalCache Implements ICacheService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This class provides a concrete implementation of the ICacheService interface using an in-memory cache for storing and retrieving data. It is designed for local caching within an application. Constructors LocalCache(IMemoryCache) Initializes a new instance of the LocalCache class with the specified IMemoryCache. public LocalCache(IMemoryCache memoryCache) Parameters memoryCache IMemoryCache The in-memory cache implementation provided by IMemoryCache. Exceptions ArgumentNullException Thrown when memoryCache is null. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~LocalCache() Finalizes an instance of the LocalCache class. protected ~LocalCache() GetValue<T>(string) Gets the cached value associated with the specified key. public T GetValue<T>(string key) Parameters key string The unique identifier for the cached item. Returns T The cached value if found; otherwise, the default value for the type. Type Parameters T The type of the cached value. Remove(string) Removes a cached value associated with the specified key. public void Remove(string key) Parameters key string The unique identifier for the cached item to be removed. SetValue<T>(string, T, TimeSpan) Sets a value in the cache with the specified key and expiration duration. public void SetValue<T>(string key, T entity, TimeSpan expiration) Parameters key string The unique identifier for the cached item. entity T The value to be cached. expiration TimeSpan The time duration for which the value should be cached. Type Parameters T The type of the value to be cached."
  },
  "api/Innovt.Core.Caching.MultiLayerCacheService.html": {
    "href": "api/Innovt.Core.Caching.MultiLayerCacheService.html",
    "title": "Class MultiLayerCacheService | Innovt Platform",
    "keywords": "Class MultiLayerCacheService Namespace Innovt.Core.Caching Assembly Innovt.Core.dll Represents a multi-layer caching service that implements the ICacheService interface. public sealed class MultiLayerCacheService : ICacheService, IDisposable Inheritance object MultiLayerCacheService Implements ICacheService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This class provides a caching service that supports multiple caching layers. It allows data retrieval and storage through a series of cache layers, falling back to subsequent layers if data is not found in earlier layers. Constructors MultiLayerCacheService(ICacheService, ICacheService, ILogger) Initializes a new instance of the MultiLayerCacheService class with multiple caching layers. public MultiLayerCacheService(ICacheService cacheDefaultLayer, ICacheService cacheSecondLayer, ILogger logger) Parameters cacheDefaultLayer ICacheService The default caching layer implementing ICacheService. cacheSecondLayer ICacheService The secondary caching layer implementing ICacheService. logger ILogger The logger implementation provided by ILogger. Exceptions ArgumentNullException Thrown when cacheDefaultLayer, cacheSecondLayer, or logger is null. MultiLayerCacheService(ICacheService, ILogger) Initializes a new instance of the MultiLayerCacheService class with a default caching layer. public MultiLayerCacheService(ICacheService cacheDefaultLayer, ILogger logger) Parameters cacheDefaultLayer ICacheService The default caching layer implementing ICacheService. logger ILogger The logger implementation provided by ILogger. Exceptions ArgumentNullException Thrown when cacheDefaultLayer or logger is null. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~MultiLayerCacheService() Finalizes an instance of the MultiLayerCacheService class. protected ~MultiLayerCacheService() GetValue<T>(string) Gets the cached value associated with the specified key. public T GetValue<T>(string key) Parameters key string The unique identifier for the cached item. Returns T The cached value if found; otherwise, the default value for the type. Type Parameters T The type of the cached value. Remove(string) Removes a cached value associated with the specified key. public void Remove(string key) Parameters key string The unique identifier for the cached item to be removed. SetValue<T>(string, T, TimeSpan) Sets a value in the cache with the specified key and expiration duration. public void SetValue<T>(string key, T entity, TimeSpan expiration) Parameters key string The unique identifier for the cached item. entity T The value to be cached. expiration TimeSpan The time duration for which the value should be cached. Type Parameters T The type of the value to be cached."
  },
  "api/Innovt.Core.Caching.html": {
    "href": "api/Innovt.Core.Caching.html",
    "title": "Namespace Innovt.Core.Caching | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Caching Classes LocalCache Represents a local caching service that implements the ICacheService interface using an in-memory cache provided by IMemoryCache. MultiLayerCacheService Represents a multi-layer caching service that implements the ICacheService interface. Interfaces ICacheService Represents a caching service interface for storing and retrieving data."
  },
  "api/Innovt.Core.Collections.Extensions.html": {
    "href": "api/Innovt.Core.Collections.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions Namespace Innovt.Core.Collections Assembly Innovt.Core.dll A collection of extension methods for common operations on collections and objects. public static class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This static class provides extension methods to simplify common operations on collections, such as checking for null or empty, adding items, and merging dictionaries. Methods AddFluent<T>(IList<T>, T) Initialize the collection if is null, so you don't have to check it public static IList<T> AddFluent<T>(this IList<T> list, T value) where T : class Parameters list IList<T> value T Returns IList<T> Type Parameters T AddFluent<TKey, TValue>(Dictionary<TKey, TValue>, TKey, TValue) Adds a key-value pair to the dictionary and initializes it if it is null. public static Dictionary<TKey, TValue> AddFluent<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key, TValue value) Parameters dictionary Dictionary<TKey, TValue> The Dictionary<TKey, TValue> to add to. key TKey The key to add to the dictionary. value TValue The value to add to the dictionary. Returns Dictionary<TKey, TValue> Type Parameters TKey The type of keys in the dictionary. TValue The type of values in the dictionary. HasItems<T>(ICollection<T>) Returns if the collection has more items public static bool HasItems<T>(this ICollection<T> collection) Parameters collection ICollection<T> Returns bool true if the collection has more items; otherwise, false. Type Parameters T IsNotNullOrEmpty<T>(ICollection<T>) Checks if an ICollection<T> is not null and not empty. public static bool IsNotNullOrEmpty<T>(this ICollection<T> collection) Parameters collection ICollection<T> The ICollection<T> to check. Returns bool true if the collection is not null and not empty; otherwise, false. Type Parameters T The type of elements in the collection. IsNotNullOrEmpty<T>(IEnumerable<T>) Checks if an IEnumerable<T> is not null and not empty. public static bool IsNotNullOrEmpty<T>(this IEnumerable<T> enumerable) Parameters enumerable IEnumerable<T> The IEnumerable<T> to check. Returns bool true if the enumerable is not null and not empty; otherwise, false. Type Parameters T The type of elements in the enumerable. IsNullOrEmpty<T>(ICollection<T>) Checks if an ICollection<T> is null or empty. public static bool IsNullOrEmpty<T>(this ICollection<T> collection) Parameters collection ICollection<T> The ICollection<T> to check. Returns bool true if the collection is null or empty; otherwise, false. Type Parameters T The type of elements in the collection. IsNullOrEmpty<T>(IEnumerable<T>) Checks if an IEnumerable<T> is null or empty. public static bool IsNullOrEmpty<T>(this IEnumerable<T> enumerable) Parameters enumerable IEnumerable<T> The IEnumerable<T> to check. Returns bool true if the enumerable is null or empty; otherwise, false. Type Parameters T The type of elements in the enumerable. IsNullOrEmpty<T>(IList<T>) Checks if an IList<T> is null or empty. public static bool IsNullOrEmpty<T>(this IList<T> list) Parameters list IList<T> The IList<T> to check. Returns bool true if the list is null or empty; otherwise, false. Type Parameters T The type of elements in the list. MapToPagedCollection<T, T2>(IPagedCollection<T>) Using a simple mapper to map an page collection of objects to another page collection of objects public static PagedCollection<T2> MapToPagedCollection<T, T2>(this IPagedCollection<T> pageCollection) where T : class where T2 : class Parameters pageCollection IPagedCollection<T> Returns PagedCollection<T2> Type Parameters T T2 Merge<TKey, TValue>(Dictionary<TKey, TValue>, Dictionary<TKey, TValue>) Merges two dictionaries, adding values from the second dictionary to the first. public static Dictionary<TKey, TValue> Merge<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, Dictionary<TKey, TValue> dictionarySecond) Parameters dictionary Dictionary<TKey, TValue> The target Dictionary<TKey, TValue> to merge into. dictionarySecond Dictionary<TKey, TValue> The source dictionary to merge from. Returns Dictionary<TKey, TValue> The updated dictionary after merging. Type Parameters TKey The type of keys in the dictionaries. TValue The type of values in the dictionaries."
  },
  "api/Innovt.Core.Collections.IPagedCollection-1.html": {
    "href": "api/Innovt.Core.Collections.IPagedCollection-1.html",
    "title": "Interface IPagedCollection<T> | Innovt Platform",
    "keywords": "Interface IPagedCollection<T> Namespace Innovt.Core.Collections Assembly Innovt.Core.dll public interface IPagedCollection<T> Type Parameters T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Items Gets or sets the collection of items in the current page. IEnumerable<T> Items { get; set; } Property Value IEnumerable<T> Page Gets or sets the current page number. string Page { get; set; } Property Value string PageCount Gets the total number of pages in the paged collection. int PageCount { get; } Property Value int PageSize Gets or sets the number of items per page. int PageSize { get; set; } Property Value int TotalRecords Gets or sets the total number of records in the entire collection. int TotalRecords { get; set; } Property Value int Methods HasNext() Determines whether there is a next page in the paged collection. bool HasNext() Returns bool true if there is a next page; otherwise, false. HasPrevious() Determines whether there is a previous page in the paged collection. bool HasPrevious() Returns bool true if there is a previous page; otherwise, false."
  },
  "api/Innovt.Core.Collections.PagedCollection-1.html": {
    "href": "api/Innovt.Core.Collections.PagedCollection-1.html",
    "title": "Class PagedCollection<T> | Innovt Platform",
    "keywords": "Class PagedCollection<T> Namespace Innovt.Core.Collections Assembly Innovt.Core.dll Represents a paged collection of items of type T. public class PagedCollection<T> : IPagedCollection<T> Type Parameters T The type of items in the collection. Inheritance object PagedCollection<T> Implements IPagedCollection<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This class implements the IPagedCollection<T> interface to represent a paged collection of items. It provides properties and methods to work with paged collections, including pagination information and navigation. Constructors PagedCollection() Initializes a new instance of the PagedCollection<T> class with an empty collection. public PagedCollection() PagedCollection(IEnumerable<T>) Initializes a new instance of the PagedCollection<T> class with the specified collection of items. public PagedCollection(IEnumerable<T> collection) Parameters collection IEnumerable<T> The collection of items to be paged. PagedCollection(IEnumerable<T>, int?, int?) Initializes a new instance of the PagedCollection<T> class with the specified collection of items, page number, and page size. public PagedCollection(IEnumerable<T> collection, int? page = null, int? pageSize = null) Parameters collection IEnumerable<T> The collection of items to be paged. page int? The current page number. pageSize int? The number of items per page. PagedCollection(IEnumerable<T>, string, int?) Initializes a new instance of the PagedCollection<T> class with the specified collection of items, page number, and page size. public PagedCollection(IEnumerable<T> collection, string page = null, int? pageSize = null) Parameters collection IEnumerable<T> The collection of items to be paged. page string The current page number as a string. pageSize int? The number of items per page. Properties IsNumberPagination Gets a value indicating whether the page number is a valid numeric representation. public bool IsNumberPagination { get; } Property Value bool Items Gets or sets the collection of items in the current page. public IEnumerable<T> Items { get; set; } Property Value IEnumerable<T> Page Gets or sets the current page number. public string Page { get; set; } Property Value string PageCount Gets the total number of pages in the paged collection. public int PageCount { get; } Property Value int PageSize Gets or sets the number of items per page. public int PageSize { get; set; } Property Value int TotalRecords Gets or sets the total number of records in the entire collection. public int TotalRecords { get; set; } Property Value int Methods HasNext() Determines whether there is a next page in the paged collection. public bool HasNext() Returns bool true if there is a next page; otherwise, false. HasPrevious() Determines whether there is a previous page in the paged collection. public bool HasPrevious() Returns bool true if there is a previous page; otherwise, false."
  },
  "api/Innovt.Core.Collections.ParamsWrappers-1.html": {
    "href": "api/Innovt.Core.Collections.ParamsWrappers-1.html",
    "title": "Class ParamsWrappers<T> | Innovt Platform",
    "keywords": "Class ParamsWrappers<T> Namespace Innovt.Core.Collections Assembly Innovt.Core.dll Represents a wrapper for an array of parameters of type T. public class ParamsWrappers<T> Type Parameters T The type of parameters in the array. Inheritance object ParamsWrappers<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This class allows you to wrap an array of parameters and provide a convenient way to work with them. It is commonly used when you need to pass a variable number of parameters to a method or function. Constructors ParamsWrappers(params T[]) Initializes a new instance of the ParamsWrappers<T> class with the specified parameters. public ParamsWrappers(params T[] parameters) Parameters parameters T[] The array of parameters to wrap. Properties Parameters Gets or sets the array of parameters wrapped by this instance. public T[] Parameters { get; set; } Property Value T[]"
  },
  "api/Innovt.Core.Collections.html": {
    "href": "api/Innovt.Core.Collections.html",
    "title": "Namespace Innovt.Core.Collections | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Collections Classes Extensions A collection of extension methods for common operations on collections and objects. PagedCollection<T> Represents a paged collection of items of type T. ParamsWrappers<T> Represents a wrapper for an array of parameters of type T. Interfaces IPagedCollection<T>"
  },
  "api/Innovt.Core.Cqrs.Commands.ICommand.html": {
    "href": "api/Innovt.Core.Cqrs.Commands.ICommand.html",
    "title": "Interface ICommand | Innovt Platform",
    "keywords": "Interface ICommand Namespace Innovt.Core.Cqrs.Commands Assembly Innovt.Core.dll Represents a command interface that can be validated. public interface ICommand : IValidatableObject Inherited Members IValidatableObject.Validate(ValidationContext) Extension Methods Extensions.EnsureIsValid(ICommand, ValidationContext) Extensions.EnsureIsValid(ICommand, string) Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This interface is used to define a command, which represents an action or operation that can be executed. Commands often include data or parameters needed to perform the action. Implementing the IValidatableObject interface allows for command validation."
  },
  "api/Innovt.Core.Cqrs.Commands.html": {
    "href": "api/Innovt.Core.Cqrs.Commands.html",
    "title": "Namespace Innovt.Core.Cqrs.Commands | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Cqrs.Commands Interfaces ICommand Represents a command interface that can be validated."
  },
  "api/Innovt.Core.Cqrs.Queries.IFilter.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.IFilter.html",
    "title": "Interface IFilter | Innovt Platform",
    "keywords": "Interface IFilter Namespace Innovt.Core.Cqrs.Queries Assembly Innovt.Core.dll Represents an interface for defining filters. public interface IFilter : IValidatableObject Inherited Members IValidatableObject.Validate(ValidationContext) Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This interface serves as a base for defining filters that can be used to filter data in queries or operations. Filters may include various criteria to narrow down data selection."
  },
  "api/Innovt.Core.Cqrs.Queries.IPagedFilter.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.IPagedFilter.html",
    "title": "Interface IPagedFilter | Innovt Platform",
    "keywords": "Interface IPagedFilter Namespace Innovt.Core.Cqrs.Queries Assembly Innovt.Core.dll Represents an interface for defining paged filters with pagination options. public interface IPagedFilter : IFilter, IValidatableObject Inherited Members IValidatableObject.Validate(ValidationContext) Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This interface extends the IFilter interface and includes properties for pagination control. Paged filters are typically used when retrieving data in paginated views or queries. Properties Page Gets or sets the page number for pagination. int Page { get; set; } Property Value int PageSize Gets or sets the number of items to display per page. int PageSize { get; set; } Property Value int"
  },
  "api/Innovt.Core.Cqrs.Queries.PagedFilterBase-1.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.PagedFilterBase-1.html",
    "title": "Class PagedFilterBase<T> | Innovt Platform",
    "keywords": "Class PagedFilterBase<T> Namespace Innovt.Core.Cqrs.Queries Assembly Innovt.Core.dll Represents a generic base class for implementing paged filters. public class PagedFilterBase<T> : IPagedFilter, IFilter, IValidatableObject Type Parameters T The type of search term or filter criteria. Inheritance object PagedFilterBase<T> Implements IPagedFilter IFilter IValidatableObject Derived PagedFilterBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This generic class provides a foundation for creating paged filters with specific filter criteria. Paged filters typically include criteria such as search terms, sorting options, and pagination settings. Properties OrderBy Gets or sets the field by which to order the results. public string OrderBy { get; set; } Property Value string OrderByDirection Gets or sets the direction of the sorting (e.g., ascending or descending). public string OrderByDirection { get; set; } Property Value string Page Gets or sets the page number for pagination. public int Page { get; set; } Property Value int PageSize Gets or sets the number of items to display per page. public int PageSize { get; set; } Property Value int Term Gets or sets the search term or filter criteria. public T Term { get; set; } Property Value T Methods Validate(ValidationContext) Determines whether the specified object is valid. public virtual IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection that holds failed-validation information."
  },
  "api/Innovt.Core.Cqrs.Queries.PagedFilterBase.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.PagedFilterBase.html",
    "title": "Class PagedFilterBase | Innovt Platform",
    "keywords": "Class PagedFilterBase Namespace Innovt.Core.Cqrs.Queries Assembly Innovt.Core.dll Represents a base class for implementing paged filters. public class PagedFilterBase : PagedFilterBase<string>, IPagedFilter, IFilter, IValidatableObject Inheritance object PagedFilterBase<string> PagedFilterBase Implements IPagedFilter IFilter IValidatableObject Inherited Members PagedFilterBase<string>.Term PagedFilterBase<string>.OrderBy PagedFilterBase<string>.OrderByDirection PagedFilterBase<string>.Page PagedFilterBase<string>.PageSize PagedFilterBase<string>.Validate(ValidationContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This class provides a foundation for creating paged filters that can be used to filter and paginate data in a query. Paged filters typically include criteria such as search terms, sorting options, and pagination settings."
  },
  "api/Innovt.Core.Cqrs.Queries.SimpleFilter-1.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.SimpleFilter-1.html",
    "title": "Class SimpleFilter<T> | Innovt Platform",
    "keywords": "Class SimpleFilter<T> Namespace Innovt.Core.Cqrs.Queries Assembly Innovt.Core.dll Represents a simple filter with generic data. public class SimpleFilter<T> : IFilter, IValidatableObject Type Parameters T The type of data used as filter criteria. Inheritance object SimpleFilter<T> Implements IFilter IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This class allows you to create simple filters with generic data that can be used to filter data in queries or operations. The filter may include criteria specific to the data type T. Constructors SimpleFilter(T) Initializes a new instance of the SimpleFilter<T> class with the specified data. public SimpleFilter(T data) Parameters data T The filter criteria of type T. Properties Data Gets or sets the filter criteria of type T. public T Data { get; set; } Property Value T Methods Validate(ValidationContext) Determines whether the specified object is valid. public virtual IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection that holds failed-validation information."
  },
  "api/Innovt.Core.Cqrs.Queries.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.html",
    "title": "Namespace Innovt.Core.Cqrs.Queries | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Cqrs.Queries Classes PagedFilterBase Represents a base class for implementing paged filters. PagedFilterBase<T> Represents a generic base class for implementing paged filters. SimpleFilter<T> Represents a simple filter with generic data. Interfaces IFilter Represents an interface for defining filters. IPagedFilter Represents an interface for defining paged filters with pagination options."
  },
  "api/Innovt.Core.CrossCutting.Ioc.Extensions.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions Namespace Innovt.Core.CrossCutting.Ioc Assembly Innovt.Core.dll Provides extension methods for working with IServiceCollection and dependency injection. public static class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This static class contains extension methods that enhance the functionality of the IServiceCollection interface, enabling easier registration of services and modules. Methods AddModule(IServiceCollection, IocModule) Adds services from the specified module to the services collection. public static void AddModule(this IServiceCollection services, IocModule module) Parameters services IServiceCollection The IServiceCollection to which services should be added. module IocModule The IocModule containing services to be added. Exceptions ArgumentNullException Thrown if services or module is null. AddModule(IServiceCollection, Assembly) Adds services defined in modules from the specified assembly to the services collection. public static void AddModule(this IServiceCollection services, Assembly assembly) Parameters services IServiceCollection The IServiceCollection to which services should be added. assembly Assembly The assembly containing modules to be added. Exceptions ArgumentNullException Thrown if services or assembly is null."
  },
  "api/Innovt.Core.CrossCutting.Ioc.IContainer.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.IContainer.html",
    "title": "Interface IContainer | Innovt Platform",
    "keywords": "Interface IContainer Namespace Innovt.Core.CrossCutting.Ioc Assembly Innovt.Core.dll Represents an interface for a dependency injection container. public interface IContainer : IDisposable Inherited Members IDisposable.Dispose() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This interface defines a contract for a dependency injection container that provides methods for registering modules, resolving services, releasing resources, and creating service scopes. It also includes a method for checking container configuration. Methods AddModule(IocModule) Adds an IocModule to the container. void AddModule(IocModule iocModule) Parameters iocModule IocModule The IocModule to be added to the container. CheckConfiguration() Checks the configuration of the container. void CheckConfiguration() CreateScope() Creates and returns a new service scope. IServiceScope CreateScope() Returns IServiceScope An IServiceScope representing the new service scope. Release(object) Releases the specified object and frees associated resources. void Release(object obj) Parameters obj object The object to release. Resolve(Type) Resolves a service of the specified type. object Resolve(Type type) Parameters type Type The Type of the service to resolve. Returns object The resolved service object. Resolve<TService>() Resolves a service of type TService. TService Resolve<TService>() Returns TService The resolved service object. Type Parameters TService The type of service to resolve. Resolve<TService>(string) Resolves a named instance of a service of type TService. TService Resolve<TService>(string instanceKey) Parameters instanceKey string The key identifying the named instance to resolve. Returns TService The resolved service object. Type Parameters TService The type of service to resolve. Resolve<TService>(Type) Resolves a service of type TService with the specified type. TService Resolve<TService>(Type type) Parameters type Type The Type of the service implementation to resolve. Returns TService The resolved service object. Type Parameters TService The type of service to resolve. TryToResolve<TService>() Try to resolve a service. If the service is not registered, return null. TService TryToResolve<TService>() Returns TService Type Parameters TService TryToResolve<TService>(Type) This method will not throw an exception if the service is not registered. Return null instead. TService TryToResolve<TService>(Type type) Parameters type Type The type that you want to get an instance Returns TService Null or an instance of your type Type Parameters TService"
  },
  "api/Innovt.Core.CrossCutting.Ioc.IocLocator.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.IocLocator.html",
    "title": "Class IocLocator | Innovt Platform",
    "keywords": "Class IocLocator Namespace Innovt.Core.CrossCutting.Ioc Assembly Innovt.Core.dll public static class IocLocator Inheritance object IocLocator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddModule(IocModule) Adds an IocModule to the container. public static void AddModule(IocModule module) Parameters module IocModule The IocModule to be added to the container. Exceptions ArgumentNullException Thrown if module is null. AddModuleFromAssembly(Assembly) Adds modules from the specified assembly to the container. public static void AddModuleFromAssembly(Assembly assembly) Parameters assembly Assembly The assembly containing modules to be added. Exceptions ArgumentNullException Thrown if assembly is null. CheckConfiguration() Checks the configuration of the container. public static void CheckConfiguration() CreateScope() Creates and returns a new service scope. public static IServiceScope CreateScope() Returns IServiceScope An IServiceScope representing the new service scope. Initialize(IContainer) Initializes the locator with the specified main dependency injection container. public static void Initialize(IContainer mainContainer) Parameters mainContainer IContainer The main IContainer to be used for service resolution. Exceptions ArgumentNullException Thrown if mainContainer is null. Release(object) Releases the specified object and frees associated resources. public static void Release(object obj) Parameters obj object The object to release. Resolve(Type) Resolves a service of the specified type. public static object Resolve(Type type) Parameters type Type The Type of the service to resolve. Returns object The resolved service object. Resolve<TService>() Resolves a service of type TService. public static TService Resolve<TService>() Returns TService The resolved service object. Type Parameters TService The type of service to resolve. Resolve<TService>(string) Resolves a named instance of a service of type TService. public static TService Resolve<TService>(string intanceKey) Parameters intanceKey string The key identifying the named instance to resolve. Returns TService The resolved service object. Type Parameters TService The type of service to resolve. Resolve<TService>(Type) Resolves a service of type TService with the specified type. public static TService Resolve<TService>(Type type) Parameters type Type The Type of the service implementation to resolve. Returns TService The resolved service object. Type Parameters TService The type of service to resolve."
  },
  "api/Innovt.Core.CrossCutting.Ioc.IocModule.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.IocModule.html",
    "title": "Class IocModule | Innovt Platform",
    "keywords": "Class IocModule Namespace Innovt.Core.CrossCutting.Ioc Assembly Innovt.Core.dll Represents a module for configuring and managing services within a dependency injection container. public class IocModule Inheritance object IocModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Remarks This class provides a way to define and manage services within a dependency injection container. Developers can create custom modules to configure and add services to the container, making it easier to organize and maintain the service registration code. Constructors IocModule() Initializes a new instance of the IocModule class with a new ServiceCollection. public IocModule() IocModule(IServiceCollection) Initializes a new instance of the IocModule class with the provided services. public IocModule(IServiceCollection services) Parameters services IServiceCollection The IServiceCollection to be used for service registration. Properties Services Gets the IServiceCollection used for service registration and configuration. public IServiceCollection Services { get; } Property Value IServiceCollection Methods AppendServices(IServiceCollection) Appends services from an external IServiceCollection to the module's services. public IServiceCollection AppendServices(IServiceCollection externalServices) Parameters externalServices IServiceCollection The external IServiceCollection containing services to append. Returns IServiceCollection The updated IServiceCollection after appending external services. GetServices() Gets the IServiceCollection used for service registration and configuration. public IServiceCollection GetServices() Returns IServiceCollection The IServiceCollection associated with this module."
  },
  "api/Innovt.Core.CrossCutting.Ioc.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.html",
    "title": "Namespace Innovt.Core.CrossCutting.Ioc | Innovt Platform",
    "keywords": "Namespace Innovt.Core.CrossCutting.Ioc Classes Extensions Provides extension methods for working with IServiceCollection and dependency injection. IocLocator IocModule Represents a module for configuring and managing services within a dependency injection container. Interfaces IContainer Represents an interface for a dependency injection container."
  },
  "api/Innovt.Core.CrossCutting.Log.ILogger-1.html": {
    "href": "api/Innovt.Core.CrossCutting.Log.ILogger-1.html",
    "title": "Interface ILogger<T> | Innovt Platform",
    "keywords": "Interface ILogger<T> Namespace Innovt.Core.CrossCutting.Log Assembly Innovt.Core.dll Provides a typed logging interface that inherits from ILogger. public interface ILogger<T> : ILogger Type Parameters T The type associated with the logger. Inherited Members ILogger.Debug(string) ILogger.Debug(string, params object[]) ILogger.Debug(Exception, string) ILogger.Debug(Exception, string, params object[]) ILogger.Error(string) ILogger.Error(string, params object[]) ILogger.Error(Exception, string) ILogger.Error(Exception, string, params object[]) ILogger.Fatal(string) ILogger.Fatal(string, params object[]) ILogger.Fatal(Exception, string) ILogger.Fatal(Exception, string, params object[]) ILogger.Info(string) ILogger.Info(string, params object[]) ILogger.Info(Exception, string) ILogger.Info(Exception, string, params object[]) ILogger.Verbose(string) ILogger.Verbose(string, params object[]) ILogger.Verbose(Exception, string) ILogger.Verbose(Exception, string, params object[]) ILogger.Warning(string) ILogger.Warning(string, params object[]) ILogger.Warning(Exception, string) ILogger.Warning(Exception, string, params object[]) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.CrossCutting.Log.ILogger.html": {
    "href": "api/Innovt.Core.CrossCutting.Log.ILogger.html",
    "title": "Interface ILogger | Innovt Platform",
    "keywords": "Interface ILogger Namespace Innovt.Core.CrossCutting.Log Assembly Innovt.Core.dll Provides an interface for logging messages with different log levels and message formatting options. [CLSCompliant(true)] public interface ILogger Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Debug(Exception, string) Debug is the noisiest level, rarely (if ever) enabled for a production app. void Debug(Exception exception, string messageTemplate) Parameters exception Exception An Exception parameter messageTemplate string The message templete will follow the Serilog Pattern. Debug(Exception, string, params object[]) Debug is the noisiest level, rarely (if ever) enabled for a production app. void Debug(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception An exception messageTemplate string The message templete will follow the Serilog Pattern. propertyValues object[] Debug(string) Debug is the noisiest level, rarely (if ever) enabled for a production app. void Debug(string message) Parameters message string The message will follow the Serilog Pattern. Debug(string, params object[]) Debug is the noisiest level, rarely (if ever) enabled for a production app. void Debug(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The message templete will follow the Serilog Pattern. propertyValues object[] Properties that will be used as template of the message Error(Exception, string) Logs an error message with an exception and a message template. void Error(Exception exception, string messageTemplate) Parameters exception Exception The exception to log. messageTemplate string The error message template following the Serilog pattern. Error(Exception, string, params object[]) Logs an error message with an exception, a message template, and optional property values. void Error(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to log. messageTemplate string The error message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Error(string) An error logger void Error(string message) Parameters message string The message templete will follow the Serilog Pattern. Error(string, params object[]) Logs an error message with a message template and optional property values. void Error(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The error message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Fatal(Exception, string) Logs a fatal error message with an exception and a message template. void Fatal(Exception exception, string messageTemplate) Parameters exception Exception The exception to log. messageTemplate string The fatal error message template following the Serilog pattern. Fatal(Exception, string, params object[]) Logs a fatal error message with an exception, a message template, and optional property values. void Fatal(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to log. messageTemplate string The fatal error message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Fatal(string) Logs a fatal error message. void Fatal(string message) Parameters message string The fatal error message to log. Fatal(string, params object[]) Logs a fatal error message with a message template and optional property values. void Fatal(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The fatal error message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Info(Exception, string) Logs an information message with an exception and a message template. void Info(Exception exception, string messageTemplate) Parameters exception Exception The exception to log. messageTemplate string The information message template following the Serilog pattern. Info(Exception, string, params object[]) Logs an information message with an exception, a message template, and optional property values. void Info(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to log. messageTemplate string The information message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Info(string) Logs an information message. void Info(string message) Parameters message string The information message to log. Info(string, params object[]) Logs an information message with a message template and optional property values. void Info(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The information message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Verbose(Exception, string) Logs a verbose message with an exception and a message template. void Verbose(Exception exception, string messageTemplate) Parameters exception Exception The exception to log. messageTemplate string The verbose message template following the Serilog pattern. Verbose(Exception, string, params object[]) Logs a verbose message with an exception, a message template, and optional property values. void Verbose(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to log. messageTemplate string The verbose message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Verbose(string) Logs a verbose message. void Verbose(string message) Parameters message string The verbose message to log. Verbose(string, params object[]) Logs a verbose message with a message template and optional property values. void Verbose(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The verbose message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Warning(Exception, string) Logs a warning message with an exception and a message template. void Warning(Exception exception, string messageTemplate) Parameters exception Exception The exception to log. messageTemplate string The warning message template following the Serilog pattern. Warning(Exception, string, params object[]) Logs a warning message with an exception, a message template, and optional property values. void Warning(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to log. messageTemplate string The warning message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template. Warning(string) Logs a warning message. void Warning(string message) Parameters message string The warning message to log. Warning(string, params object[]) Logs a warning message with a message template and optional property values. void Warning(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The warning message template following the Serilog pattern. propertyValues object[] Optional property values used in the message template."
  },
  "api/Innovt.Core.CrossCutting.Log.html": {
    "href": "api/Innovt.Core.CrossCutting.Log.html",
    "title": "Namespace Innovt.Core.CrossCutting.Log | Innovt Platform",
    "keywords": "Namespace Innovt.Core.CrossCutting.Log Interfaces ILogger Provides an interface for logging messages with different log levels and message formatting options. ILogger<T> Provides a typed logging interface that inherits from ILogger."
  },
  "api/Innovt.Core.Exceptions.BaseException.html": {
    "href": "api/Innovt.Core.Exceptions.BaseException.html",
    "title": "Class BaseException | Innovt Platform",
    "keywords": "Class BaseException Namespace Innovt.Core.Exceptions Assembly Innovt.Core.dll [Serializable] public class BaseException : Exception, ISerializable Inheritance object Exception BaseException Implements ISerializable Derived BusinessException ConfigurationException CriticalException FatalException HttpException SqlSyntaxException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BaseException() Initializes a new instance of the BaseException class. public BaseException() BaseException(Exception) Initializes a new instance of the BaseException class with a reference to the inner exception that is the cause of this exception. public BaseException(Exception innerException) Parameters innerException Exception The exception that is the cause of the current exception, or a null reference if no inner exception is specified. BaseException(SerializationInfo, StreamingContext) Initializes a new instance of the BaseException class with serialized data. protected BaseException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters serializationInfo SerializationInfo The SerializationInfo that holds the serialized object data about the exception being thrown. streamingContext StreamingContext The StreamingContext that contains contextual information about the source or destination. BaseException(string) Initializes a new instance of the BaseException class with a specified error message. public BaseException(string message) Parameters message string The error message that explains the reason for the exception. BaseException(string, Exception) Initializes a new instance of the BaseException class with a specified error message and a reference to the inner exception that is the cause of this exception. public BaseException(string message, Exception innerException) Parameters message string The error message that explains the reason for the exception. innerException Exception The exception that is the cause of the current exception, or a null reference if no inner exception is specified."
  },
  "api/Innovt.Core.Exceptions.BusinessException.html": {
    "href": "api/Innovt.Core.Exceptions.BusinessException.html",
    "title": "Class BusinessException | Innovt Platform",
    "keywords": "Class BusinessException Namespace Innovt.Core.Exceptions Assembly Innovt.Core.dll [Serializable] public class BusinessException : BaseException, ISerializable Inheritance object Exception BaseException BusinessException Implements ISerializable Derived CodeMismatchException ExpiredCodeException InvalidPasswordException PasswordResetRequiredException UserNameAlreadyExistsException UserNotAuthorizedException UserNotConfirmedException UserNotFoundException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BusinessException() Initializes a new instance of the BusinessException class with no specified error message. public BusinessException() BusinessException(ErrorMessage) Initializes a new instance of the BusinessException class with a single validation error. public BusinessException(ErrorMessage error) Parameters error ErrorMessage A single validation error message. BusinessException(ErrorMessage[]) Initializes a new instance of the BusinessException class with an array of validation errors. public BusinessException(ErrorMessage[] errors) Parameters errors ErrorMessage[] An array of validation error messages. BusinessException(IList<ErrorMessage>) Initializes a new instance of the BusinessException class with a list of validation errors. public BusinessException(IList<ErrorMessage> errors) Parameters errors IList<ErrorMessage> A list of validation error messages. BusinessException(SerializationInfo, StreamingContext) Initializes a new instance of the BusinessException class with serialized data. protected BusinessException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters serializationInfo SerializationInfo The SerializationInfo that holds the serialized object data about the exception being thrown. streamingContext StreamingContext The StreamingContext that contains contextual information about the source or destination. BusinessException(string) Initializes a new instance of the BusinessException class with a specified error message. public BusinessException(string message) Parameters message string The error message that explains the reason for the exception. BusinessException(string, Exception) Initializes a new instance of the BusinessException class with a specified error message and a reference to the inner exception that is the cause of this exception. public BusinessException(string message, Exception ex) Parameters message string The error message that explains the reason for the exception. ex Exception The exception that is the cause of the current exception, or a null reference if no inner exception is specified. BusinessException(string, string) Initializes a new instance of the BusinessException class with a code and a specified error message. public BusinessException(string code, string message) Parameters code string A code associated with the exception. message string The error message that explains the reason for the exception. BusinessException(string, string, Exception) Initializes a new instance of the BusinessException class with a code, a specified error message, and a reference to the inner exception that is the cause of this exception. public BusinessException(string code, string message, Exception ex) Parameters code string A code associated with the exception. message string The error message that explains the reason for the exception. ex Exception The exception that is the cause of the current exception, or a null reference if no inner exception is specified. Properties Code Gets or sets a code associated with the exception. public string Code { get; protected set; } Property Value string Detail Gets the detail information associated with the exception. public object Detail { get; } Property Value object Errors Gets or sets a list of validation error messages. public IEnumerable<ErrorMessage> Errors { get; set; } Property Value IEnumerable<ErrorMessage> Methods ReadFullErrors() Reads the full validation error messages. public string ReadFullErrors() Returns string A concatenated string of validation error messages."
  },
  "api/Innovt.Core.Exceptions.ConfigurationException.html": {
    "href": "api/Innovt.Core.Exceptions.ConfigurationException.html",
    "title": "Class ConfigurationException | Innovt Platform",
    "keywords": "Class ConfigurationException Namespace Innovt.Core.Exceptions Assembly Innovt.Core.dll [Serializable] public class ConfigurationException : BaseException, ISerializable Inheritance object Exception BaseException ConfigurationException Implements ISerializable Derived ConnectionStringException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ConfigurationException(Exception) Initializes a new instance of the ConfigurationException class with a specified inner exception. public ConfigurationException(Exception ex) Parameters ex Exception The inner exception that caused the configuration issue. ConfigurationException(SerializationInfo, StreamingContext) Initializes a new instance of the ConfigurationException class with serialized data. protected ConfigurationException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters serializationInfo SerializationInfo The SerializationInfo containing serialized object data. streamingContext StreamingContext The StreamingContext representing the source or destination of the serialized data. ConfigurationException(string) Initializes a new instance of the ConfigurationException class with a specified error message. public ConfigurationException(string message) Parameters message string The error message that describes the issue with the configuration. ConfigurationException(string, Exception) Initializes a new instance of the ConfigurationException class with a specified error message and inner exception. public ConfigurationException(string message, Exception ex) Parameters message string The error message that describes the issue with the configuration. ex Exception The inner exception that caused the configuration issue."
  },
  "api/Innovt.Core.Exceptions.CriticalException.html": {
    "href": "api/Innovt.Core.Exceptions.CriticalException.html",
    "title": "Class CriticalException | Innovt Platform",
    "keywords": "Class CriticalException Namespace Innovt.Core.Exceptions Assembly Innovt.Core.dll [Serializable] public class CriticalException : BaseException, ISerializable Inheritance object Exception BaseException CriticalException Implements ISerializable Derived InternalException MissingEntityMapException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CriticalException(Exception) Initializes a new instance of the CriticalException class with a specified inner exception. public CriticalException(Exception ex) Parameters ex Exception The inner exception that caused the critical issue. CriticalException(SerializationInfo, StreamingContext) Initializes a new instance of the CriticalException class with serialized data. protected CriticalException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters serializationInfo SerializationInfo The SerializationInfo containing serialized object data. streamingContext StreamingContext The StreamingContext representing the source or destination of the serialized data. CriticalException(string) Initializes a new instance of the CriticalException class with a specified error message. public CriticalException(string message) Parameters message string The error message that describes the critical issue. CriticalException(string, Exception) Initializes a new instance of the CriticalException class with a specified error message and inner exception. public CriticalException(string message, Exception ex) Parameters message string The error message that describes the critical issue. ex Exception The inner exception that caused the critical issue."
  },
  "api/Innovt.Core.Exceptions.ErrorMessage.html": {
    "href": "api/Innovt.Core.Exceptions.ErrorMessage.html",
    "title": "Class ErrorMessage | Innovt Platform",
    "keywords": "Class ErrorMessage Namespace Innovt.Core.Exceptions Assembly Innovt.Core.dll You can use it to create custom error messages that will be used by our framework. public class ErrorMessage Inheritance object ErrorMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ErrorMessage() Initializes a new instance of the ErrorMessage class with default values. public ErrorMessage() ErrorMessage(string) Constructor public ErrorMessage(string message) Parameters message string The message that you want to send. ErrorMessage(string, string) Constructor public ErrorMessage(string message, string propertyName) Parameters message string The message that you want to send. propertyName string The property(optional) that this error happened. ErrorMessage(string, string, string) Constructor public ErrorMessage(string message, string propertyName, string code) Parameters message string The message that you want to send. propertyName string The property(optional) that this error happened. code string The code of you error Properties Code Gets or sets the error code associated with the error message. public string Code { get; protected set; } Property Value string Message Gets or sets the error message describing the error. public string Message { get; protected set; } Property Value string PropertyName Gets or sets the name of the property to which the error is related. public string PropertyName { get; protected set; } Property Value string"
  },
  "api/Innovt.Core.Exceptions.FatalException.html": {
    "href": "api/Innovt.Core.Exceptions.FatalException.html",
    "title": "Class FatalException | Innovt Platform",
    "keywords": "Class FatalException Namespace Innovt.Core.Exceptions Assembly Innovt.Core.dll [Serializable] public class FatalException : BaseException, ISerializable Inheritance object Exception BaseException FatalException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors FatalException(Exception) Initializes a new instance of the FatalException class with a specified inner exception. public FatalException(Exception ex) Parameters ex Exception The inner exception that is the cause of this exception. FatalException(SerializationInfo, StreamingContext) protected FatalException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters serializationInfo SerializationInfo streamingContext StreamingContext FatalException(string) Initializes a new instance of the FatalException class with a specified error message. public FatalException(string message) Parameters message string The error message that describes the reason for the exception. FatalException(string, Exception) Initializes a new instance of the FatalException class with a specified error message and a reference to the inner exception that is the cause of this exception. public FatalException(string message, Exception ex) Parameters message string The error message that describes the reason for the exception. ex Exception The inner exception that is the cause of this exception."
  },
  "api/Innovt.Core.Exceptions.html": {
    "href": "api/Innovt.Core.Exceptions.html",
    "title": "Namespace Innovt.Core.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Exceptions Classes BaseException BusinessException ConfigurationException CriticalException ErrorMessage You can use it to create custom error messages that will be used by our framework. FatalException"
  },
  "api/Innovt.Core.HealthChecks.IServiceHealthCheck.html": {
    "href": "api/Innovt.Core.HealthChecks.IServiceHealthCheck.html",
    "title": "Interface IServiceHealthCheck | Innovt Platform",
    "keywords": "Interface IServiceHealthCheck Namespace Innovt.Core.HealthChecks Assembly Innovt.Core.dll Represents a service health check that can be used to monitor the status of a service. public interface IServiceHealthCheck Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Name Gets or sets the name of the health check, which is used to identify the check. string Name { get; set; } Property Value string Methods Check() Performs the health check to determine the status of the associated service. bool Check() Returns bool true if the service is healthy; otherwise, false."
  },
  "api/Innovt.Core.HealthChecks.html": {
    "href": "api/Innovt.Core.HealthChecks.html",
    "title": "Namespace Innovt.Core.HealthChecks | Innovt Platform",
    "keywords": "Namespace Innovt.Core.HealthChecks Interfaces IServiceHealthCheck Represents a service health check that can be used to monitor the status of a service."
  },
  "api/Innovt.Core.Http.Extensions.html": {
    "href": "api/Innovt.Core.Http.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions Namespace Innovt.Core.Http Assembly Innovt.Core.dll Provides a set of extension methods for working with URIs and HTTP requests. public static class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddBody(HttpWebRequest, string) Adds a request body to an HTTP request. public static HttpWebRequest AddBody(this HttpWebRequest request, string dataToSend) Parameters request HttpWebRequest The HTTP request to which the body will be added. dataToSend string The data to include in the request body. Returns HttpWebRequest The modified HTTP request with the added request body. AddHeader(HttpWebRequest, NameValueCollection) Adds headers to an HTTP request. public static HttpWebRequest AddHeader(this HttpWebRequest request, NameValueCollection headerData) Parameters request HttpWebRequest The HTTP request to which headers will be added. headerData NameValueCollection The collection of headers to add to the request. Returns HttpWebRequest The modified HTTP request with added headers. AppendResourceUri(Uri, string) Appends a resource path to the base URI. public static Uri AppendResourceUri(this Uri baseUri, string resource) Parameters baseUri Uri The base URI to which the resource path will be appended. resource string The resource path to append. Returns Uri A new URI containing the base URI with the appended resource path. Exceptions ArgumentNullException Thrown if the baseUri is null. Exception Thrown if the URL cannot be created."
  },
  "api/Innovt.Core.Http.HttpConnection.html": {
    "href": "api/Innovt.Core.Http.HttpConnection.html",
    "title": "Class HttpConnection | Innovt Platform",
    "keywords": "Class HttpConnection Namespace Innovt.Core.Http Assembly Innovt.Core.dll Provides methods for making HTTP requests and handling responses. public static class HttpConnection Inheritance object HttpConnection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Delete(Uri, string, NameValueCollection, int?) Sends an HTTP DELETE request to the specified endpoint and retrieves detailed information about the request and response. public static HttpRequestDetail Delete(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null) Parameters endpoint Uri The URI of the HTTP endpoint. dataToSend string Optional data to send with the request. headerData NameValueCollection Optional headers to include in the request. connectionTimeout int? Optional connection timeout in milliseconds. Returns HttpRequestDetail An HttpRequestDetail object containing request and response details. Get<T>(Uri, ISerializer, string, NameValueCollection, int?) Sends an HTTP GET request to the specified endpoint, deserializes the response to the specified type, and returns the deserialized object. public static T Get<T>(Uri endpoint, ISerializer serializer, string dataToSend = null, NameValueCollection headerData = null, int? connectionTimeout = null) where T : class Parameters endpoint Uri The URI of the HTTP endpoint. serializer ISerializer An instance of the serializer to use for deserialization. dataToSend string Optional data to send with the request. headerData NameValueCollection Optional headers to include in the request. connectionTimeout int? Optional connection timeout in milliseconds. Returns T The deserialized response of type T. Type Parameters T The type to deserialize the response to. Exceptions HttpException Thrown if the response status code is not OK or Created. Head(Uri, string, NameValueCollection, int?) Sends an HTTP HEAD request to the specified endpoint and retrieves detailed information about the request and response. public static HttpRequestDetail Head(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null) Parameters endpoint Uri The URI of the HTTP endpoint. dataToSend string Optional data to send with the request. headerData NameValueCollection Optional headers to include in the request. connectionTimeout int? Optional connection timeout in milliseconds. Returns HttpRequestDetail An HttpRequestDetail object containing request and response details. Post(Uri, string, NameValueCollection, int?) Sends an HTTP POST request to the specified endpoint and retrieves detailed information about the request and response. public static HttpRequestDetail Post(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null) Parameters endpoint Uri The URI of the HTTP endpoint. dataToSend string The data to send with the request. headerData NameValueCollection Optional headers to include in the request. connectionTimeout int? Optional connection timeout in milliseconds. Returns HttpRequestDetail An HttpRequestDetail object containing request and response details. Post<T>(Uri, string, ISerializer, NameValueCollection, int?) Sends an HTTP POST request to the specified endpoint and retrieves the response, deserializing it to the specified type. public static T Post<T>(Uri endpoint, string dataToSend, ISerializer serializer, NameValueCollection headerData = null, int? connectionTimeout = null) where T : class Parameters endpoint Uri The URI of the HTTP endpoint. dataToSend string The data to send with the request. serializer ISerializer An instance of the serializer to use for deserialization. headerData NameValueCollection Optional headers to include in the request. connectionTimeout int? Optional connection timeout in milliseconds. Returns T The deserialized response of type T. Type Parameters T The type to deserialize the response to. Exceptions ArgumentNullException Thrown if the serializer is null. HttpException Thrown if the response status code is not OK or Created. Put(Uri, string, NameValueCollection, int?) Sends an HTTP PUT request to the specified endpoint and retrieves detailed information about the request and response. public static HttpRequestDetail Put(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null) Parameters endpoint Uri The URI of the HTTP endpoint. dataToSend string Optional data to send with the request. headerData NameValueCollection Optional headers to include in the request. connectionTimeout int? Optional connection timeout in milliseconds. Returns HttpRequestDetail An HttpRequestDetail object containing request and response details."
  },
  "api/Innovt.Core.Http.HttpException.html": {
    "href": "api/Innovt.Core.Http.HttpException.html",
    "title": "Class HttpException | Innovt Platform",
    "keywords": "Class HttpException Namespace Innovt.Core.Http Assembly Innovt.Core.dll Represents an exception related to HTTP requests, providing information about the request details and any associated exception. public class HttpException : BaseException, ISerializable Inheritance object Exception BaseException HttpException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors HttpException(HttpRequestDetail) Initializes a new instance of the HttpException class with information about the HTTP request. public HttpException(HttpRequestDetail detail) Parameters detail HttpRequestDetail The details of the HTTP request that triggered the exception. HttpException(Exception) Initializes a new instance of the HttpException class with an exception related to the HTTP request. public HttpException(Exception requestException) Parameters requestException Exception The exception related to the HTTP request. Properties RequestDetail Gets the details of the HTTP request that triggered the exception. public HttpRequestDetail RequestDetail { get; } Property Value HttpRequestDetail RequestException Gets the exception related to the HTTP request. public Exception RequestException { get; } Property Value Exception"
  },
  "api/Innovt.Core.Http.HttpRequestDetail.html": {
    "href": "api/Innovt.Core.Http.HttpRequestDetail.html",
    "title": "Class HttpRequestDetail | Innovt Platform",
    "keywords": "Class HttpRequestDetail Namespace Innovt.Core.Http Assembly Innovt.Core.dll Represents detailed information about an HTTP request, including its identifier, URL, method, headers, request content, response content, and response status code. public class HttpRequestDetail Inheritance object HttpRequestDetail Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors HttpRequestDetail() Initializes a new instance of the HttpRequestDetail class with a unique identifier. public HttpRequestDetail() Properties Header Gets or sets the collection of headers associated with the HTTP request. public NameValueCollection Header { get; set; } Property Value NameValueCollection Id Gets or sets the unique identifier for the HTTP request detail. public Guid Id { get; set; } Property Value Guid Method Gets or sets the HTTP method used in the request (e.g., GET, POST, PUT). public string Method { get; set; } Property Value string RawRequest Gets or sets the raw content of the HTTP request. public string RawRequest { get; set; } Property Value string RawResponse Gets or sets the raw content of the HTTP response. public string RawResponse { get; set; } Property Value string ResponseStatusCode Gets or sets the HTTP status code of the response. public HttpStatusCode ResponseStatusCode { get; set; } Property Value HttpStatusCode Url Gets or sets the URL of the HTTP request. public string Url { get; set; } Property Value string"
  },
  "api/Innovt.Core.Http.html": {
    "href": "api/Innovt.Core.Http.html",
    "title": "Namespace Innovt.Core.Http | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Http Classes Extensions Provides a set of extension methods for working with URIs and HTTP requests. HttpConnection Provides methods for making HTTP requests and handling responses. HttpException Represents an exception related to HTTP requests, providing information about the request details and any associated exception. HttpRequestDetail Represents detailed information about an HTTP request, including its identifier, URL, method, headers, request content, response content, and response status code."
  },
  "api/Innovt.Core.Security.IBasicAuthService.html": {
    "href": "api/Innovt.Core.Security.IBasicAuthService.html",
    "title": "Interface IBasicAuthService | Innovt Platform",
    "keywords": "Interface IBasicAuthService Namespace Innovt.Core.Security Assembly Innovt.Core.dll Represents an interface for basic authentication services. public interface IBasicAuthService Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Authenticate(string, string) Authenticates a user based on a provided username and password. Task<bool> Authenticate(string userName, string password) Parameters userName string The username to authenticate. password string The password associated with the username. Returns Task<bool> A task that represents the asynchronous authentication operation. The task result is true if the authentication is successful; otherwise, false."
  },
  "api/Innovt.Core.Security.html": {
    "href": "api/Innovt.Core.Security.html",
    "title": "Namespace Innovt.Core.Security | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Security Interfaces IBasicAuthService Represents an interface for basic authentication services."
  },
  "api/Innovt.Core.Serialization.Converters.DateTimeConverter.html": {
    "href": "api/Innovt.Core.Serialization.Converters.DateTimeConverter.html",
    "title": "Class DateTimeConverter | Innovt Platform",
    "keywords": "Class DateTimeConverter Namespace Innovt.Core.Serialization.Converters Assembly Innovt.Core.dll Custom JSON converter for DateTime objects with a specified format. public class DateTimeConverter : JsonConverter<DateTime> Inheritance object JsonConverter JsonConverter<DateTime> DateTimeConverter Inherited Members JsonConverter<DateTime>.CanConvert(Type) JsonConverter<DateTime>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<DateTime>.WriteAsPropertyName(Utf8JsonWriter, DateTime, JsonSerializerOptions) JsonConverter<DateTime>.HandleNull JsonConverter<DateTime>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DateTimeConverter(string) Initializes a new instance of the DateTimeConverter class with the specified format. public DateTimeConverter(string format) Parameters format string The format string to be used for formatting and parsing DateTime objects. Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts a JSON value to a DateTime object. public override DateTime Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The JSON reader to read from. typeToConvert Type The type to convert (should be DateTime). options JsonSerializerOptions The JSON serializer options. Returns DateTime A DateTime object parsed from the JSON value. Write(Utf8JsonWriter, DateTime, JsonSerializerOptions) Writes a DateTime value as a JSON string using the specified format. public override void Write(Utf8JsonWriter writer, DateTime value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The JSON writer to write to. value DateTime The DateTime value to be written. options JsonSerializerOptions The JSON serializer options."
  },
  "api/Innovt.Core.Serialization.Converters.html": {
    "href": "api/Innovt.Core.Serialization.Converters.html",
    "title": "Namespace Innovt.Core.Serialization.Converters | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Serialization.Converters Classes DateTimeConverter Custom JSON converter for DateTime objects with a specified format."
  },
  "api/Innovt.Core.Serialization.DeserializerFactory.html": {
    "href": "api/Innovt.Core.Serialization.DeserializerFactory.html",
    "title": "Class DeserializerFactory | Innovt Platform",
    "keywords": "Class DeserializerFactory Namespace Innovt.Core.Serialization Assembly Innovt.Core.dll Represents a factory for deserializing JSON content into objects based on their registered type mappings. public class DeserializerFactory Inheritance object DeserializerFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Instance Gets the singleton instance of the DeserializerFactory. public static DeserializerFactory Instance { get; } Property Value DeserializerFactory Methods AddMapping<T>(string) Adds a type mapping to the factory, associating a key with a specific .NET type. public DeserializerFactory AddMapping<T>(string key = null) Parameters key string The key used to identify the type mapping. If not provided, the full name of the type will be used as the key. Returns DeserializerFactory The current DeserializerFactory instance for method chaining. Type Parameters T The .NET type to be associated with the key. Deserialize(string, string) Deserializes JSON content into an object of the registered type associated with the specified key. public object Deserialize(string key, string content) Parameters key string The key associated with the registered type mapping. content string The JSON content to deserialize. Returns object The deserialized object of the registered type, or null if the key is not found or the content is empty. Deserialize<T>(string, string) Deserializes JSON content into an object of the registered type associated with the specified key. public T Deserialize<T>(string key, string content) Parameters key string The key associated with the registered type mapping. content string The JSON content to deserialize. Returns T The deserialized object of the specified type, or the default value for T if the key is not found or the content is empty. Type Parameters T The expected type of the deserialized object."
  },
  "api/Innovt.Core.Serialization.ISerializer.html": {
    "href": "api/Innovt.Core.Serialization.ISerializer.html",
    "title": "Interface ISerializer | Innovt Platform",
    "keywords": "Interface ISerializer Namespace Innovt.Core.Serialization Assembly Innovt.Core.dll Represents an interface for serializing and deserializing objects. public interface ISerializer Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods DeserializeObject<T>(string) Deserializes a serialized object of type T. T DeserializeObject<T>(string serializedObject) Parameters serializedObject string The serialized object as a string. Returns T The deserialized object of type T. Type Parameters T The type of object to deserialize. SerializeObject<T>(T) Serializes an object of type T to a string. string SerializeObject<T>(T obj) Parameters obj T The object to serialize. Returns string The serialized object as a string. Type Parameters T The type of object to serialize."
  },
  "api/Innovt.Core.Serialization.JsonFormatAttribute.html": {
    "href": "api/Innovt.Core.Serialization.JsonFormatAttribute.html",
    "title": "Class JsonFormatAttribute | Innovt Platform",
    "keywords": "Class JsonFormatAttribute Namespace Innovt.Core.Serialization Assembly Innovt.Core.dll Represents a custom JSON attribute for specifying the format of a property when serializing to JSON. [AttributeUsage(AttributeTargets.Property)] public class JsonFormatAttribute : JsonAttribute Inheritance object Attribute JsonAttribute JsonFormatAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors JsonFormatAttribute(string) Initializes a new instance of the JsonFormatAttribute class with the specified format. public JsonFormatAttribute(string format) Parameters format string The format string used to specify how the property should be formatted when serialized to JSON. Properties Format Gets the format string that specifies how the property should be formatted when serialized to JSON. public string Format { get; } Property Value string"
  },
  "api/Innovt.Core.Serialization.JsonSerializer.html": {
    "href": "api/Innovt.Core.Serialization.JsonSerializer.html",
    "title": "Class JsonSerializer | Innovt Platform",
    "keywords": "Class JsonSerializer Namespace Innovt.Core.Serialization Assembly Innovt.Core.dll Provides JSON serialization and deserialization using System.Text.Json. public class JsonSerializer : ISerializer Inheritance object JsonSerializer Implements ISerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors JsonSerializer(bool, bool, bool, IList<JsonConverter>) Initializes a new instance of the JsonSerializer class with specified options. public JsonSerializer(bool ignoreNullValues = true, bool ignoreReadOnlyProperties = true, bool propertyNameCaseInsensitive = true, IList<JsonConverter> converters = null) Parameters ignoreNullValues bool Indicates whether null values should be ignored during serialization. ignoreReadOnlyProperties bool Indicates whether read-only properties should be ignored during serialization. propertyNameCaseInsensitive bool Indicates whether property name casing should be treated as case-insensitive. converters IList<JsonConverter> A list of custom JSON converters to be used during serialization and deserialization. Methods DeserializeObject<T>(string) Deserializes a JSON string into an object of type T. public T DeserializeObject<T>(string serializedObject) Parameters serializedObject string The JSON string to deserialize. Returns T The deserialized object of type T. Type Parameters T The type of object to deserialize. SerializeObject<T>(T) Serializes an object of type T into a JSON string. public string SerializeObject<T>(T obj) Parameters obj T The object to serialize. Returns string The serialized object as a JSON string. Type Parameters T The type of object to serialize. Exceptions ArgumentNullException Thrown when the obj parameter is null."
  },
  "api/Innovt.Core.Serialization.XmlSerializer.html": {
    "href": "api/Innovt.Core.Serialization.XmlSerializer.html",
    "title": "Class XmlSerializer | Innovt Platform",
    "keywords": "Class XmlSerializer Namespace Innovt.Core.Serialization Assembly Innovt.Core.dll Provides XML serialization and deserialization using System.Xml.Serialization. public class XmlSerializer : ISerializer Inheritance object XmlSerializer Implements ISerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods DeserializeObject<T>(string) Deserializes an XML string into an object of type T. public T DeserializeObject<T>(string serializedObject) Parameters serializedObject string The XML string to deserialize. Returns T The deserialized object of type T. Type Parameters T The type of object to deserialize. SerializeObject<T>(T) Serializes an object of type T into an XML string. public string SerializeObject<T>(T obj) Parameters obj T The object to serialize. Returns string The serialized object as an XML string. Type Parameters T The type of object to serialize. SerializeObject<T>(T, Dictionary<string, string>) Serializes an object of type T into an XML string with optional namespaces. public string SerializeObject<T>(T obj, Dictionary<string, string> namespaces) Parameters obj T The object to serialize. namespaces Dictionary<string, string> A dictionary of namespaces to include in the XML serialization. Returns string The serialized object as an XML string. Type Parameters T The type of object to serialize. Exceptions Exception Thrown when there is an XML serialization error."
  },
  "api/Innovt.Core.Serialization.html": {
    "href": "api/Innovt.Core.Serialization.html",
    "title": "Namespace Innovt.Core.Serialization | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Serialization Classes DeserializerFactory Represents a factory for deserializing JSON content into objects based on their registered type mappings. JsonFormatAttribute Represents a custom JSON attribute for specifying the format of a property when serializing to JSON. JsonSerializer Provides JSON serialization and deserialization using System.Text.Json. XmlSerializer Provides XML serialization and deserialization using System.Xml.Serialization. Interfaces ISerializer Represents an interface for serializing and deserializing objects."
  },
  "api/Innovt.Core.Test.CryptographyTests.html": {
    "href": "api/Innovt.Core.Test.CryptographyTests.html",
    "title": "Class CryptographyTests | Innovt Platform",
    "keywords": "Class CryptographyTests Namespace Innovt.Core.Test Assembly Innovt.Core.Test.dll [TestFixture] public class CryptographyTests Inheritance object CryptographyTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AesDecrypt(string, string) [Test] [TestCase(\"michel borges\", \"e37306c1755548f79bfac21185d5a6ef\")] public void AesDecrypt(string plainText, string key) Parameters plainText string key string AesEncryptCryptography(string) [Test] [TestCase(\"michel borges\")] public void AesEncryptCryptography(string plainText) Parameters plainText string AesEncryptShouldThrowExceptionWhenTextIsNull() [Test] public void AesEncryptShouldThrowExceptionWhenTextIsNull() RijndaelDecrypt(string, string) [Test] [TestCase(\"michel borges\", \"e37306c1755548f79bfac21185d5a6ef\")] public void RijndaelDecrypt(string plainText, string key) Parameters plainText string key string RijndaelEncrypt(string) [Test] [TestCase(\"michel borges\")] public void RijndaelEncrypt(string plainText) Parameters plainText string"
  },
  "api/Innovt.Core.Test.DeserializerFactoryTests.html": {
    "href": "api/Innovt.Core.Test.DeserializerFactoryTests.html",
    "title": "Class DeserializerFactoryTests | Innovt Platform",
    "keywords": "Class DeserializerFactoryTests Namespace Innovt.Core.Test Assembly Innovt.Core.Test.dll public class DeserializerFactoryTests Inheritance object DeserializerFactoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Deserialize() [Test] public void Deserialize() DeserializeShouldReturnNullIfContentIsNullOrEmpty() [Test] public void DeserializeShouldReturnNullIfContentIsNullOrEmpty() DeserializeShouldReturnNullWhenHasNoMapping() [Test] public void DeserializeShouldReturnNullWhenHasNoMapping() InstanceShouldBeTheSameAfterManyCalls() [Test] public void InstanceShouldBeTheSameAfterManyCalls() InstanceShouldNotReturnNUll() [Test] public void InstanceShouldNotReturnNUll()"
  },
  "api/Innovt.Core.Test.Exceptions.BusinessExceptionTests.html": {
    "href": "api/Innovt.Core.Test.Exceptions.BusinessExceptionTests.html",
    "title": "Class BusinessExceptionTests | Innovt Platform",
    "keywords": "Class BusinessExceptionTests Namespace Innovt.Core.Test.Exceptions Assembly Innovt.Core.Test.dll Unit tests for the BusinessException class. [TestFixture] public class BusinessExceptionTests Inheritance object BusinessExceptionTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CheckCode() Verifies that the exception code and message are set correctly. [Test] public void CheckCode() CheckMessage() Verifies that the exception message is set correctly. [Test] public void CheckMessage() CheckValidationPattern() Verifies that the exception is created correctly with a list of error messages. [Test] public void CheckValidationPattern() DetailShouldBeNullWhenErrorListIsEmpty() Verifies that the exception detail is null when the error list is empty. [Test] public void DetailShouldBeNullWhenErrorListIsEmpty() MessageIsEmptyWhenErrorListIsEmpty() Verifies that the exception message is set to a default value when the error list is empty. [Test] public void MessageIsEmptyWhenErrorListIsEmpty()"
  },
  "api/Innovt.Core.Test.Exceptions.html": {
    "href": "api/Innovt.Core.Test.Exceptions.html",
    "title": "Namespace Innovt.Core.Test.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Test.Exceptions Classes BusinessExceptionTests Unit tests for the BusinessException class."
  },
  "api/Innovt.Core.Test.ExtensionsTests.html": {
    "href": "api/Innovt.Core.Test.ExtensionsTests.html",
    "title": "Class ExtensionsTests | Innovt Platform",
    "keywords": "Class ExtensionsTests Namespace Innovt.Core.Test Assembly Innovt.Core.Test.dll [TestFixture] public class ExtensionsTests Inheritance object ExtensionsTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CheckHasSpecialCharacter() [Test] public void CheckHasSpecialCharacter() CheckRemoveAccents() [Test] public void CheckRemoveAccents() ConvertDateTimeBetweenTimeZones() [Test] public void ConvertDateTimeBetweenTimeZones() ConvertDateTimeOffSetBetweenTimeZones() [Test] public void ConvertDateTimeOffSetBetweenTimeZones() PagedCollectionMap() [Test] public void PagedCollectionMap() PagedCollectionMapShouldReturnEmptyListWhenArrayIsNull() [Test] public void PagedCollectionMapShouldReturnEmptyListWhenArrayIsNull()"
  },
  "api/Innovt.Core.Test.LocalCacheTests.html": {
    "href": "api/Innovt.Core.Test.LocalCacheTests.html",
    "title": "Class LocalCacheTests | Innovt Platform",
    "keywords": "Class LocalCacheTests Namespace Innovt.Core.Test Assembly Innovt.Core.Test.dll [TestFixture] public class LocalCacheTests Inheritance object LocalCacheTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods GetValueOrCreate() [Test] public Task GetValueOrCreate() Returns Task GetValueReturnDefaultIfKeyDoesNotExist() [Test] public void GetValueReturnDefaultIfKeyDoesNotExist() GetValueThrowExceptionIfKeyIsNullOrEmpty() [Test] public void GetValueThrowExceptionIfKeyIsNullOrEmpty() GetValueWithFactoryReturnsFactoryValue() [Test] public Task GetValueWithFactoryReturnsFactoryValue() Returns Task Remove() [Test] public void Remove() SetValue() [Test] public void SetValue() SetValueThrowExceptionIfKeyIsNullOrEmpty() [Test] public void SetValueThrowExceptionIfKeyIsNullOrEmpty() SetValueWithSecondsShouldReturnNullTask() [Test] public Task SetValueWithSecondsShouldReturnNullTask() Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown()"
  },
  "api/Innovt.Core.Test.Models.A.html": {
    "href": "api/Innovt.Core.Test.Models.A.html",
    "title": "Class A | Innovt Platform",
    "keywords": "Class A Namespace Innovt.Core.Test.Models Assembly Innovt.Core.Test.dll Represents a simple class 'A' with properties for Name, LastName, and Age. public class A Inheritance object A Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Age Gets or sets the age of an individual. public int Age { get; set; } Property Value int LastName Gets or sets the last name of an individual. public string LastName { get; set; } Property Value string Name Gets or sets the first name of an individual. public string Name { get; set; } Property Value string"
  },
  "api/Innovt.Core.Test.Models.B.html": {
    "href": "api/Innovt.Core.Test.Models.B.html",
    "title": "Class B | Innovt Platform",
    "keywords": "Class B Namespace Innovt.Core.Test.Models Assembly Innovt.Core.Test.dll Represents a class 'B' with properties for Id, Role, and Document. public class B Inheritance object B Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Document Gets or sets the document information associated with an instance of class 'B'. public string Document { get; set; } Property Value string Id Gets or sets the unique identifier for an instance of class 'B'. public Guid Id { get; set; } Property Value Guid Role Gets or sets the role associated with an instance of class 'B'. public string Role { get; set; } Property Value string"
  },
  "api/Innovt.Core.Test.Models.Invoice.html": {
    "href": "api/Innovt.Core.Test.Models.Invoice.html",
    "title": "Class Invoice | Innovt Platform",
    "keywords": "Class Invoice Namespace Innovt.Core.Test.Models Assembly Innovt.Core.Test.dll Represents an invoice entity with various properties related to billing and payment information. public class Invoice : Entity<Guid> Inheritance object Entity Entity<Guid> Invoice Derived InvoiceDto Inherited Members Entity<Guid>.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties BankSlipBarCode Gets or sets the bank slip barcode. public string BankSlipBarCode { get; set; } Property Value string BidId Gets or sets the unique identifier of the associated business entity. public Guid BidId { get; set; } Property Value Guid BuyerDocument Gets or sets the document information associated with the buyer. public string BuyerDocument { get; set; } Property Value string BuyerErpId Gets or sets the ERP identifier associated with the buyer. public string BuyerErpId { get; set; } Property Value string BuyerGroupId Gets or sets the unique identifier of the buyer group. public Guid BuyerGroupId { get; set; } Property Value Guid BuyerGroupName Gets or sets the name of the buyer group. public string BuyerGroupName { get; set; } Property Value string BuyerId Gets or sets the unique identifier of the buyer. public Guid BuyerId { get; set; } Property Value Guid BuyerName Gets or sets the name of the buyer. public string BuyerName { get; set; } Property Value string Currency Gets or sets the currency. public string Currency { get; set; } Property Value string CurrencyId Gets or sets the currency identifier. public int CurrencyId { get; set; } Property Value int DaysToDue Gets or sets the number of days until the due date of the invoice. public int DaysToDue { get; set; } Property Value int Description Gets or sets the description of the invoice. public string Description { get; set; } Property Value string Discount Original values before anticipation public decimal Discount { get; set; } Property Value decimal DueDate Gets or sets the due date for payment of the invoice. public DateTime DueDate { get; set; } Property Value DateTime ErpId Gets or sets the ERP (Enterprise Resource Planning) identifier associated with the invoice. public string ErpId { get; set; } Property Value string Fine Gets or sets the fine amount. public decimal Fine { get; set; } Property Value decimal FiscalDocumentNumbers Gets or sets the fiscal document numbers associated with the invoice. public string FiscalDocumentNumbers { get; set; } Property Value string InstallmentNumber Gets or sets the installment number. public string InstallmentNumber { get; set; } Property Value string Interest Gets or sets the interest amount. public decimal Interest { get; set; } Property Value decimal IssueDate Gets or sets the date when the invoice was issued. public DateTime IssueDate { get; set; } Property Value DateTime Metadata Gets or sets metadata associated with the invoice. public string Metadata { get; set; } Property Value string NetValue Gets or sets the net value of the invoice, which represents the total value after applying discounts and taxes. public decimal NetValue { get; set; } Property Value decimal PaymentDate Gets or sets the date when the payment for the invoice was made. This property can be null if the payment has not been made yet. public DateTime? PaymentDate { get; set; } Property Value DateTime? PaymentOrderStatus Gets or sets the payment order status. public string PaymentOrderStatus { get; set; } Property Value string PaymentOrderStatusId Gets or sets the payment order status identifier. public int PaymentOrderStatusId { get; set; } Property Value int PaymentType Gets or sets the payment type. public string PaymentType { get; set; } Property Value string PaymentTypeId Gets or sets the payment type identifier. public int PaymentTypeId { get; set; } Property Value int PaymentValue Gets or sets the amount paid for the invoice. This property can be null if the payment has not been made yet. public decimal? PaymentValue { get; set; } Property Value decimal? SupplierDocument Gets or sets the document information associated with the supplier. public string SupplierDocument { get; set; } Property Value string SupplierErpId Gets or sets the ERP identifier associated with the supplier. public string SupplierErpId { get; set; } Property Value string SupplierId Gets or sets the unique identifier of the supplier. public Guid SupplierId { get; set; } Property Value Guid SupplierName Gets or sets the name of the supplier. public string SupplierName { get; set; } Property Value string Tax Gets or sets the tax amount. public decimal Tax { get; set; } Property Value decimal UpdatedAt Gets or sets the date when the invoice was last updated in the system. This property can be null if the invoice has not been updated. public DateTime? UpdatedAt { get; set; } Property Value DateTime? Value Gets or sets the total value of the invoice, including all charges, taxes, and discounts. public decimal Value { get; set; } Property Value decimal"
  },
  "api/Innovt.Core.Test.Models.InvoiceDto.html": {
    "href": "api/Innovt.Core.Test.Models.InvoiceDto.html",
    "title": "Class InvoiceDto | Innovt Platform",
    "keywords": "Class InvoiceDto Namespace Innovt.Core.Test.Models Assembly Innovt.Core.Test.dll Represents a Data Transfer Object (DTO) for an invoice with additional anticipation-related properties. public class InvoiceDto : Invoice Inheritance object Entity Entity<Guid> Invoice InvoiceDto Derived InvoiceDtoWithCustomMapper Inherited Members Invoice.BidId Invoice.ErpId Invoice.BuyerId Invoice.BuyerName Invoice.BuyerErpId Invoice.BuyerDocument Invoice.BuyerGroupId Invoice.BuyerGroupName Invoice.SupplierId Invoice.SupplierName Invoice.SupplierErpId Invoice.SupplierDocument Invoice.CurrencyId Invoice.Currency Invoice.Description Invoice.Interest Invoice.Fine Invoice.Tax Invoice.FiscalDocumentNumbers Invoice.InstallmentNumber Invoice.PaymentTypeId Invoice.PaymentType Invoice.PaymentOrderStatusId Invoice.PaymentOrderStatus Invoice.BankSlipBarCode Invoice.Metadata Invoice.DaysToDue Invoice.IssueDate Invoice.DueDate Invoice.Discount Invoice.Value Invoice.NetValue Invoice.PaymentDate Invoice.PaymentValue Invoice.UpdatedAt Entity<Guid>.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AnticipatedAt Gets or sets the date when the anticipation was processed for the invoice. This property can be null if no anticipation has occurred. public DateTime? AnticipatedAt { get; set; } Property Value DateTime? AnticipationDiscount Gets or sets the discount amount applied to the invoice due to anticipation. public decimal AnticipationDiscount { get; set; } Property Value decimal AnticipationRate Gets or sets the rate applied to calculate the anticipation discount. public decimal AnticipationRate { get; set; } Property Value decimal AnticipationRequestId Gets or sets the unique identifier of the anticipation request associated with the invoice. public Guid AnticipationRequestId { get; set; } Property Value Guid EarlyDueDate Gets or sets the early due date for payment of the invoice after anticipation. public DateTime? EarlyDueDate { get; set; } Property Value DateTime? EarlyNetValue Gets or sets the net value of the invoice after anticipation. public decimal EarlyNetValue { get; set; } Property Value decimal"
  },
  "api/Innovt.Core.Test.Models.InvoiceDtoWithCustomMapper.html": {
    "href": "api/Innovt.Core.Test.Models.InvoiceDtoWithCustomMapper.html",
    "title": "Class InvoiceDtoWithCustomMapper | Innovt Platform",
    "keywords": "Class InvoiceDtoWithCustomMapper Namespace Innovt.Core.Test.Models Assembly Innovt.Core.Test.dll public class InvoiceDtoWithCustomMapper : InvoiceDto Inheritance object Entity Entity<Guid> Invoice InvoiceDto InvoiceDtoWithCustomMapper Inherited Members InvoiceDto.AnticipationRequestId InvoiceDto.AnticipatedAt InvoiceDto.EarlyDueDate InvoiceDto.EarlyNetValue InvoiceDto.AnticipationRate InvoiceDto.AnticipationDiscount Invoice.BidId Invoice.ErpId Invoice.BuyerId Invoice.BuyerName Invoice.BuyerErpId Invoice.BuyerDocument Invoice.BuyerGroupId Invoice.BuyerGroupName Invoice.SupplierId Invoice.SupplierName Invoice.SupplierErpId Invoice.SupplierDocument Invoice.CurrencyId Invoice.Currency Invoice.Description Invoice.Interest Invoice.Fine Invoice.Tax Invoice.FiscalDocumentNumbers Invoice.InstallmentNumber Invoice.PaymentTypeId Invoice.PaymentType Invoice.PaymentOrderStatusId Invoice.PaymentOrderStatus Invoice.BankSlipBarCode Invoice.Metadata Invoice.DaysToDue Invoice.IssueDate Invoice.DueDate Invoice.Discount Invoice.Value Invoice.NetValue Invoice.PaymentDate Invoice.PaymentValue Invoice.UpdatedAt Entity<Guid>.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Test.Models.html": {
    "href": "api/Innovt.Core.Test.Models.html",
    "title": "Namespace Innovt.Core.Test.Models | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Test.Models Classes A Represents a simple class 'A' with properties for Name, LastName, and Age. B Represents a class 'B' with properties for Id, Role, and Document. Invoice Represents an invoice entity with various properties related to billing and payment information. InvoiceDto Represents a Data Transfer Object (DTO) for an invoice with additional anticipation-related properties. InvoiceDtoWithCustomMapper"
  },
  "api/Innovt.Core.Test.MultiLayerCacheServiceTests.html": {
    "href": "api/Innovt.Core.Test.MultiLayerCacheServiceTests.html",
    "title": "Class MultiLayerCacheServiceTests | Innovt Platform",
    "keywords": "Class MultiLayerCacheServiceTests Namespace Innovt.Core.Test Assembly Innovt.Core.Test.dll [TestFixture] public class MultiLayerCacheServiceTests Inheritance object MultiLayerCacheServiceTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Factory(CancellationToken) public static Task<A> Factory(CancellationToken arg) Parameters arg CancellationToken Returns Task<A> GetValueOrCreate() [Test] public Task GetValueOrCreate() Returns Task GetValueReturnDefaultIfKeyDoesNotExist() [Test] public void GetValueReturnDefaultIfKeyDoesNotExist() GetValueThrowExceptionIfKeyIsNullOrEmpty() [Test] public void GetValueThrowExceptionIfKeyIsNullOrEmpty() GetValueWithFactoryReturnsFactoryValue() [Test] public Task GetValueWithFactoryReturnsFactoryValue() Returns Task Remove() [Test] public void Remove() SetValue() [Test] public void SetValue() SetValueThrowExceptionIfKeyIsNullOrEmpty() [Test] public void SetValueThrowExceptionIfKeyIsNullOrEmpty() SetValueWithSecondsShouldReturnNullTask() [Test] public void SetValueWithSecondsShouldReturnNullTask() Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown()"
  },
  "api/Innovt.Core.Test.PasswordHelperTests.html": {
    "href": "api/Innovt.Core.Test.PasswordHelperTests.html",
    "title": "Class PasswordHelperTests | Innovt Platform",
    "keywords": "Class PasswordHelperTests Namespace Innovt.Core.Test Assembly Innovt.Core.Test.dll [TestFixture] public class PasswordHelperTests Inheritance object PasswordHelperTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods GeneratePassword() [Test] public void GeneratePassword() GeneratePasswordShouldGeneratePasswordOfLength6IfPasswordSizeIsLessThan6() [Test] public void GeneratePasswordShouldGeneratePasswordOfLength6IfPasswordSizeIsLessThan6()"
  },
  "api/Innovt.Core.Test.SimpleMapTests.html": {
    "href": "api/Innovt.Core.Test.SimpleMapTests.html",
    "title": "Class SimpleMapTests | Innovt Platform",
    "keywords": "Class SimpleMapTests Namespace Innovt.Core.Test Assembly Innovt.Core.Test.dll [TestFixture] public class SimpleMapTests Inheritance object SimpleMapTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods MapKeepPropertyDefaultIfThePropertyWasNotFoundInTheInput() [Test] public void MapKeepPropertyDefaultIfThePropertyWasNotFoundInTheInput() MapPropertyWithSameType() [Test] public void MapPropertyWithSameType() MapReturnsAvailableProperties() [Test] public void MapReturnsAvailableProperties() MapReturnsNullWhenInputIsNull() [Test] public void MapReturnsNullWhenInputIsNull() MapReturnsPropertiesThatExistsOnlyInInput() [Test] public void MapReturnsPropertiesThatExistsOnlyInInput() MapToExtension() [Test] public void MapToExtension() MapToList() [Test] public void MapToList() MapToListWhenSourceListIsNullOrEmptyReturnsEmpty() [Test] public void MapToListWhenSourceListIsNullOrEmptyReturnsEmpty() MapWithComplexInstancesValidatePropertyAmbiguity() [Test] public void MapWithComplexInstancesValidatePropertyAmbiguity() MapWithInstances() [Test] public void MapWithInstances()"
  },
  "api/Innovt.Core.Test.html": {
    "href": "api/Innovt.Core.Test.html",
    "title": "Namespace Innovt.Core.Test | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Test Classes CryptographyTests DeserializerFactoryTests ExtensionsTests LocalCacheTests MultiLayerCacheServiceTests PasswordHelperTests SimpleMapTests"
  },
  "api/Innovt.Core.Utilities.AsyncHelper.html": {
    "href": "api/Innovt.Core.Utilities.AsyncHelper.html",
    "title": "Class AsyncHelper | Innovt Platform",
    "keywords": "Class AsyncHelper Namespace Innovt.Core.Utilities Assembly Innovt.Core.dll Reference https://cpratt.co/async-tips-tricks/ public static class AsyncHelper Inheritance object AsyncHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RunSync(Func<Task>, CancellationToken) Runs an asynchronous action synchronously. public static void RunSync(Func<Task> func, CancellationToken cancellationToken = default) Parameters func Func<Task> The asynchronous action to run synchronously. cancellationToken CancellationToken An optional cancellation token for the operation. RunSync<TResult>(Func<Task<TResult>>, CancellationToken) Runs an asynchronous function synchronously and returns its result. public static TResult RunSync<TResult>(Func<Task<TResult>> func, CancellationToken cancellationToken = default) Parameters func Func<Task<TResult>> The asynchronous function to run synchronously. cancellationToken CancellationToken An optional cancellation token for the operation. Returns TResult The result of the asynchronous function. Type Parameters TResult The type of the result returned by the asynchronous function."
  },
  "api/Innovt.Core.Utilities.Check.html": {
    "href": "api/Innovt.Core.Utilities.Check.html",
    "title": "Class Check | Innovt Platform",
    "keywords": "Class Check Namespace Innovt.Core.Utilities Assembly Innovt.Core.dll Provides static methods for checking arguments and values. public static class Check Inheritance object Check Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AreEqual(decimal, decimal, string) Checks if two decimal values are equal; otherwise, throws a BusinessException with the specified message. public static void AreEqual(decimal value, decimal value2, string message) Parameters value decimal The first decimal value to compare. value2 decimal The second decimal value to compare. message string The message to include in the exception if the values are not equal. Exceptions BusinessException Thrown if the two decimal values are not equal. AreEqual(int, int, string) Checks if two long values are equal; otherwise, throws a BusinessException with the specified message. public static void AreEqual(int value, int value2, string message) Parameters value int The first long value to compare. value2 int The second long value to compare. message string The message for the exception if the values are not equal. Exceptions BusinessException Thrown if the values are not equal, with the specified message. AreEqual(long, long, string) Checks if two decimal values are equal; otherwise, throws a BusinessException with the specified message. public static void AreEqual(long value, long value2, string message) Parameters value long The first decimal value to compare. value2 long The second decimal value to compare. message string The message for the exception if the values are not equal. Exceptions BusinessException Thrown if the values are not equal, with the specified message. AreEqual(string, string, string) Checks if two integer values are equal; otherwise, throws a BusinessException with the specified message. public static void AreEqual(string value, string value2, string message) Parameters value string The first integer value to compare. value2 string The second integer value to compare. message string The message for the exception if the values are not equal. Exceptions BusinessException Thrown if the values are not equal, with the specified message. AreNotEqual(int, int, string) Checks if two integer values are not equal; otherwise, throws a BusinessException with the specified message. public static void AreNotEqual(int value, int value2, string message) Parameters value int The first integer value to compare. value2 int The second integer value to compare. message string The message for the exception if the values are equal. Exceptions BusinessException Thrown if the values are equal, with the specified message. AreNotEqual(long, long, string) Checks if two long values are not equal; otherwise, throws a BusinessException with the specified message. public static void AreNotEqual(long value, long value2, string message) Parameters value long The first long value to compare. value2 long The second long value to compare. message string The message for the exception if the values are equal. Exceptions BusinessException Thrown if the values are equal, with the specified message. AreNotEqual(string, string, string) Checks if two strings are not equal while ignoring case sensitivity; otherwise, throws a BusinessException with the specified message. public static void AreNotEqual(string value, string value2, string message) Parameters value string The first string to compare. value2 string The second string to compare. message string The message for the exception if the strings are equal. Exceptions BusinessException Thrown if the strings are equal, ignoring case sensitivity, with the specified message. NotEmpty(string, string) Checks if the specified string is not null and not empty; otherwise, throws an ArgumentNullException or ArgumentException. public static string NotEmpty(string value, string parameterName = null) Parameters value string The string to check for null and emptiness. parameterName string The name of the parameter associated with the string. Returns string The original string if it is not null and not empty. Exceptions ArgumentNullException Thrown if the string is null. ArgumentException Thrown if the string is empty. NotEmpty<T>(IReadOnlyList<T>, string) Checks if the specified collection is not null and not empty; otherwise, throws an ArgumentException . public static IReadOnlyList<T> NotEmpty<T>(IReadOnlyList<T> value, string parameterName) Parameters value IReadOnlyList<T> The collection to check for null and emptiness. parameterName string The name of the parameter associated with the collection. Returns IReadOnlyList<T> The original collection if it is not null and not empty. Type Parameters T The type of the collection elements. Exceptions ArgumentNullException Thrown if the collection is null. ArgumentException Thrown if the collection is empty. NotLessThanZero(int, string) Checks if the specified integer value is greater than zero; otherwise, throws a BusinessException. public static int NotLessThanZero(int value, string parameterName) Parameters value int The integer value to check. parameterName string The name of the parameter associated with the value. Returns int Zero if the value is greater than zero. Exceptions BusinessException Thrown if the value is less than or equal to zero. NotLessThanZero(int?, string) Checks if the specified nullable integer value is greater than zero; otherwise, throws a BusinessException. public static int NotLessThanZero(int? value, string parameterName) Parameters value int? The nullable integer value to check. parameterName string The name of the parameter associated with the value. Returns int Zero if the value is greater than zero. Exceptions BusinessException Thrown if the value is less than or equal to zero. NotLessThanZero<T>(params T[]) Checks if the specified array of integers are greater than zero; otherwise, throws a BusinessException. public static void NotLessThanZero<T>(params T[] value) Parameters value T[] The array of values to check. Type Parameters T The type of the array elements, which must be convertible to an integer. Exceptions BusinessException Thrown if any of the values is less than or equal to zero. NotNullWithBusinessException<T>(T, string) Checks if the specified value is not null; otherwise, throws a BusinessException with the specified message. public static T NotNullWithBusinessException<T>(T value, string message) Parameters value T The value to check for null. message string The message for the exception if the value is null. Returns T The original value if it is not null. Type Parameters T The type of the value to check. Exceptions BusinessException Thrown if the value is null, with the specified message. NotNullWithCriticalException<T>(T, string) Checks if the specified value is not null; otherwise, throws a CriticalException with the specified message. public static T NotNullWithCriticalException<T>(T value, string message) Parameters value T The value to check for null. message string The message for the exception if the value is null. Returns T The original value if it is not null. Type Parameters T The type of the value to check. Exceptions CriticalException Thrown if the value is null, with the specified message. NotNull<T>(T, string) Checks if the specified value is not null; otherwise, throws an ArgumentNullException. public static T NotNull<T>(T value, string parameterName) Parameters value T The value to check for null. parameterName string The name of the parameter associated with the value. Returns T The original value if it is not null. Type Parameters T The type of the value to check. Exceptions ArgumentNullException Thrown if the value is null. NullButNotEmpty(string, string) Checks if the specified string is null but not empty; otherwise, throws an ArgumentException. public static string NullButNotEmpty(string value, string parameterName) Parameters value string The string to check for null but not emptiness. parameterName string The name of the parameter associated with the string. Returns string The original string if it is not null but not empty. Exceptions ArgumentException Thrown if the string is null or empty."
  },
  "api/Innovt.Core.Utilities.ConstantClass.html": {
    "href": "api/Innovt.Core.Utilities.ConstantClass.html",
    "title": "Class ConstantClass | Innovt Platform",
    "keywords": "Class ConstantClass Namespace Innovt.Core.Utilities Assembly Innovt.Core.dll Represents a base class for constants with a string value. public class ConstantClass Inheritance object ConstantClass Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ConstantClass(string) Initializes a new instance of the ConstantClass class with the specified value. protected ConstantClass(string value) Parameters value string The constant value as a string. Properties Value Gets the constant value as a string. public string Value { get; } Property Value string Methods Equals(ConstantClass) Determines whether this instance of ConstantClass is equal to another ConstantClass by comparing their string values. public virtual bool Equals(ConstantClass obj) Parameters obj ConstantClass The ConstantClass to compare with this instance. Returns bool true if the objects are equal; otherwise, false. Equals(object) Determines whether this instance of ConstantClass is equal to another object by comparing their string values. public override bool Equals(object obj) Parameters obj object The object to compare with this instance. Returns bool true if the objects are equal; otherwise, false. Equals(string) Compares a ConstantClass instance and a string for equality by comparing their string values. protected virtual bool Equals(string value) Parameters value string Returns bool true if the ConstantClass and string are equal; otherwise, false. GetHashCode() Returns the hash code for this instance of ConstantClass. public override int GetHashCode() Returns int A hash code for the current object. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Operators operator ==(ConstantClass, ConstantClass) Compares a ConstantClass instance and a string for equality by comparing their string values. public static bool operator ==(ConstantClass a, ConstantClass b) Parameters a ConstantClass The ConstantClass to compare. b ConstantClass The string to compare. Returns bool true if the ConstantClass and string are equal; otherwise, false. operator ==(ConstantClass, string) Compares a string and a ConstantClass instance for equality by comparing their string values. public static bool operator ==(ConstantClass a, string b) Parameters a ConstantClass The string to compare. b string The ConstantClass to compare. Returns bool true if the string and ConstantClass are equal; otherwise, false. operator ==(string, ConstantClass) Compares two ConstantClass instances for inequality by comparing their string values. public static bool operator ==(string a, ConstantClass b) Parameters a string The first ConstantClass to compare. b ConstantClass The second ConstantClass to compare. Returns bool true if the two ConstantClass instances are not equal; otherwise, false. implicit operator string(ConstantClass) Implicitly converts a ConstantClass instance to a string by returning its string value. public static implicit operator string(ConstantClass value) Parameters value ConstantClass The ConstantClass instance to convert. Returns string The string value of the ConstantClass instance. operator !=(ConstantClass, ConstantClass) Compares a ConstantClass instance and a string for inequality by comparing their string values. public static bool operator !=(ConstantClass a, ConstantClass b) Parameters a ConstantClass The ConstantClass to compare. b ConstantClass The string to compare. Returns bool true if the ConstantClass and string are not equal; otherwise, false. operator !=(ConstantClass, string) Compares a string and a ConstantClass instance for inequality by comparing their string values. public static bool operator !=(ConstantClass a, string b) Parameters a ConstantClass The string to compare. b string The ConstantClass to compare. Returns bool true if the string and ConstantClass are not equal; otherwise, false. operator !=(string, ConstantClass) Compares a string and a ConstantClass instance for inequality by comparing their string values. public static bool operator !=(string a, ConstantClass b) Parameters a string The string to compare. b ConstantClass The ConstantClass to compare. Returns bool true if the string and ConstantClass are not equal; otherwise, false."
  },
  "api/Innovt.Core.Utilities.Cryptography.html": {
    "href": "api/Innovt.Core.Utilities.Cryptography.html",
    "title": "Class Cryptography | Innovt Platform",
    "keywords": "Class Cryptography Namespace Innovt.Core.Utilities Assembly Innovt.Core.dll Provides methods for cryptographic operations, including hashing and encryption. public static class Cryptography Inheritance object Cryptography Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AesDecrypt(string, string) Decrypts an encrypted string using the AES algorithm with a specified key. public static string AesDecrypt(string encryptedText, string keyString) Parameters encryptedText string The encrypted string to be decrypted. keyString string The key for AES decryption. Returns string The decrypted plaintext string. AesEncrypt(string, string) Encrypts a plaintext string using the AES algorithm with a specified key. public static string AesEncrypt(string plainText, string keyString) Parameters plainText string The plaintext string to be encrypted. keyString string The key for AES encryption. Returns string The encrypted string. Md5Hash(string) Computes the MD5 hash of a given plaintext password. public static string Md5Hash(this string plainPassword) Parameters plainPassword string The plaintext password to be hashed. Returns string The MD5 hash of the plaintext password. RijndaelDecrypt(string, string) Decrypts an encrypted string using the Rijndael algorithm with a specified key. public static string RijndaelDecrypt(string encryptedText, string keyString) Parameters encryptedText string The encrypted string to be decrypted. keyString string The key for Rijndael decryption. Returns string The decrypted plaintext string. RijndaelEncrypt(string, string) Encrypts a plaintext string using the Rijndael algorithm with a specified key. public static string RijndaelEncrypt(string plainText, string keyString) Parameters plainText string The plaintext string to be encrypted. keyString string The key for Rijndael encryption. Returns string The encrypted string. ShaHash(string, string) Computes the SHA-256 hash of a given plaintext password with an optional salt. public static string ShaHash(this string plainPassword, string salt = \"\") Parameters plainPassword string The plaintext password to be hashed. salt string An optional salt value to add to the plaintext before hashing. Returns string The SHA-256 hash of the plaintext password."
  },
  "api/Innovt.Core.Utilities.Extensions.html": {
    "href": "api/Innovt.Core.Utilities.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions Namespace Innovt.Core.Utilities Assembly Innovt.Core.dll Provides extension methods for various data types and operations. public static class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertToStringArray(int) Converts an integer value to a string array containing numbers from 0 to the specified value. public static string[] ConvertToStringArray(this int value) Parameters value int The integer value specifying the upper bound of the array. Returns string[] An array of strings containing numbers from 0 to the specified value. CopyTo(Stream, Stream) Copies data from one stream to another. public static void CopyTo(Stream src, Stream dest) Parameters src Stream The source stream to copy from. dest Stream The destination stream to copy to. ExtractCoordinates(string, char) Extracts latitude and longitude coordinates from a string. public static (long Latitude, long Longitude) ExtractCoordinates(this string str, char splittedBy = ';') Parameters str string The string containing coordinates. splittedBy char The character used to split latitude and longitude values. Returns (long Latitude, long Longitude) A tuple containing latitude and longitude values. FormatToCurrency(decimal) Formats a decimal value as currency. public static string FormatToCurrency(this decimal value) Parameters value decimal The decimal value to format. Returns string A string representation of the decimal value in currency format. FormatToExtensionDateTime(DateTimeOffset) Formats a DateTimeOffset as a human-readable date and time string. public static string FormatToExtensionDateTime(this DateTimeOffset value) Parameters value DateTimeOffset The DateTimeOffset to format. Returns string A string representation of the DateTimeOffset in a custom format. FormatToPeriod(DateTime, DateTime, CultureInfo) Formats a date period between two DateTimes as a string. public static string FormatToPeriod(this DateTime startDate, DateTime endDate, CultureInfo cultureInfo = null) Parameters startDate DateTime The start date of the period. endDate DateTime The end date of the period. cultureInfo CultureInfo Optional CultureInfo for formatting. Defaults to null. Returns string A string representing the formatted date period. FormatToPeriod(DateTimeOffset, DateTimeOffset, CultureInfo) Formats a date period between two DateTimeOffset instances as a string, considering culture information. public static string FormatToPeriod(this DateTimeOffset startDate, DateTimeOffset endDate, CultureInfo cultureInfo = null) Parameters startDate DateTimeOffset The start date of the period. endDate DateTimeOffset The end date of the period. cultureInfo CultureInfo Optional CultureInfo for formatting. Defaults to null. Returns string A string representing the formatted date period. FormatToSimpleDateTime(DateTimeOffset) Formats a DateTimeOffset as a simple date and time string. public static string FormatToSimpleDateTime(this DateTimeOffset value) Parameters value DateTimeOffset The DateTimeOffset to format. Returns string A string representation of the DateTimeOffset in a simple format. FromByteArray<T>(byte[]) Deserializes a byte array into an object of the specified type. public static T FromByteArray<T>(this byte[] data) Parameters data byte[] The byte array containing serialized data. Returns T The deserialized object of type T. Type Parameters T The type of object to deserialize into. FromUnixTimestamp(double) Converts a Unix timestamp (seconds since the Unix epoch) to a DateTime. public static DateTime FromUnixTimestamp(this double unixTimestamp) Parameters unixTimestamp double The Unix timestamp to convert. Returns DateTime A DateTime representing the converted date and time. GetMimeType(string) Returns a mimetype based on the file extension public static string GetMimeType(this string fileName) Parameters fileName string Returns string IsGuidEmpty(Guid) Determines whether the specified Guid is empty. public static bool IsGuidEmpty(this Guid id) Parameters id Guid The Guid to check for emptiness. Returns bool True if the Guid is empty; otherwise, false. IsGuidNUllOrEmpty(Guid?) Determines whether the specified nullable Guid is null or empty. public static bool IsGuidNUllOrEmpty(this Guid? id) Parameters id Guid? The nullable Guid to check for null or emptiness. Returns bool True if the Guid is null or empty; otherwise, false. IsLessThanOrEqualToZero(double) Determines whether the specified double is less than or equal to zero. public static bool IsLessThanOrEqualToZero(this double id) Parameters id double The double to check. Returns bool True if the double is less than or equal to zero; otherwise, false. IsLessThanOrEqualToZero(int) Determines whether the specified integer is less than or equal to zero. public static bool IsLessThanOrEqualToZero(this int id) Parameters id int The integer to check. Returns bool True if the integer is less than or equal to zero; otherwise, false. IsLessThanOrEqualToZero(long) Determines whether the specified long integer is less than or equal to zero. public static bool IsLessThanOrEqualToZero(this long id) Parameters id long The long integer to check. Returns bool True if the long integer is less than or equal to zero; otherwise, false. IsLessThanOrEqualToZero(int?) Determines whether the specified nullable integer is null or less than or equal to zero. public static bool IsLessThanOrEqualToZero(this int? id) Parameters id int? The nullable integer to check. Returns bool True if the integer is null or less than or equal to zero; otherwise, false. IsNull(object) Determines whether the specified object is null. public static bool IsNull(this object obj) Parameters obj object The object to check for null. Returns bool True if the object is null; otherwise, false. IsPrimitiveType(Type) Determines whether the specified type is a primitive data type. public static bool IsPrimitiveType(this Type type) Parameters type Type The Type to check. Returns bool True if the type is a primitive data type; otherwise, false. LastDayOfMonth(DateTimeOffset) Returns the last day of the month for a given DateTimeOffset. public static DateTimeOffset LastDayOfMonth(this DateTimeOffset date) Parameters date DateTimeOffset The DateTimeOffset for which to find the last day of the month. Returns DateTimeOffset The DateTimeOffset representing the last day of the month. MaskCreditCard(string) Masks the credit card number by replacing the middle digits with asterisks. public static string MaskCreditCard(this string number) Parameters number string The credit card number to mask. Returns string The masked credit card number. MillisecondToDateTime(double) Converts a double value representing milliseconds since the Unix epoch to a DateTimeOffset. public static DateTimeOffset? MillisecondToDateTime(this double fromSeconds) Parameters fromSeconds double The double value representing milliseconds since the Unix epoch. Returns DateTimeOffset? A DateTimeOffset representing the converted date and time. OnlyDate(DateTimeOffset) Returns a DateTimeOffset with the same date as the input DateTimeOffset but with the time set to midnight (00:00:00). public static DateTimeOffset OnlyDate(this DateTimeOffset now) Parameters now DateTimeOffset The input DateTimeOffset. Returns DateTimeOffset A DateTimeOffset with the same date and midnight time. StartOfWeek(DateTimeOffset, DayOfWeek) Calculates the start of the week for a given DateTimeOffset based on the specified DayOfWeek. public static DateTimeOffset StartOfWeek(this DateTimeOffset dt, DayOfWeek startOfWeek) Parameters dt DateTimeOffset The DateTimeOffset for which to find the start of the week. startOfWeek DayOfWeek The DayOfWeek that defines the start of the week. Returns DateTimeOffset The DateTimeOffset representing the start of the week. ToBase64(Stream) Converts a stream to a base 64 string public static string ToBase64(this Stream stream) Parameters stream Stream Returns string ToBrazilianTimeZone(DateTime) Converts a DateTime to the Brazilian time zone (UTC-3). public static DateTime ToBrazilianTimeZone(this DateTime date) Parameters date DateTime The DateTime to convert. Returns DateTime The DateTime converted to the Brazilian time zone. ToDataUriBase64(Stream, string) Converts a string to a uri base 64 pattern public static string ToDataUriBase64(this Stream stream, string mimeType) Parameters stream Stream The Stream file. mimeType string The stream mimeType Returns string ToStringOrDefault(object) Converts the specified object to a string or returns an empty string if the object is null. public static string ToStringOrDefault(this object obj) Parameters obj object The object to convert to a string. Returns string The string representation of the object or an empty string if the object is null. ToTimeZone(DateTime, TimeSpan, TimeSpan) Converts one timezone to another using the offset difference. public static DateTime ToTimeZone(this DateTime sourceDateTime, TimeSpan sourceOffset, TimeSpan targetOffset) Parameters sourceDateTime DateTime The datetime without timezone sourceOffset TimeSpan The offset from the source targetOffset TimeSpan The final offset. Returns DateTime A DateTime with the difference. ToTimeZone(DateTimeOffset, TimeSpan) Converts one timezone to another using the offset difference. public static DateTime ToTimeZone(this DateTimeOffset sourceDateTime, TimeSpan targetOffset) Parameters sourceDateTime DateTimeOffset The datetime without timezone targetOffset TimeSpan The final offset. Returns DateTime A DateTime with the difference. ToUnixTimestamp(DateTime) Converts a DateTime to a Unix timestamp (seconds since the Unix epoch). public static double ToUnixTimestamp(this DateTime dateTime) Parameters dateTime DateTime The DateTime to convert. Returns double A double representing the Unix timestamp. ToUnixTimestamp(DateTimeOffset) Converts a DateTimeOffset to a Unix timestamp (seconds since the Unix epoch). public static double ToUnixTimestamp(this DateTimeOffset dateTime) Parameters dateTime DateTimeOffset The DateTimeOffset to convert. Returns double A double representing the Unix timestamp. ToYesNo(bool) Converts a boolean value to a \"Sim\" (Yes) or \"Não\" (No) string representation. public static string ToYesNo(this bool value) Parameters value bool The boolean value to convert. Returns string \"Sim\" if the value is true; otherwise, \"Não\". Unzip(byte[]) Decompresses a compressed byte array using GZip compression into a string. public static string Unzip(this byte[] bytes) Parameters bytes byte[] The compressed byte array to decompress. Returns string The decompressed string. Zip(byte[]) Compresses a byte array using GZip compression. public static byte[] Zip(this byte[] bytes) Parameters bytes byte[] The byte array to compress. Returns byte[] The compressed byte array. Zip(string) Compresses a string into a byte array using GZip compression. public static byte[] Zip(this string str) Parameters str string The string to compress. Returns byte[] The compressed byte array."
  },
  "api/Innovt.Core.Utilities.Mapper.SimpleMapper.html": {
    "href": "api/Innovt.Core.Utilities.Mapper.SimpleMapper.html",
    "title": "Class SimpleMapper | Innovt Platform",
    "keywords": "Class SimpleMapper Namespace Innovt.Core.Utilities.Mapper Assembly Innovt.Core.dll Provides simple object mapping functionality between two objects of different types. public static class SimpleMapper Inheritance object SimpleMapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MapToList<T1>(IEnumerable<object>) Extension method to map object list to another object list public static IList<T1> MapToList<T1>(this IEnumerable<object> inputInstance) where T1 : class Parameters inputInstance IEnumerable<object> The list that you want to convert. Returns IList<T1> Type Parameters T1 The final type MapTo<T1>(object) Extension method to map object to another object public static T1 MapTo<T1>(this object inputInstance) where T1 : class Parameters inputInstance object The instance that you want to map Returns T1 Type Parameters T1 The final type Map<T1, T2>(T1) Maps the properties from the input object to a new instance of the output object type. public static T2 Map<T1, T2>(T1 input) where T1 : class Parameters input T1 The input object to map from. Returns T2 A new instance of the output object type with properties mapped from the input object. Type Parameters T1 The type of the input object. T2 The type of the output object. Map<T1, T2>(T1, T2) Maps the properties from the input object to the provided output object instance. public static void Map<T1, T2>(T1 inputInstance, T2 outputInstance) where T1 : class Parameters inputInstance T1 The input object to map from. outputInstance T2 The output object to map to. Type Parameters T1 The type of the input object. T2 The type of the output object."
  },
  "api/Innovt.Core.Utilities.Mapper.html": {
    "href": "api/Innovt.Core.Utilities.Mapper.html",
    "title": "Namespace Innovt.Core.Utilities.Mapper | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Utilities.Mapper Classes SimpleMapper Provides simple object mapping functionality between two objects of different types."
  },
  "api/Innovt.Core.Utilities.PasswordHelper.html": {
    "href": "api/Innovt.Core.Utilities.PasswordHelper.html",
    "title": "Class PasswordHelper | Innovt Platform",
    "keywords": "Class PasswordHelper Namespace Innovt.Core.Utilities Assembly Innovt.Core.dll Provides utility methods for handling password hashing and validation. public static class PasswordHelper Inheritance object PasswordHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GeneratePassword(int) Generates a random password of specified length using cryptographic randomness to ensure security. public static string GeneratePassword(int passwordLength) Parameters passwordLength int (int): The desired length of the generated password. If the specified length is less than 6, the method defaults to a minimum length of 6 to ensure a reasonable level of security. Returns string (string) A randomly generated password consisting of characters chosen from a predefined set. HashPassword(string) Hashes a plain text password using a randomly generated salt and returns both the hashed password and the salt. public static (string password, string salt) HashPassword(string plainPassword) Parameters plainPassword string The plain text password to hash. Returns (string bucket, string fileKey) A tuple containing the hashed password and the salt used. HashPassword(string, string) Hashes a plain text password using the provided salt. public static string HashPassword(string plainPassword, string salt) Parameters plainPassword string The plain text password to hash. salt string The salt used for hashing the password. Returns string The hashed password as a string. IsValid(string, string, string) Checks if a decoded password matches its hashed representation using the provided salt. public static bool IsValid(string decodedPassword, string hashedPassword, string salt) Parameters decodedPassword string The plain text password to validate. hashedPassword string The hashed password to compare against. salt string The salt used for hashing the password. Returns bool True if the decoded password matches the hashed password; otherwise, false. RandomSalt() Generates a random salt and returns it as a Base64-encoded string. public static string RandomSalt() Returns string A Base64-encoded salt."
  },
  "api/Innovt.Core.Utilities.StopWatchHelper.html": {
    "href": "api/Innovt.Core.Utilities.StopWatchHelper.html",
    "title": "Class StopWatchHelper | Innovt Platform",
    "keywords": "Class StopWatchHelper Namespace Innovt.Core.Utilities Assembly Innovt.Core.dll A helper class for measuring and logging the execution time of an action using a stopwatch. public class StopWatchHelper : IDisposable Inheritance object StopWatchHelper Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors StopWatchHelper(ILogger, string) Initializes a new instance of the StopWatchHelper class with a logger and an action description. public StopWatchHelper(ILogger logger, string action) Parameters logger ILogger The logger used to log the elapsed time. action string A description of the action being measured. Methods Dispose() Releases the resources used by the StopWatchHelper instance and logs the elapsed time. public void Dispose() Dispose(bool) Releases the resources used by the StopWatchHelper instance and logs the elapsed time. protected virtual void Dispose(bool disposing) Parameters disposing bool True if called from the Dispose() method, false if called from the finalizer. ~StopWatchHelper() Finalizes an instance of the StopWatchHelper class. protected ~StopWatchHelper()"
  },
  "api/Innovt.Core.Utilities.StringExtensions.html": {
    "href": "api/Innovt.Core.Utilities.StringExtensions.html",
    "title": "Class StringExtensions | Innovt Platform",
    "keywords": "Class StringExtensions Namespace Innovt.Core.Utilities Assembly Innovt.Core.dll Provides a collection of extension methods for string manipulation and validation. public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyQuotes(string) Encloses a string in double quotes if it contains spaces. public static string ApplyQuotes(this string value) Parameters value string The string to enclose in double quotes. Returns string The original string if it does not contain spaces; otherwise, the string enclosed in double quotes. ClearMask(string) Removes specified special characters from a string. public static string ClearMask(this string value) Parameters value string The string to remove special characters from. Returns string The string with specified special characters removed. FormatCelPhone(string) Formats a string as a cell phone number with a mask (e.g., \"(00)00000-0000\"). public static string FormatCelPhone(this string celPhone) Parameters celPhone string The string to format as a cell phone number. Returns string The formatted cell phone number string or the original string if it is null or empty. FormatCnpj(string) Formats a string as a CNPJ (Cadastro Nacional da Pessoa Jurídica) number with a mask (e.g., \"00.000.000/0000-00\"). public static string FormatCnpj(this string cnpj) Parameters cnpj string The string to format as a CNPJ number. Returns string The formatted CNPJ string or null if the input is null or empty. FormatCoordinate(long) You can use this method to forma DD stardand Latitude or Longitude public static string FormatCoordinate(this long value) Parameters value long Returns string FormatCpf(string) Formats a string as a CPF (Cadastro de Pessoas Físicas) number with a mask (e.g., \"000.000.000-00\"). public static string FormatCpf(this string cpf) Parameters cpf string The string to format as a CPF. Returns string The formatted CPF string or the original string if it is null or empty. FormatPhoneNumber(string) Formats a string as a phone number with a mask (e.g., \"(00)000-0000\"). public static string FormatPhoneNumber(this string phoneNumber) Parameters phoneNumber string The string to format as a phone number. Returns string The formatted phone number string or the original string if it is null or empty. FormatZipCode(string) Formats a string as a zip code with a mask (e.g., \"00000-000\"). public static string FormatZipCode(this string cep) Parameters cep string The string to format as a zip code. Returns string The formatted zip code string or the original string if it is null or empty. FromBase64(string, Encoding) Decode your string from Base64 public static string FromBase64(this string toDecode, Encoding encoding = null) Parameters toDecode string The string to decode encoding Encoding Optional and will be ASCII if null Returns string GetValueOrDefault(string, string) Gets the value of a string or a default value if the string is null or empty. public static string GetValueOrDefault(this string str, string defaultValue = null) Parameters str string The string to check. defaultValue string The default value to return if the string is null or empty (optional). Returns string The original string if it is not null or empty; otherwise, the default value if provided; otherwise, an empty string. HasSpecialCharacter(string) Check is a string has special characters public static bool HasSpecialCharacter(this string str) Parameters str string Returns bool IsCnpj(string) Determines whether the string is a valid CNPJ (Cadastro Nacional da Pessoa Jurídica) number. public static bool IsCnpj(this string cnpj) Parameters cnpj string The string to validate as a CNPJ number. Returns bool True if the string is a valid CNPJ number; otherwise, false. IsCpf(string) Determines whether the string is a valid CPF (Cadastro de Pessoas Físicas) number. public static bool IsCpf(this string value) Parameters value string The string to validate as a CPF number. Returns bool True if the string is a valid CPF number; otherwise, false. IsEmail(string) Determines whether the string represents a valid email address. public static bool IsEmail(this string value) Parameters value string The string to validate as an email address. Returns bool True if the string is a valid email address; otherwise, false. IsEmpty(Guid) Determines whether a Guid is empty (all zeros). public static bool IsEmpty(this Guid yourGuid) Parameters yourGuid Guid The Guid to check. Returns bool True if the Guid is empty; otherwise, false. IsNotEmpty(Guid) Determines whether a Guid is not empty (contains non-zero values). public static bool IsNotEmpty(this Guid yourGuid) Parameters yourGuid Guid The Guid to check. Returns bool True if the Guid is not empty; otherwise, false. IsNotNullOrEmpty(Guid?) Determines whether a nullable Guid is not null or empty. public static bool IsNotNullOrEmpty(this Guid? yourGuid) Parameters yourGuid Guid? The nullable Guid to check. Returns bool True if the nullable Guid is not null or empty; otherwise, false. IsNotNullOrEmpty(string) Determines whether a string is not null, empty, or consists only of white-space characters. public static bool IsNotNullOrEmpty(this string str) Parameters str string The string to check. Returns bool True if the string is not null, not empty, and not consisting only of white-space characters; otherwise, false. IsNullOrEmpty(Guid?) Determines whether a nullable Guid is null or empty. public static bool IsNullOrEmpty(this Guid? yourGuid) Parameters yourGuid Guid? The nullable Guid to check. Returns bool True if the nullable Guid is null or empty; otherwise, false. IsNullOrEmpty(string) Determines whether a string is null, empty, or consists only of white-space characters. public static bool IsNullOrEmpty(this string str) Parameters str string The string to check. Returns bool True if the string is null, empty, or consists only of white-space characters; otherwise, false. IsNumber(string) Determines whether the string consists of numeric characters only. public static bool IsNumber(this string value) Parameters value string The string to validate as a number. Returns bool True if the string consists of numeric characters only; otherwise, false. MaskEmail(string) Will mask an email using this format mich***@gmail.com public static string MaskEmail(this string email) Parameters email string The email that you want to mask Returns string mich***@gmail.com NormalizeText(string) Normalizes a string by removing accents, special characters, and trimming whitespace. public static string NormalizeText(this string str) Parameters str string The string to normalize. Returns string The normalized string. OnlyNumber(string) Removes all non-numeric characters from a string. public static string OnlyNumber(this string value) Parameters value string The string to remove non-numeric characters from. Returns string The string containing only numeric characters. RemoveAccents(string) Removes accents from a string. public static string RemoveAccents(this string str) Parameters str string The string to remove accents from. Returns string The string with accents removed. RemoveSpecialCharacter(string) Removes all special characters from a string. public static string RemoveSpecialCharacter(this string str) Parameters str string The string to remove special characters from. Returns string The string with special characters replaced by spaces. SmartTrim(string) Trims leading and trailing white-space characters from a string. public static string SmartTrim(this string str) Parameters str string The string to trim. Returns string The trimmed string or null if the input string is null. ToBase64(string, Encoding) Encode your string to Base64 public static string ToBase64(this string toEncode, Encoding encoding = null) Parameters toEncode string The String to encode encoding Encoding Optional and will be ASCII if null Returns string ToBoolean(string, bool) Converts a string to a boolean, using a specified default value if the string is null or empty. public static bool ToBoolean(this string str, bool defaultValue = false) Parameters str string The string to convert to a boolean. defaultValue bool The default value to return if the string is null or empty (optional). Returns bool The boolean value of the string, or the default value if the string is null or empty. ToBoolean(string, bool?) Converts a string to a boolean value, using a specified default value if the string is null or empty. public static bool? ToBoolean(this string str, bool? defaultValue = null) Parameters str string The string to convert to a boolean. defaultValue bool? The default value to return if the string is null or empty (optional). Returns bool? The boolean value of the string if it represents a valid boolean; otherwise, the default value. ToCamelCase(string) Converts a string to camel case by applying title case. public static string ToCamelCase(this string str) Parameters str string The string to convert to camel case. Returns string The string in camel case format. ToDateTime(string, DateTime) Converts a string to a DateTime, using a specified default value if the string is null or empty. public static DateTime ToDateTime(this string str, DateTime defaultValue = default) Parameters str string The string to convert to a DateTime. defaultValue DateTime The default value to return if the string is null or empty (optional). Returns DateTime The DateTime value of the string, or the default value if the string is null or empty. ToDateTime(string, DateTime?) Converts a string to a nullable DateTime, using a specified default value if the string is null or empty. public static DateTime? ToDateTime(this string str, DateTime? defaultValue = null) Parameters str string The string to convert to a nullable DateTime. defaultValue DateTime? The default value to return if the string is null or empty (optional). Returns DateTime? The nullable DateTime value of the string, or the default value if the string is null or empty. ToDateTimeOffset(string, DateTimeOffset) Converts a string to a DateTimeOffset, using a specified default value if the string is null or empty. public static DateTimeOffset ToDateTimeOffset(this string str, DateTimeOffset defaultValue = default) Parameters str string The string to convert to a DateTimeOffset. defaultValue DateTimeOffset The default value to return if the string is null or empty (optional). Returns DateTimeOffset The DateTimeOffset value of the string, or the default value if the string is null or empty. ToDateTimeOffset(string, DateTimeOffset?) Converts a string to a nullable DateTimeOffset, using a specified default value if the string is null or empty. public static DateTimeOffset? ToDateTimeOffset(this string str, DateTimeOffset? defaultValue = null) Parameters str string The string to convert to a nullable DateTimeOffset. defaultValue DateTimeOffset? The default value to return if the string is null or empty (optional). Returns DateTimeOffset? The nullable DateTimeOffset value of the string, or the default value if the string is null or empty. ToDecimal(string, decimal) Converts a string to a decimal, using a specified default value if the string is null or empty. public static decimal ToDecimal(this string str, decimal defaultValue = 0) Parameters str string The string to convert to a decimal. defaultValue decimal The default value to return if the string is null or empty (optional). Returns decimal The decimal value of the string, or the default value if the string is null or empty. ToDecimal(string, decimal?) Converts a string to a nullable decimal, using a specified default value if the string is null or empty. public static decimal? ToDecimal(this string str, decimal? defaultValue = null) Parameters str string The string to convert to a nullable decimal. defaultValue decimal? The default value to return if the string is null or empty (optional). Returns decimal? The nullable decimal value of the string, or the default value if the string is null or empty. ToDouble(string, double) Converts a string to a double, using a specified default value if the string is null or empty. public static double ToDouble(this string str, double defaultValue = 0) Parameters str string The string to convert to a double. defaultValue double The default value to return if the string is null or empty (optional). Returns double The double value of the string, or the default value if the string is null or empty. ToDouble(string, double?) Converts a string to a nullable double, using a specified default value if the string is null or empty. public static double? ToDouble(this string str, double? defaultValue = null) Parameters str string The string to convert to a nullable double. defaultValue double? The default value to return if the string is null or empty (optional). Returns double? The nullable double value of the string, or the default value if the string is null or empty. ToFloat(string, float?) Converts a string to a nullable float, using a specified default value if the string is null or empty. public static float? ToFloat(this string str, float? defaultValue = null) Parameters str string The string to convert to a nullable float. defaultValue float? The default value to return if the string is null or empty (optional). Returns float? The nullable float value of the string, or the default value if the string is null or empty. ToFloat(string, float) Converts a string to a float, using a specified default value if the string is null or empty. public static float ToFloat(this string str, float defaultValue = 0) Parameters str string The string to convert to a float. defaultValue float The default value to return if the string is null or empty (optional). Returns float The float value of the string, or the default value if the string is null or empty. ToGuid(string) Converts a string to a Guid. public static Guid ToGuid(this string str) Parameters str string The string to convert to a Guid. Returns Guid The Guid value of the string. ToGuidOrEmpty(string) Converts a string to a Guid or returns Guid.Empty if the conversion fails. public static Guid? ToGuidOrEmpty(this string str) Parameters str string The string to convert to a Guid. Returns Guid? The Guid value of the string or Guid.Empty if the conversion fails. ToInt(string, int) Converts a string to an integer, using a specified default value if the string is null or empty. public static int ToInt(this string str, int defaultValue = 0) Parameters str string The string to convert to an integer. defaultValue int The default value to return if the string is null or empty (optional). Returns int The integer value of the string, or the default value if the string is null or empty. ToInt(string, int?) Converts a string to a nullable integer, using a specified default value if the string is null or empty. public static int? ToInt(this string str, int? defaultValue = null) Parameters str string The string to convert to a nullable integer. defaultValue int? The default value to return if the string is null or empty (optional). Returns int? The nullable integer value of the string, or the default value if the string is null or empty. ToList(string, char) Converts a delimited string into a list of strings using the specified separator character. public static List<string> ToList(this string str, char separator) Parameters str string The delimited string to convert. separator char The character used to separate values in the string. Returns List<string> A list of strings containing the individual values from the delimited string. ToTitleCase(string) Converts a string to title case using the current culture's rules. public static string ToTitleCase(this string str) Parameters str string The string to convert to title case. Returns string The string in title case format. ToUpperFirstLetter(string) Converts the first letter of a string to uppercase. public static string ToUpperFirstLetter(this string value) Parameters value string The string to convert. Returns string The string with its first letter in uppercase or the original string if it is null or empty. Truncate(string, int) Truncates the string to a specified maximum length. public static string Truncate(this string value, int maxLength) Parameters value string The string to truncate. maxLength int The maximum length of the truncated string. Returns string The truncated string, or the original string if its length is less than or equal to the specified maximum length. UrlDecode(string) Decodes a URL-encoded string using UTF-8 encoding. public static string UrlDecode(this string str) Parameters str string The URL-encoded string to decode. Returns string The decoded string, or the original string if it is null or empty. UrlEncode(string) Encodes a string for safe use in a URL, using UTF-8 encoding. public static string UrlEncode(this string str) Parameters str string The string to encode. Returns string The URL-encoded string, or the original string if it is null or empty."
  },
  "api/Innovt.Core.Utilities.html": {
    "href": "api/Innovt.Core.Utilities.html",
    "title": "Namespace Innovt.Core.Utilities | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Utilities Classes AsyncHelper Reference https://cpratt.co/async-tips-tricks/ Check Provides static methods for checking arguments and values. ConstantClass Represents a base class for constants with a string value. Cryptography Provides methods for cryptographic operations, including hashing and encryption. Extensions Provides extension methods for various data types and operations. PasswordHelper Provides utility methods for handling password hashing and validation. StopWatchHelper A helper class for measuring and logging the execution time of an action using a stopwatch. StringExtensions Provides a collection of extension methods for string manipulation and validation."
  },
  "api/Innovt.Core.Validation.Extensions.html": {
    "href": "api/Innovt.Core.Validation.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions Namespace Innovt.Core.Validation Assembly Innovt.Core.dll A static class containing extension methods for validating objects that implement the IValidatableObject interface. public static class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods EnsureIsValid(ICommand, ValidationContext) Ensures that a command object is valid by treating it as an IValidatableObject; otherwise, throws a BusinessException with validation errors. public static void EnsureIsValid(this ICommand command, ValidationContext context = null) Parameters command ICommand The command to validate. context ValidationContext An optional ValidationContext to specify validation context. EnsureIsValid(ICommand, string) Ensures that a command object is valid by treating it as an IValidatableObject; otherwise, throws a BusinessException with validation errors. public static void EnsureIsValid(this ICommand command, string contextName) Parameters command ICommand The command to validate. contextName string The name of the validation context. EnsureIsValid(IValidatableObject, ValidationContext) Ensures that an object implementing the IValidatableObject interface is valid; otherwise, throws a BusinessException with validation errors. public static void EnsureIsValid(this IValidatableObject obj, ValidationContext context = null) Parameters obj IValidatableObject The object to validate. context ValidationContext An optional ValidationContext to specify validation context. IsValid(IValidatableObject, ValidationContext) Checks whether an object implementing the IValidatableObject interface is valid. public static bool IsValid(this IValidatableObject obj, ValidationContext context = null) Parameters obj IValidatableObject The object to validate. context ValidationContext An optional ValidationContext to specify validation context. Returns bool True if the object is valid; otherwise, false. Validate(IEnumerable<IValidatableObject>, ValidationContext) Validates a collection of objects implementing the IValidatableObject interface and returns a collection of ValidationResult objects. public static IEnumerable<ValidationResult> Validate(this IEnumerable<IValidatableObject> array, ValidationContext context = null) Parameters array IEnumerable<IValidatableObject> The collection of objects to validate. context ValidationContext An optional ValidationContext to specify validation context. Returns IEnumerable<ValidationResult> A collection of ValidationResult objects containing validation errors."
  },
  "api/Innovt.Core.Validation.html": {
    "href": "api/Innovt.Core.Validation.html",
    "title": "Namespace Innovt.Core.Validation | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Validation Classes Extensions A static class containing extension methods for validating objects that implement the IValidatableObject interface."
  },
  "api/Innovt.Cqrs.Commands.Decorators.CommandAsyncValidationDecorator-1.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.CommandAsyncValidationDecorator-1.html",
    "title": "Class CommandAsyncValidationDecorator<TCommand> | Innovt Platform",
    "keywords": "Class CommandAsyncValidationDecorator<TCommand> Namespace Innovt.Cqrs.Commands.Decorators Assembly Innovt.Cqrs.dll Decorates an asynchronous command handler to include validation before handling the command. public sealed class CommandAsyncValidationDecorator<TCommand> : IAsyncCommandHandler<TCommand> where TCommand : ICommand Type Parameters TCommand The type of command to be handled. Inheritance object CommandAsyncValidationDecorator<TCommand> Implements IAsyncCommandHandler<TCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CommandAsyncValidationDecorator(IAsyncCommandHandler<TCommand>) Initializes a new instance of the CommandAsyncValidationDecorator<TCommand> class. public CommandAsyncValidationDecorator(IAsyncCommandHandler<TCommand> commandHandler) Parameters commandHandler IAsyncCommandHandler<TCommand> The asynchronous command handler to be decorated. Exceptions ArgumentNullException Thrown when commandHandler is null. Methods Handle(TCommand, CancellationToken) Handles the specified command asynchronously after ensuring its validity. public Task Handle(TCommand command, CancellationToken cancellationToken = default) Parameters command TCommand The command to be handled. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous handling of the command. Exceptions ArgumentNullException Thrown when command is null."
  },
  "api/Innovt.Cqrs.Commands.Decorators.CommandValidationDecorator-1.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.CommandValidationDecorator-1.html",
    "title": "Class CommandValidationDecorator<TCommand> | Innovt Platform",
    "keywords": "Class CommandValidationDecorator<TCommand> Namespace Innovt.Cqrs.Commands.Decorators Assembly Innovt.Cqrs.dll Decorates a command handler to include validation before handling the command. public sealed class CommandValidationDecorator<TCommand> : ICommandHandler<TCommand> where TCommand : ICommand Type Parameters TCommand The type of command to be handled. Inheritance object CommandValidationDecorator<TCommand> Implements ICommandHandler<TCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CommandValidationDecorator(ICommandHandler<TCommand>) Initializes a new instance of the CommandValidationDecorator<TCommand> class. public CommandValidationDecorator(ICommandHandler<TCommand> commandHandler) Parameters commandHandler ICommandHandler<TCommand> The command handler to be decorated. Exceptions ArgumentNullException Thrown when commandHandler is null. Methods Handle(TCommand) Handles the specified command after ensuring its validity. public void Handle(TCommand command) Parameters command TCommand The command to be handled. Exceptions ArgumentNullException Thrown when command is null."
  },
  "api/Innovt.Cqrs.Commands.Decorators.DatabaseAsyncRetryDecorator-1.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.DatabaseAsyncRetryDecorator-1.html",
    "title": "Class DatabaseAsyncRetryDecorator<TCommand> | Innovt Platform",
    "keywords": "Class DatabaseAsyncRetryDecorator<TCommand> Namespace Innovt.Cqrs.Commands.Decorators Assembly Innovt.Cqrs.dll Decorates an asynchronous command handler to include retry logic in case of failures. public sealed class DatabaseAsyncRetryDecorator<TCommand> : BaseDatabaseRetryDecorator, IAsyncCommandHandler<TCommand> where TCommand : ICommand Type Parameters TCommand The type of command to be handled. Inheritance object BaseDatabaseRetryDecorator DatabaseAsyncRetryDecorator<TCommand> Implements IAsyncCommandHandler<TCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DatabaseAsyncRetryDecorator(IAsyncCommandHandler<TCommand>, ILogger, int) Initializes a new instance of the DatabaseAsyncRetryDecorator<TCommand> class. public DatabaseAsyncRetryDecorator(IAsyncCommandHandler<TCommand> commandHandler, ILogger logger, int retryCount = 3) Parameters commandHandler IAsyncCommandHandler<TCommand> The asynchronous command handler to be decorated. logger ILogger The logger for capturing retry attempts. retryCount int The number of retry attempts (default is 3). Exceptions ArgumentNullException Thrown when commandHandler or logger is null. Methods Handle(TCommand, CancellationToken) Handles the specified command asynchronously with retry logic in case of failures. public Task Handle(TCommand command, CancellationToken cancellationToken = default) Parameters command TCommand The command to be handled. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous handling of the command."
  },
  "api/Innovt.Cqrs.Commands.Decorators.DatabaseRetryDecorator-1.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.DatabaseRetryDecorator-1.html",
    "title": "Class DatabaseRetryDecorator<TCommand> | Innovt Platform",
    "keywords": "Class DatabaseRetryDecorator<TCommand> Namespace Innovt.Cqrs.Commands.Decorators Assembly Innovt.Cqrs.dll Decorates a command handler to include retry logic in case of failures. public sealed class DatabaseRetryDecorator<TCommand> : BaseDatabaseRetryDecorator, ICommandHandler<TCommand> where TCommand : ICommand Type Parameters TCommand The type of command to be handled. Inheritance object BaseDatabaseRetryDecorator DatabaseRetryDecorator<TCommand> Implements ICommandHandler<TCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DatabaseRetryDecorator(ICommandHandler<TCommand>, ILogger, int) Initializes a new instance of the DatabaseRetryDecorator<TCommand> class. public DatabaseRetryDecorator(ICommandHandler<TCommand> commandHandler, ILogger logger, int retryCount = 3) Parameters commandHandler ICommandHandler<TCommand> The command handler to be decorated. logger ILogger The logger for capturing retry attempts. retryCount int The number of retry attempts (default is 3). Exceptions ArgumentNullException Thrown when commandHandler or logger is null. Methods Handle(TCommand) Handles the specified command with retry logic in case of failures. public void Handle(TCommand command) Parameters command TCommand The command to be handled."
  },
  "api/Innovt.Cqrs.Commands.Decorators.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.html",
    "title": "Namespace Innovt.Cqrs.Commands.Decorators | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Commands.Decorators Classes CommandAsyncValidationDecorator<TCommand> Decorates an asynchronous command handler to include validation before handling the command. CommandValidationDecorator<TCommand> Decorates a command handler to include validation before handling the command. DatabaseAsyncRetryDecorator<TCommand> Decorates an asynchronous command handler to include retry logic in case of failures. DatabaseRetryDecorator<TCommand> Decorates a command handler to include retry logic in case of failures."
  },
  "api/Innovt.Cqrs.Commands.IAsyncCommandHandler-1.html": {
    "href": "api/Innovt.Cqrs.Commands.IAsyncCommandHandler-1.html",
    "title": "Interface IAsyncCommandHandler<T> | Innovt Platform",
    "keywords": "Interface IAsyncCommandHandler<T> Namespace Innovt.Cqrs.Commands Assembly Innovt.Cqrs.dll Defines an asynchronous command handler for a specific type of command. public interface IAsyncCommandHandler<in T> where T : ICommand Type Parameters T The type of command to be handled. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Handle(T, CancellationToken) Handles the specified command asynchronously. Task Handle(T command, CancellationToken cancellationToken = default) Parameters command T The command to be handled. cancellationToken CancellationToken The cancellation token. Returns Task A task representing the asynchronous handling of the command."
  },
  "api/Innovt.Cqrs.Commands.IAsyncCommandHandler-2.html": {
    "href": "api/Innovt.Cqrs.Commands.IAsyncCommandHandler-2.html",
    "title": "Interface IAsyncCommandHandler<T, TResult> | Innovt Platform",
    "keywords": "Interface IAsyncCommandHandler<T, TResult> Namespace Innovt.Cqrs.Commands Assembly Innovt.Cqrs.dll Defines an asynchronous command handler for a specific type of command with a result. public interface IAsyncCommandHandler<in T, TResult> where T : ICommand Type Parameters T The type of command to be handled. TResult The type of result expected from handling the command. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Handle(T, CancellationToken) Handles the specified command asynchronously and returns a result. Task<TResult> Handle(T command, CancellationToken cancellationToken = default) Parameters command T The command to be handled. cancellationToken CancellationToken The cancellation token. Returns Task<TResult> A task representing the asynchronous handling of the command and the result."
  },
  "api/Innovt.Cqrs.Commands.ICommandHandler-1.html": {
    "href": "api/Innovt.Cqrs.Commands.ICommandHandler-1.html",
    "title": "Interface ICommandHandler<T> | Innovt Platform",
    "keywords": "Interface ICommandHandler<T> Namespace Innovt.Cqrs.Commands Assembly Innovt.Cqrs.dll Defines a synchronous command handler for a specific type of command. public interface ICommandHandler<in T> where T : ICommand Type Parameters T The type of command to be handled. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Handle(T) Handles the specified command synchronously. void Handle(T command) Parameters command T The command to be handled."
  },
  "api/Innovt.Cqrs.Commands.ICommandHandler-2.html": {
    "href": "api/Innovt.Cqrs.Commands.ICommandHandler-2.html",
    "title": "Interface ICommandHandler<T, TResult> | Innovt Platform",
    "keywords": "Interface ICommandHandler<T, TResult> Namespace Innovt.Cqrs.Commands Assembly Innovt.Cqrs.dll Defines a synchronous command handler for a specific type of command with a result. public interface ICommandHandler<in T, out TResult> where T : ICommand Type Parameters T The type of command to be handled. TResult The type of result expected from handling the command. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Handle(T) Handles the specified command synchronously and returns a result. TResult Handle(T command) Parameters command T The command to be handled. Returns TResult The result of handling the command."
  },
  "api/Innovt.Cqrs.Commands.html": {
    "href": "api/Innovt.Cqrs.Commands.html",
    "title": "Namespace Innovt.Cqrs.Commands | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Commands Interfaces IAsyncCommandHandler<T> Defines an asynchronous command handler for a specific type of command. IAsyncCommandHandler<T, TResult> Defines an asynchronous command handler for a specific type of command with a result. ICommandHandler<T> Defines a synchronous command handler for a specific type of command. ICommandHandler<T, TResult> Defines a synchronous command handler for a specific type of command with a result."
  },
  "api/Innovt.Cqrs.Decorators.BaseDatabaseRetryDecorator.html": {
    "href": "api/Innovt.Cqrs.Decorators.BaseDatabaseRetryDecorator.html",
    "title": "Class BaseDatabaseRetryDecorator | Innovt Platform",
    "keywords": "Class BaseDatabaseRetryDecorator Namespace Innovt.Cqrs.Decorators Assembly Innovt.Cqrs.dll Provides a base class for implementing retry logic for database operations. public abstract class BaseDatabaseRetryDecorator Inheritance object BaseDatabaseRetryDecorator Derived DatabaseAsyncRetryDecorator<TCommand> DatabaseRetryDecorator<TCommand> DatabaseAsyncRetryDecorator<TFilter, TResult> DatabaseRetryDecorator<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BaseDatabaseRetryDecorator(ILogger, int) Initializes a new instance of the BaseDatabaseRetryDecorator class. protected BaseDatabaseRetryDecorator(ILogger logger, int retryCount = 3) Parameters logger ILogger The logger for capturing retry attempts. retryCount int The number of retry attempts (default is 3). Exceptions ArgumentNullException Thrown when logger is null. Methods CreateAsyncPolicy() Creates an asynchronous retry policy for handling retry attempts. protected virtual AsyncRetryPolicy CreateAsyncPolicy() Returns AsyncRetryPolicy An asynchronous retry policy. CreatePolicy() Creates a retry policy for handling retry attempts. protected virtual RetryPolicy CreatePolicy() Returns RetryPolicy A retry policy. LogResiliencyRetry() Creates a resiliency log action for retry attempts. protected Action<Exception, TimeSpan, int, Context> LogResiliencyRetry() Returns Action<Exception, TimeSpan, int, Context> A log action for retry attempts."
  },
  "api/Innovt.Cqrs.Decorators.html": {
    "href": "api/Innovt.Cqrs.Decorators.html",
    "title": "Namespace Innovt.Cqrs.Decorators | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Decorators Classes BaseDatabaseRetryDecorator Provides a base class for implementing retry logic for database operations."
  },
  "api/Innovt.Cqrs.Queries.Decorators.DatabaseAsyncRetryDecorator-2.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.DatabaseAsyncRetryDecorator-2.html",
    "title": "Class DatabaseAsyncRetryDecorator<TFilter, TResult> | Innovt Platform",
    "keywords": "Class DatabaseAsyncRetryDecorator<TFilter, TResult> Namespace Innovt.Cqrs.Queries.Decorators Assembly Innovt.Cqrs.dll Decorates an asynchronous query handler to include retry logic in case of failures. public sealed class DatabaseAsyncRetryDecorator<TFilter, TResult> : BaseDatabaseRetryDecorator, IAsyncQueryHandler<TFilter, TResult> where TFilter : IFilter where TResult : class Type Parameters TFilter The type of filter for the query. TResult The type of result expected from the query. Inheritance object BaseDatabaseRetryDecorator DatabaseAsyncRetryDecorator<TFilter, TResult> Implements IAsyncQueryHandler<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DatabaseAsyncRetryDecorator(IAsyncQueryHandler<TFilter, TResult>, ILogger, int) Initializes a new instance of the DatabaseAsyncRetryDecorator<TFilter, TResult> class. public DatabaseAsyncRetryDecorator(IAsyncQueryHandler<TFilter, TResult> queryHandler, ILogger logger, int retryCount = 3) Parameters queryHandler IAsyncQueryHandler<TFilter, TResult> The asynchronous query handler to be decorated. logger ILogger The logger for capturing retry attempts. retryCount int The number of retry attempts (default is 3). Exceptions ArgumentNullException Thrown when queryHandler or logger is null. Methods HandleAsync(TFilter, CancellationToken) Handles the specified query asynchronously with retry logic in case of failures. public Task<TResult> HandleAsync(TFilter filter, CancellationToken cancellationToken = default) Parameters filter TFilter The filter for the query. cancellationToken CancellationToken The cancellation token. Returns Task<TResult> A task representing the asynchronous handling of the query and the result."
  },
  "api/Innovt.Cqrs.Queries.Decorators.DatabaseRetryDecorator-2.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.DatabaseRetryDecorator-2.html",
    "title": "Class DatabaseRetryDecorator<TFilter, TResult> | Innovt Platform",
    "keywords": "Class DatabaseRetryDecorator<TFilter, TResult> Namespace Innovt.Cqrs.Queries.Decorators Assembly Innovt.Cqrs.dll Decorates a query handler to include retry logic in case of failures. public sealed class DatabaseRetryDecorator<TFilter, TResult> : BaseDatabaseRetryDecorator, IQueryHandler<TFilter, TResult> where TFilter : IPagedFilter where TResult : class Type Parameters TFilter The type of filter for the query. TResult The type of result expected from the query. Inheritance object BaseDatabaseRetryDecorator DatabaseRetryDecorator<TFilter, TResult> Implements IQueryHandler<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DatabaseRetryDecorator(IQueryHandler<TFilter, TResult>, ILogger, int) Initializes a new instance of the DatabaseRetryDecorator<TFilter, TResult> class. public DatabaseRetryDecorator(IQueryHandler<TFilter, TResult> queryHandler, ILogger logger, int retryCount = 3) Parameters queryHandler IQueryHandler<TFilter, TResult> The query handler to be decorated. logger ILogger The logger for capturing retry attempts. retryCount int The number of retry attempts (default is 3). Exceptions ArgumentNullException Thrown when queryHandler or logger is null. Methods Handle(TFilter) Handles the specified query with retry logic in case of failures. public TResult Handle(TFilter filter) Parameters filter TFilter The filter for the query. Returns TResult The result of handling the query."
  },
  "api/Innovt.Cqrs.Queries.Decorators.QueryAsyncValidationDecorator-2.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.QueryAsyncValidationDecorator-2.html",
    "title": "Class QueryAsyncValidationDecorator<TFilter, TResult> | Innovt Platform",
    "keywords": "Class QueryAsyncValidationDecorator<TFilter, TResult> Namespace Innovt.Cqrs.Queries.Decorators Assembly Innovt.Cqrs.dll Decorates an asynchronous query handler to include validation before handling the query. public sealed class QueryAsyncValidationDecorator<TFilter, TResult> : IAsyncQueryHandler<TFilter, TResult> where TFilter : IFilter where TResult : class Type Parameters TFilter The type of filter for the query. TResult The type of result expected from the query. Inheritance object QueryAsyncValidationDecorator<TFilter, TResult> Implements IAsyncQueryHandler<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors QueryAsyncValidationDecorator(IAsyncQueryHandler<TFilter, TResult>) Initializes a new instance of the QueryAsyncValidationDecorator<TFilter, TResult> class. public QueryAsyncValidationDecorator(IAsyncQueryHandler<TFilter, TResult> queryHandler) Parameters queryHandler IAsyncQueryHandler<TFilter, TResult> The asynchronous query handler to be decorated. Exceptions ArgumentNullException Thrown when queryHandler is null. Methods HandleAsync(TFilter, CancellationToken) Handles the specified query asynchronously after ensuring its validity. public Task<TResult> HandleAsync(TFilter filter, CancellationToken cancellationToken = default) Parameters filter TFilter The filter for the query. cancellationToken CancellationToken The cancellation token. Returns Task<TResult> A task representing the asynchronous handling of the query and the result. Exceptions ArgumentNullException Thrown when filter is null."
  },
  "api/Innovt.Cqrs.Queries.Decorators.QueryValidationDecorator-2.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.QueryValidationDecorator-2.html",
    "title": "Class QueryValidationDecorator<TFilter, TResult> | Innovt Platform",
    "keywords": "Class QueryValidationDecorator<TFilter, TResult> Namespace Innovt.Cqrs.Queries.Decorators Assembly Innovt.Cqrs.dll Decorates a query handler to include validation before handling the query. public sealed class QueryValidationDecorator<TFilter, TResult> : IQueryHandler<TFilter, TResult> where TFilter : IFilter where TResult : class Type Parameters TFilter The type of filter for the query. TResult The type of result expected from the query. Inheritance object QueryValidationDecorator<TFilter, TResult> Implements IQueryHandler<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors QueryValidationDecorator(IQueryHandler<TFilter, TResult>) Initializes a new instance of the QueryValidationDecorator<TFilter, TResult> class. public QueryValidationDecorator(IQueryHandler<TFilter, TResult> queryHandler) Parameters queryHandler IQueryHandler<TFilter, TResult> The query handler to be decorated. Exceptions ArgumentNullException Thrown when queryHandler is null. Methods Handle(TFilter) Handles the specified query after ensuring its validity. public TResult Handle(TFilter filter) Parameters filter TFilter The filter for the query. Returns TResult The result of handling the query. Exceptions ArgumentNullException Thrown when filter is null."
  },
  "api/Innovt.Cqrs.Queries.Decorators.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.html",
    "title": "Namespace Innovt.Cqrs.Queries.Decorators | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Queries.Decorators Classes DatabaseAsyncRetryDecorator<TFilter, TResult> Decorates an asynchronous query handler to include retry logic in case of failures. DatabaseRetryDecorator<TFilter, TResult> Decorates a query handler to include retry logic in case of failures. QueryAsyncValidationDecorator<TFilter, TResult> Decorates an asynchronous query handler to include validation before handling the query. QueryValidationDecorator<TFilter, TResult> Decorates a query handler to include validation before handling the query."
  },
  "api/Innovt.Cqrs.Queries.IAsyncQueryHandler-2.html": {
    "href": "api/Innovt.Cqrs.Queries.IAsyncQueryHandler-2.html",
    "title": "Interface IAsyncQueryHandler<TFilter, TResult> | Innovt Platform",
    "keywords": "Interface IAsyncQueryHandler<TFilter, TResult> Namespace Innovt.Cqrs.Queries Assembly Innovt.Cqrs.dll Defines an asynchronous query handler for a specific type of filter and result. public interface IAsyncQueryHandler<in TFilter, TResult> where TFilter : IFilter where TResult : class Type Parameters TFilter The type of filter for the query. TResult The type of result expected from the query. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods HandleAsync(TFilter, CancellationToken) Handles the specified query asynchronously. Task<TResult> HandleAsync(TFilter filter, CancellationToken cancellationToken = default) Parameters filter TFilter The filter for the query. cancellationToken CancellationToken The cancellation token. Returns Task<TResult> A task representing the asynchronous handling of the query and the result."
  },
  "api/Innovt.Cqrs.Queries.ICountAsyncQueryHandler-1.html": {
    "href": "api/Innovt.Cqrs.Queries.ICountAsyncQueryHandler-1.html",
    "title": "Interface ICountAsyncQueryHandler<T> | Innovt Platform",
    "keywords": "Interface ICountAsyncQueryHandler<T> Namespace Innovt.Cqrs.Queries Assembly Innovt.Cqrs.dll Defines an asynchronous query handler for counting entities based on a filter. public interface ICountAsyncQueryHandler<in T> where T : IFilter Type Parameters T The type of filter for the query. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CountAsync(T, CancellationToken) Counts the entities that match the specified filter asynchronously. Task<int> CountAsync(T filter, CancellationToken cancellationToken = default) Parameters filter T The filter for the query. cancellationToken CancellationToken The cancellation token. Returns Task<int> A task representing the asynchronous counting operation."
  },
  "api/Innovt.Cqrs.Queries.IExistAsyncQueryHandler-1.html": {
    "href": "api/Innovt.Cqrs.Queries.IExistAsyncQueryHandler-1.html",
    "title": "Interface IExistAsyncQueryHandler<T> | Innovt Platform",
    "keywords": "Interface IExistAsyncQueryHandler<T> Namespace Innovt.Cqrs.Queries Assembly Innovt.Cqrs.dll Defines an asynchronous query handler for checking the existence of entities based on a filter. public interface IExistAsyncQueryHandler<in T> where T : IFilter Type Parameters T The type of filter for the query. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods ExistAsync(T, CancellationToken) Checks the existence of entities that match the specified filter asynchronously. Task<bool> ExistAsync(T filter, CancellationToken cancellationToken = default) Parameters filter T The filter for the query. cancellationToken CancellationToken The cancellation token. Returns Task<bool> A task representing the asynchronous existence check operation."
  },
  "api/Innovt.Cqrs.Queries.IQueryHandler-2.html": {
    "href": "api/Innovt.Cqrs.Queries.IQueryHandler-2.html",
    "title": "Interface IQueryHandler<TFilter, TResult> | Innovt Platform",
    "keywords": "Interface IQueryHandler<TFilter, TResult> Namespace Innovt.Cqrs.Queries Assembly Innovt.Cqrs.dll Defines a synchronous query handler for a specific type of filter and result. public interface IQueryHandler<in TFilter, out TResult> where TFilter : IFilter where TResult : class Type Parameters TFilter The type of filter for the query. TResult The type of result expected from the query. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Handle(TFilter) Handles the specified query synchronously. TResult Handle(TFilter filter) Parameters filter TFilter The filter for the query. Returns TResult The result of handling the query."
  },
  "api/Innovt.Cqrs.Queries.html": {
    "href": "api/Innovt.Cqrs.Queries.html",
    "title": "Namespace Innovt.Cqrs.Queries | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Queries Interfaces IAsyncQueryHandler<TFilter, TResult> Defines an asynchronous query handler for a specific type of filter and result. ICountAsyncQueryHandler<T> Defines an asynchronous query handler for counting entities based on a filter. IExistAsyncQueryHandler<T> Defines an asynchronous query handler for checking the existence of entities based on a filter. IQueryHandler<TFilter, TResult> Defines a synchronous query handler for a specific type of filter and result."
  },
  "api/Innovt.CrossCutting.IOC.Container.html": {
    "href": "api/Innovt.CrossCutting.IOC.Container.html",
    "title": "Class Container | Innovt Platform",
    "keywords": "Class Container Namespace Innovt.CrossCutting.IOC Assembly Innovt.CrossCutting.IOC.dll Implementation of the IoC container interface. public sealed class Container : IContainer, IDisposable Inheritance object Container Implements IContainer IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Container() Initializes a new instance of the Container class with default scan settings. public Container() Container(IocModule) Initializes a new instance of the Container class using the specified IoC module. public Container(IocModule iocModule) Parameters iocModule IocModule The IoC module providing services for the container. Exceptions ArgumentNullException Thrown when iocModule is null. Container(IServiceCollection) Initializes a new instance of the Container class using the provided services. public Container(IServiceCollection services) Parameters services IServiceCollection The collection of services for the container. Methods AddModule(IocModule) Adds services from the specified IoC module to the container. public void AddModule(IocModule iocModule) Parameters iocModule IocModule The IoC module providing services to be added. Exceptions ArgumentNullException Thrown when iocModule is null. CheckConfiguration() Checks the configuration of the container. public void CheckConfiguration() CreateScope() Creates a new service scope within the container. public IServiceScope CreateScope() Returns IServiceScope A new service scope. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() GetService(Type) Gets the service of the specified type from the container. public object GetService(Type serviceType) Parameters serviceType Type The type of service to get. Returns object The service object, or null if there is no service of the specified type. Release(object) Releases the specified object from the container. public void Release(object obj) Parameters obj object The object to be released. Resolve(Type) Resolves an instance of the specified type. public object Resolve(Type type) Parameters type Type The type to be resolved. Returns object An instance of the specified type. Resolve<TService>() Resolves an instance of the specified type. public TService Resolve<TService>() Returns TService An instance of the specified type. Type Parameters TService The type to be resolved. Resolve<TService>(string) Resolves an instance of the specified type using the provided instance key. public TService Resolve<TService>(string instanceKey) Parameters instanceKey string The instance key for resolving the service. Returns TService An instance of the specified type. Type Parameters TService The type to be resolved. Resolve<TService>(Type) Resolves an instance of the specified type. public TService Resolve<TService>(Type type) Parameters type Type The type to be resolved. Returns TService An instance of the specified type. Type Parameters TService The type to be resolved. TryToResolve<TService>() Try to resolve a service. If the service is not registered, return null. public TService TryToResolve<TService>() Returns TService Type Parameters TService TryToResolve<TService>(Type) This method will not throw an exception if the service is not registered. Return null instead. public TService TryToResolve<TService>(Type type) Parameters type Type The type that you want to get an instance Returns TService Null or an instance of your type Type Parameters TService"
  },
  "api/Innovt.CrossCutting.IOC.ContainerBuilder.html": {
    "href": "api/Innovt.CrossCutting.IOC.ContainerBuilder.html",
    "title": "Class ContainerBuilder | Innovt Platform",
    "keywords": "Class ContainerBuilder Namespace Innovt.CrossCutting.IOC Assembly Innovt.CrossCutting.IOC.dll Builder for creating an IServiceProvider using Lamar IoC container. public class ContainerBuilder : IDisposable Inheritance object ContainerBuilder Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ContainerBuilder(IServiceCollection) Initializes a new instance of the ContainerBuilder class using the provided services. public ContainerBuilder(IServiceCollection services) Parameters services IServiceCollection The collection of services for the container. Properties GetServiceProvider Gets the configured IServiceProvider. public IServiceProvider GetServiceProvider { get; } Property Value IServiceProvider Methods Dispose() Releases the resources used by the ContainerBuilder. public void Dispose() Dispose(bool) Releases the resources used by the ContainerBuilder. protected virtual void Dispose(bool disposing) Parameters disposing bool True if disposing; otherwise, false."
  },
  "api/Innovt.CrossCutting.IOC.ServiceProvider.html": {
    "href": "api/Innovt.CrossCutting.IOC.ServiceProvider.html",
    "title": "Class ServiceProvider | Innovt Platform",
    "keywords": "Class ServiceProvider Namespace Innovt.CrossCutting.IOC Assembly Innovt.CrossCutting.IOC.dll Implementation of the IServiceProvider and ISupportRequiredService interfaces using Lamar IoC container. public class ServiceProvider : IServiceProvider, ISupportRequiredService, IDisposable Inheritance object ServiceProvider Implements IServiceProvider ISupportRequiredService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ServiceProvider(IContainer) Initializes a new instance of the ServiceProvider class using the provided Lamar IoC container. public ServiceProvider(IContainer container) Parameters container IContainer The Lamar IoC container. Exceptions ArgumentNullException Thrown when container is null. Methods Dispose() Releases the resources used by the ServiceProvider. public void Dispose() Dispose(bool) Releases the resources used by the ServiceProvider. protected virtual void Dispose(bool disposing) Parameters disposing bool True if disposing; otherwise, false. GetRequiredService(Type) Gets the service of the specified type from the Lamar IoC container. public object GetRequiredService(Type serviceType) Parameters serviceType Type The type of service to get. Returns object The service object. Exceptions InvalidOperationException Thrown when there is no service of the specified type. GetService(Type) Gets the service of the specified type from the Lamar IoC container. public object GetService(Type serviceType) Parameters serviceType Type The type of service to get. Returns object The service object, or null if there is no service of the specified type."
  },
  "api/Innovt.CrossCutting.IOC.ServiceProviderFactory.html": {
    "href": "api/Innovt.CrossCutting.IOC.ServiceProviderFactory.html",
    "title": "Class ServiceProviderFactory | Innovt Platform",
    "keywords": "Class ServiceProviderFactory Namespace Innovt.CrossCutting.IOC Assembly Innovt.CrossCutting.IOC.dll Factory for creating an IServiceProvider using a ContainerBuilder. public class ServiceProviderFactory : IServiceProviderFactory<ContainerBuilder> Inheritance object ServiceProviderFactory Implements IServiceProviderFactory<ContainerBuilder> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CreateBuilder(IServiceCollection) Creates a new ContainerBuilder using the specified collection of services. public ContainerBuilder CreateBuilder(IServiceCollection services) Parameters services IServiceCollection The collection of services for the container. Returns ContainerBuilder A new instance of ContainerBuilder. CreateServiceProvider(ContainerBuilder) Creates an IServiceProvider using the specified ContainerBuilder. public IServiceProvider CreateServiceProvider(ContainerBuilder containerBuilder) Parameters containerBuilder ContainerBuilder The ContainerBuilder to use for creating the service provider. Returns IServiceProvider An IServiceProvider based on the provided ContainerBuilder. Exceptions ArgumentNullException Thrown when containerBuilder is null."
  },
  "api/Innovt.CrossCutting.IOC.html": {
    "href": "api/Innovt.CrossCutting.IOC.html",
    "title": "Namespace Innovt.CrossCutting.IOC | Innovt Platform",
    "keywords": "Namespace Innovt.CrossCutting.IOC Classes Container Implementation of the IoC container interface. ContainerBuilder Builder for creating an IServiceProvider using Lamar IoC container. ServiceProvider Implementation of the IServiceProvider and ISupportRequiredService interfaces using Lamar IoC container. ServiceProviderFactory Factory for creating an IServiceProvider using a ContainerBuilder."
  },
  "api/Innovt.CrossCutting.Log.Serilog.ALoggerProvider.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.ALoggerProvider.html",
    "title": "Class ALoggerProvider | Innovt Platform",
    "keywords": "Class ALoggerProvider Namespace Innovt.CrossCutting.Log.Serilog Assembly Innovt.CrossCutting.Log.Serilog.dll Implementation of ILoggerProvider for ALogger. public class ALoggerProvider : ILoggerProvider, IDisposable Inheritance object ALoggerProvider Implements ILoggerProvider IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CreateLogger(string) Creates a new instance of ALogger for the specified category. public ILogger CreateLogger(string categoryName) Parameters categoryName string The category name for the logger. Returns ILogger A new instance of ALogger. Dispose() Disposes the ALoggerProvider. public void Dispose()"
  },
  "api/Innovt.CrossCutting.Log.Serilog.ActivityEnrich.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.ActivityEnrich.html",
    "title": "Class ActivityEnrich | Innovt Platform",
    "keywords": "Class ActivityEnrich Namespace Innovt.CrossCutting.Log.Serilog Assembly Innovt.CrossCutting.Log.Serilog.dll Implementation of Serilog.Core.ILogEventEnricher that enriches log events with activity information. public class ActivityEnrich : ILogEventEnricher Inheritance object ActivityEnrich Implements ILogEventEnricher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Enrich(LogEvent, ILogEventPropertyFactory) Enriches the provided Serilog.Events.LogEvent with activity information. public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory) Parameters logEvent LogEvent The log event to enrich. propertyFactory ILogEventPropertyFactory The property factory to create log event properties. Exceptions ArgumentNullException Thrown when logEvent is null."
  },
  "api/Innovt.CrossCutting.Log.Serilog.DataDogEnrich.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.DataDogEnrich.html",
    "title": "Class DataDogEnrich | Innovt Platform",
    "keywords": "Class DataDogEnrich Namespace Innovt.CrossCutting.Log.Serilog Assembly Innovt.CrossCutting.Log.Serilog.dll Implementation of Serilog.Core.ILogEventEnricher that enriches log events with DataDog tracing information. public class DataDogEnrich : ILogEventEnricher Inheritance object DataDogEnrich Implements ILogEventEnricher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Enrich(LogEvent, ILogEventPropertyFactory) Enriches the provided Serilog.Events.LogEvent with DataDog tracing information. public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory) Parameters logEvent LogEvent The log event to enrich. propertyFactory ILogEventPropertyFactory The property factory to create log event properties. Exceptions ArgumentNullException Thrown when logEvent is null."
  },
  "api/Innovt.CrossCutting.Log.Serilog.LogLevelEnricher.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.LogLevelEnricher.html",
    "title": "Class LogLevelEnricher | Innovt Platform",
    "keywords": "Class LogLevelEnricher Namespace Innovt.CrossCutting.Log.Serilog Assembly Innovt.CrossCutting.Log.Serilog.dll Enriches Serilog log events with log4net log levels. public class LogLevelEnricher : ILogEventEnricher Inheritance object LogLevelEnricher Implements ILogEventEnricher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Enrich(LogEvent, ILogEventPropertyFactory) Enriches a log event with log4net log levels. public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory) Parameters logEvent LogEvent The log event to enrich. propertyFactory ILogEventPropertyFactory The log event property factory."
  },
  "api/Innovt.CrossCutting.Log.Serilog.Logger.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.Logger.html",
    "title": "Class Logger | Innovt Platform",
    "keywords": "Class Logger Namespace Innovt.CrossCutting.Log.Serilog Assembly Innovt.CrossCutting.Log.Serilog.dll Implementation of ILogger and ILogger using Serilog. public class Logger : ILogger, ILogger Inheritance object Logger Implements ILogger ILogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Logger() Initializes a new instance of the Logger class using the default output template and Console sink. public Logger() Logger(ILogEventEnricher, string) Initializes a new instance of the Logger class with a specified log event enricher and console output template. public Logger(ILogEventEnricher logEventEnricher, string consoleOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\") Parameters logEventEnricher ILogEventEnricher The log event enricher to be applied. consoleOutputTemplate string The console output template for log messages. Exceptions ArgumentNullException Thrown when logEventEnricher is null. Logger(ILogEventEnricher[], string) Initializes a new instance of the Logger class with specified log event enrichers and console output template. public Logger(ILogEventEnricher[] logEventEnricher, string consoleOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\") Parameters logEventEnricher ILogEventEnricher[] The log event enrichers to be applied. consoleOutputTemplate string The console output template for log messages. Exceptions ArgumentNullException Thrown when logEventEnricher is null. Logger(LoggerConfiguration, string) Initializes a new instance of the Logger class with a specified configuration and console output template. public Logger(LoggerConfiguration configuration, string consoleOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\") Parameters configuration LoggerConfiguration The Serilog logger configuration. consoleOutputTemplate string The console output template for log messages. Exceptions ArgumentNullException Thrown when configuration is null. Logger(string) Initializes a new instance of the Logger class with a specified console output template. public Logger(string consoleOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\") Parameters consoleOutputTemplate string The console output template for log messages. Fields DefaultOutputTemplate The default output template for log messages. public const string DefaultOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\" Field Value string Methods BeginScope<TState>(TState) Begins a logical operation scope. public IDisposable BeginScope<TState>(TState state) Parameters state TState The state object for the scope. Returns IDisposable An IDisposable that ends the logical operation scope when disposed. Type Parameters TState The type of the state object. Debug(Exception, string) Writes a debug log message with an exception and a message template. public void Debug(Exception exception, string messageTemplate) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. Debug(Exception, string, params object[]) Writes a debug log message with an exception, a message template, and additional property values. public void Debug(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Debug(string) Writes a debug log message. public void Debug(string message) Parameters message string The log message. Debug(string, params object[]) Writes a debug log message using a message template and additional property values. public void Debug(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Error(Exception, string) Writes an error log message with an exception and a message template. public void Error(Exception exception, string messageTemplate) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. Error(Exception, string, params object[]) Writes an error log message with an exception, a message template, and additional property values. public void Error(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Error(string) Writes an error log message. public void Error(string message) Parameters message string The log message. Error(string, params object[]) Writes an error log message using a message template and additional property values. public void Error(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Fatal(Exception, string) Writes a fatal log message with an exception and a message template. public void Fatal(Exception exception, string messageTemplate) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. Fatal(Exception, string, params object[]) Writes a fatal log message with an exception, a message template, and additional property values. public void Fatal(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Fatal(string) Writes a fatal log message. public void Fatal(string message) Parameters message string The log message. Fatal(string, params object[]) Writes a fatal log message using a message template and additional property values. public void Fatal(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Info(Exception, string) Writes an informational log message with an exception and a message template. public void Info(Exception exception, string messageTemplate) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. Info(Exception, string, params object[]) Writes an informational log message with an exception, a message template, and additional property values. public void Info(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Info(string) Writes an informational log message. public void Info(string message) Parameters message string The log message. Info(string, params object[]) Writes an informational log message using a message template and additional property values. public void Info(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. IsEnabled(LogLevel) Checks if logging is enabled for the specified log level. public bool IsEnabled(LogLevel logLevel) Parameters logLevel LogLevel The log level to check. Returns bool True if logging is enabled for the specified log level; otherwise, false. Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>) Writes a log message based on the specified log level, event ID, state, exception, and formatter. public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter) Parameters logLevel LogLevel The log level. eventId EventId The event ID. state TState The state object. exception Exception The exception associated with the log message. formatter Func<TState, Exception, string> A delegate that formats the log message. Type Parameters TState The type of the state object. Verbose(Exception, string) Writes a verbose log message with an exception and a message template. public void Verbose(Exception exception, string messageTemplate) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. Verbose(Exception, string, params object[]) Writes a verbose log message with an exception, a message template, and additional property values. public void Verbose(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Verbose(string) Writes a verbose log message. public void Verbose(string message) Parameters message string The log message. Verbose(string, params object[]) Writes a verbose log message using a message template and additional property values. public void Verbose(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Warning(Exception, string) Writes a warning log message with an exception and a message template. public void Warning(Exception exception, string messageTemplate) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. Warning(Exception, string, params object[]) Writes a warning log message with an exception, a message template, and additional property values. public void Warning(Exception exception, string messageTemplate, params object[] propertyValues) Parameters exception Exception The exception to include in the log message. messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message. Warning(string) Writes a warning log message. public void Warning(string message) Parameters message string The log message. Warning(string, params object[]) Writes a warning log message using a message template and additional property values. public void Warning(string messageTemplate, params object[] propertyValues) Parameters messageTemplate string The message template for the log message. propertyValues object[] Additional property values to include in the log message."
  },
  "api/Innovt.CrossCutting.Log.Serilog.LoggerEnrichExtensions.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.LoggerEnrichExtensions.html",
    "title": "Class LoggerEnrichExtensions | Innovt Platform",
    "keywords": "Class LoggerEnrichExtensions Namespace Innovt.CrossCutting.Log.Serilog Assembly Innovt.CrossCutting.Log.Serilog.dll Provides extension methods to enrich Serilog log events with specific enrichers. public static class LoggerEnrichExtensions Inheritance object LoggerEnrichExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WithActivityEnrich(LoggerEnrichmentConfiguration) Enriches log events with activity trace and span IDs. public static LoggerConfiguration WithActivityEnrich(this LoggerEnrichmentConfiguration enrichmentConfiguration) Parameters enrichmentConfiguration LoggerEnrichmentConfiguration The logger enrichment configuration. Returns LoggerConfiguration The updated logger configuration. WithDataDogEnrich(LoggerEnrichmentConfiguration) Enriches log events with DataDog trace and span IDs. public static LoggerConfiguration WithDataDogEnrich(this LoggerEnrichmentConfiguration enrichmentConfiguration) Parameters enrichmentConfiguration LoggerEnrichmentConfiguration The logger enrichment configuration. Returns LoggerConfiguration The updated logger configuration."
  },
  "api/Innovt.CrossCutting.Log.Serilog.Tests.Program.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.Tests.Program.html",
    "title": "Class Program | Innovt Platform",
    "keywords": "Class Program Namespace Innovt.CrossCutting.Log.Serilog.Tests Assembly Innovt.CrossCutting.Log.Serilog.Tests.dll Represents the entry point and test methods for the application. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Main(string[]) The main entry point of the application. public static void Main(string[] args) Parameters args string[] Command-line arguments. SimpleTestWithDataDogEnricher() Runs a simple test with DataDog enricher. public static void SimpleTestWithDataDogEnricher() SimpleTestWithoutEnricher() Runs a simple test without any enricher. public static void SimpleTestWithoutEnricher()"
  },
  "api/Innovt.CrossCutting.Log.Serilog.Tests.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.Tests.html",
    "title": "Namespace Innovt.CrossCutting.Log.Serilog.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.CrossCutting.Log.Serilog.Tests Classes Program Represents the entry point and test methods for the application."
  },
  "api/Innovt.CrossCutting.Log.Serilog.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.html",
    "title": "Namespace Innovt.CrossCutting.Log.Serilog | Innovt Platform",
    "keywords": "Namespace Innovt.CrossCutting.Log.Serilog Classes ALoggerProvider Implementation of ILoggerProvider for ALogger. ActivityEnrich Implementation of Serilog.Core.ILogEventEnricher that enriches log events with activity information. DataDogEnrich Implementation of Serilog.Core.ILogEventEnricher that enriches log events with DataDog tracing information. LogLevelEnricher Enriches Serilog log events with log4net log levels. Logger Implementation of ILogger and ILogger using Serilog. LoggerEnrichExtensions Provides extension methods to enrich Serilog log events with specific enrichers."
  },
  "api/Innovt.Data.Ado.ConnectionFactory.html": {
    "href": "api/Innovt.Data.Ado.ConnectionFactory.html",
    "title": "Class ConnectionFactory | Innovt Platform",
    "keywords": "Class ConnectionFactory Namespace Innovt.Data.Ado Assembly Innovt.Data.Ado.dll Represents a factory for creating database connections based on a data source. public class ConnectionFactory : IConnectionFactory Inheritance object ConnectionFactory Implements IConnectionFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Create(IDataSource) Creates a new instance of IDbConnection based on the provided data source. public IDbConnection Create(IDataSource dataSource) Parameters dataSource IDataSource The data source for which a connection will be created. Returns IDbConnection A new instance of IDbConnection based on the data source. Exceptions ArgumentNullException Thrown when dataSource is null. ConnectionStringException Thrown when the connection string is null or empty."
  },
  "api/Innovt.Data.Ado.IConnectionFactory.html": {
    "href": "api/Innovt.Data.Ado.IConnectionFactory.html",
    "title": "Interface IConnectionFactory | Innovt Platform",
    "keywords": "Interface IConnectionFactory Namespace Innovt.Data.Ado Assembly Innovt.Data.Ado.dll Represents an interface for a factory that creates database connections based on a data source. public interface IConnectionFactory Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Create(IDataSource) Creates a new instance of IDbConnection based on the provided data source. IDbConnection Create(IDataSource dataSource) Parameters dataSource IDataSource The data source for which a connection will be created. Returns IDbConnection A new instance of IDbConnection based on the data source."
  },
  "api/Innovt.Data.Ado.IRepositoryBase.html": {
    "href": "api/Innovt.Data.Ado.IRepositoryBase.html",
    "title": "Interface IRepositoryBase | Innovt Platform",
    "keywords": "Interface IRepositoryBase Namespace Innovt.Data.Ado Assembly Innovt.Data.Ado.dll Represents a base interface for repository operations. public interface IRepositoryBase Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods ExecuteAsync(string, object, IDbTransaction, CancellationToken) Task<int> ExecuteAsync(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default) Parameters sql string filter object dbTransaction IDbTransaction cancellationToken CancellationToken Returns Task<int> ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken) Task<T> ExecuteScalarAsync<T>(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default) Parameters sql string filter object dbTransaction IDbTransaction cancellationToken CancellationToken Returns Task<T> Type Parameters T QueryAsync<T>(string, object, CancellationToken) Task<IEnumerable<T>> QueryAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters sql string filter object cancellationToken CancellationToken Returns Task<IEnumerable<T>> Type Parameters T QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken) Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TReturn>(string sql, object filter, Func<TFirst, TSecond, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters sql string filter object func Func<TFirst, TSecond, TReturn> splitOn string cancellationToken CancellationToken Returns Task<IEnumerable<TReturn>> Type Parameters TFirst TSecond TReturn QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken) Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters sql string filter object func Func<TFirst, TSecond, TThird, TReturn> splitOn string cancellationToken CancellationToken Returns Task<IEnumerable<TReturn>> Type Parameters TFirst TSecond TThird TReturn QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken) Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters sql string filter object func Func<TFirst, TSecond, TThird, TFourth, TReturn> splitOn string cancellationToken CancellationToken Returns Task<IEnumerable<TReturn>> Type Parameters TFirst TSecond TThird TFourth TReturn QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken) Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters sql string filter object func Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> splitOn string cancellationToken CancellationToken Returns Task<IEnumerable<TReturn>> Type Parameters TFirst TSecond TThird TFourth TFifth TReturn QueryCountAsync(string, string, object, CancellationToken) Task<int> QueryCountAsync(string tableName, string whereClause = null, object filter = null, CancellationToken cancellationToken = default) Parameters tableName string whereClause string filter object cancellationToken CancellationToken Returns Task<int> QueryFirstOrDefaultAsync<T>(string, object, CancellationToken) Task<T> QueryFirstOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters sql string filter object cancellationToken CancellationToken Returns Task<T> Type Parameters T QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) Task<T> QueryFirstOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns) Parameters tableName string whereClause string filter object cancellationToken CancellationToken columns string[] Returns Task<T> Type Parameters T QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken) Task<IEnumerable<T>> QueryListPagedAsync<T>(string sql, IPagedFilter filter, CancellationToken cancellationToken = default) Parameters sql string filter IPagedFilter cancellationToken CancellationToken Returns Task<IEnumerable<T>> Type Parameters T QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken) Task<PagedCollection<T>> QueryPagedAsync<T>(string sql, IPagedFilter filter, bool useCount = true, CancellationToken cancellationToken = default) where T : class Parameters sql string filter IPagedFilter useCount bool cancellationToken CancellationToken Returns Task<PagedCollection<T>> Type Parameters T QuerySingleOrDefaultAsync<T>(string, object, CancellationToken) Task<T> QuerySingleOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters sql string filter object cancellationToken CancellationToken Returns Task<T> Type Parameters T QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) Task<T> QuerySingleOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns) Parameters tableName string whereClause string filter object cancellationToken CancellationToken columns string[] Returns Task<T> Type Parameters T"
  },
  "api/Innovt.Data.Ado.RepositoryBase.html": {
    "href": "api/Innovt.Data.Ado.RepositoryBase.html",
    "title": "Class RepositoryBase | Innovt Platform",
    "keywords": "Class RepositoryBase Namespace Innovt.Data.Ado Assembly Innovt.Data.Ado.dll Represents a base repository implementation that provides common data access methods. public class RepositoryBase : IRepositoryBase Inheritance object RepositoryBase Implements IRepositoryBase Derived UserRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors RepositoryBase(IDataSource) Initializes a new instance of the RepositoryBase class with the specified data source. public RepositoryBase(IDataSource datasource) Parameters datasource IDataSource RepositoryBase(IDataSource, IConnectionFactory) Initializes a new instance of the RepositoryBase class with the specified data source and connection factory. public RepositoryBase(IDataSource dataSource, IConnectionFactory connectionFactory) Parameters dataSource IDataSource The data source to use for database operations. connectionFactory IConnectionFactory The connection factory for creating database connections. Methods ExecuteAsync(string, object, IDbTransaction, CancellationToken) Asynchronously executes a SQL command and returns the number of affected rows. public Task<int> ExecuteAsync(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default) Parameters sql string The SQL command to execute. filter object An optional object that can be used to pass parameters or filters to the SQL command. dbTransaction IDbTransaction An optional database transaction for the command. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<int> A task representing the asynchronous operation. The task will return the number of affected rows by the executed SQL command. Exceptions ArgumentNullException Thrown if the 'sql' parameter is null. ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken) Asynchronously executes a SQL command and returns a scalar result of type T. public Task<T> ExecuteScalarAsync<T>(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default) Parameters sql string The SQL command to execute. filter object An optional object that can be used to pass parameters or filters to the SQL command. dbTransaction IDbTransaction An optional database transaction for the command. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<T> A task representing the asynchronous operation. The task will return the scalar result of type T from the executed SQL command. Type Parameters T The type of the scalar result. Exceptions ArgumentNullException Thrown if the 'sql' parameter is null. QueryAsync<T>(string, object, CancellationToken) Asynchronously executes a SQL query and returns a collection of results of type T. public Task<IEnumerable<T>> QueryAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters sql string The SQL query to execute. filter object An optional object that can be used to pass parameters or filters to the SQL query. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<IEnumerable<T>> A task representing the asynchronous operation. The task will return a collection of results of type T based on the SQL query. Type Parameters T The type of the result. Exceptions ArgumentNullException Thrown if the 'sql' parameter is null. QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken) Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a provided function. public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TReturn>(string sql, object filter, Func<TFirst, TSecond, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters sql string The SQL query to execute. filter object An optional object that can be used to pass parameters or filters to the SQL query. func Func<TFirst, TSecond, TReturn> A function to map the query results to the desired type. splitOn string The column name to split the results on. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<IEnumerable<TReturn>> A task representing the asynchronous operation. The task will return a collection of results of the specified mapped type. Type Parameters TFirst The type of the first result. TSecond The type of the second result. TReturn The type to map the results to. Exceptions ArgumentNullException Thrown if the 'sql' parameter is null. QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken) Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a provided function. public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters sql string The SQL query to execute. filter object An optional object that can be used to pass parameters or filters to the SQL query. func Func<TFirst, TSecond, TThird, TReturn> A function to map the query results to the desired type. splitOn string The column name to split the results on. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<IEnumerable<TReturn>> A task representing the asynchronous operation. The task will return a collection of results of the specified mapped type. Type Parameters TFirst The type of the first result. TSecond The type of the second result. TThird The type of the third result. TReturn The type to map the results to. Exceptions ArgumentNullException Thrown if the 'sql' parameter is null. QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken) Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a provided function. public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters sql string The SQL query to execute. filter object An optional object that can be used to pass parameters or filters to the SQL query. func Func<TFirst, TSecond, TThird, TFourth, TReturn> A function to map the query results to the desired type. splitOn string The column name to split the results on. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<IEnumerable<TReturn>> A task representing the asynchronous operation. The task will return a collection of results of the specified mapped type. Type Parameters TFirst The type of the first result. TSecond The type of the second result. TThird The type of the third result. TFourth The type of the fourth result. TReturn The type to map the results to. Exceptions ArgumentNullException Thrown if the 'sql' parameter is null. QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken) Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a provided function. public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters sql string The SQL query to execute. filter object An optional object that can be used to pass parameters or filters to the SQL query. func Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> A function to map the query results to the desired type. splitOn string The column name to split the results on. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<IEnumerable<TReturn>> A task representing the asynchronous operation. The task will return a collection of results of the specified mapped type. Type Parameters TFirst The type of the first result. TSecond The type of the second result. TThird The type of the third result. TFourth The type of the fourth result. TFifth The type of the fifth result. TReturn The type to map the results to. Exceptions ArgumentNullException Thrown if the 'sql' parameter is null. QueryCountAsync(string, string, object, CancellationToken) Asynchronously executes a SQL query to count records in a specified table. public Task<int> QueryCountAsync(string tableName, string whereClause = null, object filter = null, CancellationToken cancellationToken = default) Parameters tableName string The name of the table to query. whereClause string An optional WHERE clause to filter the count. filter object An optional object that can be used to pass parameters or filters to the SQL query. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<int> A task representing the asynchronous operation. The task will return the count of records based on the provided criteria. Exceptions ArgumentNullException Thrown if the 'tableName' parameter is null. QueryFirstOrDefaultAsync<T>(string, object, CancellationToken) Asynchronously retrieves the first result of a query using the provided SQL statement. public Task<T> QueryFirstOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters sql string The SQL statement for the query. filter object Additional filter parameters for the query. cancellationToken CancellationToken The cancellation token. Returns Task<T> The first result of the query. Type Parameters T The type of the result. Exceptions ArgumentNullException Thrown when sql is null. QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) Asynchronously retrieves the first result of a query from the specified table based on the provided where clause and optional columns. public Task<T> QueryFirstOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns) Parameters tableName string The name of the table. whereClause string The WHERE clause for the query. filter object Additional filter parameters for the query. cancellationToken CancellationToken The cancellation token. columns string[] The optional columns to select. Returns Task<T> The first result of the query. Type Parameters T The type of the result. Exceptions ArgumentNullException Thrown when tableName or whereClause is null. QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken) Executes a paged SQL query asynchronously and returns the results as an IEnumerable. public Task<IEnumerable<T>> QueryListPagedAsync<T>(string sql, IPagedFilter filter, CancellationToken cancellationToken = default) Parameters sql string The SQL query to execute. filter IPagedFilter The filter for pagination and ordering. cancellationToken CancellationToken A CancellationToken to cancel the asynchronous operation. Defaults to CancellationToken.None. Returns Task<IEnumerable<T>> An IEnumerable containing the results of the query. Type Parameters T The type of object to retrieve from the query. Exceptions ArgumentNullException Thrown when sql or filter is null. QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken) Executes a paged SQL query asynchronously and returns the results as a PagedCollection. public Task<PagedCollection<T>> QueryPagedAsync<T>(string sql, IPagedFilter filter, bool useCount = true, CancellationToken cancellationToken = default) where T : class Parameters sql string The SQL query to execute. filter IPagedFilter The filter for pagination and ordering. useCount bool Flag indicating whether to include a total count of records. Defaults to true. cancellationToken CancellationToken A CancellationToken to cancel the asynchronous operation. Defaults to CancellationToken.None. Returns Task<PagedCollection<T>> A PagedCollection containing the results of the query. Type Parameters T The type of object to retrieve from the query. Exceptions ArgumentNullException Thrown when sql is null. SqlSyntaxException Thrown when the ORDER BY clause is not found in the SQL query. QuerySingleOrDefaultAsync<T>(string, object, CancellationToken) Asynchronously executes a SQL query and returns a single result of type T, or a default value if no result is found. public Task<T> QuerySingleOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters sql string The SQL query to execute. filter object An optional object that can be used to pass parameters or filters to the SQL query. cancellationToken CancellationToken A cancellation token that can be used to cancel the operation. Returns Task<T> A task representing the asynchronous operation. The task will return the single result of type T if found, or the default value for type T if no result is found. Type Parameters T The type of the result. Exceptions ArgumentNullException Thrown if the 'sql' parameter is null. QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) Asynchronously retrieves a single result from the specified table based on the provided where clause and optional columns. public Task<T> QuerySingleOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns) Parameters tableName string The name of the table. whereClause string The WHERE clause for the query. filter object Additional filter parameters for the query. cancellationToken CancellationToken The cancellation token. columns string[] The optional columns to select. Returns Task<T> A single result from the query. Type Parameters T The type of the result. Exceptions ArgumentNullException Thrown when tableName or whereClause is null."
  },
  "api/Innovt.Data.Ado.Tests.Model.User.html": {
    "href": "api/Innovt.Data.Ado.Tests.Model.User.html",
    "title": "Class User | Innovt Platform",
    "keywords": "Class User Namespace Innovt.Data.Ado.Tests.Model Assembly Innovt.Data.Ado.Tests.dll public class User Inheritance object User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.Ado.Tests.Model.UserFilter.html": {
    "href": "api/Innovt.Data.Ado.Tests.Model.UserFilter.html",
    "title": "Class UserFilter | Innovt Platform",
    "keywords": "Class UserFilter Namespace Innovt.Data.Ado.Tests.Model Assembly Innovt.Data.Ado.Tests.dll public class UserFilter : IPagedFilter, IFilter, IValidatableObject Inheritance object UserFilter Implements IPagedFilter IFilter IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Page Gets or sets the page number for pagination. public int Page { get; set; } Property Value int PageSize Gets or sets the number of items to display per page. public int PageSize { get; set; } Property Value int Methods Validate(ValidationContext) Determines whether the specified object is valid. public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection that holds failed-validation information."
  },
  "api/Innovt.Data.Ado.Tests.Model.html": {
    "href": "api/Innovt.Data.Ado.Tests.Model.html",
    "title": "Namespace Innovt.Data.Ado.Tests.Model | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Ado.Tests.Model Classes User UserFilter"
  },
  "api/Innovt.Data.Ado.Tests.RepositoryBaseTests.html": {
    "href": "api/Innovt.Data.Ado.Tests.RepositoryBaseTests.html",
    "title": "Class RepositoryBaseTests | Innovt Platform",
    "keywords": "Class RepositoryBaseTests Namespace Innovt.Data.Ado.Tests Assembly Innovt.Data.Ado.Tests.dll [TestFixture] public class RepositoryBaseTests Inheritance object RepositoryBaseTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Repository() [Test] [Ignore(\"Only for Local Tests\")] public Task Repository() Returns Task"
  },
  "api/Innovt.Data.Ado.Tests.UserRepository.html": {
    "href": "api/Innovt.Data.Ado.Tests.UserRepository.html",
    "title": "Class UserRepository | Innovt Platform",
    "keywords": "Class UserRepository Namespace Innovt.Data.Ado.Tests Assembly Innovt.Data.Ado.Tests.dll public class UserRepository : RepositoryBase, IRepositoryBase Inheritance object RepositoryBase UserRepository Implements IRepositoryBase Inherited Members RepositoryBase.QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) RepositoryBase.QueryFirstOrDefaultAsync<T>(string, object, CancellationToken) RepositoryBase.QuerySingleOrDefaultAsync<T>(string, object, CancellationToken) RepositoryBase.QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) RepositoryBase.QueryCountAsync(string, string, object, CancellationToken) RepositoryBase.QueryAsync<T>(string, object, CancellationToken) RepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken) RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken) RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken) RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken) RepositoryBase.ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken) RepositoryBase.ExecuteAsync(string, object, IDbTransaction, CancellationToken) RepositoryBase.QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken) RepositoryBase.QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors UserRepository(IDataSource) public UserRepository(IDataSource datasource) Parameters datasource IDataSource UserRepository(IDataSource, IConnectionFactory) public UserRepository(IDataSource datasource, IConnectionFactory connectionFactory) Parameters datasource IDataSource connectionFactory IConnectionFactory Methods CountBy() public Task<IEnumerable<dynamic>> CountBy() Returns Task<IEnumerable<dynamic>> GetAll() public Task<IEnumerable<dynamic>> GetAll() Returns Task<IEnumerable<dynamic>>"
  },
  "api/Innovt.Data.Ado.Tests.html": {
    "href": "api/Innovt.Data.Ado.Tests.html",
    "title": "Namespace Innovt.Data.Ado.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Ado.Tests Classes RepositoryBaseTests UserRepository"
  },
  "api/Innovt.Data.Ado.html": {
    "href": "api/Innovt.Data.Ado.html",
    "title": "Namespace Innovt.Data.Ado | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Ado Classes ConnectionFactory Represents a factory for creating database connections based on a data source. RepositoryBase Represents a base repository implementation that provides common data access methods. Interfaces IConnectionFactory Represents an interface for a factory that creates database connections based on a data source. IRepositoryBase Represents a base interface for repository operations."
  },
  "api/Innovt.Data.DataModels.BaseDataModel-2.html": {
    "href": "api/Innovt.Data.DataModels.BaseDataModel-2.html",
    "title": "Class BaseDataModel<TDomain, TDataModel> | Innovt Platform",
    "keywords": "Class BaseDataModel<TDomain, TDataModel> Namespace Innovt.Data.DataModels Assembly Innovt.Data.dll The base abstract class for data model classes that facilitate communication between domain models and data models. public abstract class BaseDataModel<TDomain, TDataModel> : INotifyPropertyChanged, IBaseDataModel where TDomain : class where TDataModel : class Type Parameters TDomain The type representing the domain model. TDataModel The type representing the data model. Inheritance object BaseDataModel<TDomain, TDataModel> Implements INotifyPropertyChanged IBaseDataModel Derived UserDataModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties EnableTrackingChanges Gets or sets a value indicating whether change tracking is enabled. public bool EnableTrackingChanges { get; set; } Property Value bool HasChanges Gets a value indicating whether there are pending changes in the data model. public bool HasChanges { get; } Property Value bool Methods OnPropertyChanged(string) Raises the PropertyChanged event and updates the change tracking if enabled. protected virtual void OnPropertyChanged(string propertyName = null) Parameters propertyName string The name of the property that changed (auto-populated). ParseToDataModel(IList<TDomain>) Converts a list of domain model instances to a list of data model instances. public virtual List<TDataModel> ParseToDataModel(IList<TDomain> domainModels) Parameters domainModels IList<TDomain> The list of domain model instances to convert. Returns List<TDataModel> A list of corresponding data model instances. ParseToDataModel(TDomain) Converts a domain model instance to a data model instance. public abstract TDataModel ParseToDataModel(TDomain domainModel) Parameters domainModel TDomain The domain model instance to convert. Returns TDataModel The corresponding data model instance. ParseToDomain(IList<TDataModel>) Converts a list of data model instances to a list of domain model instances. public virtual List<TDomain> ParseToDomain(IList<TDataModel> dataModels) Parameters dataModels IList<TDataModel> The list of data model instances to convert. Returns List<TDomain> A list of corresponding domain model instances. ParseToDomain(TDataModel) Converts a data model instance to a domain model instance. public abstract TDomain ParseToDomain(TDataModel dataModel) Parameters dataModel TDataModel The data model instance to convert. Returns TDomain The corresponding domain model instance. SetProperty<T>(ref T, T, string) Sets the value of a property and raises the PropertyChanged event if the value changes. protected bool SetProperty<T>(ref T field, T value, string propertyName = null) Parameters field T Reference to the property's backing field. value T The new value to set. propertyName string The name of the property that changed (auto-populated). Returns bool True if the property value changed; otherwise, false. Type Parameters T The property type. Events PropertyChanged Event that is raised when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/Innovt.Data.DataModels.DmContext.html": {
    "href": "api/Innovt.Data.DataModels.DmContext.html",
    "title": "Class DmContext | Innovt Platform",
    "keywords": "Class DmContext Namespace Innovt.Data.DataModels Assembly Innovt.Data.dll Represents a context for managing instances of data models and tracking changes. public class DmContext Inheritance object DmContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Attach<T>(T) Attaches a data model entity to the context for change tracking. public void Attach<T>(T entity) where T : IBaseDataModel Parameters entity T The entity to be attached. Type Parameters T The type of the entity implementing IBaseDataModel. Exceptions ArgumentNullException Thrown when the entity is null. DeAttach<T>(T) Detaches a data model entity from the context and disables change tracking. public void DeAttach<T>(T entity) where T : IBaseDataModel Parameters entity T The entity to be detached. Type Parameters T The type of the entity implementing IBaseDataModel. Exceptions ArgumentNullException Thrown when the entity is null. Find<T>(T) Finds a data model entity in the context based on its hash code. public T Find<T>(T entity) where T : IBaseDataModel Parameters entity T The entity to be found. Returns T The found data model entity or default if not found. Type Parameters T The type of the entity implementing IBaseDataModel. Exceptions ArgumentNullException Thrown when the entity is null. GetAllWithChanges() Retrieves a list of data model entities that have changes. public List<object> GetAllWithChanges() Returns List<object> A list of data model entities with pending changes. Instance() Gets the singleton instance of the DMContext. public static DmContext Instance() Returns DmContext The singleton instance of the DMContext."
  },
  "api/Innovt.Data.DataModels.IBaseDataModel.html": {
    "href": "api/Innovt.Data.DataModels.IBaseDataModel.html",
    "title": "Interface IBaseDataModel | Innovt Platform",
    "keywords": "Interface IBaseDataModel Namespace Innovt.Data.DataModels Assembly Innovt.Data.dll Represents the base interface for data model entities, providing change tracking capabilities. public interface IBaseDataModel Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties EnableTrackingChanges Gets or sets a value indicating whether change tracking is enabled for the data model. bool EnableTrackingChanges { get; set; } Property Value bool HasChanges Gets a value indicating whether the data model has pending changes. bool HasChanges { get; } Property Value bool"
  },
  "api/Innovt.Data.DataModels.html": {
    "href": "api/Innovt.Data.DataModels.html",
    "title": "Namespace Innovt.Data.DataModels | Innovt Platform",
    "keywords": "Namespace Innovt.Data.DataModels Classes BaseDataModel<TDomain, TDataModel> The base abstract class for data model classes that facilitate communication between domain models and data models. DmContext Represents a context for managing instances of data models and tracking changes. Interfaces IBaseDataModel Represents the base interface for data model entities, providing change tracking capabilities."
  },
  "api/Innovt.Data.DataSources.DataSourceBase.html": {
    "href": "api/Innovt.Data.DataSources.DataSourceBase.html",
    "title": "Class DataSourceBase | Innovt Platform",
    "keywords": "Class DataSourceBase Namespace Innovt.Data.DataSources Assembly Innovt.Data.dll The Default DataSource is using ConfigurationManager public abstract class DataSourceBase : IDataSource Inheritance object DataSourceBase Implements IDataSource Derived DataSourceReader DataSourceWriter DefaultDataSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DataSourceBase(IConfiguration, string, Provider) Initializes a new instance of the DataSourceBase class with configuration settings. protected DataSourceBase(IConfiguration configuration, string connectionStringName, Provider provider = Provider.MsSql) Parameters configuration IConfiguration The configuration containing connection string settings. connectionStringName string The name of the connection string. provider Provider The provider for the data source (default is MsSql). DataSourceBase(IConfiguration, string, string, Provider) Initializes a new instance of the DataSourceBase class with configuration settings and a custom name. protected DataSourceBase(IConfiguration configuration, string name, string connectionStringName, Provider provider = Provider.MsSql) Parameters configuration IConfiguration The configuration containing connection string settings. name string The custom name of the data source. connectionStringName string The name of the connection string. provider Provider The provider for the data source (default is MsSql). DataSourceBase(string, string, Provider) Initializes a new instance of the DataSourceBase class with the specified parameters. protected DataSourceBase(string name, string connectionString, Provider provider = Provider.MsSql) Parameters name string The name of the data source. connectionString string The connection string for the data source. provider Provider The provider for the data source (default is MsSql). Properties Name Gets or sets the name of the data source. public string Name { get; set; } Property Value string Provider Gets the provider for the data source. public Provider Provider { get; } Property Value Provider Methods GetConnectionString() Retrieves the connection string for the data source. public string GetConnectionString() Returns string The connection string for the data source."
  },
  "api/Innovt.Data.DataSources.DataSourceReader.html": {
    "href": "api/Innovt.Data.DataSources.DataSourceReader.html",
    "title": "Class DataSourceReader | Innovt Platform",
    "keywords": "Class DataSourceReader Namespace Innovt.Data.DataSources Assembly Innovt.Data.dll Represents a data source reader that inherits from DataSourceBase and implements IDataSourceReader. public class DataSourceReader : DataSourceBase, IDataSourceReader, IDataSource Inheritance object DataSourceBase DataSourceReader Implements IDataSourceReader IDataSource Inherited Members DataSourceBase.Name DataSourceBase.Provider DataSourceBase.GetConnectionString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DataSourceReader(IConfiguration, string, Provider) Initializes a new instance of the DataSourceReader class with configuration settings. public DataSourceReader(IConfiguration configuration, string connectionStringName, Provider provider = Provider.MsSql) Parameters configuration IConfiguration The configuration containing connection string settings. connectionStringName string The name of the connection string. provider Provider The provider for the data source (default is MsSql). DataSourceReader(IConfiguration, string, string, Provider) Initializes a new instance of the DataSourceReader class with configuration settings and a custom name. public DataSourceReader(IConfiguration configuration, string name, string connectionStringName, Provider provider = Provider.MsSql) Parameters configuration IConfiguration The configuration containing connection string settings. name string The custom name of the data source. connectionStringName string The name of the connection string. provider Provider The provider for the data source (default is MsSql). DataSourceReader(string, string, Provider) Initializes a new instance of the DataSourceReader class with the specified parameters. public DataSourceReader(string name, string connectionString, Provider provider = Provider.MsSql) Parameters name string The name of the data source. connectionString string The connection string for the data source. provider Provider The provider for the data source (default is MsSql)."
  },
  "api/Innovt.Data.DataSources.DataSourceWriter.html": {
    "href": "api/Innovt.Data.DataSources.DataSourceWriter.html",
    "title": "Class DataSourceWriter | Innovt Platform",
    "keywords": "Class DataSourceWriter Namespace Innovt.Data.DataSources Assembly Innovt.Data.dll Represents a data source writer that inherits from DataSourceBase and implements IDataSourceWriter. public class DataSourceWriter : DataSourceBase, IDataSourceWriter, IDataSource Inheritance object DataSourceBase DataSourceWriter Implements IDataSourceWriter IDataSource Inherited Members DataSourceBase.Name DataSourceBase.Provider DataSourceBase.GetConnectionString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DataSourceWriter(IConfiguration, string, Provider) Initializes a new instance of the DataSourceWriter class with configuration settings. public DataSourceWriter(IConfiguration configuration, string connectionStringName, Provider provider = Provider.MsSql) Parameters configuration IConfiguration The configuration containing connection string settings. connectionStringName string The name of the connection string. provider Provider The provider for the data source (default is MsSql). DataSourceWriter(IConfiguration, string, string, Provider) Initializes a new instance of the DataSourceWriter class with configuration settings and a custom name. public DataSourceWriter(IConfiguration configuration, string name, string connectionStringName, Provider provider = Provider.MsSql) Parameters configuration IConfiguration The configuration containing connection string settings. name string The custom name of the data source. connectionStringName string The name of the connection string. provider Provider The provider for the data source (default is MsSql). DataSourceWriter(string, string, Provider) Initializes a new instance of the DataSourceWriter class with the specified parameters. public DataSourceWriter(string name, string connectionString, Provider provider = Provider.MsSql) Parameters name string The name of the data source. connectionString string The connection string for the data source. provider Provider The provider for the data source (default is MsSql)."
  },
  "api/Innovt.Data.DataSources.DefaultDataSource.html": {
    "href": "api/Innovt.Data.DataSources.DefaultDataSource.html",
    "title": "Class DefaultDataSource | Innovt Platform",
    "keywords": "Class DefaultDataSource Namespace Innovt.Data.DataSources Assembly Innovt.Data.dll Represents a default data source that inherits from DataSourceBase. public class DefaultDataSource : DataSourceBase, IDataSource Inheritance object DataSourceBase DefaultDataSource Implements IDataSource Inherited Members DataSourceBase.Name DataSourceBase.Provider DataSourceBase.GetConnectionString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DefaultDataSource(IConfiguration, string, Provider) Initializes a new instance of the DefaultDataSource class with configuration settings. public DefaultDataSource(IConfiguration configuration, string connectionStringName, Provider provider = Provider.MsSql) Parameters configuration IConfiguration The configuration containing connection string settings. connectionStringName string The name of the connection string. provider Provider The provider for the data source (default is MsSql). DefaultDataSource(IConfiguration, string, string, Provider) Initializes a new instance of the DefaultDataSource class with configuration settings and a custom name. public DefaultDataSource(IConfiguration configuration, string name, string connectionStringName, Provider provider = Provider.MsSql) Parameters configuration IConfiguration The configuration containing connection string settings. name string The custom name of the data source. connectionStringName string The name of the connection string. provider Provider The provider for the data source (default is MsSql). DefaultDataSource(string, string, Provider) Initializes a new instance of the DefaultDataSource class with the specified parameters. public DefaultDataSource(string name, string connectionString, Provider provider = Provider.MsSql) Parameters name string The name of the data source. connectionString string The connection string for the data source. provider Provider The provider for the data source (default is MsSql)."
  },
  "api/Innovt.Data.DataSources.IDataSource.html": {
    "href": "api/Innovt.Data.DataSources.IDataSource.html",
    "title": "Interface IDataSource | Innovt Platform",
    "keywords": "Interface IDataSource Namespace Innovt.Data.DataSources Assembly Innovt.Data.dll Represents an interface for a data source, providing information about the data source. public interface IDataSource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Name Gets or sets the name of the data source. string Name { get; set; } Property Value string Provider Gets the provider for the data source. Provider Provider { get; } Property Value Provider Methods GetConnectionString() Retrieves the connection string for the data source. string GetConnectionString() Returns string The connection string for the data source."
  },
  "api/Innovt.Data.DataSources.IDataSourceReader.html": {
    "href": "api/Innovt.Data.DataSources.IDataSourceReader.html",
    "title": "Interface IDataSourceReader | Innovt Platform",
    "keywords": "Interface IDataSourceReader Namespace Innovt.Data.DataSources Assembly Innovt.Data.dll public interface IDataSourceReader : IDataSource Inherited Members IDataSource.Name IDataSource.Provider IDataSource.GetConnectionString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.IDataSourceWriter.html": {
    "href": "api/Innovt.Data.DataSources.IDataSourceWriter.html",
    "title": "Interface IDataSourceWriter | Innovt Platform",
    "keywords": "Interface IDataSourceWriter Namespace Innovt.Data.DataSources Assembly Innovt.Data.dll Represents an interface for a data source writer, inheriting from IDataSource. public interface IDataSourceWriter : IDataSource Inherited Members IDataSource.Name IDataSource.Provider IDataSource.GetConnectionString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.html": {
    "href": "api/Innovt.Data.DataSources.html",
    "title": "Namespace Innovt.Data.DataSources | Innovt Platform",
    "keywords": "Namespace Innovt.Data.DataSources Classes DataSourceBase The Default DataSource is using ConfigurationManager DataSourceReader Represents a data source reader that inherits from DataSourceBase and implements IDataSourceReader. DataSourceWriter Represents a data source writer that inherits from DataSourceBase and implements IDataSourceWriter. DefaultDataSource Represents a default data source that inherits from DataSourceBase. Interfaces IDataSource Represents an interface for a data source, providing information about the data source. IDataSourceReader IDataSourceWriter Represents an interface for a data source writer, inheriting from IDataSource."
  },
  "api/Innovt.Data.EFCore.DBContextBase.html": {
    "href": "api/Innovt.Data.EFCore.DBContextBase.html",
    "title": "Class DBContextBase | Innovt Platform",
    "keywords": "Class DBContextBase Namespace Innovt.Data.EFCore Assembly Innovt.Data.EFCore.dll Abstract base class for Entity Framework DbContext implementing the extended unit of work interface. public abstract class DBContextBase : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable Inheritance object DbContext DBContextBase Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Derived DBContext DBContext DBContext Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DBContextBase(IDataSource) Initializes a new instance of the DBContextBase class using a data source. protected DBContextBase(IDataSource dataSource) Parameters dataSource IDataSource The data source to use. Exceptions ArgumentNullException Thrown when the data source is null. DBContextBase(IDataSource, ILoggerFactory) Initializes a new instance of the DBContextBase class using a data source and logger factory. protected DBContextBase(IDataSource dataSource, ILoggerFactory loggerFactory) Parameters dataSource IDataSource The data source to use. loggerFactory ILoggerFactory The logger factory to use. Exceptions ArgumentNullException Thrown when the data source or logger factory is null. DBContextBase(DbContextOptions) Initializes a new instance of the DBContextBase class using DbContext options. protected DBContextBase(DbContextOptions options) Parameters options DbContextOptions The DbContext options. Properties MaxRetryCount Gets or sets the maximum number of retries for a transaction. public int? MaxRetryCount { get; set; } Property Value int? MaxRetryDelay Gets or sets the maximum delay between retries for a transaction. public TimeSpan? MaxRetryDelay { get; set; } Property Value TimeSpan? Methods AddAsync<T>(IEnumerable<T>, CancellationToken) Asynchronously adds a collection of entities to the DbContext. public Task AddAsync<T>(IEnumerable<T> entities, CancellationToken cancellationToken = default) where T : class Parameters entities IEnumerable<T> The collection of entities to add. cancellationToken CancellationToken Cancellation token (optional). Returns Task A task representing the asynchronous operation. Type Parameters T The type of entities to add. AddAsync<T>(T, CancellationToken) Asynchronously adds an entity to the DbContext. public Task AddAsync<T>(T entity, CancellationToken cancellationToken = default) where T : class Parameters entity T The entity to add. cancellationToken CancellationToken Cancellation token (optional). Returns Task A task representing the asynchronous operation. Type Parameters T The type of entity to add. Add<T>(IEnumerable<T>) Adds a collection of entities to the DbContext. public void Add<T>(IEnumerable<T> entities) where T : class Parameters entities IEnumerable<T> The collection of entities to add. Type Parameters T The type of entities to add. Add<T>(T) Adds an entity to the DbContext. public void Add<T>(T entity) where T : class Parameters entity T The entity to add. Type Parameters T The type of entity to add. Attach<T>(T) Attaches the specified entity to the DbContext. public void Attach<T>(T entity) where T : class Parameters entity T The entity to attach. Type Parameters T The type of entity to attach. Commit() Commits the changes made in the unit of work to the database. public int Commit() Returns int The number of entities written to the database. CommitAsync(CancellationToken) Asynchronously commits the changes made in the unit of work to the database. public Task<int> CommitAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Cancellation token (optional). Returns Task<int> The number of entities written to the database. ConfigureProvider(DbContextOptionsBuilder, string) Configures the provider-specific options for the DbContext. protected abstract void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters optionsBuilder DbContextOptionsBuilder The options builder for configuring DbContext options. connectionString string The connection string for the data source. Detach<T>(T) Detaches an entity from the DbContext. public void Detach<T>(T entity) where T : class Parameters entity T The entity to detach. Type Parameters T The type of entity to detach. ExecuteSqlCommand(string, params object[]) Executes a SQL command against the database. public abstract int ExecuteSqlCommand(string sql, params object[] parameters) Parameters sql string The SQL command to execute. parameters object[] The parameters for the SQL command. Returns int The number of entities affected by the SQL command. ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a SQL command against the database. public abstract Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters sql string The SQL command to execute. cancellationToken CancellationToken Cancellation token (optional). parameters object[] The parameters for the SQL command. Returns Task<int> A task representing the asynchronous operation and yielding the number of entities affected by the SQL command. OnConfiguring(DbContextOptionsBuilder) Overrides the configuration of DbContext options. protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters optionsBuilder DbContextOptionsBuilder The options builder for configuring DbContext options. Queryable<T>() Gets a queryable representation of a specific entity type. public IQueryable<T> Queryable<T>() where T : class Returns IQueryable<T> An IQueryable<T> representing the entity type. Type Parameters T The type of entity. Remove<T>(IEnumerable<T>) Removes a collection of entities from the DbContext. public void Remove<T>(IEnumerable<T> entities) where T : class Parameters entities IEnumerable<T> The collection of entities to remove. Type Parameters T The type of entities to remove. Remove<T>(T) public void Remove<T>(T entity) where T : class Parameters entity T Type Parameters T Rollback() Rolls back the changes made in the unit of work by setting all entries to an unchanged state. public void Rollback() Update<T>(T) Updates the specified entity in the DbContext. public void Update<T>(T entity) where T : class Parameters entity T The entity to update. Type Parameters T The type of entity to update."
  },
  "api/Innovt.Data.EFCore.EfExtensions.html": {
    "href": "api/Innovt.Data.EFCore.EfExtensions.html",
    "title": "Class EfExtensions | Innovt Platform",
    "keywords": "Class EfExtensions Namespace Innovt.Data.EFCore Assembly Innovt.Data.EFCore.dll Extension methods for Entity Framework IQueryable to facilitate query operations. public static class EfExtensions Inheritance object EfExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddConfiguration<TEntity>(ModelBuilder, IEntityTypeConfiguration<TEntity>) Adds an entity type configuration to the ModelBuilder. public static void AddConfiguration<TEntity>(this ModelBuilder modelBuilder, IEntityTypeConfiguration<TEntity> configuration) where TEntity : class Parameters modelBuilder ModelBuilder The ModelBuilder to which the configuration is added. configuration IEntityTypeConfiguration<TEntity> The entity type configuration. Type Parameters TEntity The entity type. AddConfiguration<TEntity>(ModelBuilder, IList<IEntityTypeConfiguration<TEntity>>) Adds a list of entity type configurations to the ModelBuilder. public static void AddConfiguration<TEntity>(this ModelBuilder modelBuilder, IList<IEntityTypeConfiguration<TEntity>> configurationList) where TEntity : class Parameters modelBuilder ModelBuilder The ModelBuilder to which the configurations are added. configurationList IList<IEntityTypeConfiguration<TEntity>> The list of entity type configurations. Type Parameters TEntity The entity type. AddInclude<T>(IQueryable<T>, Include?) Adds navigation properties to include in the query. public static IQueryable<T> AddInclude<T>(this IQueryable<T> query, Include? includes) where T : class Parameters query IQueryable<T> The IQueryable to which includes are added. includes Include The navigation properties to include. Returns IQueryable<T> The IQueryable with added includes. Type Parameters T The type of entity. AddInclude<T>(IQueryable<T>, string?) Adds a navigation property to include in the query using a string. public static IQueryable<T> AddInclude<T>(this IQueryable<T> query, string? include) where T : class Parameters query IQueryable<T> The IQueryable to which the include is added. include string The navigation property to include. Returns IQueryable<T> The IQueryable with added include. Type Parameters T The type of entity. AddInclude<T>(IQueryable<T>, params string[]) Adds navigation properties to include in the query using string-based includes. public static IQueryable<T> AddInclude<T>(this IQueryable<T> query, params string[] includes) where T : class Parameters query IQueryable<T> The IQueryable to which includes are added. includes string[] Array of navigation properties to include. Returns IQueryable<T> The IQueryable with added includes. Type Parameters T The type of entity. ApplyPagination<T>(IQueryable<T>, ISpecification<T>) Applies pagination to the query based on an ISpecification. public static IQueryable<T> ApplyPagination<T>(this IQueryable<T> query, ISpecification<T> specification) where T : class Parameters query IQueryable<T> The IQueryable to which pagination is applied. specification ISpecification<T> The specification containing pagination details. Returns IQueryable<T> The IQueryable with applied pagination. Type Parameters T The type of entity. ApplyPagination<T>(IQueryable<T>, int?, int?) Applies pagination to the query based on page number and page size. public static IQueryable<T> ApplyPagination<T>(this IQueryable<T> query, int? page, int? pageSize) where T : class Parameters query IQueryable<T> The IQueryable to which pagination is applied. page int? The page number. pageSize int? The page size. Returns IQueryable<T> The IQueryable with applied pagination. Type Parameters T The type of entity."
  },
  "api/Innovt.Data.EFCore.Maps.AddressMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.AddressMap.html",
    "title": "Class AddressMap | Innovt Platform",
    "keywords": "Class AddressMap Namespace Innovt.Data.EFCore.Maps Assembly Innovt.Data.EFCore.dll Configuration for mapping the Address entity to the database using Entity Framework Core. public class AddressMap : IEntityTypeConfiguration<Address> Inheritance object AddressMap Implements IEntityTypeConfiguration<Address> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors AddressMap(bool, bool, bool) Initializes a new instance of the AddressMap class. public AddressMap(bool ignoreCoordinate = false, bool ignoreCity = false, bool ignoreType = false) Parameters ignoreCoordinate bool Flag indicating whether to ignore coordinate mapping. Defaults to false. ignoreCity bool Flag indicating whether to ignore city mapping. Defaults to false. ignoreType bool Flag indicating whether to ignore type mapping. Defaults to false. Methods Configure(EntityTypeBuilder<Address>) Configures the mapping for the Address entity. public void Configure(EntityTypeBuilder<Address> builder) Parameters builder EntityTypeBuilder<Address> The entity type builder. Exceptions ArgumentNullException Thrown when the builder parameter is null."
  },
  "api/Innovt.Data.EFCore.Maps.AddressTypeMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.AddressTypeMap.html",
    "title": "Class AddressTypeMap | Innovt Platform",
    "keywords": "Class AddressTypeMap Namespace Innovt.Data.EFCore.Maps Assembly Innovt.Data.EFCore.dll Configuration for mapping the AddressType entity to the database using Entity Framework Core. public class AddressTypeMap : IEntityTypeConfiguration<AddressType> Inheritance object AddressTypeMap Implements IEntityTypeConfiguration<AddressType> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Configure(EntityTypeBuilder<AddressType>) Configures the mapping for the AddressType entity. public void Configure(EntityTypeBuilder<AddressType> builder) Parameters builder EntityTypeBuilder<AddressType> The entity type builder. Exceptions ArgumentNullException Thrown when the builder parameter is null."
  },
  "api/Innovt.Data.EFCore.Maps.BaseUserMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.BaseUserMap.html",
    "title": "Class BaseUserMap | Innovt Platform",
    "keywords": "Class BaseUserMap Namespace Innovt.Data.EFCore.Maps Assembly Innovt.Data.EFCore.dll Configuration for mapping the BaseUser entity to the database using Entity Framework Core. public class BaseUserMap : IEntityTypeConfiguration<BaseUser> Inheritance object BaseUserMap Implements IEntityTypeConfiguration<BaseUser> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Configure(EntityTypeBuilder<BaseUser>) Configures the mapping for the BaseUser entity. public void Configure(EntityTypeBuilder<BaseUser> builder) Parameters builder EntityTypeBuilder<BaseUser> The entity type builder. Exceptions ArgumentNullException Thrown when the builder parameter is null."
  },
  "api/Innovt.Data.EFCore.Maps.CityMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.CityMap.html",
    "title": "Class CityMap | Innovt Platform",
    "keywords": "Class CityMap Namespace Innovt.Data.EFCore.Maps Assembly Innovt.Data.EFCore.dll Configuration for mapping the City entity to the database using Entity Framework Core. public class CityMap : IEntityTypeConfiguration<City> Inheritance object CityMap Implements IEntityTypeConfiguration<City> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Configure(EntityTypeBuilder<City>) Configures the mapping for the City entity. public void Configure(EntityTypeBuilder<City> builder) Parameters builder EntityTypeBuilder<City> The entity type builder. Exceptions ArgumentNullException Thrown when the builder parameter is null."
  },
  "api/Innovt.Data.EFCore.Maps.CountryMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.CountryMap.html",
    "title": "Class CountryMap | Innovt Platform",
    "keywords": "Class CountryMap Namespace Innovt.Data.EFCore.Maps Assembly Innovt.Data.EFCore.dll Configuration for mapping the Country entity to the database using Entity Framework Core. public class CountryMap : IEntityTypeConfiguration<Country> Inheritance object CountryMap Implements IEntityTypeConfiguration<Country> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors CountryMap(bool) Initializes a new instance of the CountryMap class. public CountryMap(bool ignoreIsoCode = false) Parameters ignoreIsoCode bool Flag indicating whether to ignore ISO code mapping. Defaults to false. Methods Configure(EntityTypeBuilder<Country>) Configures the mapping for the Country entity. public void Configure(EntityTypeBuilder<Country> builder) Parameters builder EntityTypeBuilder<Country> The entity type builder. Exceptions ArgumentNullException Thrown when the builder parameter is null."
  },
  "api/Innovt.Data.EFCore.Maps.DocumentMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.DocumentMap.html",
    "title": "Class DocumentMap | Innovt Platform",
    "keywords": "Class DocumentMap Namespace Innovt.Data.EFCore.Maps Assembly Innovt.Data.EFCore.dll Configuration for mapping the Document entity to the database using Entity Framework Core. public class DocumentMap : IEntityTypeConfiguration<Document> Inheritance object DocumentMap Implements IEntityTypeConfiguration<Document> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DocumentMap(bool) Initializes a new instance of the DocumentMap class. public DocumentMap(bool ignoreDocumentType = false) Parameters ignoreDocumentType bool Flag indicating whether to ignore document type mapping. Defaults to false. Methods Configure(EntityTypeBuilder<Document>) Configures the mapping for the Document entity. public void Configure(EntityTypeBuilder<Document> builder) Parameters builder EntityTypeBuilder<Document> The entity type builder. Exceptions ArgumentNullException Thrown when the builder parameter is null."
  },
  "api/Innovt.Data.EFCore.Maps.DocumentTypeMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.DocumentTypeMap.html",
    "title": "Class DocumentTypeMap | Innovt Platform",
    "keywords": "Class DocumentTypeMap Namespace Innovt.Data.EFCore.Maps Assembly Innovt.Data.EFCore.dll Configuration for mapping the DocumentType entity to the database using Entity Framework Core. public class DocumentTypeMap : IEntityTypeConfiguration<DocumentType> Inheritance object DocumentTypeMap Implements IEntityTypeConfiguration<DocumentType> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Configure(EntityTypeBuilder<DocumentType>) Configures the mapping for the DocumentType entity. public void Configure(EntityTypeBuilder<DocumentType> builder) Parameters builder EntityTypeBuilder<DocumentType> The entity type builder. Exceptions ArgumentNullException Thrown when the builder parameter is null."
  },
  "api/Innovt.Data.EFCore.Maps.html": {
    "href": "api/Innovt.Data.EFCore.Maps.html",
    "title": "Namespace Innovt.Data.EFCore.Maps | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.Maps Classes AddressMap Configuration for mapping the Address entity to the database using Entity Framework Core. AddressTypeMap Configuration for mapping the AddressType entity to the database using Entity Framework Core. BaseUserMap Configuration for mapping the BaseUser entity to the database using Entity Framework Core. CityMap Configuration for mapping the City entity to the database using Entity Framework Core. CountryMap Configuration for mapping the Country entity to the database using Entity Framework Core. DocumentMap Configuration for mapping the Document entity to the database using Entity Framework Core. DocumentTypeMap Configuration for mapping the DocumentType entity to the database using Entity Framework Core."
  },
  "api/Innovt.Data.EFCore.MsSql.DBContext.html": {
    "href": "api/Innovt.Data.EFCore.MsSql.DBContext.html",
    "title": "Class DBContext | Innovt Platform",
    "keywords": "Class DBContext Namespace Innovt.Data.EFCore.MsSql Assembly Innovt.Data.EFCore.MsSql.dll Represents the Entity Framework DbContext for the application. public class DBContext : DBContextBase, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable Inheritance object DbContext DBContextBase DBContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Inherited Members DBContextBase.MaxRetryCount DBContextBase.MaxRetryDelay DBContextBase.Commit() DBContextBase.CommitAsync(CancellationToken) DBContextBase.Rollback() DBContextBase.Add<T>(T) DBContextBase.Add<T>(IEnumerable<T>) DBContextBase.AddAsync<T>(T, CancellationToken) DBContextBase.AddAsync<T>(IEnumerable<T>, CancellationToken) DBContextBase.Remove<T>(T) DBContextBase.Remove<T>(IEnumerable<T>) DBContextBase.Update<T>(T) DBContextBase.Attach<T>(T) DBContextBase.Detach<T>(T) DBContextBase.Queryable<T>() DBContextBase.OnConfiguring(DbContextOptionsBuilder) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DBContext(IDataSource) Initializes a new instance of the DBContext class using a data source. public DBContext(IDataSource dataSource) Parameters dataSource IDataSource The data source to use. DBContext(IDataSource, ILoggerFactory) Initializes a new instance of the DBContext class using a data source and logger factory. protected DBContext(IDataSource dataSource, ILoggerFactory loggerFactory) Parameters dataSource IDataSource The data source to use. loggerFactory ILoggerFactory The logger factory to use. DBContext(DbContextOptions) Initializes a new instance of the DBContext class using DbContext options. protected DBContext(DbContextOptions options) Parameters options DbContextOptions The DbContext options. Methods ConfigureProvider(DbContextOptionsBuilder, string) Configures the provider-specific options for the DbContext. protected override void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters optionsBuilder DbContextOptionsBuilder The options builder for configuring DbContext options. connectionString string The connection string for the data source. ExecuteSqlCommand(string, params object[]) Executes a raw SQL command against the database and returns the number of affected entities. public override int ExecuteSqlCommand(string sql, params object[] parameters) Parameters sql string The SQL command to execute. parameters object[] The parameters for the SQL command. Returns int The number of affected entities. ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a raw SQL command against the database and returns the number of affected entities. public override Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters sql string The SQL command to execute. cancellationToken CancellationToken Cancellation token (optional). parameters object[] The parameters for the SQL command. Returns Task<int> A task representing the asynchronous operation and yielding the number of affected entities."
  },
  "api/Innovt.Data.EFCore.MsSql.html": {
    "href": "api/Innovt.Data.EFCore.MsSql.html",
    "title": "Namespace Innovt.Data.EFCore.MsSql | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.MsSql Classes DBContext Represents the Entity Framework DbContext for the application."
  },
  "api/Innovt.Data.EFCore.Oracle.DBContext.html": {
    "href": "api/Innovt.Data.EFCore.Oracle.DBContext.html",
    "title": "Class DBContext | Innovt Platform",
    "keywords": "Class DBContext Namespace Innovt.Data.EFCore.Oracle Assembly Innovt.Data.EFCore.Oracle.dll Represents the Entity Framework DbContext for the application. public class DBContext : DBContextBase, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable Inheritance object DbContext DBContextBase DBContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Inherited Members DBContextBase.MaxRetryCount DBContextBase.MaxRetryDelay DBContextBase.Commit() DBContextBase.CommitAsync(CancellationToken) DBContextBase.Rollback() DBContextBase.Add<T>(T) DBContextBase.Add<T>(IEnumerable<T>) DBContextBase.AddAsync<T>(T, CancellationToken) DBContextBase.AddAsync<T>(IEnumerable<T>, CancellationToken) DBContextBase.Remove<T>(T) DBContextBase.Remove<T>(IEnumerable<T>) DBContextBase.Update<T>(T) DBContextBase.Attach<T>(T) DBContextBase.Detach<T>(T) DBContextBase.Queryable<T>() DBContextBase.OnConfiguring(DbContextOptionsBuilder) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DBContext(IDataSource) Initializes a new instance of the DBContext class using a data source. public DBContext(IDataSource dataSource) Parameters dataSource IDataSource The data source to use. DBContext(IDataSource, ILoggerFactory) Initializes a new instance of the DBContext class using a data source and logger factory. protected DBContext(IDataSource dataSource, ILoggerFactory loggerFactory) Parameters dataSource IDataSource The data source to use. loggerFactory ILoggerFactory The logger factory to use. DBContext(DbContextOptions) Initializes a new instance of the DBContext class using DbContext options. protected DBContext(DbContextOptions options) Parameters options DbContextOptions The DbContext options. Methods ConfigureProvider(DbContextOptionsBuilder, string) Configures the provider-specific options for the DbContext to use Oracle. protected override void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters optionsBuilder DbContextOptionsBuilder The options builder for configuring DbContext options. connectionString string The connection string for the data source. ExecuteSqlCommand(string, params object[]) Executes a raw SQL command against the database and returns the number of affected entities. public override int ExecuteSqlCommand(string sql, params object[] parameters) Parameters sql string The SQL command to execute. parameters object[] The parameters for the SQL command. Returns int The number of affected entities. ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a raw SQL command against the database and returns the number of affected entities. public override Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters sql string The SQL command to execute. cancellationToken CancellationToken Cancellation token (optional). parameters object[] The parameters for the SQL command. Returns Task<int> A task representing the asynchronous operation and yielding the number of affected entities."
  },
  "api/Innovt.Data.EFCore.Oracle.html": {
    "href": "api/Innovt.Data.EFCore.Oracle.html",
    "title": "Namespace Innovt.Data.EFCore.Oracle | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.Oracle Classes DBContext Represents the Entity Framework DbContext for the application."
  },
  "api/Innovt.Data.EFCore.PostgreSQL.DBContext.html": {
    "href": "api/Innovt.Data.EFCore.PostgreSQL.DBContext.html",
    "title": "Class DBContext | Innovt Platform",
    "keywords": "Class DBContext Namespace Innovt.Data.EFCore.PostgreSQL Assembly Innovt.Data.EFCore.PostgreSQL.dll Represents the Entity Framework DbContext for the application. public class DBContext : DBContextBase, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable Inheritance object DbContext DBContextBase DBContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Inherited Members DBContextBase.MaxRetryCount DBContextBase.MaxRetryDelay DBContextBase.Commit() DBContextBase.CommitAsync(CancellationToken) DBContextBase.Rollback() DBContextBase.Add<T>(T) DBContextBase.Add<T>(IEnumerable<T>) DBContextBase.AddAsync<T>(T, CancellationToken) DBContextBase.AddAsync<T>(IEnumerable<T>, CancellationToken) DBContextBase.Remove<T>(T) DBContextBase.Remove<T>(IEnumerable<T>) DBContextBase.Update<T>(T) DBContextBase.Attach<T>(T) DBContextBase.Detach<T>(T) DBContextBase.Queryable<T>() DBContextBase.OnConfiguring(DbContextOptionsBuilder) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DBContext(IDataSource) Initializes a new instance of the DBContext class using a data source. public DBContext(IDataSource dataSource) Parameters dataSource IDataSource The data source to use. DBContext(IDataSource, ILoggerFactory) protected DBContext(IDataSource dataSource, ILoggerFactory loggerFactory) Parameters dataSource IDataSource loggerFactory ILoggerFactory DBContext(DbContextOptions) Initializes a new instance of the DBContext class using DbContext options. protected DBContext(DbContextOptions options) Parameters options DbContextOptions The DbContext options. Methods ConfigureProvider(DbContextOptionsBuilder, string) Configures the provider-specific options for the DbContext to use Npgsql (PostgreSQL). protected override void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters optionsBuilder DbContextOptionsBuilder The options builder for configuring DbContext options. connectionString string The connection string for the data source. ExecuteSqlCommand(string, params object[]) Executes a raw SQL command against the database and returns the number of affected entities. public override int ExecuteSqlCommand(string sql, params object[] parameters) Parameters sql string The SQL command to execute. parameters object[] The parameters for the SQL command. Returns int The number of affected entities. ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a raw SQL command against the database and returns the number of affected entities. public override Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters sql string The SQL command to execute. cancellationToken CancellationToken Cancellation token (optional). parameters object[] The parameters for the SQL command. Returns Task<int> A task representing the asynchronous operation and yielding the number of affected entities."
  },
  "api/Innovt.Data.EFCore.PostgreSQL.html": {
    "href": "api/Innovt.Data.EFCore.PostgreSQL.html",
    "title": "Namespace Innovt.Data.EFCore.PostgreSQL | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.PostgreSQL Classes DBContext Represents the Entity Framework DbContext for the application."
  },
  "api/Innovt.Data.EFCore.Repositories.GenericRepository-1.html": {
    "href": "api/Innovt.Data.EFCore.Repositories.GenericRepository-1.html",
    "title": "Class GenericRepository<T> | Innovt Platform",
    "keywords": "Class GenericRepository<T> Namespace Innovt.Data.EFCore.Repositories Assembly Innovt.Data.EFCore.dll Generic repository implementation for accessing and managing entities of type T. Inherits from RepositoryBase for shared functionality and extends for specific entity type. public class GenericRepository<T> : RepositoryBase<T>, IRepository<T> where T : class Type Parameters T The entity type. Inheritance object RepositoryBase<T> GenericRepository<T> Implements IRepository<T> Inherited Members RepositoryBase<T>.Context RepositoryBase<T>.Add(T) RepositoryBase<T>.Add(IEnumerable<T>) RepositoryBase<T>.AddAsync(IEnumerable<T>) RepositoryBase<T>.AddAsync(T) RepositoryBase<T>.Modify(T) RepositoryBase<T>.Remove(IEnumerable<T>) RepositoryBase<T>.Remove(T) RepositoryBase<T>.GetFirstOrDefault(ISpecification<T>, Include) RepositoryBase<T>.GetFirstOrDefaultAsync(ISpecification<T>, Include, CancellationToken) RepositoryBase<T>.GetSingleOrDefaultAsync(ISpecification<T>, Include, CancellationToken) RepositoryBase<T>.GetSingleOrDefault(ISpecification<T>, Include) RepositoryBase<T>.FindBy(ISpecification<T>, Include) RepositoryBase<T>.FindBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>, bool, Include) RepositoryBase<T>.FindByAsync(ISpecification<T>, Include, CancellationToken) RepositoryBase<T>.FindByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>, bool, Include, CancellationToken) RepositoryBase<T>.FindPaginatedBy(ISpecification<T>, Include) RepositoryBase<T>.FindPaginatedBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>, bool, Include) RepositoryBase<T>.FindPaginatedByAsync(ISpecification<T>, Include, CancellationToken) RepositoryBase<T>.FindPaginatedByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>, bool, Include, CancellationToken) RepositoryBase<T>.CountBy(ISpecification<T>) RepositoryBase<T>.CountBy<TKEntity>(ISpecification<TKEntity>) RepositoryBase<T>.CountByAsync<TKEntity>(ISpecification<TKEntity>, CancellationToken) RepositoryBase<T>.CountByAsync(ISpecification<T>, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors GenericRepository(IExtendedUnitOfWork) Initializes a new instance of the GenericRepository<T> class. public GenericRepository(IExtendedUnitOfWork context) Parameters context IExtendedUnitOfWork The extended unit of work context."
  },
  "api/Innovt.Data.EFCore.Repositories.RepositoryBase-1.html": {
    "href": "api/Innovt.Data.EFCore.Repositories.RepositoryBase-1.html",
    "title": "Class RepositoryBase<T> | Innovt Platform",
    "keywords": "Class RepositoryBase<T> Namespace Innovt.Data.EFCore.Repositories Assembly Innovt.Data.EFCore.dll Base repository providing common functionality for accessing and managing entities of type T. Implements the IRepository interface. public class RepositoryBase<T> : IRepository<T> where T : class Type Parameters T The entity type. Inheritance object RepositoryBase<T> Implements IRepository<T> Derived GenericRepository<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors RepositoryBase(IExtendedUnitOfWork) Initializes a new instance of the RepositoryBase<T> class. public RepositoryBase(IExtendedUnitOfWork context) Parameters context IExtendedUnitOfWork The extended unit of work context. Exceptions ArgumentNullException Thrown when the context parameter is null. Properties Context The extended unit of work context for interacting with the database. protected IExtendedUnitOfWork Context { get; } Property Value IExtendedUnitOfWork Methods Add(IEnumerable<T>) Adds multiple entities public virtual void Add(IEnumerable<T> entities) Parameters entities IEnumerable<T> Add(T) Adds a single entity public virtual void Add(T entity) Parameters entity T AddAsync(IEnumerable<T>) Asynchronously adds a collection of entities of type T to the repository. public virtual Task AddAsync(IEnumerable<T> entities) Parameters entities IEnumerable<T> The collection of entities to add. Returns Task A task representing the asynchronous operation. AddAsync(T) Asynchronously adds an entity of type T to the repository. public virtual Task AddAsync(T entity) Parameters entity T The entity to add. Returns Task A task representing the asynchronous operation. CountBy(ISpecification<T>) Counts the number of entities that satisfy the specified specification. public virtual int CountBy(ISpecification<T> specification) Parameters specification ISpecification<T> The specification to filter the entities. Returns int The total count of entities satisfying the specified criteria. CountByAsync(ISpecification<T>, CancellationToken) Asynchronously counts the number of entities that satisfy the specified specification. public Task<int> CountByAsync(ISpecification<T> specification, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> The specification to filter the entities. cancellationToken CancellationToken Cancellation token (optional). Returns Task<int> A task that represents the asynchronous operation, yielding the total count of entities satisfying the specified criteria. CountByAsync<TKEntity>(ISpecification<TKEntity>, CancellationToken) Asynchronously counts the number of entities of a specified type that satisfy the specified specification. public virtual Task<int> CountByAsync<TKEntity>(ISpecification<TKEntity> specification, CancellationToken cancellationToken = default) where TKEntity : class Parameters specification ISpecification<TKEntity> The specification to filter the entities. cancellationToken CancellationToken Cancellation token (optional). Returns Task<int> A task that represents the asynchronous operation, yielding the total count of entities satisfying the specified criteria. Type Parameters TKEntity The type of the entity to count. CountBy<TKEntity>(ISpecification<TKEntity>) Counts the number of entities of a specified type that satisfy the specified specification. public virtual int CountBy<TKEntity>(ISpecification<TKEntity> specification) where TKEntity : class Parameters specification ISpecification<TKEntity> The specification to filter the entities. Returns int The total count of entities satisfying the specified criteria. Type Parameters TKEntity The type of the entity to count. FindBy(ISpecification<T>, Include?) Finds entities of type T based on the provided specification with optional sorting and pagination. public virtual IEnumerable<T> FindBy(ISpecification<T> specification, Include? includes = null) Parameters specification ISpecification<T> The specification used to filter the entities. includes Include The related entities to include in the query. Returns IEnumerable<T> An enumerable of entities matching the specification with optional sorting. FindByAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously finds entities of type T based on the provided specification with optional sorting and pagination. public virtual Task<IEnumerable<T>> FindByAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> The specification used to filter the entities. includes Include The related entities to include in the query. cancellationToken CancellationToken The cancellation token. Returns Task<IEnumerable<T>> A task representing the asynchronous operation and an enumerable of entities matching the specification. FindByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?, CancellationToken) Asynchronously finds entities of type T based on the provided specification with optional sorting and pagination. public virtual Task<IEnumerable<T>> FindByAsync<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> The specification used to filter the entities. orderBy Expression<Func<T, TKey>> The sorting key selector. isOrderByDescending bool A flag indicating whether the sorting is in descending order. includes Include The related entities to include in the query. cancellationToken CancellationToken The cancellation token. Returns Task<IEnumerable<T>> A task representing the asynchronous operation and an enumerable of entities matching the specification with optional sorting. Type Parameters TKey The type of the sorting key. FindBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?) Finds entities of type T based on the provided specification with optional sorting and pagination. public virtual IEnumerable<T> FindBy<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null) Parameters specification ISpecification<T> The specification used to filter the entities. orderBy Expression<Func<T, TKey>> The sorting key selector. isOrderByDescending bool A flag indicating whether the sorting is in descending order. includes Include The related entities to include in the query. Returns IEnumerable<T> An enumerable of entities matching the specification with optional sorting. Type Parameters TKey The type of the sorting key. FindPaginatedBy(ISpecification<T>, Include?) Finds paginated entities of type T based on the provided specification. public virtual PagedCollection<T> FindPaginatedBy(ISpecification<T> specification, Include? includes = null) Parameters specification ISpecification<T> The specification used to filter the entities. includes Include The related entities to include in the query. Returns PagedCollection<T> A paged collection of entities matching the specification. FindPaginatedByAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously retrieves a paginated collection of entities based on the provided specification, with optional included navigation properties. public virtual Task<PagedCollection<T>> FindPaginatedByAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> The specification to filter the entities. includes Include Navigation properties to include (optional). cancellationToken CancellationToken Cancellation token (optional). Returns Task<PagedCollection<T>> A task that represents the asynchronous operation, yielding a paged collection of entities satisfying the specified criteria. FindPaginatedByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?, CancellationToken) Asynchronously retrieves a paginated collection of entities based on the provided specification, with optional sorting and included navigation properties. public virtual Task<PagedCollection<T>> FindPaginatedByAsync<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> The specification to filter the entities. orderBy Expression<Func<T, TKey>> Expression to order the results (optional). isOrderByDescending bool Flag to determine descending order for sorting (default: ascending). includes Include Navigation properties to include (optional). cancellationToken CancellationToken Cancellation token (optional). Returns Task<PagedCollection<T>> A task that represents the asynchronous operation, yielding a paged collection of entities satisfying the specified criteria. Type Parameters TKey The type of the key used for sorting. FindPaginatedBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?) Retrieves a paginated collection of entities based on the provided specification, with optional sorting and included navigation properties. public virtual PagedCollection<T> FindPaginatedBy<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null) Parameters specification ISpecification<T> The specification to filter the entities. orderBy Expression<Func<T, TKey>> Expression to order the results (optional). isOrderByDescending bool Flag to determine descending order for sorting (default: ascending). includes Include Navigation properties to include (optional). Returns PagedCollection<T> A paged collection of entities satisfying the specified criteria. Type Parameters TKey The type of the key used for sorting. GetFirstOrDefault(ISpecification<T>, Include?) Gets the first or default entity of type T based on the provided specification. public virtual T? GetFirstOrDefault(ISpecification<T> specification, Include? includes = null) Parameters specification ISpecification<T> The specification used to filter the entity. includes Include The related entities to include in the query. Returns T The first or default entity matching the specification. GetFirstOrDefaultAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously gets the first or default entity of type T based on the provided specification. public virtual Task<T?> GetFirstOrDefaultAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> The specification used to filter the entity. includes Include The related entities to include in the query. cancellationToken CancellationToken The cancellation token. Returns Task<T> A task representing the asynchronous operation and the first or default entity matching the specification. GetSingleOrDefault(ISpecification<T>, Include?) Gets the single or default entity of type T based on the provided specification. public virtual T? GetSingleOrDefault(ISpecification<T> specification, Include? includes = null) Parameters specification ISpecification<T> The specification used to filter the entity. includes Include The related entities to include in the query. Returns T The single or default entity matching the specification. GetSingleOrDefaultAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously gets the single or default entity of type T based on the provided specification. public virtual Task<T?> GetSingleOrDefaultAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> The specification used to filter the entity. includes Include The related entities to include in the query. cancellationToken CancellationToken The cancellation token. Returns Task<T> A task representing the asynchronous operation and the single or default entity matching the specification. Modify(T) Modifies an entity of type T in the repository. public virtual void Modify(T entity) Parameters entity T The entity to modify. Remove(IEnumerable<T>) Removes a collection of entities of type T from the repository. public virtual void Remove(IEnumerable<T> entities) Parameters entities IEnumerable<T> The collection of entities to remove. Remove(T) Removes an entity of type T from the repository. public virtual void Remove(T entity) Parameters entity T The entity to remove."
  },
  "api/Innovt.Data.EFCore.Repositories.RequestTrackingRepository.html": {
    "href": "api/Innovt.Data.EFCore.Repositories.RequestTrackingRepository.html",
    "title": "Class RequestTrackingRepository | Innovt Platform",
    "keywords": "Class RequestTrackingRepository Namespace Innovt.Data.EFCore.Repositories Assembly Innovt.Data.EFCore.dll Repository for managing request tracking entities. public class RequestTrackingRepository : IRequestTrackingRepository Inheritance object RequestTrackingRepository Implements IRequestTrackingRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors RequestTrackingRepository(IExtendedUnitOfWork) Initializes a new instance of the RequestTrackingRepository class. public RequestTrackingRepository(IExtendedUnitOfWork context) Parameters context IExtendedUnitOfWork The extended unit of work for data access. Exceptions ArgumentNullException Thrown when the context is null. Methods AddTracking(RequestTracking) Adds request tracking information to the repository. public Task AddTracking(RequestTracking tracking) Parameters tracking RequestTracking The request tracking information to be added. Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.Data.EFCore.Repositories.html": {
    "href": "api/Innovt.Data.EFCore.Repositories.html",
    "title": "Namespace Innovt.Data.EFCore.Repositories | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.Repositories Classes GenericRepository<T> Generic repository implementation for accessing and managing entities of type T. Inherits from RepositoryBase for shared functionality and extends for specific entity type. RepositoryBase<T> Base repository providing common functionality for accessing and managing entities of type T. Implements the IRepository interface. RequestTrackingRepository Repository for managing request tracking entities."
  },
  "api/Innovt.Data.EFCore.html": {
    "href": "api/Innovt.Data.EFCore.html",
    "title": "Namespace Innovt.Data.EFCore | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore Classes DBContextBase Abstract base class for Entity Framework DbContext implementing the extended unit of work interface. EfExtensions Extension methods for Entity Framework IQueryable to facilitate query operations."
  },
  "api/Innovt.Data.Exceptions.ConnectionStringException.html": {
    "href": "api/Innovt.Data.Exceptions.ConnectionStringException.html",
    "title": "Class ConnectionStringException | Innovt Platform",
    "keywords": "Class ConnectionStringException Namespace Innovt.Data.Exceptions Assembly Innovt.Data.dll Represents an exception thrown for connection string related errors. [Serializable] public class ConnectionStringException : ConfigurationException, ISerializable Inheritance object Exception BaseException ConfigurationException ConnectionStringException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ConnectionStringException(string) Initializes a new instance of the ConnectionStringException class with the specified error message. public ConnectionStringException(string message) Parameters message string The error message that explains the reason for the exception."
  },
  "api/Innovt.Data.Exceptions.SqlSyntaxException.html": {
    "href": "api/Innovt.Data.Exceptions.SqlSyntaxException.html",
    "title": "Class SqlSyntaxException | Innovt Platform",
    "keywords": "Class SqlSyntaxException Namespace Innovt.Data.Exceptions Assembly Innovt.Data.dll Represents an exception thrown for SQL syntax related errors. [Serializable] public class SqlSyntaxException : BaseException, ISerializable Inheritance object Exception BaseException SqlSyntaxException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SqlSyntaxException(string) Initializes a new instance of the SqlSyntaxException class with the specified error message. public SqlSyntaxException(string message) Parameters message string The error message that explains the reason for the exception."
  },
  "api/Innovt.Data.Exceptions.html": {
    "href": "api/Innovt.Data.Exceptions.html",
    "title": "Namespace Innovt.Data.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Exceptions Classes ConnectionStringException Represents an exception thrown for connection string related errors. SqlSyntaxException Represents an exception thrown for SQL syntax related errors."
  },
  "api/Innovt.Data.Migration.SecurityMigration.html": {
    "href": "api/Innovt.Data.Migration.SecurityMigration.html",
    "title": "Class SecurityMigration | Innovt Platform",
    "keywords": "Class SecurityMigration Namespace Innovt.Data.Migration Assembly Innovt.Data.Migration.dll Provides methods for security-related database schema migration. public static class SecurityMigration Inheritance object SecurityMigration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateTablesIfNotExist(string) Creates security-related tables if they do not exist in the database. public static void CreateTablesIfNotExist(string connectionString) Parameters connectionString string The connection string to the database. Exceptions ArgumentNullException Thrown when connectionString is null."
  },
  "api/Innovt.Data.Migration.html": {
    "href": "api/Innovt.Data.Migration.html",
    "title": "Namespace Innovt.Data.Migration | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Migration Classes SecurityMigration Provides methods for security-related database schema migration."
  },
  "api/Innovt.Data.Model.Provider.html": {
    "href": "api/Innovt.Data.Model.Provider.html",
    "title": "Enum Provider | Innovt Platform",
    "keywords": "Enum Provider Namespace Innovt.Data.Model Assembly Innovt.Data.dll Enumeration representing different database providers. public enum Provider Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Fields MsSql = 0 MySql = 3 Oracle = 2 PostgreSqL = 1 SqLite = 4"
  },
  "api/Innovt.Data.Model.html": {
    "href": "api/Innovt.Data.Model.html",
    "title": "Namespace Innovt.Data.Model | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Model Enums Provider Enumeration representing different database providers."
  },
  "api/Innovt.Data.Tests.DMContextTests.html": {
    "href": "api/Innovt.Data.Tests.DMContextTests.html",
    "title": "Class DMContextTests | Innovt Platform",
    "keywords": "Class DMContextTests Namespace Innovt.Data.Tests Assembly Innovt.Data.Tests.dll [TestFixture] public class DMContextTests Inheritance object DMContextTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Attach() [Test] public void Attach() AttachThrowExceptionIfObjectIsNull() [Test] public void AttachThrowExceptionIfObjectIsNull() CheckHashCode() [Test] public void CheckHashCode() DeAttachThrowExceptionIfObjectIsNull() [Test] public void DeAttachThrowExceptionIfObjectIsNull() FindThrowExceptionIfObjectIsNull() [Test] public void FindThrowExceptionIfObjectIsNull() InstanceCantBeNullWhenUsingSingleton() [Test] public void InstanceCantBeNullWhenUsingSingleton()"
  },
  "api/Innovt.Data.Tests.DataModel.UserDataModel.html": {
    "href": "api/Innovt.Data.Tests.DataModel.UserDataModel.html",
    "title": "Class UserDataModel | Innovt Platform",
    "keywords": "Class UserDataModel Namespace Innovt.Data.Tests.DataModel Assembly Innovt.Data.Tests.dll public class UserDataModel : BaseDataModel<User, UserDataModel>, INotifyPropertyChanged, IBaseDataModel Inheritance object BaseDataModel<User, UserDataModel> UserDataModel Implements INotifyPropertyChanged IBaseDataModel Inherited Members BaseDataModel<User, UserDataModel>.EnableTrackingChanges BaseDataModel<User, UserDataModel>.HasChanges BaseDataModel<User, UserDataModel>.PropertyChanged BaseDataModel<User, UserDataModel>.OnPropertyChanged(string) BaseDataModel<User, UserDataModel>.SetProperty<T>(ref T, T, string) BaseDataModel<User, UserDataModel>.ParseToDomain(UserDataModel) BaseDataModel<User, UserDataModel>.ParseToDataModel(User) BaseDataModel<User, UserDataModel>.ParseToDomain(IList<UserDataModel>) BaseDataModel<User, UserDataModel>.ParseToDataModel(IList<User>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Address public string Address { get; set; } Property Value string Id public int Id { get; set; } Property Value int LastName public string LastName { get; set; } Property Value string Name public string Name { get; set; } Property Value string Methods ParseToDataModel(User) Converts a domain model instance to a data model instance. public override UserDataModel ParseToDataModel(User domainModel) Parameters domainModel User The domain model instance to convert. Returns UserDataModel The corresponding data model instance. ParseToDomain(UserDataModel) Converts a data model instance to a domain model instance. public override User ParseToDomain(UserDataModel dataModel) Parameters dataModel UserDataModel The data model instance to convert. Returns User The corresponding domain model instance."
  },
  "api/Innovt.Data.Tests.DataModel.html": {
    "href": "api/Innovt.Data.Tests.DataModel.html",
    "title": "Namespace Innovt.Data.Tests.DataModel | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Tests.DataModel Classes UserDataModel"
  },
  "api/Innovt.Data.Tests.DataModelTests.html": {
    "href": "api/Innovt.Data.Tests.DataModelTests.html",
    "title": "Class DataModelTests | Innovt Platform",
    "keywords": "Class DataModelTests Namespace Innovt.Data.Tests Assembly Innovt.Data.Tests.dll [TestFixture] public class DataModelTests Inheritance object DataModelTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Attach() [Test] public void Attach()"
  },
  "api/Innovt.Data.Tests.Model.User.html": {
    "href": "api/Innovt.Data.Tests.Model.User.html",
    "title": "Class User | Innovt Platform",
    "keywords": "Class User Namespace Innovt.Data.Tests.Model Assembly Innovt.Data.Tests.dll public class User Inheritance object User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Address public string Address { get; set; } Property Value string Id public int Id { get; set; } Property Value int LastName public string LastName { get; set; } Property Value string Name public string Name { get; set; } Property Value string"
  },
  "api/Innovt.Data.Tests.Model.html": {
    "href": "api/Innovt.Data.Tests.Model.html",
    "title": "Namespace Innovt.Data.Tests.Model | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Tests.Model Classes User"
  },
  "api/Innovt.Data.Tests.html": {
    "href": "api/Innovt.Data.Tests.html",
    "title": "Namespace Innovt.Data.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Tests Classes DMContextTests DataModelTests"
  },
  "api/Innovt.Domain.Adresses.Address.html": {
    "href": "api/Innovt.Domain.Adresses.Address.html",
    "title": "Class Address | Innovt Platform",
    "keywords": "Class Address Namespace Innovt.Domain.Adresses Assembly Innovt.Domain.dll Represents an address entity. public class Address : ValueObject Inheritance object ValueObject Address Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties City Gets or sets the city associated with the address. public City City { get; set; } Property Value City CityId Gets or sets the ID of the associated city. public int CityId { get; set; } Property Value int Complement Gets or sets additional details or complement for the address. public string Complement { get; set; } Property Value string Coordinate Gets or sets the coordinates of the address. public Coordinate Coordinate { get; set; } Property Value Coordinate Description Gets or sets the description of the address. public string Description { get; set; } Property Value string IsDeleted Gets or sets a value indicating whether the address is marked as deleted. public bool IsDeleted { get; set; } Property Value bool Neighborhood Gets or sets the neighborhood or area of the address. public string Neighborhood { get; set; } Property Value string Number Gets or sets the number associated with the address. public string Number { get; set; } Property Value string Street Gets or sets the street of the address. public string Street { get; set; } Property Value string Type Gets or sets the type of address. public AddressType Type { get; set; } Property Value AddressType TypeId Gets or sets the ID of the address type. public int TypeId { get; set; } Property Value int ZipCode Gets or sets the ZIP code of the address. public string ZipCode { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Adresses.AddressType.html": {
    "href": "api/Innovt.Domain.Adresses.AddressType.html",
    "title": "Class AddressType | Innovt Platform",
    "keywords": "Class AddressType Namespace Innovt.Domain.Adresses Assembly Innovt.Domain.dll Represents the type of an address (e.g., Commercial, Residential, Payment). public sealed class AddressType : ValueObject Inheritance object ValueObject AddressType Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors AddressType(int, string) Initializes a new instance of the AddressType class. public AddressType(int id, string name) Parameters id int The unique identifier for the address type. name string The name of the address type. Fields Comercial Gets the predefined address type for commercial addresses. public static readonly AddressType Comercial Field Value AddressType Pagamento Gets the predefined address type for payment-related addresses. public static readonly AddressType Pagamento Field Value AddressType Residential Gets the predefined address type for residential addresses. public static readonly AddressType Residential Field Value AddressType Properties Name Gets or sets the name of the address type. public string Name { get; set; } Property Value string Methods FindAll() Retrieves a list of all available address types, ordered by name. public static IList<AddressType> FindAll() Returns IList<AddressType> A list of address types. GetByPk(int) Retrieves an address type based on its unique identifier. public static AddressType GetByPk(int id) Parameters id int The unique identifier of the address type. Returns AddressType An address type."
  },
  "api/Innovt.Domain.Adresses.City.html": {
    "href": "api/Innovt.Domain.Adresses.City.html",
    "title": "Class City | Innovt Platform",
    "keywords": "Class City Namespace Innovt.Domain.Adresses Assembly Innovt.Domain.dll Represents a city entity. public class City : ValueObject Inheritance object ValueObject City Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Name Gets or sets the name of the city. public string Name { get; set; } Property Value string State Gets or sets the associated state. public virtual State State { get; set; } Property Value State StateId Gets or sets the ID of the associated state. public int StateId { get; set; } Property Value int"
  },
  "api/Innovt.Domain.Adresses.Coordinate.html": {
    "href": "api/Innovt.Domain.Adresses.Coordinate.html",
    "title": "Class Coordinate | Innovt Platform",
    "keywords": "Class Coordinate Namespace Innovt.Domain.Adresses Assembly Innovt.Domain.dll Represents a geographical coordinate. public class Coordinate Inheritance object Coordinate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Coordinate() Initializes a new instance of the Coordinate class. public Coordinate() Coordinate(long, long) Initializes a new instance of the Coordinate class with latitude and longitude. public Coordinate(long latitude, long longitude) Parameters latitude long The latitude value. longitude long The longitude value. Properties AddressId Gets or sets the address ID associated with the coordinate. public int AddressId { get; set; } Property Value int Latitude Gets or sets the latitude value of the coordinate. public long Latitude { get; set; } Property Value long Longitude Gets or sets the longitude value of the coordinate. public long Longitude { get; set; } Property Value long"
  },
  "api/Innovt.Domain.Adresses.Country.html": {
    "href": "api/Innovt.Domain.Adresses.Country.html",
    "title": "Class Country | Innovt Platform",
    "keywords": "Class Country Namespace Innovt.Domain.Adresses Assembly Innovt.Domain.dll Represents a country entity. public class Country : ValueObject Inheritance object ValueObject Country Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Fields Brazil Predefined country: Brazil. public static Country Brazil Field Value Country Properties Code Gets or sets the country calling code. public int Code { get; set; } Property Value int ISOCode Gets or sets the ISO country code. public string ISOCode { get; set; } Property Value string Name Gets or sets the name of the country. public string Name { get; set; } Property Value string Nationality Gets or sets the nationality associated with the country. public string Nationality { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Adresses.State.html": {
    "href": "api/Innovt.Domain.Adresses.State.html",
    "title": "Class State | Innovt Platform",
    "keywords": "Class State Namespace Innovt.Domain.Adresses Assembly Innovt.Domain.dll Represents a state entity. public class State : ValueObject Inheritance object ValueObject State Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Acronym Gets or sets the acronym for the state. public string Acronym { get; set; } Property Value string Cities Gets or sets the list of cities within the state. public virtual IList<City> Cities { get; set; } Property Value IList<City> Country Gets or sets the associated country. public virtual Country Country { get; set; } Property Value Country CountryId Gets or sets the country ID associated with the state. public int CountryId { get; set; } Property Value int Description Gets or sets the description or name of the state. public string Description { get; set; } Property Value string UtcOffset Gets or sets the UTC offset for the state. public string UtcOffset { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Adresses.html": {
    "href": "api/Innovt.Domain.Adresses.html",
    "title": "Namespace Innovt.Domain.Adresses | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Adresses Classes Address Represents an address entity. AddressType Represents the type of an address (e.g., Commercial, Residential, Payment). City Represents a city entity. Coordinate Represents a geographical coordinate. Country Represents a country entity. State Represents a state entity."
  },
  "api/Innovt.Domain.Banks.AccountType.html": {
    "href": "api/Innovt.Domain.Banks.AccountType.html",
    "title": "Enum AccountType | Innovt Platform",
    "keywords": "Enum AccountType Namespace Innovt.Domain.Banks Assembly Innovt.Domain.dll Specifies the type of an account. public enum AccountType Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Fields Checking = 0 Represents a checking account type. Savings = 1 Represents a savings account type."
  },
  "api/Innovt.Domain.Banks.Bank.html": {
    "href": "api/Innovt.Domain.Banks.Bank.html",
    "title": "Class Bank | Innovt Platform",
    "keywords": "Class Bank Namespace Innovt.Domain.Banks Assembly Innovt.Domain.dll Represents a bank entity. public class Bank : ValueObject Inheritance object ValueObject Bank Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccountDigit Gets or sets the account digit associated with the account number. public string AccountDigit { get; set; } Property Value string AccountNumber Gets or sets the account number associated with the bank. public string AccountNumber { get; set; } Property Value string AccountType Gets or sets the account type (e.g., Checking, Savings). public AccountType AccountType { get; set; } Property Value AccountType Code Gets or sets the code of the bank. public string Code { get; set; } Property Value string Name Gets or sets the name of the bank. public string Name { get; set; } Property Value string RoutingNumber public string RoutingNumber { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Banks.html": {
    "href": "api/Innovt.Domain.Banks.html",
    "title": "Namespace Innovt.Domain.Banks | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Banks Classes Bank Represents a bank entity. Enums AccountType Specifies the type of an account."
  },
  "api/Innovt.Domain.BaseCreditCard.html": {
    "href": "api/Innovt.Domain.BaseCreditCard.html",
    "title": "Class BaseCreditCard | Innovt Platform",
    "keywords": "Class BaseCreditCard Namespace Innovt.Domain Assembly Innovt.Domain.dll Represents a base credit card information. public class BaseCreditCard : ValueObject Inheritance object ValueObject BaseCreditCard Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BaseCreditCard() Initializes a new instance of the BaseCreditCard class. public BaseCreditCard() BaseCreditCard(string, string) Initializes a new instance of the BaseCreditCard class with a token and security code. public BaseCreditCard(string token, string securityCode) Parameters token string The token associated with the credit card. securityCode string The security code of the credit card. BaseCreditCard(string, string, DateTime, string) Initializes a new instance of the BaseCreditCard class with credit card details. public BaseCreditCard(string number, string holder, DateTime expiration, string securityCode) Parameters number string The credit card number. holder string The cardholder's name. expiration DateTime The expiration date of the credit card. securityCode string The security code of the credit card. Properties Expiration Gets or sets the expiration date of the credit card. public DateTime Expiration { get; set; } Property Value DateTime Holder Gets or sets the cardholder's name. public string Holder { get; set; } Property Value string MaskedNumber Gets the masked credit card number with only the last four digits visible. public string MaskedNumber { get; } Property Value string Number Gets or sets the credit card number. public string Number { get; set; } Property Value string SecurityCode Gets or sets the security code of the credit card. public string SecurityCode { get; set; } Property Value string Token Gets or sets the token associated with the credit card. public string Token { get; set; } Property Value string Methods GetMaskedCreditCard(string) Generates a masked credit card number with only the first six and last four digits visible. public static string GetMaskedCreditCard(string number) Parameters number string The original credit card number. Returns string The masked credit card number."
  },
  "api/Innovt.Domain.Contacts.Contact.html": {
    "href": "api/Innovt.Domain.Contacts.Contact.html",
    "title": "Class Contact | Innovt Platform",
    "keywords": "Class Contact Namespace Innovt.Domain.Contacts Assembly Innovt.Domain.dll Represents a contact entity. public class Contact : ValueObject<int>, IValidatableObject Inheritance object ValueObject ValueObject<int> Contact Implements IValidatableObject Inherited Members ValueObject<int>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Description For example Home, Office etc [Required] public string Description { get; set; } Property Value string IsDeleted Gets or sets a value indicating whether the contact is deleted. public bool IsDeleted { get; set; } Property Value bool Name Gets or sets the name associated with the contact. [Required] public string Name { get; set; } Property Value string Type Gets or sets the contact type. [Required] public ContactType Type { get; set; } Property Value ContactType Value Gets or sets the contact value (e.g., phone number, email address). [Required] public string Value { get; set; } Property Value string Methods Validate(ValidationContext) Validates the contact properties based on the contact type. public virtual IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection of validation results."
  },
  "api/Innovt.Domain.Contacts.ContactType.html": {
    "href": "api/Innovt.Domain.Contacts.ContactType.html",
    "title": "Class ContactType | Innovt Platform",
    "keywords": "Class ContactType Namespace Innovt.Domain.Contacts Assembly Innovt.Domain.dll Email, Phone public class ContactType : ValueObject<int> Inheritance object ValueObject ValueObject<int> ContactType Inherited Members ValueObject<int>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Description Gets or sets the description of the contact type. [Required] public string Description { get; set; } Property Value string IconUrl Gets or sets the URL to an icon associated with the contact type. public string IconUrl { get; set; } Property Value string Name Gets or sets the name of the contact type. [Required] public string Name { get; set; } Property Value string RegexValidation Gets or sets the regular expression for validation of contact values. public string RegexValidation { get; set; } Property Value string Methods Create(string, string) Creates a new contact type with the given name and description. public static ContactType Create(string name, string description) Parameters name string The name of the contact type. description string The description of the contact type. Returns ContactType A new ContactType instance. Create(string, string, string) Creates a new contact type with the given name, description and regex Validation public static ContactType Create(string name, string description, string regexValidation) Parameters name string The name of the contact type. description string The description of the contact type. regexValidation string An Regex expression to validate the Value Returns ContactType Validate(string) Validates a contact value based on the regex validation. public virtual bool Validate(string value) Parameters value string The value to validate. Returns bool True if the value is valid according to the regex; otherwise, false."
  },
  "api/Innovt.Domain.Contacts.Phone.html": {
    "href": "api/Innovt.Domain.Contacts.Phone.html",
    "title": "Class Phone | Innovt Platform",
    "keywords": "Class Phone Namespace Innovt.Domain.Contacts Assembly Innovt.Domain.dll Represents a phone entity. public class Phone : ValueObject Inheritance object ValueObject Phone Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AreaCode Gets or sets the area code associated with the phone number. public string AreaCode { get; set; } Property Value string CountryCode Gets or sets the country code associated with the phone number. public string CountryCode { get; set; } Property Value string Extension Gets or sets the phone extension, if applicable. public string Extension { get; set; } Property Value string Number public string Number { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Contacts.html": {
    "href": "api/Innovt.Domain.Contacts.html",
    "title": "Namespace Innovt.Domain.Contacts | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Contacts Classes Contact Represents a contact entity. ContactType Email, Phone Phone Represents a phone entity."
  },
  "api/Innovt.Domain.Core.Events.DomainEvent.html": {
    "href": "api/Innovt.Domain.Core.Events.DomainEvent.html",
    "title": "Class DomainEvent | Innovt Platform",
    "keywords": "Class DomainEvent Namespace Innovt.Domain.Core.Events Assembly Innovt.Domain.Core.dll Represents a domain event in the system. public abstract class DomainEvent : IDataStream Inheritance object DomainEvent Implements IDataStream Derived InvoiceDomainEvent UserCreated Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DomainEvent(string, string?) Initializes a new instance of the DomainEvent class with a specified name and partition. The default version here is 1.0.0 protected DomainEvent(string name, string? partition) Parameters name string The name of the domain event. partition string The partition associated with the event. DomainEvent(string, string, string?) Initializes a new instance of the DomainEvent class with a specified name, version, and partition. protected DomainEvent(string name, string version, string? partition) Parameters name string The name of the domain event. version string The version of the domain event. partition string The partition associated with the event. Properties ApproximateArrivalTimestamp Gets or sets the approximate arrival timestamp of the domain event. public DateTime ApproximateArrivalTimestamp { get; set; } Property Value DateTime CreatedAt Gets or sets the date and time when the domain event was created. public DateTime CreatedAt { get; set; } Property Value DateTime EventId Gets or sets the event ID associated with the domain event. public string? EventId { get; set; } Property Value string Name Gets or sets the name of the domain event. public string Name { get; set; } Property Value string Partition Gets or sets the partition associated with the domain event. public string? Partition { get; set; } Property Value string PublishedAt Gets or sets the date and time when the domain event was published. public DateTimeOffset? PublishedAt { get; set; } Property Value DateTimeOffset? TraceId Gets or sets the trace ID associated with the domain event. public string? TraceId { get; set; } Property Value string Version Gets or sets the version of the domain event. public string Version { get; set; } Property Value string Methods Empty(string?) Creates an empty domain event with the specified partition. public static DomainEvent Empty(string? partition) Parameters partition string The partition associated with the event. Returns DomainEvent An instance of DomainEvent representing an empty domain event."
  },
  "api/Innovt.Domain.Core.Events.IEventHandler.html": {
    "href": "api/Innovt.Domain.Core.Events.IEventHandler.html",
    "title": "Interface IEventHandler | Innovt Platform",
    "keywords": "Interface IEventHandler Namespace Innovt.Domain.Core.Events Assembly Innovt.Domain.Core.dll Defines methods for publishing domain events. public interface IEventHandler Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Publish(DomainEvent, CancellationToken) Publishes a single domain event. Task Publish(DomainEvent domainEvent, CancellationToken cancellationToken = default) Parameters domainEvent DomainEvent The domain event to be published. cancellationToken CancellationToken The cancellation token to observe. Returns Task A task representing the asynchronous operation. Publish(IEnumerable<DomainEvent>, CancellationToken) Publishes a collection of domain events. Task Publish(IEnumerable<DomainEvent> domainEvents, CancellationToken cancellationToken = default) Parameters domainEvents IEnumerable<DomainEvent> The collection of domain events to be published. cancellationToken CancellationToken The cancellation token to observe. Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.Domain.Core.Events.html": {
    "href": "api/Innovt.Domain.Core.Events.html",
    "title": "Namespace Innovt.Domain.Core.Events | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Events Classes DomainEvent Represents a domain event in the system. Interfaces IEventHandler Defines methods for publishing domain events."
  },
  "api/Innovt.Domain.Core.Model.DomainModel-1.html": {
    "href": "api/Innovt.Domain.Core.Model.DomainModel-1.html",
    "title": "Class DomainModel<T> | Innovt Platform",
    "keywords": "Class DomainModel<T> Namespace Innovt.Domain.Core.Model Assembly Innovt.Domain.Core.dll Represents a domain model containing a collection of value objects. public class DomainModel<T> : ValueObject where T : ValueObject Type Parameters T The type of value object. Inheritance object ValueObject DomainModel<T> Derived Gender Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AddModel(T) Adds a value object to the domain model. protected void AddModel(T model) Parameters model T The value object to be added. FindAll() Retrieves a list of all value objects in the domain model. public List<T> FindAll() Returns List<T> A list of value objects. GetByPk(int) Retrieves a value object by its primary key. public T GetByPk(int id) Parameters id int The primary key to search for. Returns T The value object found, or null if not found."
  },
  "api/Innovt.Domain.Core.Model.Entity-1.html": {
    "href": "api/Innovt.Domain.Core.Model.Entity-1.html",
    "title": "Class Entity<T> | Innovt Platform",
    "keywords": "Class Entity<T> Namespace Innovt.Domain.Core.Model Assembly Innovt.Domain.Core.dll Represents an abstract base class for entities in the domain model with a specific type for the identifier. public abstract class Entity<T> : Entity where T : struct Type Parameters T The type of the identifier. Inheritance object Entity Entity<T> Derived BaseUserOne Invoice Group Role Inherited Members Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id public T Id { get; set; } Property Value T"
  },
  "api/Innovt.Domain.Core.Model.Entity.html": {
    "href": "api/Innovt.Domain.Core.Model.Entity.html",
    "title": "Class Entity | Innovt Platform",
    "keywords": "Class Entity Namespace Innovt.Domain.Core.Model Assembly Innovt.Domain.Core.dll Represents an abstract base class for entities in the domain model. public abstract class Entity Inheritance object Entity Derived Entity<T> AuthUser UserEntity BaseUser Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Entity() Initializes a new instance of the Entity class. protected Entity() Entity(int) Initializes a new instance of the Entity class with a specific identifier. protected Entity(int id) Parameters id int The identifier for the entity. Properties CreatedAt Gets or sets the date and time when the entity was created. public DateTimeOffset? CreatedAt { get; set; } Property Value DateTimeOffset? Id Gets or sets the unique identifier for the entity. public virtual int Id { get; set; } Property Value int Methods AddDomainEvent(DomainEvent) Adds a domain event to the entity. public Entity AddDomainEvent(DomainEvent domainEvent) Parameters domainEvent DomainEvent The domain event to add. Returns Entity Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetDomainEvents() Gets the list of unprocessed domain events associated with the entity. public IReadOnlyList<DomainEvent> GetDomainEvents() Returns IReadOnlyList<DomainEvent> A read-only list of unprocessed domain events. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. IsNew() Checks if the entity is new (i.e., not persisted in the database yet). public bool IsNew() Returns bool true if the entity is new; otherwise, false."
  },
  "api/Innovt.Domain.Core.Model.IAggregateRoot-1.html": {
    "href": "api/Innovt.Domain.Core.Model.IAggregateRoot-1.html",
    "title": "Interface IAggregateRoot<T> | Innovt Platform",
    "keywords": "Interface IAggregateRoot<T> Namespace Innovt.Domain.Core.Model Assembly Innovt.Domain.Core.dll Represents an aggregate root in the domain model with a specific type for the identifier. public interface IAggregateRoot<T> Type Parameters T The type of the identifier. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id Gets or sets the unique identifier for the aggregate root. T Id { get; set; } Property Value T"
  },
  "api/Innovt.Domain.Core.Model.IAggregateRoot.html": {
    "href": "api/Innovt.Domain.Core.Model.IAggregateRoot.html",
    "title": "Interface IAggregateRoot | Innovt Platform",
    "keywords": "Interface IAggregateRoot Namespace Innovt.Domain.Core.Model Assembly Innovt.Domain.Core.dll Represents an aggregate root in the domain model with an integer identifier. public interface IAggregateRoot Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id Gets or sets the unique identifier for the aggregate root. int Id { get; set; } Property Value int"
  },
  "api/Innovt.Domain.Core.Model.SimpleVo-1.html": {
    "href": "api/Innovt.Domain.Core.Model.SimpleVo-1.html",
    "title": "Class SimpleVo<T> | Innovt Platform",
    "keywords": "Class SimpleVo<T> Namespace Innovt.Domain.Core.Model Assembly Innovt.Domain.Core.dll Represents a simple value object with a generic identifier type. public class SimpleVo<T> : ValueObject<T> where T : struct Type Parameters T The type of the identifier. Inheritance object ValueObject ValueObject<T> SimpleVo<T> Inherited Members ValueObject<T>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors SimpleVo() Initializes a new instance of the SimpleVo<T> class. public SimpleVo() SimpleVo(T, string?) Initializes a new instance of the SimpleVo<T> class with the specified identifier and description. public SimpleVo(T id, string? description) Parameters id T The identifier. description string The description. Properties Description Gets or sets the description of the value object. public string? Description { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Core.Model.ValueObject-1.html": {
    "href": "api/Innovt.Domain.Core.Model.ValueObject-1.html",
    "title": "Class ValueObject<T> | Innovt Platform",
    "keywords": "Class ValueObject<T> Namespace Innovt.Domain.Core.Model Assembly Innovt.Domain.Core.dll Represents a base class for value objects with a generic identifier type. public abstract class ValueObject<T> : ValueObject where T : struct Type Parameters T The type of the identifier. Inheritance object ValueObject ValueObject<T> Derived Contact ContactType SimpleVo<T> Permission RequestTracking Inherited Members ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id Gets or sets the identifier for the value object. public T Id { get; set; } Property Value T"
  },
  "api/Innovt.Domain.Core.Model.ValueObject.html": {
    "href": "api/Innovt.Domain.Core.Model.ValueObject.html",
    "title": "Class ValueObject | Innovt Platform",
    "keywords": "Class ValueObject Namespace Innovt.Domain.Core.Model Assembly Innovt.Domain.Core.dll Represents a base class for value objects. public abstract class ValueObject Inheritance object ValueObject Derived Address AddressType City Country State Bank BaseCreditCard Phone DomainModel<T> ValueObject<T> Document DocumentType Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Id Gets or sets the identifier for the value object. public virtual int Id { get; set; } Property Value int Methods Equals(object) Determines whether the current value object is equal to another object. public override bool Equals(object obj) Parameters obj object The object to compare with the current value object. Returns bool true if the objects are considered equal; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current value object."
  },
  "api/Innovt.Domain.Core.Model.html": {
    "href": "api/Innovt.Domain.Core.Model.html",
    "title": "Namespace Innovt.Domain.Core.Model | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Model Classes DomainModel<T> Represents a domain model containing a collection of value objects. Entity Represents an abstract base class for entities in the domain model. Entity<T> Represents an abstract base class for entities in the domain model with a specific type for the identifier. SimpleVo<T> Represents a simple value object with a generic identifier type. ValueObject Represents a base class for value objects. ValueObject<T> Represents a base class for value objects with a generic identifier type. Interfaces IAggregateRoot Represents an aggregate root in the domain model with an integer identifier. IAggregateRoot<T> Represents an aggregate root in the domain model with a specific type for the identifier."
  },
  "api/Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html": {
    "href": "api/Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html",
    "title": "Interface IExtendedUnitOfWork | Innovt Platform",
    "keywords": "Interface IExtendedUnitOfWork Namespace Innovt.Domain.Core.Repository Assembly Innovt.Domain.Core.dll Extended Unit of Work Interface To Provide More Features To Unit Of Work When Using Entity Framework public interface IExtendedUnitOfWork : IUnitOfWork, IDisposable Inherited Members IUnitOfWork.Commit() IUnitOfWork.CommitAsync(CancellationToken) IUnitOfWork.Rollback() IDisposable.Dispose() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AddAsync<T>(IEnumerable<T>, CancellationToken) Task AddAsync<T>(IEnumerable<T> entities, CancellationToken cancellationToken = default) where T : class Parameters entities IEnumerable<T> cancellationToken CancellationToken Returns Task Type Parameters T AddAsync<T>(T, CancellationToken) Asynchronously adds an entity or a collection of entities. Task AddAsync<T>(T entity, CancellationToken cancellationToken = default) where T : class Parameters entity T cancellationToken CancellationToken Returns Task Type Parameters T Add<T>(IEnumerable<T>) Add Entities To Unit Of Work Context void Add<T>(IEnumerable<T> entities) where T : class Parameters entities IEnumerable<T> Type Parameters T Add<T>(T) Add Entity To Unit Of Work Context void Add<T>(T entity) where T : class Parameters entity T Type Parameters T Attach<T>(T) Attaches an entity of type T to the repository. void Attach<T>(T entity) where T : class Parameters entity T The entity to attach. Type Parameters T The type of the entity. Detach<T>(T) Detaches an entity of type T from the repository. void Detach<T>(T entity) where T : class Parameters entity T The entity to detach. Type Parameters T The type of the entity. ExecuteSqlCommand(string, params object[]) Executes a SQL command. int ExecuteSqlCommand(string sql, params object[] parameters) Parameters sql string The SQL command to execute. parameters object[] The parameters for the SQL command. Returns int The number of affected rows. ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a SQL command. Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters sql string The SQL command to execute. cancellationToken CancellationToken The optional cancellation token. parameters object[] The parameters for the SQL command. Returns Task<int> A task representing the asynchronous operation, with the number of affected rows. Queryable<T>() Returns a queryable interface for entities of type T. IQueryable<T> Queryable<T>() where T : class Returns IQueryable<T> A queryable interface for the entities. Type Parameters T The type of the entities. Remove<T>(IEnumerable<T>) Removes multiple entities of type T from the repository. void Remove<T>(IEnumerable<T> entities) where T : class Parameters entities IEnumerable<T> The entities to remove. Type Parameters T The type of the entities. Remove<T>(T) Removes an entity of type T from the repository. void Remove<T>(T entity) where T : class Parameters entity T The entity to remove. Type Parameters T The type of the entity. Update<T>(T) Updates an entity of type T in the repository. void Update<T>(T entity) where T : class Parameters entity T The entity to update. Type Parameters T The type of the entity."
  },
  "api/Innovt.Domain.Core.Repository.IRepository-1.html": {
    "href": "api/Innovt.Domain.Core.Repository.IRepository-1.html",
    "title": "Interface IRepository<T> | Innovt Platform",
    "keywords": "Interface IRepository<T> Namespace Innovt.Domain.Core.Repository Assembly Innovt.Domain.Core.dll Represents a generic repository for data access operations. public interface IRepository<T> where T : class Type Parameters T The entity type. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Add(IEnumerable<T>) Adds multiple entities void Add(IEnumerable<T> entities) Parameters entities IEnumerable<T> Add(T) Adds a single entity void Add(T entity) Parameters entity T AddAsync(IEnumerable<T>) Asynchronously adds multiple entities Task AddAsync(IEnumerable<T> entities) Parameters entities IEnumerable<T> Returns Task AddAsync(T) Asynchronously adds a single entity Task AddAsync(T entity) Parameters entity T Returns Task CountBy(ISpecification<T>) Counts entities based on a specificatio int CountBy(ISpecification<T> specification) Parameters specification ISpecification<T> Returns int CountByAsync(ISpecification<T>, CancellationToken) Task<int> CountByAsync(ISpecification<T> specification, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> cancellationToken CancellationToken Returns Task<int> CountByAsync<TKEntity>(ISpecification<TKEntity>, CancellationToken) Asynchronously counts entities based on a specification for a given entity type Task<int> CountByAsync<TKEntity>(ISpecification<TKEntity> specification, CancellationToken cancellationToken = default) where TKEntity : class Parameters specification ISpecification<TKEntity> cancellationToken CancellationToken Returns Task<int> Type Parameters TKEntity CountBy<TKEntity>(ISpecification<TKEntity>) int CountBy<TKEntity>(ISpecification<TKEntity> specification) where TKEntity : class Parameters specification ISpecification<TKEntity> Returns int Type Parameters TKEntity FindBy(ISpecification<T>, Include?) Finds entities based on a specification and includes related entities IEnumerable<T> FindBy(ISpecification<T> specification, Include? includes = null) Parameters specification ISpecification<T> includes Include Returns IEnumerable<T> FindByAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously finds entities based on a specification and includes related entities Task<IEnumerable<T>> FindByAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> includes Include cancellationToken CancellationToken Returns Task<IEnumerable<T>> FindByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?, CancellationToken) Asynchronously finds entities based on a specification, with optional ordering, and includes related entities Task<IEnumerable<T>> FindByAsync<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> orderBy Expression<Func<T, TKey>> isOrderByDescending bool includes Include cancellationToken CancellationToken Returns Task<IEnumerable<T>> Type Parameters TKey FindBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?) Finds entities based on a specification, with optional ordering, and includes related entities IEnumerable<T> FindBy<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null) Parameters specification ISpecification<T> orderBy Expression<Func<T, TKey>> isOrderByDescending bool includes Include Returns IEnumerable<T> Type Parameters TKey FindPaginatedBy(ISpecification<T>, Include?) Finds entities based on a specification and returns a paged collection, with optional includes PagedCollection<T> FindPaginatedBy(ISpecification<T> specification, Include? includes = null) Parameters specification ISpecification<T> includes Include Returns PagedCollection<T> FindPaginatedByAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously finds entities based on a specification and returns a paged collection, with optional includes Task<PagedCollection<T>> FindPaginatedByAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> includes Include cancellationToken CancellationToken Returns Task<PagedCollection<T>> FindPaginatedByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?, CancellationToken) Asynchronously finds entities based on a specification, with optional ordering, and returns a paged collection, with optional includes Task<PagedCollection<T>> FindPaginatedByAsync<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> orderBy Expression<Func<T, TKey>> isOrderByDescending bool includes Include cancellationToken CancellationToken Returns Task<PagedCollection<T>> Type Parameters TKey FindPaginatedBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?) Finds entities based on a specification, with optional ordering, and returns a paged collection, with optional includes PagedCollection<T> FindPaginatedBy<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null) Parameters specification ISpecification<T> orderBy Expression<Func<T, TKey>> isOrderByDescending bool includes Include Returns PagedCollection<T> Type Parameters TKey GetFirstOrDefault(ISpecification<T>, Include?) Gets the first entity based on a specification and includes related entities T? GetFirstOrDefault(ISpecification<T> specification, Include? includes = null) Parameters specification ISpecification<T> includes Include Returns T GetFirstOrDefaultAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously gets the first entity based on a specification and includes related entities Task<T?> GetFirstOrDefaultAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> includes Include cancellationToken CancellationToken Returns Task<T> GetSingleOrDefault(ISpecification<T>, Include?) Gets a single entity based on a specification and includes related entities T? GetSingleOrDefault(ISpecification<T> specification, Include? includes = null) Parameters specification ISpecification<T> includes Include Returns T GetSingleOrDefaultAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously gets a single entity based on a specification and includes related entities Task<T?> GetSingleOrDefaultAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters specification ISpecification<T> includes Include cancellationToken CancellationToken Returns Task<T> Modify(T) Modifies an entity void Modify(T entity) Parameters entity T Remove(IEnumerable<T>) Removes multiple entities void Remove(IEnumerable<T> entities) Parameters entities IEnumerable<T> Remove(T) Removes a single entity void Remove(T entity) Parameters entity T"
  },
  "api/Innovt.Domain.Core.Repository.IUnitOfWork.html": {
    "href": "api/Innovt.Domain.Core.Repository.IUnitOfWork.html",
    "title": "Interface IUnitOfWork | Innovt Platform",
    "keywords": "Interface IUnitOfWork Namespace Innovt.Domain.Core.Repository Assembly Innovt.Domain.Core.dll Represents a unit of work for managing transactions and changes. public interface IUnitOfWork : IDisposable Inherited Members IDisposable.Dispose() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Commit() Commits the changes made within the unit of work. int Commit() Returns int The number of affected entries. CommitAsync(CancellationToken) Asynchronously commits the changes made within the unit of work. Task<int> CommitAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A cancellation token. Returns Task<int> The number of affected entries. Rollback() Rolls back any changes made within the unit of work. void Rollback()"
  },
  "api/Innovt.Domain.Core.Repository.Include.html": {
    "href": "api/Innovt.Domain.Core.Repository.Include.html",
    "title": "Class Include | Innovt Platform",
    "keywords": "Class Include Namespace Innovt.Domain.Core.Repository Assembly Innovt.Domain.Core.dll Represents a class for managing entity inclusion paths for Entity Framework queries. public class Include Inheritance object Include Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Include() Initializes a new instance of the Include class. public Include() Include(params string[]) Initializes a new instance of the Include class with specified include paths. public Include(params string[] includes) Parameters includes string[] The include paths. Properties Includes Gets the list of include paths. public List<string> Includes { get; } Property Value List<string> Methods Add(string) Adds an include path. public Include Add(string param) Parameters param string The include path to add. Returns Include The Include instance. Add(params string[]) Adds multiple include paths. public Include Add(params string[] parameters) Parameters parameters string[] The include paths to add. Returns Include The Include instance. IsEmpty() Checks if the include list is empty. public bool IsEmpty() Returns bool true if the include list is empty; otherwise, false. New(params string[]) Creates a new instance of Include with specified include paths. public static Include New(params string[] parameters) Parameters parameters string[] The include paths. Returns Include The new Include instance."
  },
  "api/Innovt.Domain.Core.Repository.html": {
    "href": "api/Innovt.Domain.Core.Repository.html",
    "title": "Namespace Innovt.Domain.Core.Repository | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Repository Classes Include Represents a class for managing entity inclusion paths for Entity Framework queries. Interfaces IExtendedUnitOfWork Extended Unit of Work Interface To Provide More Features To Unit Of Work When Using Entity Framework IRepository<T> Represents a generic repository for data access operations. IUnitOfWork Represents a unit of work for managing transactions and changes."
  },
  "api/Innovt.Domain.Core.Specification.AndSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.AndSpecification-1.html",
    "title": "Class AndSpecification<T> | Innovt Platform",
    "keywords": "Class AndSpecification<T> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll A logic AND Specification public sealed class AndSpecification<T> : CompositeSpecification<T>, ISpecification<T> where T : class Type Parameters T Type of entity that check this specification Inheritance object Specification<T> CompositeSpecification<T> AndSpecification<T> Implements ISpecification<T> Inherited Members Specification<T>.Page Specification<T>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors AndSpecification(ISpecification<T>, ISpecification<T>) Default constructor for AndSpecification public AndSpecification(ISpecification<T> leftSide, ISpecification<T> rightSide) Parameters leftSide ISpecification<T> Left side specification rightSide ISpecification<T> Right side specification Properties LeftSideSpecification Left side specification public override ISpecification<T> LeftSideSpecification { get; } Property Value ISpecification<T> RightSideSpecification Right side specification public override ISpecification<T> RightSideSpecification { get; } Property Value ISpecification<T> Methods SatisfiedBy() ISpecification<TEntity> public override Expression<Func<T, bool>> SatisfiedBy() Returns Expression<Func<T, bool>> ISpecification<TEntity>"
  },
  "api/Innovt.Domain.Core.Specification.ByPkSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.ByPkSpecification-1.html",
    "title": "Class ByPkSpecification<T> | Innovt Platform",
    "keywords": "Class ByPkSpecification<T> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll Specification to filter entities by their primary key (Id). public class ByPkSpecification<T> : ISpecification<T> where T : Entity Type Parameters T The type of entity. Inheritance object ByPkSpecification<T> Implements ISpecification<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ByPkSpecification(int) Initializes a new instance of the ByPkSpecification<T> class. public ByPkSpecification(int id) Parameters id int The primary key value to filter by. Properties Page Gets or sets the page number for paginated results. public int? Page { get; set; } Property Value int? PageSize Gets or sets the page size for paginated results. public int? PageSize { get; set; } Property Value int? Methods SatisfiedBy() Constructs an expression to filter entities based on the primary key. public Expression<Func<T, bool>> SatisfiedBy() Returns Expression<Func<T, bool>> An expression that satisfies the specification."
  },
  "api/Innovt.Domain.Core.Specification.CompositeSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.CompositeSpecification-1.html",
    "title": "Class CompositeSpecification<TEntity> | Innovt Platform",
    "keywords": "Class CompositeSpecification<TEntity> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll Base class for composite specifications public abstract class CompositeSpecification<TEntity> : Specification<TEntity>, ISpecification<TEntity> where TEntity : class Type Parameters TEntity Inheritance object Specification<TEntity> CompositeSpecification<TEntity> Implements ISpecification<TEntity> Derived AndSpecification<T> OrSpecification<T> Inherited Members Specification<TEntity>.Page Specification<TEntity>.PageSize Specification<TEntity>.SatisfiedBy() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties LeftSideSpecification Left side specification for this composite element public abstract ISpecification<TEntity> LeftSideSpecification { get; } Property Value ISpecification<TEntity> RightSideSpecification Right side specification for this composite element public abstract ISpecification<TEntity> RightSideSpecification { get; } Property Value ISpecification<TEntity>"
  },
  "api/Innovt.Domain.Core.Specification.DirectSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.DirectSpecification-1.html",
    "title": "Class DirectSpecification<TEntity> | Innovt Platform",
    "keywords": "Class DirectSpecification<TEntity> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll A Direct Specification is a simple implementation of specification that acquire this from a lambda expression in constructor public sealed class DirectSpecification<TEntity> : Specification<TEntity>, ISpecification<TEntity> where TEntity : class Type Parameters TEntity Inheritance object Specification<TEntity> DirectSpecification<TEntity> Implements ISpecification<TEntity> Inherited Members Specification<TEntity>.Page Specification<TEntity>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DirectSpecification(Expression<Func<TEntity, bool>>) Default constructor for Direct Specification public DirectSpecification(Expression<Func<TEntity, bool>> matchingCriteria) Parameters matchingCriteria Expression<Func<TEntity, bool>> A Matching Criteria Methods By(Expression<Func<TEntity, bool>>) Creates a direct specification for a given entity type based on provided matching criteria. public static DirectSpecification<TEntity> By(Expression<Func<TEntity, bool>> matchingCriteria) Parameters matchingCriteria Expression<Func<TEntity, bool>> The expression representing the matching criteria. Returns DirectSpecification<TEntity> A direct specification based on the provided matching criteria. SatisfiedBy() public override Expression<Func<TEntity, bool>> SatisfiedBy() Returns Expression<Func<TEntity, bool>>"
  },
  "api/Innovt.Domain.Core.Specification.ExpressionBuilder.html": {
    "href": "api/Innovt.Domain.Core.Specification.ExpressionBuilder.html",
    "title": "Class ExpressionBuilder | Innovt Platform",
    "keywords": "Class ExpressionBuilder Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll Extension methods for adding AND and OR with parameters rebinder public static class ExpressionBuilder Inheritance object ExpressionBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods And<T>(Expression<Func<T, bool>>, Expression<Func<T, bool>>) And operator public static Expression<Func<T, bool>> And<T>(this Expression<Func<T, bool>> first, Expression<Func<T, bool>> second) Parameters first Expression<Func<T, bool>> Right Expression in AND operation second Expression<Func<T, bool>> Left Expression in And operation Returns Expression<Func<T, bool>> New AND expression Type Parameters T Type of params in expression Compose<T>(Expression<T>, Expression<T>, Func<Expression, Expression, Expression>) Compose two expressions and merge all in a new expression public static Expression<T> Compose<T>(this Expression<T> first, Expression<T> second, Func<Expression, Expression, Expression> merge) Parameters first Expression<T> Expression instance second Expression<T> Expression to merge merge Func<Expression, Expression, Expression> Function to merge Returns Expression<T> New merged expression Type Parameters T Type of params in expression Or<T>(Expression<Func<T, bool>>, Expression<Func<T, bool>>) Or operator public static Expression<Func<T, bool>> Or<T>(this Expression<Func<T, bool>> first, Expression<Func<T, bool>> second) Parameters first Expression<Func<T, bool>> Right expression in OR operation second Expression<Func<T, bool>> Left expression in OR operation Returns Expression<Func<T, bool>> New Or expressions Type Parameters T Type of param in expression"
  },
  "api/Innovt.Domain.Core.Specification.ISpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.ISpecification-1.html",
    "title": "Interface ISpecification<TEntity> | Innovt Platform",
    "keywords": "Interface ISpecification<TEntity> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll Base contract for Specification pattern, for more information about this pattern see http://martinfowler.com/apsupp/spec.pdf or http://en.wikipedia.org/wiki/Specification_pattern. This is really a variant implementation where we have added Linq and lambda expression into this pattern. public interface ISpecification<TEntity> where TEntity : class Type Parameters TEntity Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Page int? Page { get; set; } Property Value int? PageSize int? PageSize { get; set; } Property Value int? Methods SatisfiedBy() Check if this specification is satisfied by a specific expression lambda Expression<Func<TEntity, bool>> SatisfiedBy() Returns Expression<Func<TEntity, bool>>"
  },
  "api/Innovt.Domain.Core.Specification.NotSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.NotSpecification-1.html",
    "title": "Class NotSpecification<TEntity> | Innovt Platform",
    "keywords": "Class NotSpecification<TEntity> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll NotEspecification convert a original specification with NOT logic operator public sealed class NotSpecification<TEntity> : Specification<TEntity>, ISpecification<TEntity> where TEntity : class Type Parameters TEntity Inheritance object Specification<TEntity> NotSpecification<TEntity> Implements ISpecification<TEntity> Inherited Members Specification<TEntity>.Page Specification<TEntity>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors NotSpecification(ISpecification<TEntity>) Constructor for NotSpecificaiton public NotSpecification(ISpecification<TEntity> originalSpecification) Parameters originalSpecification ISpecification<TEntity> Original specification NotSpecification(Expression<Func<TEntity, bool>>) Constructor for NotSpecification public NotSpecification(Expression<Func<TEntity, bool>> originalSpecification) Parameters originalSpecification Expression<Func<TEntity, bool>> Original specificaiton Methods SatisfiedBy() ISpecification<TEntity> public override Expression<Func<TEntity, bool>> SatisfiedBy() Returns Expression<Func<TEntity, bool>> ISpecification<TEntity>"
  },
  "api/Innovt.Domain.Core.Specification.OrSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.OrSpecification-1.html",
    "title": "Class OrSpecification<T> | Innovt Platform",
    "keywords": "Class OrSpecification<T> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll A Logic OR Specification public sealed class OrSpecification<T> : CompositeSpecification<T>, ISpecification<T> where T : class Type Parameters T Type of entity that check this specification Inheritance object Specification<T> CompositeSpecification<T> OrSpecification<T> Implements ISpecification<T> Inherited Members Specification<T>.Page Specification<T>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors OrSpecification(ISpecification<T>, ISpecification<T>) Default constructor for AndSpecification public OrSpecification(ISpecification<T> leftSide, ISpecification<T> rightSide) Parameters leftSide ISpecification<T> Left side specification rightSide ISpecification<T> Right side specification Properties LeftSideSpecification Left side specification public override ISpecification<T> LeftSideSpecification { get; } Property Value ISpecification<T> RightSideSpecification Righ side specification public override ISpecification<T> RightSideSpecification { get; } Property Value ISpecification<T> Methods SatisfiedBy() ISpecification<TEntity> public override Expression<Func<T, bool>> SatisfiedBy() Returns Expression<Func<T, bool>> ISpecification<TEntity>"
  },
  "api/Innovt.Domain.Core.Specification.ParameterRebinder.html": {
    "href": "api/Innovt.Domain.Core.Specification.ParameterRebinder.html",
    "title": "Class ParameterRebinder | Innovt Platform",
    "keywords": "Class ParameterRebinder Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll Helper for rebinder parameters without use Invoke method in expressions ( this methods is not supported in all linq query providers, for example in Linq2Entities is not supported) public sealed class ParameterRebinder : ExpressionVisitor Inheritance object ExpressionVisitor ParameterRebinder Inherited Members ExpressionVisitor.Visit(ReadOnlyCollection<Expression>) ExpressionVisitor.Visit(Expression) ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, string) ExpressionVisitor.VisitAndConvert<T>(T, string) ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ParameterRebinder(Dictionary<ParameterExpression, ParameterExpression>) Default construcotr public ParameterRebinder(Dictionary<ParameterExpression, ParameterExpression> map) Parameters map Dictionary<ParameterExpression, ParameterExpression> Map specification Methods ReplaceParameters(Dictionary<ParameterExpression, ParameterExpression>, Expression) Replate parameters in expression with a Map information public static Expression ReplaceParameters(Dictionary<ParameterExpression, ParameterExpression> map, Expression exp) Parameters map Dictionary<ParameterExpression, ParameterExpression> Map information exp Expression Expression to replace parameters Returns Expression Expression with parameters replaced VisitParameter(ParameterExpression) Visit pattern method protected override Expression VisitParameter(ParameterExpression p) Parameters p ParameterExpression A Parameter expression Returns Expression New visited expression"
  },
  "api/Innovt.Domain.Core.Specification.Specification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.Specification-1.html",
    "title": "Class Specification<TEntity> | Innovt Platform",
    "keywords": "Class Specification<TEntity> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll Represent a Expression Specification Specification overload operators for create AND,OR or NOT specifications. Additionally overload AND and OR operators with the same sense of ( binary And and binary Or ). C# couldn’t overload the AND and OR operators directly since the framework doesn’t allow such craziness. But with overloading false and true operators this is posible. For explain this behavior please read http://msdn.microsoft.com/en-us/library/aa691312(VS.71).aspx public abstract class Specification<TEntity> : ISpecification<TEntity> where TEntity : class Type Parameters TEntity Inheritance object Specification<TEntity> Implements ISpecification<TEntity> Derived CompositeSpecification<TEntity> DirectSpecification<TEntity> NotSpecification<TEntity> TrueSpecification<TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Page public int? Page { get; set; } Property Value int? PageSize public int? PageSize { get; set; } Property Value int? Methods SatisfiedBy() IsSatisFied Specification pattern method, public abstract Expression<Func<TEntity, bool>> SatisfiedBy() Returns Expression<Func<TEntity, bool>> Expression that satisfy this specification Operators operator &(Specification<TEntity>, Specification<TEntity>) And operator public static Specification<TEntity> operator &(Specification<TEntity> leftSideSpecification, Specification<TEntity> rightSideSpecification) Parameters leftSideSpecification Specification<TEntity> left operand in this AND operation rightSideSpecification Specification<TEntity> right operand in this AND operation Returns Specification<TEntity> New specification operator |(Specification<TEntity>, Specification<TEntity>) Or operator public static Specification<TEntity> operator |(Specification<TEntity> leftSideSpecification, Specification<TEntity> rightSideSpecification) Parameters leftSideSpecification Specification<TEntity> left operand in this OR operation rightSideSpecification Specification<TEntity> left operand in this OR operation Returns Specification<TEntity> New specification operator false(Specification<TEntity>) Override operator false, only for support AND OR operators public static bool operator false(Specification<TEntity> specification) Parameters specification Specification<TEntity> Specification instance Returns bool See False operator in C# operator !(Specification<TEntity>) Not specification public static Specification<TEntity> operator !(Specification<TEntity> specification) Parameters specification Specification<TEntity> Specification to negate Returns Specification<TEntity> New specification operator true(Specification<TEntity>) Override operator True, only for support AND OR operators public static bool operator true(Specification<TEntity> specification) Parameters specification Specification<TEntity> Specification instance Returns bool See True operator in C#"
  },
  "api/Innovt.Domain.Core.Specification.TrueSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.TrueSpecification-1.html",
    "title": "Class TrueSpecification<TEntity> | Innovt Platform",
    "keywords": "Class TrueSpecification<TEntity> Namespace Innovt.Domain.Core.Specification Assembly Innovt.Domain.Core.dll True specification public sealed class TrueSpecification<TEntity> : Specification<TEntity>, ISpecification<TEntity> where TEntity : class Type Parameters TEntity Inheritance object Specification<TEntity> TrueSpecification<TEntity> Implements ISpecification<TEntity> Inherited Members Specification<TEntity>.Page Specification<TEntity>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods SatisfiedBy() Specification<TEntity> public override Expression<Func<TEntity, bool>> SatisfiedBy() Returns Expression<Func<TEntity, bool>> Specification<TEntity>"
  },
  "api/Innovt.Domain.Core.Specification.html": {
    "href": "api/Innovt.Domain.Core.Specification.html",
    "title": "Namespace Innovt.Domain.Core.Specification | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Specification Classes AndSpecification<T> A logic AND Specification ByPkSpecification<T> Specification to filter entities by their primary key (Id). CompositeSpecification<TEntity> Base class for composite specifications DirectSpecification<TEntity> A Direct Specification is a simple implementation of specification that acquire this from a lambda expression in constructor ExpressionBuilder Extension methods for adding AND and OR with parameters rebinder NotSpecification<TEntity> NotEspecification convert a original specification with NOT logic operator OrSpecification<T> A Logic OR Specification ParameterRebinder Helper for rebinder parameters without use Invoke method in expressions ( this methods is not supported in all linq query providers, for example in Linq2Entities is not supported) Specification<TEntity> Represent a Expression Specification Specification overload operators for create AND,OR or NOT specifications. Additionally overload AND and OR operators with the same sense of ( binary And and binary Or ). C# couldn’t overload the AND and OR operators directly since the framework doesn’t allow such craziness. But with overloading false and true operators this is posible. For explain this behavior please read http://msdn.microsoft.com/en-us/library/aa691312(VS.71).aspx TrueSpecification<TEntity> True specification Interfaces ISpecification<TEntity> Base contract for Specification pattern, for more information about this pattern see http://martinfowler.com/apsupp/spec.pdf or http://en.wikipedia.org/wiki/Specification_pattern. This is really a variant implementation where we have added Linq and lambda expression into this pattern."
  },
  "api/Innovt.Domain.Core.Streams.DataStream-1.html": {
    "href": "api/Innovt.Domain.Core.Streams.DataStream-1.html",
    "title": "Class DataStream<T> | Innovt Platform",
    "keywords": "Class DataStream<T> Namespace Innovt.Domain.Core.Streams Assembly Innovt.Domain.Core.dll Represents a data stream with a specific type of body. public class DataStream<T> : IDataStream<T>, IDataStream where T : class Type Parameters T The type of the body. Inheritance object DataStream<T> Implements IDataStream<T> IDataStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DataStream() Default constructor for DataStream. public DataStream() DataStream(string, string?, string?, T) Initializes a new instance of the DataStream class with specified properties. public DataStream(string version, string? partition, string? traceId, T body) Parameters version string The version of the data stream. partition string The partition identifier of the data stream. traceId string The trace identifier associated with the data stream. body T The body of the data stream. Properties ApproximateArrivalTimestamp Gets or sets the approximate arrival timestamp of the data stream. public DateTime ApproximateArrivalTimestamp { get; set; } Property Value DateTime Body Gets or sets the body of the data stream. public T Body { get; set; } Property Value T EventId Gets or sets the event identifier associated with the data stream. public string? EventId { get; set; } Property Value string Partition Gets or sets the partition identifier of the data stream. public string? Partition { get; set; } Property Value string PublishedAt Gets or sets the date and time when the data stream was published. public DateTimeOffset? PublishedAt { get; set; } Property Value DateTimeOffset? TraceId Gets or sets the trace identifier associated with the data stream. public string? TraceId { get; set; } Property Value string Version Gets or sets the version of the data stream. public string Version { get; set; } Property Value string Methods Empty() Creates an empty data stream with no body. public static IEmptyDataStream Empty() Returns IEmptyDataStream An instance of an empty data stream."
  },
  "api/Innovt.Domain.Core.Streams.IDataStream-1.html": {
    "href": "api/Innovt.Domain.Core.Streams.IDataStream-1.html",
    "title": "Interface IDataStream<T> | Innovt Platform",
    "keywords": "Interface IDataStream<T> Namespace Innovt.Domain.Core.Streams Assembly Innovt.Domain.Core.dll Represents a data stream with a specific body type. public interface IDataStream<T> : IDataStream where T : class Type Parameters T The type of the body of the data stream. Inherited Members IDataStream.EventId IDataStream.Version IDataStream.Partition IDataStream.PublishedAt IDataStream.TraceId IDataStream.ApproximateArrivalTimestamp Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Body Gets or sets the body of the data stream. T Body { get; set; } Property Value T"
  },
  "api/Innovt.Domain.Core.Streams.IDataStream.html": {
    "href": "api/Innovt.Domain.Core.Streams.IDataStream.html",
    "title": "Interface IDataStream | Innovt Platform",
    "keywords": "Interface IDataStream Namespace Innovt.Domain.Core.Streams Assembly Innovt.Domain.Core.dll Represents a data stream without a specific body type. public interface IDataStream Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties ApproximateArrivalTimestamp Gets or sets the approximate arrival timestamp of the data stream. DateTime ApproximateArrivalTimestamp { get; set; } Property Value DateTime EventId Gets or sets the event identifier associated with the data stream. string? EventId { get; set; } Property Value string Partition Gets or sets the partition identifier of the data stream. string? Partition { get; set; } Property Value string PublishedAt Gets or sets the date and time when the data stream was published. DateTimeOffset? PublishedAt { get; set; } Property Value DateTimeOffset? TraceId Gets or sets the trace identifier associated with the data stream. string? TraceId { get; set; } Property Value string Version Gets or sets the version of the data stream. string Version { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Core.Streams.IEmptyDataStream.html": {
    "href": "api/Innovt.Domain.Core.Streams.IEmptyDataStream.html",
    "title": "Interface IEmptyDataStream | Innovt Platform",
    "keywords": "Interface IEmptyDataStream Namespace Innovt.Domain.Core.Streams Assembly Innovt.Domain.Core.dll Represents an empty data stream without a specific body type. public interface IEmptyDataStream : IDataStream Inherited Members IDataStream.EventId IDataStream.Version IDataStream.Partition IDataStream.PublishedAt IDataStream.TraceId IDataStream.ApproximateArrivalTimestamp Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Streams.html": {
    "href": "api/Innovt.Domain.Core.Streams.html",
    "title": "Namespace Innovt.Domain.Core.Streams | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Streams Classes DataStream<T> Represents a data stream with a specific type of body. Interfaces IDataStream Represents a data stream without a specific body type. IDataStream<T> Represents a data stream with a specific body type. IEmptyDataStream Represents an empty data stream without a specific body type."
  },
  "api/Innovt.Domain.Documents.Document.html": {
    "href": "api/Innovt.Domain.Documents.Document.html",
    "title": "Class Document | Innovt Platform",
    "keywords": "Class Document Namespace Innovt.Domain.Documents Assembly Innovt.Domain.dll Represents a document entity. public class Document : ValueObject Inheritance object ValueObject Document Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Document() Initializes a new instance of the Document class. public Document() Document(string, int) Initializes a new instance of the Document class with the specified number and document type. public Document(string number, int documentTypeId) Parameters number string The document number. documentTypeId int The ID of the associated document type. Properties DocumentType Gets or sets the document type associated with this document. public DocumentType DocumentType { get; set; } Property Value DocumentType DocumentTypeId Gets or sets the ID of the document type associated with this document. public int DocumentTypeId { get; set; } Property Value int Number Gets or sets the document number. public string Number { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Documents.DocumentType.html": {
    "href": "api/Innovt.Domain.Documents.DocumentType.html",
    "title": "Class DocumentType | Innovt Platform",
    "keywords": "Class DocumentType Namespace Innovt.Domain.Documents Assembly Innovt.Domain.dll Represents a document type entity. public class DocumentType : ValueObject Inheritance object ValueObject DocumentType Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Country Gets or sets the country associated with this document type. public Country Country { get; set; } Property Value Country CountryId Gets or sets the ID of the country associated with this document type. public int CountryId { get; set; } Property Value int Mask Gets or sets the mask for the document type. public string Mask { get; set; } Property Value string Name Gets or sets the name of the document type. public string Name { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Documents.html": {
    "href": "api/Innovt.Domain.Documents.html",
    "title": "Namespace Innovt.Domain.Documents | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Documents Classes Document Represents a document entity. DocumentType Represents a document type entity."
  },
  "api/Innovt.Domain.Security.AuthUser.html": {
    "href": "api/Innovt.Domain.Security.AuthUser.html",
    "title": "Class AuthUser | Innovt Platform",
    "keywords": "Class AuthUser Namespace Innovt.Domain.Security Assembly Innovt.Domain.dll Represents a user in the authentication system. public class AuthUser : Entity Inheritance object Entity AuthUser Inherited Members Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors AuthUser() Initializes a new instance of the AuthUser class. public AuthUser() Properties DomainId Gets or sets the domain ID associated with the user. public string DomainId { get; set; } Property Value string Groups Gets or sets the groups associated with the user. public IList<Group> Groups { get; } Property Value IList<Group> Id Gets or sets the user ID. public string Id { get; set; } Property Value string Name Gets or sets the name of the user. public string Name { get; set; } Property Value string Roles Gets or sets the roles associated with the user. public IList<Role> Roles { get; } Property Value IList<Role> Methods AssignGroup(Group) Assigns a group to the user. public void AssignGroup(Group group) Parameters group Group The group to assign. AssignRole(Role) Assigns a role to the user. public void AssignRole(Role role) Parameters role Role The role to assign. UnAssignGroup(string) Unassigns a group from the user. public void UnAssignGroup(string groupName) Parameters groupName string The name of the group. UnAssignRole(string, string) Unassigns a role from the user. public void UnAssignRole(string scope, string roleName) Parameters scope string The scope of the role. roleName string The name of the role."
  },
  "api/Innovt.Domain.Security.BasicAuthCredentials.html": {
    "href": "api/Innovt.Domain.Security.BasicAuthCredentials.html",
    "title": "Class BasicAuthCredentials | Innovt Platform",
    "keywords": "Class BasicAuthCredentials Namespace Innovt.Domain.Security Assembly Innovt.Domain.dll Represents basic authentication credentials consisting of a username and password. public class BasicAuthCredentials Inheritance object BasicAuthCredentials Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Password Gets or sets the password for basic authentication. public string Password { get; set; } Property Value string Username Gets or sets the username for basic authentication. public string Username { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Security.Group.html": {
    "href": "api/Innovt.Domain.Security.Group.html",
    "title": "Class Group | Innovt Platform",
    "keywords": "Class Group Namespace Innovt.Domain.Security Assembly Innovt.Domain.dll Represents a group entity. public class Group : Entity<Guid> Inheritance object Entity Entity<Guid> Group Inherited Members Entity<Guid>.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Group() Initializes a new instance of the Group class. public Group() Properties Description Gets or sets the description of the group. public string Description { get; set; } Property Value string Name Gets or sets the name of the group. public string Name { get; set; } Property Value string Roles Gets the list of roles associated with the group. public IList<Role> Roles { get; } Property Value IList<Role> Methods AssignRole(Role) Assigns a role to the group. public void AssignRole(Role role) Parameters role Role The role to assign. UnAssignRole(Role) Unassigns a role from the group. public void UnAssignRole(Role role) Parameters role Role The role to unassign."
  },
  "api/Innovt.Domain.Security.IAuthorizationRepository.html": {
    "href": "api/Innovt.Domain.Security.IAuthorizationRepository.html",
    "title": "Interface IAuthorizationRepository | Innovt Platform",
    "keywords": "Interface IAuthorizationRepository Namespace Innovt.Domain.Security Assembly Innovt.Domain.dll Represents a repository for authorization-related operations. public interface IAuthorizationRepository Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods GetUserByExternalId(string, CancellationToken) Gets a user by their external identifier. Task<AuthUser> GetUserByExternalId(string externalId, CancellationToken cancellationToken = default) Parameters externalId string The external identifier of the user. cancellationToken CancellationToken A CancellationToken to observe the operation cancellation. Returns Task<AuthUser> A task that represents the asynchronous operation. The task result contains the AuthUser associated with the external identifier."
  },
  "api/Innovt.Domain.Security.Permission.html": {
    "href": "api/Innovt.Domain.Security.Permission.html",
    "title": "Class Permission | Innovt Platform",
    "keywords": "Class Permission Namespace Innovt.Domain.Security Assembly Innovt.Domain.dll Represents a permission entity. public class Permission : ValueObject<Guid> Inheritance object ValueObject ValueObject<Guid> Permission Inherited Members ValueObject<Guid>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Permission() Initializes a new instance of the Permission class. public Permission() Properties Name The custom name that you need to show to your customer. public string Name { get; set; } Property Value string Resource mean that you want to authorize the full path/domain Controller/* mean that you can authorize all actions Controller/Action mean that you want to authorize only this action public string Resource { get; set; } Property Value string Scope Can be the area in your Controller public string Scope { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Security.Role.html": {
    "href": "api/Innovt.Domain.Security.Role.html",
    "title": "Class Role | Innovt Platform",
    "keywords": "Class Role Namespace Innovt.Domain.Security Assembly Innovt.Domain.dll Define a list of permissions that can be used public class Role : Entity<Guid> Inheritance object Entity Entity<Guid> Role Inherited Members Entity<Guid>.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Role() Initializes a new instance of the Role class. public Role() Properties Description Gets or sets the description of the role. public string Description { get; set; } Property Value string Name Gets or sets the name of the role. public string Name { get; set; } Property Value string Permissions Gets or sets the list of permissions associated with the role. public IList<Permission> Permissions { get; set; } Property Value IList<Permission> Scope Gets or sets the scope of the role. public string Scope { get; set; } Property Value string Methods AssignPermission(Permission) Assigns a permission to the role. public void AssignPermission(Permission permission) Parameters permission Permission The permission to be assigned. Equals(object) Determines whether the current Role instance is equal to another object. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if the specified object is equal to the current instance; otherwise, false. RemovePermission(Guid) Removes a permission from the role by its identifier. public void RemovePermission(Guid permissionId) Parameters permissionId Guid The identifier of the permission to be removed."
  },
  "api/Innovt.Domain.Security.html": {
    "href": "api/Innovt.Domain.Security.html",
    "title": "Namespace Innovt.Domain.Security | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Security Classes AuthUser Represents a user in the authentication system. BasicAuthCredentials Represents basic authentication credentials consisting of a username and password. Group Represents a group entity. Permission Represents a permission entity. Role Define a list of permissions that can be used Interfaces IAuthorizationRepository Represents a repository for authorization-related operations."
  },
  "api/Innovt.Domain.Tests.AuthUserTests.html": {
    "href": "api/Innovt.Domain.Tests.AuthUserTests.html",
    "title": "Class AuthUserTests | Innovt Platform",
    "keywords": "Class AuthUserTests Namespace Innovt.Domain.Tests Assembly Innovt.Domain.Tests.dll public class AuthUserTests Inheritance object AuthUserTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Setup() [SetUp] public void Setup() UnAssignRole() [Test] public void UnAssignRole()"
  },
  "api/Innovt.Domain.Tests.ContactTests.html": {
    "href": "api/Innovt.Domain.Tests.ContactTests.html",
    "title": "Class ContactTests | Innovt Platform",
    "keywords": "Class ContactTests Namespace Innovt.Domain.Tests Assembly Innovt.Domain.Tests.dll [TestFixture] public class ContactTests Inheritance object ContactTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods ContactValidate_Should_Return_Error_When_ContactType_Is_Null() [Test] public void ContactValidate_Should_Return_Error_When_ContactType_Is_Null() ContactValidate_Should_ThrowException_When_TypeValidation_DoesNotMatch() [Test] public void ContactValidate_Should_ThrowException_When_TypeValidation_DoesNotMatch() ContactValidate_Should_Validate_IfContactTypeHasNoValidation() [Test] public void ContactValidate_Should_Validate_IfContactTypeHasNoValidation()"
  },
  "api/Innovt.Domain.Tests.EntityTests.html": {
    "href": "api/Innovt.Domain.Tests.EntityTests.html",
    "title": "Class EntityTests | Innovt Platform",
    "keywords": "Class EntityTests Namespace Innovt.Domain.Tests Assembly Innovt.Domain.Tests.dll [TestFixture] public class EntityTests Inheritance object EntityTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods CheckDomainEvents() [Test] public void CheckDomainEvents()"
  },
  "api/Innovt.Domain.Tests.Mocks.UserCreated.html": {
    "href": "api/Innovt.Domain.Tests.Mocks.UserCreated.html",
    "title": "Class UserCreated | Innovt Platform",
    "keywords": "Class UserCreated Namespace Innovt.Domain.Tests.Mocks Assembly Innovt.Domain.Tests.dll public class UserCreated : DomainEvent, IDataStream Inheritance object DomainEvent UserCreated Implements IDataStream Inherited Members DomainEvent.Name DomainEvent.CreatedAt DomainEvent.EventId DomainEvent.Version DomainEvent.Partition DomainEvent.PublishedAt DomainEvent.TraceId DomainEvent.ApproximateArrivalTimestamp DomainEvent.Empty(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors UserCreated() public UserCreated() UserCreated(string, string, string) public UserCreated(string name, string version, string partition) Parameters name string version string partition string"
  },
  "api/Innovt.Domain.Tests.Mocks.UserEntity.html": {
    "href": "api/Innovt.Domain.Tests.Mocks.UserEntity.html",
    "title": "Class UserEntity | Innovt Platform",
    "keywords": "Class UserEntity Namespace Innovt.Domain.Tests.Mocks Assembly Innovt.Domain.Tests.dll public class UserEntity : Entity Inheritance object Entity UserEntity Inherited Members Entity.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Tests.Mocks.html": {
    "href": "api/Innovt.Domain.Tests.Mocks.html",
    "title": "Namespace Innovt.Domain.Tests.Mocks | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Tests.Mocks Classes UserCreated UserEntity"
  },
  "api/Innovt.Domain.Tests.html": {
    "href": "api/Innovt.Domain.Tests.html",
    "title": "Namespace Innovt.Domain.Tests | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Tests Classes AuthUserTests ContactTests EntityTests"
  },
  "api/Innovt.Domain.Tracking.IRequestTrackingRepository.html": {
    "href": "api/Innovt.Domain.Tracking.IRequestTrackingRepository.html",
    "title": "Interface IRequestTrackingRepository | Innovt Platform",
    "keywords": "Interface IRequestTrackingRepository Namespace Innovt.Domain.Tracking Assembly Innovt.Domain.dll Interface for a repository responsible for request tracking operations. public interface IRequestTrackingRepository Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods AddTracking(RequestTracking) Adds a request tracking record. Task AddTracking(RequestTracking tracking) Parameters tracking RequestTracking The request tracking object to be added. Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.Domain.Tracking.RequestTracking.html": {
    "href": "api/Innovt.Domain.Tracking.RequestTracking.html",
    "title": "Class RequestTracking | Innovt Platform",
    "keywords": "Class RequestTracking Namespace Innovt.Domain.Tracking Assembly Innovt.Domain.dll Represents a request tracking record for monitoring HTTP requests. public class RequestTracking : ValueObject<Guid> Inheritance object ValueObject ValueObject<Guid> RequestTracking Inherited Members ValueObject<Guid>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors RequestTracking() Initializes a new instance of the RequestTracking class. public RequestTracking() Properties Action Gets or sets the action associated with the request. public string Action { get; set; } Property Value string Area Gets or sets the area associated with the request. public string Area { get; set; } Property Value string Controller Gets or sets the controller associated with the request. public string Controller { get; set; } Property Value string Host Gets or sets the host associated with the request. public string Host { get; set; } Property Value string ResponseStatusCode Gets or sets the HTTP response status code. public int? ResponseStatusCode { get; set; } Property Value int? UserId Gets or sets the user ID associated with the request. public string UserId { get; set; } Property Value string Verb Gets or sets the HTTP verb used in the request. public string Verb { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Tracking.html": {
    "href": "api/Innovt.Domain.Tracking.html",
    "title": "Namespace Innovt.Domain.Tracking | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Tracking Classes RequestTracking Represents a request tracking record for monitoring HTTP requests. Interfaces IRequestTrackingRepository Interface for a repository responsible for request tracking operations."
  },
  "api/Innovt.Domain.Users.BaseUser.html": {
    "href": "api/Innovt.Domain.Users.BaseUser.html",
    "title": "Class BaseUser | Innovt Platform",
    "keywords": "Class BaseUser Namespace Innovt.Domain.Users Assembly Innovt.Domain.dll Represents a base user entity. public class BaseUser : Entity Inheritance object Entity BaseUser Inherited Members Entity.Id Entity.CreatedAt Entity.IsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Email Gets or sets the email address of the user. public virtual string Email { get; set; } Property Value string FirstName Gets or sets the first name of the user. public virtual string FirstName { get; set; } Property Value string IsActive Gets or sets a value indicating whether the user is active. public virtual bool IsActive { get; set; } Property Value bool LastAccess Gets or sets the last access timestamp for the user. public DateTimeOffset? LastAccess { get; set; } Property Value DateTimeOffset? LastName Gets or sets the last name of the user. public virtual string LastName { get; set; } Property Value string Name Gets the full name of the user by combining the first and last names. public string Name { get; } Property Value string Password Gets or sets the password associated with the user. public virtual string Password { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Users.Gender.html": {
    "href": "api/Innovt.Domain.Users.Gender.html",
    "title": "Class Gender | Innovt Platform",
    "keywords": "Class Gender Namespace Innovt.Domain.Users Assembly Innovt.Domain.dll Represents a gender domain model. public class Gender : DomainModel<Gender> Inheritance object ValueObject DomainModel<Gender> Gender Inherited Members DomainModel<Gender>.AddModel(Gender) DomainModel<Gender>.FindAll() DomainModel<Gender>.GetByPk(int) ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors Gender() Initializes a new instance of the Gender class. public Gender() Gender(int, char, string) Initializes a new instance of the Gender class with the specified parameters. public Gender(int id, char acronym, string description) Parameters id int The unique identifier for the gender. acronym char The acronym representing the gender. description string The description of the gender. Fields Female public static Gender Female Field Value Gender Male public static Gender Male Field Value Gender Properties Acronym Gets or sets the acronym representing the gender. public char Acronym { get; set; } Property Value char Description Gets or sets the description of the gender. public string Description { get; set; } Property Value string"
  },
  "api/Innovt.Domain.Users.html": {
    "href": "api/Innovt.Domain.Users.html",
    "title": "Namespace Innovt.Domain.Users | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Users Classes BaseUser Represents a base user entity. Gender Represents a gender domain model."
  },
  "api/Innovt.Domain.html": {
    "href": "api/Innovt.Domain.html",
    "title": "Namespace Innovt.Domain | Innovt Platform",
    "keywords": "Namespace Innovt.Domain Classes BaseCreditCard Represents a base credit card information."
  },
  "api/Innovt.HttpClient.Core.ApiContext.html": {
    "href": "api/Innovt.HttpClient.Core.ApiContext.html",
    "title": "Class ApiContext | Innovt Platform",
    "keywords": "Class ApiContext Namespace Innovt.HttpClient.Core Assembly Innovt.HttpClient.Core.dll Represents the context for interacting with an API. public sealed class ApiContext Inheritance object ApiContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ApiContext(IEnvironment) Initializes a new instance of the ApiContext class. public ApiContext(IEnvironment environment) Parameters environment IEnvironment The environment associated with the API context. Exceptions ArgumentNullException Thrown when environment is null. ApiContext(IEnvironment, BasicCredential) Initializes a new instance of the ApiContext class with basic credentials. public ApiContext(IEnvironment environment, BasicCredential credential) Parameters environment IEnvironment The environment associated with the API context. credential BasicCredential The basic credential. Exceptions ArgumentNullException Thrown when environment or credential is null. ApiContext(IEnvironment, string) Initializes a new instance of the ApiContext class with an access token. public ApiContext(IEnvironment environment, string accessToken) Parameters environment IEnvironment The environment associated with the API context. accessToken string The access token. Exceptions ArgumentNullException Thrown when environment or accessToken is null. Properties AccessToken Gets or sets the access token associated with the API context. public string AccessToken { get; set; } Property Value string Credential Gets or sets the basic credential associated with the API context. public BasicCredential Credential { get; set; } Property Value BasicCredential Environment Gets or sets the environment associated with the API context. public IEnvironment Environment { get; set; } Property Value IEnvironment ExpireIn Gets or sets the expiration time in seconds for the access token associated with the API context. public int ExpireIn { get; set; } Property Value int TokenType Gets or sets the token type associated with the API context. public string TokenType { get; set; } Property Value string"
  },
  "api/Innovt.HttpClient.Core.ApiException-1.html": {
    "href": "api/Innovt.HttpClient.Core.ApiException-1.html",
    "title": "Class ApiException<T> | Innovt Platform",
    "keywords": "Class ApiException<T> Namespace Innovt.HttpClient.Core Assembly Innovt.HttpClient.Core.dll Represents an exception specific to API operations, carrying an error response of type T. public class ApiException<T> : Exception, ISerializable Type Parameters T The type of the error response associated with the exception. Inheritance object Exception ApiException<T> Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors ApiException(T) Initializes a new instance of the ApiException<T> class with the specified error response. public ApiException(T errorResponse) Parameters errorResponse T The error response associated with the exception. Properties ErrorResponse Gets or sets the error response associated with the API exception. public T ErrorResponse { get; set; } Property Value T"
  },
  "api/Innovt.HttpClient.Core.Authentication.OAuthClient.html": {
    "href": "api/Innovt.HttpClient.Core.Authentication.OAuthClient.html",
    "title": "Class OAuthClient | Innovt Platform",
    "keywords": "Class OAuthClient Namespace Innovt.HttpClient.Core.Authentication Assembly Innovt.HttpClient.Core.dll Provides methods for authenticating using OAuth client credentials flow. public static class OAuthClient Inheritance object OAuthClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Authenticate(string, string, string, CancellationToken) Authenticates using the OAuth client credentials flow. public static Task<OAuthResponse> Authenticate(string authUri, string clientId, string clientSecret, CancellationToken cancellationToken = default) Parameters authUri string The OAuth authorization URI. clientId string The client ID for authentication. clientSecret string The client secret for authentication. cancellationToken CancellationToken Cancellation token to cancel the operation. Returns Task<OAuthResponse> An OAuthResponse containing authentication details. Exceptions ArgumentNullException Thrown when clientId or clientSecret is null or empty. HttpRequestException Thrown if the HTTP request to the authentication URI fails."
  },
  "api/Innovt.HttpClient.Core.Authentication.OAuthResponse.html": {
    "href": "api/Innovt.HttpClient.Core.Authentication.OAuthResponse.html",
    "title": "Class OAuthResponse | Innovt Platform",
    "keywords": "Class OAuthResponse Namespace Innovt.HttpClient.Core.Authentication Assembly Innovt.HttpClient.Core.dll Represents the response from an OAuth authentication request. public class OAuthResponse Inheritance object OAuthResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties AccessToken Gets or sets the access token obtained from the authentication. public string AccessToken { get; set; } Property Value string ExpiresIn Gets or sets the duration in seconds for which the access token is valid. public int ExpiresIn { get; set; } Property Value int Scope Gets or sets the scope of the access token. public string Scope { get; set; } Property Value string TokenType Gets or sets the token type. public string TokenType { get; set; } Property Value string"
  },
  "api/Innovt.HttpClient.Core.Authentication.html": {
    "href": "api/Innovt.HttpClient.Core.Authentication.html",
    "title": "Namespace Innovt.HttpClient.Core.Authentication | Innovt Platform",
    "keywords": "Namespace Innovt.HttpClient.Core.Authentication Classes OAuthClient Provides methods for authenticating using OAuth client credentials flow. OAuthResponse Represents the response from an OAuth authentication request."
  },
  "api/Innovt.HttpClient.Core.BaseApiClient-1.html": {
    "href": "api/Innovt.HttpClient.Core.BaseApiClient-1.html",
    "title": "Class BaseApiClient<TErrorResponse> | Innovt Platform",
    "keywords": "Class BaseApiClient<TErrorResponse> Namespace Innovt.HttpClient.Core Assembly Innovt.HttpClient.Core.dll Abstract base class for API clients, providing common functionality for sending HTTP requests and handling responses. public abstract class BaseApiClient<TErrorResponse> : BaseApiClient where TErrorResponse : class Type Parameters TErrorResponse Type representing the error response in case of non-successful HTTP requests. Inheritance object BaseApiClient BaseApiClient<TErrorResponse> Inherited Members BaseApiClient.ApiContext BaseApiClient.Serializer BaseApiClient.CreateHttpClient() BaseApiClient.PostAsync<T>(Uri, string, HttpContent, CancellationToken) BaseApiClient.PostAsync(Uri, string, HttpContent, CancellationToken) BaseApiClient.PutAsync<T>(Uri, string, HttpContent, Dictionary<string, string>, CancellationToken) BaseApiClient.PutAsync<T>(Uri, string, HttpContent, CancellationToken) BaseApiClient.GetAsync<T>(Uri, string, CancellationToken) BaseApiClient.GetStreamAsync(Uri, string, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BaseApiClient(ApiContext, ISerializer) Initializes a new instance of the BaseApiClient<TErrorResponse> class. protected BaseApiClient(ApiContext apiContext, ISerializer serializer) Parameters apiContext ApiContext The API context containing necessary information like access token and token type. serializer ISerializer The serializer used to deserialize response data. BaseApiClient(ApiContext, IHttpClientFactory, ISerializer) Initializes a new instance of the BaseApiClient<TErrorResponse> class. protected BaseApiClient(ApiContext apiContext, IHttpClientFactory httpClientFactory, ISerializer serializer) Parameters apiContext ApiContext The API context containing necessary information like access token and token type. httpClientFactory IHttpClientFactory The factory for creating HTTP clients. serializer ISerializer The serializer used to deserialize response data. Methods ParseResponse<T>(HttpResponseMessage) Parses the HTTP response message and handles success or error based on the status code. protected override Task<T> ParseResponse<T>(HttpResponseMessage response) Parameters response HttpResponseMessage The HTTP response message to parse. Returns Task<T> The deserialized success response. Type Parameters T Type representing the success response. ParseStreamResponse(HttpResponseMessage) Parses the HTTP response message and handles success or error based on the status code, returning the response as a stream. protected override Task<Stream> ParseStreamResponse(HttpResponseMessage response) Parameters response HttpResponseMessage The HTTP response message to parse. Returns Task<Stream> A stream representing the response data."
  },
  "api/Innovt.HttpClient.Core.BaseApiClient.html": {
    "href": "api/Innovt.HttpClient.Core.BaseApiClient.html",
    "title": "Class BaseApiClient | Innovt Platform",
    "keywords": "Class BaseApiClient Namespace Innovt.HttpClient.Core Assembly Innovt.HttpClient.Core.dll Base abstract class for an API client. public abstract class BaseApiClient Inheritance object BaseApiClient Derived BaseApiClient<TErrorResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BaseApiClient(ApiContext, ISerializer) Initializes a new instance of the BaseApiClient class. protected BaseApiClient(ApiContext apiContext, ISerializer serializer) Parameters apiContext ApiContext The API context associated with this client. serializer ISerializer The serializer used for data serialization and deserialization. BaseApiClient(ApiContext, IHttpClientFactory, ISerializer) This method sends a POST request to the API. protected BaseApiClient(ApiContext apiContext, IHttpClientFactory httpClientFactory, ISerializer serializer) Parameters apiContext ApiContext httpClientFactory IHttpClientFactory serializer ISerializer Exceptions ArgumentNullException Properties ApiContext Gets the API context associated with this client. protected ApiContext ApiContext { get; } Property Value ApiContext Serializer Gets the serializer used for serializing and deserializing data. protected ISerializer Serializer { get; } Property Value ISerializer Methods CreateHttpClient() Creates a new instance of HttpClient. protected virtual HttpClient CreateHttpClient() Returns HttpClient The created HttpClient. GetAsync<T>(Uri, string, CancellationToken) Asynchronously sends an HTTP GET request to the specified URI with optional headers and deserializes the response to a strongly typed object of type T. protected Task<T> GetAsync<T>(Uri baseUri, string resourceUri, CancellationToken cancellationToken = default) Parameters baseUri Uri The base URI for the request. resourceUri string The resource URI to append to the base URI. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<T> The strongly typed object of type T representing the response data. Type Parameters T GetStreamAsync(Uri, string, CancellationToken) Asynchronously sends an HTTP GET request to the specified URI with optional headers and returns the response as a stream. protected Task<Stream> GetStreamAsync(Uri baseUri, string resourceUri, CancellationToken cancellationToken = default) Parameters baseUri Uri The base URI for the request. resourceUri string The resource URI to append to the base URI. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<Stream> A stream representing the response data. ParseResponse<T>(HttpResponseMessage) Parses the HTTP response into a strongly-typed object. protected virtual Task<T> ParseResponse<T>(HttpResponseMessage response) Parameters response HttpResponseMessage The HTTP response message. Returns Task<T> The parsed object of type T. Type Parameters T The type of the object to parse into. ParseStreamResponse(HttpResponseMessage) Parses the HTTP response into a stream. protected virtual Task<Stream> ParseStreamResponse(HttpResponseMessage response) Parameters response HttpResponseMessage The HTTP response message. Returns Task<Stream> The response stream. PostAsync(Uri, string, HttpContent, CancellationToken) Asynchronously sends an HTTP POST request to the specified URI with content and optional headers. protected Task<HttpStatusCode> PostAsync(Uri baseUri, string resourceUri, HttpContent content, CancellationToken cancellationToken = default) Parameters baseUri Uri The base URI for the request. resourceUri string The resource URI to append to the base URI. content HttpContent The HTTP content to send in the request body. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<HttpStatusCode> The HTTP status code of the response. PostAsync<T>(Uri, string, HttpContent, CancellationToken) Asynchronously sends an HTTP POST request to the specified URI with optional headers and content, and deserializes the response to a strongly typed object of type T. protected Task<T> PostAsync<T>(Uri baseUri, string resourceUri, HttpContent content, CancellationToken cancellationToken = default) Parameters baseUri Uri The base URI for the request. resourceUri string The resource URI to append to the base URI. content HttpContent The HTTP content to send in the request body. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<T> The strongly typed object of type T representing the response data. Type Parameters T PutAsync<T>(Uri, string, HttpContent, Dictionary<string, string>, CancellationToken) Asynchronously sends an HTTP PUT request to the specified URI with optional headers and content, and deserializes the response to a strongly typed object of type T. protected Task<T> PutAsync<T>(Uri baseUri, string resourceUri, HttpContent content, Dictionary<string, string> headerValues = null, CancellationToken cancellationToken = default) Parameters baseUri Uri The base URI for the request. resourceUri string The resource URI to append to the base URI. content HttpContent The HTTP content to send in the request body. headerValues Dictionary<string, string> Optional headers to include in the request. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<T> The strongly typed object of type T representing the response data. Type Parameters T PutAsync<T>(Uri, string, HttpContent, CancellationToken) Asynchronously sends an HTTP PUT request to the specified URI with optional headers and content, and deserializes the response to a strongly typed object of type T. protected Task<T> PutAsync<T>(Uri baseUri, string resourceUri, HttpContent content, CancellationToken cancellationToken = default) Parameters baseUri Uri The base URI for the request. resourceUri string The resource URI to append to the base URI. content HttpContent The HTTP content to send in the request body. cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task<T> The strongly typed object of type T representing the response data. Type Parameters T"
  },
  "api/Innovt.HttpClient.Core.BaseConstants.html": {
    "href": "api/Innovt.HttpClient.Core.BaseConstants.html",
    "title": "Class BaseConstants | Innovt Platform",
    "keywords": "Class BaseConstants Namespace Innovt.HttpClient.Core Assembly Innovt.HttpClient.Core.dll public static class BaseConstants Inheritance object BaseConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AuthorizationHeader Represents the authorization header. public const string AuthorizationHeader = \"Authorization\" Field Value string ContentTypeApplicationJson Represents the content type for application/json. public const string ContentTypeApplicationJson = \"application/json\" Field Value string ContentTypeHeaderFormUrlEncoded Represents the content type for application/x-www-form-urlencoded. public const string ContentTypeHeaderFormUrlEncoded = \"application/x-www-form-urlencoded\" Field Value string"
  },
  "api/Innovt.HttpClient.Core.BasicCredential.html": {
    "href": "api/Innovt.HttpClient.Core.BasicCredential.html",
    "title": "Class BasicCredential | Innovt Platform",
    "keywords": "Class BasicCredential Namespace Innovt.HttpClient.Core Assembly Innovt.HttpClient.Core.dll Represents basic credentials for authentication. public class BasicCredential Inheritance object BasicCredential Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors BasicCredential(string, string) Initializes a new instance of the BasicCredential class with the provided access key ID and access key. public BasicCredential(string accessKeyId, string accessKey) Parameters accessKeyId string The access key ID. accessKey string The access key. Properties AccessKey Gets or sets the access key. public string AccessKey { get; set; } Property Value string AccessKeyId Gets or sets the access key ID. public string AccessKeyId { get; set; } Property Value string"
  },
  "api/Innovt.HttpClient.Core.IEnvironment.html": {
    "href": "api/Innovt.HttpClient.Core.IEnvironment.html",
    "title": "Interface IEnvironment | Innovt Platform",
    "keywords": "Interface IEnvironment Namespace Innovt.HttpClient.Core Assembly Innovt.HttpClient.Core.dll Interface representing environment configurations. public interface IEnvironment Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties QueryUri Gets the URI for queries. Uri QueryUri { get; } Property Value Uri TransactionUri Gets the URI for transactions. Uri TransactionUri { get; } Property Value Uri"
  },
  "api/Innovt.HttpClient.Core.html": {
    "href": "api/Innovt.HttpClient.Core.html",
    "title": "Namespace Innovt.HttpClient.Core | Innovt Platform",
    "keywords": "Namespace Innovt.HttpClient.Core Classes ApiContext Represents the context for interacting with an API. ApiException<T> Represents an exception specific to API operations, carrying an error response of type T. BaseApiClient Base abstract class for an API client. BaseApiClient<TErrorResponse> Abstract base class for API clients, providing common functionality for sending HTTP requests and handling responses. BaseConstants BasicCredential Represents basic credentials for authentication. Interfaces IEnvironment Interface representing environment configurations."
  },
  "api/Innovt.Job.Core.JobBase.html": {
    "href": "api/Innovt.Job.Core.JobBase.html",
    "title": "Class JobBase | Innovt Platform",
    "keywords": "Class JobBase Namespace Innovt.Job.Core Assembly Innovt.Job.Core.dll Abstract base class for job implementations, providing common functionality for job management. public abstract class JobBase Inheritance object JobBase Derived QuartzJobBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors JobBase(string, ILogger, double) Initializes a new instance of the JobBase class. protected JobBase(string jobName, ILogger logger, double heartBeatIntervalInMiliSeconds) Parameters jobName string The name of the job. logger ILogger The logger to use for logging. heartBeatIntervalInMiliSeconds double The interval for the heartbeat in milliseconds. Fields Logger protected readonly ILogger Logger Field Value ILogger Properties Name Gets or sets the name of the job. public string Name { get; set; } Property Value string Methods OnHeartBeat() Event handler for the heartbeat. protected virtual void OnHeartBeat() OnStart(CancellationToken) Executes when the job is started. protected abstract Task OnStart(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task A task representing the asynchronous operation. OnStop(CancellationToken) Executes when the job is stopped. protected abstract Task OnStop(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task A task representing the asynchronous operation. Start() Starts the job. public Task Start() Returns Task A task representing the asynchronous operation. Stop() Stops the job. public Task Stop() Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.Job.Core.JobEntry.html": {
    "href": "api/Innovt.Job.Core.JobEntry.html",
    "title": "Class JobEntry | Innovt Platform",
    "keywords": "Class JobEntry Namespace Innovt.Job.Core Assembly Innovt.Job.Core.dll Abstract base class for job entry implementations, providing common functionality for setting up and running jobs. public abstract class JobEntry Inheritance object JobEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors JobEntry(string[], string) Initializes a new instance of the JobEntry class. protected JobEntry(string[] args, string jobName) Parameters args string[] The command-line arguments. jobName string The name of the job. Properties Configuration Gets or sets the configuration. public IConfiguration Configuration { get; protected set; } Property Value IConfiguration JobName Gets the name of the job. public string JobName { get; } Property Value string Methods CreateIocContainer() Creates the IoC container. protected abstract IContainer CreateIocContainer() Returns IContainer The IoC container. CreateJob() Creates the job instance. protected abstract JobBase CreateJob() Returns JobBase The job instance. Run() Runs the job. public void Run() SetupConfiguration() Sets up the configuration using appsettings.json. protected virtual void SetupConfiguration()"
  },
  "api/Innovt.Job.Core.html": {
    "href": "api/Innovt.Job.Core.html",
    "title": "Namespace Innovt.Job.Core | Innovt Platform",
    "keywords": "Namespace Innovt.Job.Core Classes JobBase Abstract base class for job implementations, providing common functionality for job management. JobEntry Abstract base class for job entry implementations, providing common functionality for setting up and running jobs."
  },
  "api/Innovt.Job.Quartz.QuartzJobBase.html": {
    "href": "api/Innovt.Job.Quartz.QuartzJobBase.html",
    "title": "Class QuartzJobBase | Innovt Platform",
    "keywords": "Class QuartzJobBase Namespace Innovt.Job.Quartz Assembly Innovt.Job.Quartz.dll Abstract base class for Quartz job implementations, providing common functionality for scheduling and executing jobs using Quartz framework. public abstract class QuartzJobBase : JobBase, IJob Inheritance object JobBase QuartzJobBase Implements IJob Inherited Members JobBase.Logger JobBase.Name JobBase.OnHeartBeat() JobBase.Start() JobBase.Stop() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors QuartzJobBase(string, double, ILogger, IScheduler, int) Initializes a new instance of the QuartzJobBase class. protected QuartzJobBase(string name, double heartBeatInterval, ILogger logger, IScheduler scheduler, int intervalInMinutes) Parameters name string The name of the job. heartBeatInterval double The interval for the heartbeat in milliseconds. logger ILogger The logger to use for logging. scheduler IScheduler The Quartz scheduler instance. intervalInMinutes int The interval in minutes for job execution. Methods Execute(IJobExecutionContext) Executes the Quartz job. public Task Execute(IJobExecutionContext context) Parameters context IJobExecutionContext The Quartz job execution context. Returns Task A task representing the asynchronous operation. OnExecute() Executes the Quartz job logic. protected abstract Task OnExecute() Returns Task A task representing the asynchronous operation. OnStart(CancellationToken) Executes when the job is started. protected override Task OnStart(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task A task representing the asynchronous operation. OnStop(CancellationToken) Executes when the job is stopped. protected override Task OnStop(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task A task representing the asynchronous operation. Schedule(CancellationToken) Schedules the Quartz job for execution. public virtual Task Schedule(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A cancellation token to cancel the operation. Returns Task A task representing the asynchronous operation."
  },
  "api/Innovt.Job.Quartz.html": {
    "href": "api/Innovt.Job.Quartz.html",
    "title": "Namespace Innovt.Job.Quartz | Innovt Platform",
    "keywords": "Namespace Innovt.Job.Quartz Classes QuartzJobBase Abstract base class for Quartz job implementations, providing common functionality for scheduling and executing jobs using Quartz framework."
  },
  "api/Innovt.Notification.Core.Builders.DefaultMessageBuilder.html": {
    "href": "api/Innovt.Notification.Core.Builders.DefaultMessageBuilder.html",
    "title": "Class DefaultMessageBuilder | Innovt Platform",
    "keywords": "Class DefaultMessageBuilder Namespace Innovt.Notification.Core.Builders Assembly Innovt.Notification.Core.dll Default implementation of the message builder interface. public class DefaultMessageBuilder : IMessageBuilder Inheritance object DefaultMessageBuilder Implements IMessageBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DefaultMessageBuilder(ITemplateParser) Default constructor using a template parser(optional) public DefaultMessageBuilder(ITemplateParser parser = null) Parameters parser ITemplateParser Methods Build(NotificationTemplate, NotificationRequest) This method will build the message and parse the result of each content public NotificationMessage Build(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters notificationTemplate NotificationTemplate request NotificationRequest Returns NotificationMessage BuildBccTo(NotificationTemplate, NotificationRequest) Builds the Bcc recipient list for the notification message. protected virtual List<NotificationMessageContact> BuildBccTo(NotificationTemplate template, NotificationRequest request) Parameters template NotificationTemplate request NotificationRequest Returns List<NotificationMessageContact> BuildBody(NotificationTemplate, NotificationRequest) Builds the body for the notification message. protected virtual NotificationMessageBody BuildBody(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters notificationTemplate NotificationTemplate request NotificationRequest Returns NotificationMessageBody BuildCcTo(NotificationTemplate, NotificationRequest) Builds the Cc recipient list for the notification message. protected virtual List<NotificationMessageContact> BuildCcTo(NotificationTemplate template, NotificationRequest request) Parameters template NotificationTemplate request NotificationRequest Returns List<NotificationMessageContact> BuildFrom(NotificationTemplate, NotificationRequest) Builds the sender for the notification message. protected virtual NotificationMessageContact BuildFrom(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters notificationTemplate NotificationTemplate request NotificationRequest Returns NotificationMessageContact BuildReplyTo(NotificationTemplate, NotificationRequest) Builds the Reply-To recipient list for the notification message. protected virtual List<NotificationMessageContact> BuildReplyTo(NotificationTemplate template, NotificationRequest request) Parameters template NotificationTemplate request NotificationRequest Returns List<NotificationMessageContact> BuildSubject(NotificationTemplate, NotificationRequest) Builds the subject for the notification message. protected virtual NotificationMessageSubject BuildSubject(NotificationTemplate template, NotificationRequest request) Parameters template NotificationTemplate request NotificationRequest Returns NotificationMessageSubject BuildTo(NotificationTemplate, NotificationRequest) Builds the recipient list for the notification message. protected virtual List<NotificationMessageContact> BuildTo(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters notificationTemplate NotificationTemplate request NotificationRequest Returns List<NotificationMessageContact> ParseMessage(NotificationMessage, object) Parses the notification message content using the provided payload. protected virtual void ParseMessage(NotificationMessage notificationMessage, object payLoad) Parameters notificationMessage NotificationMessage payLoad object"
  },
  "api/Innovt.Notification.Core.Builders.DefaultMessageBuilderFactory.html": {
    "href": "api/Innovt.Notification.Core.Builders.DefaultMessageBuilderFactory.html",
    "title": "Class DefaultMessageBuilderFactory | Innovt Platform",
    "keywords": "Class DefaultMessageBuilderFactory Namespace Innovt.Notification.Core.Builders Assembly Innovt.Notification.Core.dll Default implementation of the message builder factory interface. public class DefaultMessageBuilderFactory : IMessageBuilderFactory Inheritance object DefaultMessageBuilderFactory Implements IMessageBuilderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors DefaultMessageBuilderFactory(ITemplateParser) Initializes a new instance of the DefaultMessageBuilderFactory class. public DefaultMessageBuilderFactory(ITemplateParser templateParser) Parameters templateParser ITemplateParser The template parser. Methods Create(string) You can use your IOC Container to do It based in Names public IMessageBuilder Create(string builderName) Parameters builderName string Returns IMessageBuilder"
  },
  "api/Innovt.Notification.Core.Builders.IMessageBuilder.html": {
    "href": "api/Innovt.Notification.Core.Builders.IMessageBuilder.html",
    "title": "Interface IMessageBuilder | Innovt Platform",
    "keywords": "Interface IMessageBuilder Namespace Innovt.Notification.Core.Builders Assembly Innovt.Notification.Core.dll Interface for message builders. public interface IMessageBuilder Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Build(NotificationTemplate, NotificationRequest) Builds a notification message based on the provided notification template and request. NotificationMessage Build(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters notificationTemplate NotificationTemplate The notification template. request NotificationRequest The notification request. Returns NotificationMessage The built notification message."
  },
  "api/Innovt.Notification.Core.Builders.IMessageBuilderFactory.html": {
    "href": "api/Innovt.Notification.Core.Builders.IMessageBuilderFactory.html",
    "title": "Interface IMessageBuilderFactory | Innovt Platform",
    "keywords": "Interface IMessageBuilderFactory Namespace Innovt.Notification.Core.Builders Assembly Innovt.Notification.Core.dll Interface for message builder factories. public interface IMessageBuilderFactory Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Create(string) Creates an instance of a message builder based on the provided builder name. IMessageBuilder Create(string builderName) Parameters builderName string The name of the builder. Returns IMessageBuilder The message builder instance."
  },
  "api/Innovt.Notification.Core.Builders.MessageBuilderAB.html": {
    "href": "api/Innovt.Notification.Core.Builders.MessageBuilderAB.html",
    "title": "Class MessageBuilderAB | Innovt Platform",
    "keywords": "Class MessageBuilderAB Namespace Innovt.Notification.Core.Builders Assembly Innovt.Notification.Core.dll Abstract base class for message builders. public abstract class MessageBuilderAB Inheritance object MessageBuilderAB Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors MessageBuilderAB(ITemplateParser) Initializes a new instance of the MessageBuilderAB class. protected MessageBuilderAB(ITemplateParser parser) Parameters parser ITemplateParser The template parser. Methods Build(NotificationTemplate, NotificationRequest) Builds a notification message based on the provided notification template and request. public virtual NotificationMessage Build(NotificationTemplate template, NotificationRequest request) Parameters template NotificationTemplate The notification template. request NotificationRequest The notification request. Returns NotificationMessage The built notification message. ParseMessage(NotificationMessage, object) Parses the notification message content using the provided payload. protected virtual void ParseMessage(NotificationMessage message, object payLoad) Parameters message NotificationMessage payLoad object"
  },
  "api/Innovt.Notification.Core.Builders.html": {
    "href": "api/Innovt.Notification.Core.Builders.html",
    "title": "Namespace Innovt.Notification.Core.Builders | Innovt Platform",
    "keywords": "Namespace Innovt.Notification.Core.Builders Classes DefaultMessageBuilder Default implementation of the message builder interface. DefaultMessageBuilderFactory Default implementation of the message builder factory interface. MessageBuilderAB Abstract base class for message builders. Interfaces IMessageBuilder Interface for message builders. IMessageBuilderFactory Interface for message builder factories."
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessage.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessage.html",
    "title": "Class NotificationMessage | Innovt Platform",
    "keywords": "Class NotificationMessage Namespace Innovt.Notification.Core.Domain Assembly Innovt.Notification.Core.dll Represents a notification message. public class NotificationMessage : IValidatableObject Inheritance object NotificationMessage Implements IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors NotificationMessage(NotificationMessageType) Initializes a new instance of the NotificationMessage class with the specified type. public NotificationMessage(NotificationMessageType type) Parameters type NotificationMessageType The type of the notification message. NotificationMessage(NotificationMessageType, string, string, string) Initializes a new instance of the NotificationMessage class with the specified type, from address, from name, and subject. public NotificationMessage(NotificationMessageType type, string fromAddress, string fromName, string subject) Parameters type NotificationMessageType The type of the notification message. fromAddress string The \"From\" address. fromName string The \"From\" name. subject string The subject of the notification. Properties BccTo Gets or sets the list of \"Bcc\" contact information for the notification message. public IList<NotificationMessageContact> BccTo { get; } Property Value IList<NotificationMessageContact> Body Gets or sets the body of the notification message. public NotificationMessageBody Body { get; set; } Property Value NotificationMessageBody CcTo Gets or sets the list of \"Cc\" contact information for the notification message. public IList<NotificationMessageContact> CcTo { get; } Property Value IList<NotificationMessageContact> From Gets or sets the \"From\" contact information for the notification message. public NotificationMessageContact From { get; } Property Value NotificationMessageContact ReplyToAddresses Gets or sets the list of \"Reply-To\" contact information for the notification message. public IList<NotificationMessageContact> ReplyToAddresses { get; } Property Value IList<NotificationMessageContact> Subject Gets or sets the subject of the notification message. public NotificationMessageSubject Subject { get; set; } Property Value NotificationMessageSubject To Gets or sets the list of \"To\" contact information for the notification message. public IList<NotificationMessageContact> To { get; } Property Value IList<NotificationMessageContact> Type Gets or sets the type of the notification message. public NotificationMessageType Type { get; set; } Property Value NotificationMessageType Methods AddBccTo(string, string) Adds \"Bcc\" contact information to the notification message. public virtual NotificationMessage AddBccTo(string address, string name = null) Parameters address string name string Returns NotificationMessage AddCcTo(string, string) Adds \"Cc\" contact information to the notification message. public virtual NotificationMessage AddCcTo(string address, string name = null) Parameters address string name string Returns NotificationMessage AddFrom(string, string) Adds the \"From\" contact information to the notification message. public NotificationMessage AddFrom(string address, string name = null) Parameters address string name string Returns NotificationMessage AddReplyTo(string, string) Adds \"Reply-To\" contact information to the notification message. public virtual NotificationMessage AddReplyTo(string address, string name = null) Parameters address string name string Returns NotificationMessage AddSubject(string, string) Adds the subject to the notification message. public NotificationMessage AddSubject(string subject, string charset = null) Parameters subject string charset string Returns NotificationMessage AddTo(string, string) Adds \"To\" contact information to the notification message. public NotificationMessage AddTo(string address, string name = null) Parameters address string name string Returns NotificationMessage Validate(ValidationContext) Determines whether the specified object is valid. public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection that holds failed-validation information."
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageBody.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageBody.html",
    "title": "Class NotificationMessageBody | Innovt Platform",
    "keywords": "Class NotificationMessageBody Namespace Innovt.Notification.Core.Domain Assembly Innovt.Notification.Core.dll Represents the body of a notification message. public class NotificationMessageBody : NotificationMessageContent Inheritance object NotificationMessageContent NotificationMessageBody Inherited Members NotificationMessageContent.Charset NotificationMessageContent.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties IsHtml Gets or sets a value indicating whether the content is in HTML format. public bool IsHtml { get; set; } Property Value bool"
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageContact.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageContact.html",
    "title": "Class NotificationMessageContact | Innovt Platform",
    "keywords": "Class NotificationMessageContact Namespace Innovt.Notification.Core.Domain Assembly Innovt.Notification.Core.dll Represents a contact for a notification message. public class NotificationMessageContact : IValidatableObject Inheritance object NotificationMessageContact Implements IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors NotificationMessageContact() Initializes a new instance of the NotificationMessageContact class. public NotificationMessageContact() NotificationMessageContact(string, string) Initializes a new instance of the NotificationMessageContact class with the specified name and address. public NotificationMessageContact(string name, string address) Parameters name string The name of the contact. address string The address of the contact. Properties Address Gets or sets the address of the contact. public string Address { get; set; } Property Value string Name Gets or sets the name of the contact. public string Name { get; set; } Property Value string Methods Validate(ValidationContext) Determines whether the specified object is valid. public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection that holds failed-validation information."
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageContent.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageContent.html",
    "title": "Class NotificationMessageContent | Innovt Platform",
    "keywords": "Class NotificationMessageContent Namespace Innovt.Notification.Core.Domain Assembly Innovt.Notification.Core.dll Represents the content of a notification message. public class NotificationMessageContent Inheritance object NotificationMessageContent Derived NotificationMessageBody NotificationMessageSubject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Charset Gets or sets the character set of the content. public string Charset { get; set; } Property Value string Content Gets or sets the content. public string Content { get; set; } Property Value string"
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageSubject.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageSubject.html",
    "title": "Class NotificationMessageSubject | Innovt Platform",
    "keywords": "Class NotificationMessageSubject Namespace Innovt.Notification.Core.Domain Assembly Innovt.Notification.Core.dll Represents the subject of a notification message. public class NotificationMessageSubject : NotificationMessageContent Inheritance object NotificationMessageContent NotificationMessageSubject Inherited Members NotificationMessageContent.Charset NotificationMessageContent.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageType.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageType.html",
    "title": "Enum NotificationMessageType | Innovt Platform",
    "keywords": "Enum NotificationMessageType Namespace Innovt.Notification.Core.Domain Assembly Innovt.Notification.Core.dll Enum representing the type of a notification message. public enum NotificationMessageType Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Fields Custom = 3 Custom notification type. Email = 0 Email notification type. Push = 2 Push notification type. Sms = 1 SMS notification type."
  },
  "api/Innovt.Notification.Core.Domain.NotificationRequest.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationRequest.html",
    "title": "Class NotificationRequest | Innovt Platform",
    "keywords": "Class NotificationRequest Namespace Innovt.Notification.Core.Domain Assembly Innovt.Notification.Core.dll Represents a notification request. public class NotificationRequest : IValidatableObject Inheritance object NotificationRequest Implements IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors NotificationRequest() Initializes a new instance of the NotificationRequest class. public NotificationRequest() Properties PayLoad Gets or sets the payload associated with the notification request. public object PayLoad { get; set; } Property Value object TemplateId Gets or sets the template ID. public string TemplateId { get; set; } Property Value string To Gets or sets the list of \"To\" contacts for the notification request. public List<NotificationMessageContact> To { get; set; } Property Value List<NotificationMessageContact> Methods Validate(ValidationContext) Determines whether the specified object is valid. public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters validationContext ValidationContext The validation context. Returns IEnumerable<ValidationResult> A collection that holds failed-validation information."
  },
  "api/Innovt.Notification.Core.Domain.NotificationTemplate.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationTemplate.html",
    "title": "Class NotificationTemplate | Innovt Platform",
    "keywords": "Class NotificationTemplate Namespace Innovt.Notification.Core.Domain Assembly Innovt.Notification.Core.dll public class NotificationTemplate Inheritance object NotificationTemplate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Body Gets or sets the body of the notification template. public string Body { get; set; } Property Value string Builder Gets or sets the builder associated with the notification template. public string Builder { get; set; } Property Value string Charset Gets or sets the character set of the notification template. public string Charset { get; set; } Property Value string FromAddress Gets or sets the \"From\" address of the notification template. public string FromAddress { get; set; } Property Value string FromName Gets or sets the \"From\" name of the notification template. public string FromName { get; set; } Property Value string Id Gets or sets the ID of the notification template. public string Id { get; set; } Property Value string Subject Gets or sets the subject of the notification template. public string Subject { get; set; } Property Value string TemplateUrl Gets or sets the URL of the notification template. public string TemplateUrl { get; set; } Property Value string Type Gets or sets the type of the notification template. public NotificationMessageType Type { get; set; } Property Value NotificationMessageType"
  },
  "api/Innovt.Notification.Core.Domain.html": {
    "href": "api/Innovt.Notification.Core.Domain.html",
    "title": "Namespace Innovt.Notification.Core.Domain | Innovt Platform",
    "keywords": "Namespace Innovt.Notification.Core.Domain Classes NotificationMessage Represents a notification message. NotificationMessageBody Represents the body of a notification message. NotificationMessageContact Represents a contact for a notification message. NotificationMessageContent Represents the content of a notification message. NotificationMessageSubject Represents the subject of a notification message. NotificationRequest Represents a notification request. NotificationTemplate Enums NotificationMessageType Enum representing the type of a notification message."
  },
  "api/Innovt.Notification.Core.INotificationHandleFactory.html": {
    "href": "api/Innovt.Notification.Core.INotificationHandleFactory.html",
    "title": "Interface INotificationHandleFactory | Innovt Platform",
    "keywords": "Interface INotificationHandleFactory Namespace Innovt.Notification.Core Assembly Innovt.Notification.Core.dll Interface for a notification handler factory. public interface INotificationHandleFactory Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Create(NotificationMessageType) Creates a notification handler based on the specified notification message type. INotificationHandler Create(NotificationMessageType notificationMessageType) Parameters notificationMessageType NotificationMessageType The notification message type. Returns INotificationHandler An instance of the notification handler."
  },
  "api/Innovt.Notification.Core.INotificationHandler.html": {
    "href": "api/Innovt.Notification.Core.INotificationHandler.html",
    "title": "Interface INotificationHandler | Innovt Platform",
    "keywords": "Interface INotificationHandler Namespace Innovt.Notification.Core Assembly Innovt.Notification.Core.dll Interface for a notification handler. public interface INotificationHandler Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods SendAsync(NotificationMessage, CancellationToken) Sends a notification message asynchronously. Task<dynamic> SendAsync(NotificationMessage message, CancellationToken cancellationToken = default) Parameters message NotificationMessage The notification message to send. cancellationToken CancellationToken The cancellation token. Returns Task<dynamic> A task representing the asynchronous operation and returning a dynamic result."
  },
  "api/Innovt.Notification.Core.Template.ITemplateParser.html": {
    "href": "api/Innovt.Notification.Core.Template.ITemplateParser.html",
    "title": "Interface ITemplateParser | Innovt Platform",
    "keywords": "Interface ITemplateParser Namespace Innovt.Notification.Core.Template Assembly Innovt.Notification.Core.dll Interface for a template parser. public interface ITemplateParser Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods Render(string, object) Renders the specified content using the provided view. string Render(string content, object view) Parameters content string The content to render. view object The view used for rendering. Returns string The rendered content."
  },
  "api/Innovt.Notification.Core.Template.html": {
    "href": "api/Innovt.Notification.Core.Template.html",
    "title": "Namespace Innovt.Notification.Core.Template | Innovt Platform",
    "keywords": "Namespace Innovt.Notification.Core.Template Interfaces ITemplateParser Interface for a template parser."
  },
  "api/Innovt.Notification.Core.html": {
    "href": "api/Innovt.Notification.Core.html",
    "title": "Namespace Innovt.Notification.Core | Innovt Platform",
    "keywords": "Namespace Innovt.Notification.Core Interfaces INotificationHandleFactory Interface for a notification handler factory. INotificationHandler Interface for a notification handler."
  },
  "api/Innovt.OpenTelemetry.LoggerActivityExporter.html": {
    "href": "api/Innovt.OpenTelemetry.LoggerActivityExporter.html",
    "title": "Class LoggerActivityExporter | Innovt Platform",
    "keywords": "Class LoggerActivityExporter Namespace Innovt.OpenTelemetry Assembly Innovt.OpenTelemetry.dll This is a simple exporter that logs telemetry to the console. public class LoggerActivityExporter : BaseExporter<Activity>, IDisposable Inheritance object BaseExporter<Activity> LoggerActivityExporter Implements IDisposable Inherited Members BaseExporter<Activity>.ForceFlush(int) BaseExporter<Activity>.Shutdown(int) BaseExporter<Activity>.Dispose() BaseExporter<Activity>.OnForceFlush(int) BaseExporter<Activity>.OnShutdown(int) BaseExporter<Activity>.Dispose(bool) BaseExporter<Activity>.ParentProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Constructors LoggerActivityExporter(IServiceCollection) Initializes a new instance of the LoggerActivityExporter class. public LoggerActivityExporter(IServiceCollection serviceCollection) Parameters serviceCollection IServiceCollection Exceptions ArgumentNullException Methods Export(in Batch<Activity>) Exports a batch of telemetry data. public override ExportResult Export(in Batch<Activity> batch) Parameters batch Batch<Activity> Returns ExportResult"
  },
  "api/Innovt.OpenTelemetry.LoggerActivityExporterExtensions.html": {
    "href": "api/Innovt.OpenTelemetry.LoggerActivityExporterExtensions.html",
    "title": "Class LoggerActivityExporterExtensions | Innovt Platform",
    "keywords": "Class LoggerActivityExporterExtensions Namespace Innovt.OpenTelemetry Assembly Innovt.OpenTelemetry.dll This is a simple exporter that logs telemetry to the console. public static class LoggerActivityExporterExtensions Inheritance object LoggerActivityExporterExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddLoggerExporter(TracerProviderBuilder, IServiceCollection) Adds a simple activity exporter that logs telemetry to the console. public static TracerProviderBuilder AddLoggerExporter(this TracerProviderBuilder builder, IServiceCollection serviceCollection) Parameters builder TracerProviderBuilder serviceCollection IServiceCollection Returns TracerProviderBuilder Exceptions ArgumentNullException"
  },
  "api/Innovt.OpenTelemetry.TracerBuilderExtensions.html": {
    "href": "api/Innovt.OpenTelemetry.TracerBuilderExtensions.html",
    "title": "Class TracerBuilderExtensions | Innovt Platform",
    "keywords": "Class TracerBuilderExtensions Namespace Innovt.OpenTelemetry Assembly Innovt.OpenTelemetry.dll This is a simple exporter that logs telemetry to the console. public static class TracerBuilderExtensions Inheritance object TracerBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddInnovtInstrumentation(TracerProviderBuilder) Adds a simple activity exporter that logs telemetry to the console. public static TracerProviderBuilder AddInnovtInstrumentation(this TracerProviderBuilder builder) Parameters builder TracerProviderBuilder Returns TracerProviderBuilder Exceptions ArgumentNullException"
  },
  "api/Innovt.OpenTelemetry.html": {
    "href": "api/Innovt.OpenTelemetry.html",
    "title": "Namespace Innovt.OpenTelemetry | Innovt Platform",
    "keywords": "Namespace Innovt.OpenTelemetry Classes LoggerActivityExporter This is a simple exporter that logs telemetry to the console. LoggerActivityExporterExtensions This is a simple exporter that logs telemetry to the console. TracerBuilderExtensions This is a simple exporter that logs telemetry to the console."
  },
  "api/Lambda.Sample.Function.html": {
    "href": "api/Lambda.Sample.Function.html",
    "title": "Class Function | Innovt Platform",
    "keywords": "Class Function Namespace Lambda.Sample Assembly Lambda.Sample.dll public class Function : SqsEventProcessor<SampleEvent> Inheritance object BaseEventProcessor EventProcessor<SQSEvent, BatchFailureResponse> SqsEventProcessor<SampleEvent> Function Inherited Members SqsEventProcessor<SampleEvent>.ReportBatchFailures SqsEventProcessor<SampleEvent>.Handle(SQSEvent, ILambdaContext) EventProcessor<SQSEvent, BatchFailureResponse>.Process(SQSEvent, ILambdaContext) EventProcessor<SQSEvent, BatchFailureResponse>.Handle(SQSEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Methods ProcessMessage(QueueMessage<SampleEvent>) Handles the processing of an individual SQS message. protected override Task ProcessMessage(QueueMessage<SampleEvent> message) Parameters message QueueMessage<SampleEvent> The QueueMessage object containing information about the SQS message. Returns Task A Task representing the asynchronous processing operation. SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. protected override IContainer SetupIocContainer() Returns IContainer The configured IOC container."
  },
  "api/Lambda.Sample.SampleEvent.html": {
    "href": "api/Lambda.Sample.SampleEvent.html",
    "title": "Class SampleEvent | Innovt Platform",
    "keywords": "Class SampleEvent Namespace Lambda.Sample Assembly Lambda.Sample.dll public class SampleEvent Inheritance object SampleEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object) Properties Name public string Name { get; set; } Property Value string"
  },
  "api/Lambda.Sample.html": {
    "href": "api/Lambda.Sample.html",
    "title": "Namespace Lambda.Sample | Innovt Platform",
    "keywords": "Namespace Lambda.Sample Classes Function SampleEvent"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Innovt Platform",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Innovt Platform",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Innovt Platform",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}