{
  "api/Innovt.AspNetCore.ApiStartupBase.html": {
    "href": "api/Innovt.AspNetCore.ApiStartupBase.html",
    "title": "Class ApiStartupBase | Innovt Platform",
    "keywords": "Class ApiStartupBase Base class for configuring API startup settings and dependencies. Inheritance object ApiStartupBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore Assembly: Innovt.AspNetCore.dll Syntax public abstract class ApiStartupBase Constructors | Edit this page View Source ApiStartupBase(IConfiguration, IWebHostEnvironment, string, bool) Initializes a new instance of the ApiStartupBase class with the specified configuration and environment. Declaration protected ApiStartupBase(IConfiguration configuration, IWebHostEnvironment environment, string appName, bool setDefaultJsonOptions = true) Parameters Type Name Description IConfiguration configuration The configuration for the application. IWebHostEnvironment environment The hosting environment for the application. string appName The name of the application. bool setDefaultJsonOptions This is the default convention for Serialization/Deserialization Exceptions Type Condition ArgumentNullException Thrown if configuration, environment, or appName is null. | Edit this page View Source ApiStartupBase(IConfiguration, IWebHostEnvironment, string, string, string, string, string?, string?, bool) Initializes a new instance of the ApiStartupBase class with additional API documentation details. Declaration protected ApiStartupBase(IConfiguration configuration, IWebHostEnvironment environment, string appName, string apiTitle, string apiDescription, string apiVersion, string? contactName = null, string? contactEmail = null, bool setDefaultJsonOptions = true) Parameters Type Name Description IConfiguration configuration The configuration for the application. IWebHostEnvironment environment The hosting environment for the application. string appName The name of the application. string apiTitle The title of the API. string apiDescription The description of the API. string apiVersion The version of the API. string contactName The name of the API contact (optional). string contactEmail The email of the API contact (optional). bool setDefaultJsonOptions This is the default convention for Serialization/Deserialization Exceptions Type Condition ArgumentNullException Thrown if configuration, environment, appName, apiTitle, apiDescription, or apiVersion is null. Properties | Edit this page View Source AppName Gets the name of the application. Declaration public string AppName { get; } Property Value Type Description string | Edit this page View Source Configuration Gets the configuration for the application. Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration | Edit this page View Source DefaultHealthPath Gets or sets the default health path for the application. Declaration protected string DefaultHealthPath { get; set; } Property Value Type Description string | Edit this page View Source Documentation Gets or sets the API documentation details. Declaration protected DefaultApiDocumentation Documentation { get; set; } Property Value Type Description DefaultApiDocumentation | Edit this page View Source Environment Gets the hosting environment for the application. Declaration public IWebHostEnvironment Environment { get; } Property Value Type Description IWebHostEnvironment | Edit this page View Source Localization Gets or sets the localization settings for the API. Declaration protected DefaultApiLocalization Localization { get; set; } Property Value Type Description DefaultApiLocalization | Edit this page View Source SetDefaultJsonOptions If true will set default Json Options(JsonSerializerOptions.PropertyNamingPolicy = JsonNamingPolicy.CamelCase) etc Declaration public bool SetDefaultJsonOptions { get; set; } Property Value Type Description bool Methods | Edit this page View Source AddDefaultServices(IServiceCollection) Adds default services to the service collection. Declaration protected abstract void AddDefaultServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services The service collection to add default services to. | Edit this page View Source AddSwagger(IServiceCollection) Adds Swagger generation to the specified services. Declaration protected virtual void AddSwagger(IServiceCollection services) Parameters Type Name Description IServiceCollection services The service collection to add Swagger to. | Edit this page View Source AddTracing(IServiceCollection) Adds tracing and telemetry to the specified services. Declaration protected virtual void AddTracing(IServiceCollection services) Parameters Type Name Description IServiceCollection services The service collection to add tracing to. | Edit this page View Source Configure(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory) Configure Will Add All main Services as Default for Api and MVC Applications Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory) Parameters Type Name Description IApplicationBuilder app IWebHostEnvironment env ILoggerFactory loggerFactory | Edit this page View Source ConfigureApiBehavior() Configures API behavior options. Declaration protected virtual Action<ApiBehaviorOptions> ConfigureApiBehavior() Returns Type Description Action<ApiBehaviorOptions> An action that configures ApiBehaviorOptions. | Edit this page View Source ConfigureApp(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory) Configures the application. Declaration public abstract void ConfigureApp(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory) Parameters Type Name Description IApplicationBuilder app The application builder. IWebHostEnvironment env The hosting environment. ILoggerFactory loggerFactory The logger factory. | Edit this page View Source ConfigureCultures(IApplicationBuilder) Configures request cultures for the application. Declaration protected virtual void ConfigureCultures(IApplicationBuilder app) Parameters Type Name Description IApplicationBuilder app The application builder. | Edit this page View Source ConfigureHealthChecks(IServiceCollection) Implement only the AddHealthChecks by default Declaration protected virtual void ConfigureHealthChecks(IServiceCollection services) Parameters Type Name Description IServiceCollection services | Edit this page View Source ConfigureIoC(IServiceCollection) Configures the IoC container for the application. Declaration protected abstract void ConfigureIoC(IServiceCollection services) Parameters Type Name Description IServiceCollection services The service collection to configure for IoC. | Edit this page View Source ConfigureOpenTelemetry(TracerProviderBuilder) Configures OpenTelemetry for tracing. Declaration protected abstract void ConfigureOpenTelemetry(TracerProviderBuilder builder) Parameters Type Name Description TracerProviderBuilder builder The TracerProviderBuilder for configuring tracing. | Edit this page View Source ConfigureServices(IServiceCollection) Configure services will register default services for api and mvc applications. AddHealthChecks Declaration public virtual void ConfigureServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services | Edit this page View Source ConfigureSwaggerUi(IApplicationBuilder, IWebHostEnvironment) Configures Swagger UI for API documentation. Declaration protected virtual void ConfigureSwaggerUi(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description IApplicationBuilder app The application builder. IWebHostEnvironment env The hosting environment. | Edit this page View Source IsDevelopmentEnvironment() Checks if the application is running in a development environment. Declaration protected bool IsDevelopmentEnvironment() Returns Type Description bool True if the application is in development; otherwise, false. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Constants.html": {
    "href": "api/Innovt.AspNetCore.Constants.html",
    "title": "Class Constants | Innovt Platform",
    "keywords": "Class Constants Class containing constants used in the application. Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore Assembly: Innovt.AspNetCore.dll Syntax public static class Constants"
  },
  "api/Innovt.AspNetCore.Controllers.BaseApiController.html": {
    "href": "api/Innovt.AspNetCore.Controllers.BaseApiController.html",
    "title": "Class BaseApiController | Innovt Platform",
    "keywords": "Class BaseApiController Abstract base class for API controllers. Inheritance object ControllerBase BaseApiController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Controllers Assembly: Innovt.AspNetCore.dll Syntax [ApiController] public abstract class BaseApiController : ControllerBase Constructors | Edit this page View Source BaseApiController(ILogger) Initializes a new instance of the BaseApiController class with the specified logger. Declaration protected BaseApiController(ILogger logger) Parameters Type Name Description ILogger logger The logger. Properties | Edit this page View Source Logger Gets the logger. Declaration protected ILogger Logger { get; } Property Value Type Description ILogger Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Controllers.html": {
    "href": "api/Innovt.AspNetCore.Controllers.html",
    "title": "Namespace Innovt.AspNetCore.Controllers | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Controllers Classes BaseApiController Abstract base class for API controllers."
  },
  "api/Innovt.AspNetCore.Extensions.MvcExtensions.html": {
    "href": "api/Innovt.AspNetCore.Extensions.MvcExtensions.html",
    "title": "Class MvcExtensions | Innovt Platform",
    "keywords": "Class MvcExtensions Extension methods for configuring MVC-related functionality. Inheritance object MvcExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Extensions Assembly: Innovt.AspNetCore.dll Syntax public static class MvcExtensions Methods | Edit this page View Source ActiveAndInactiveList() Creates a select list containing \"Ativo\" and \"Inativo\" items. Declaration public static SelectList ActiveAndInactiveList() Returns Type Description SelectList The select list. | Edit this page View Source AddBearerAuthorization(IServiceCollection, IConfiguration, string, bool, bool, bool, bool) Adds Bearer token authentication based on the provided configuration. Declaration public static void AddBearerAuthorization(this IServiceCollection services, IConfiguration configuration, string configSection = \"BearerAuthentication\", bool validateAudience = true, bool validateIssuer = true, bool validateLifetime = true, bool validateIssuerSigningKey = true) Parameters Type Name Description IServiceCollection services The service collection. IConfiguration configuration The configuration. string configSection The configuration section name. bool validateAudience Whether to validate audience. bool validateIssuer Whether to validate issuer. bool validateLifetime Whether to validate lifetime. bool validateIssuerSigningKey Whether to validate issuer signing key. | Edit this page View Source AddBearerAuthorization(IServiceCollection, string, string, bool, bool, bool, bool, string[]?) Adds Bearer token authentication. Declaration public static void AddBearerAuthorization(this IServiceCollection services, string audienceId, string authority, bool validateAudience = true, bool validateIssuer = true, bool validateLifetime = true, bool validateIssuerSigningKey = true, string[]? validAudiences = null) Parameters Type Name Description IServiceCollection services The service collection. string audienceId The audience ID. string authority The authority. bool validateAudience Whether to validate audience. bool validateIssuer Whether to validate issuer. bool validateLifetime Whether to validate lifetime. bool validateIssuerSigningKey Whether to validate issuer signing key. string[] validAudiences The valid token audiences if you want to validate it. | Edit this page View Source GetClaim(ClaimsPrincipal, string) Gets the value of a claim from the user's claims principal. Declaration public static string GetClaim(this ClaimsPrincipal user, string type = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\") Parameters Type Name Description ClaimsPrincipal user The claims principal. string type The claim type (default is ClaimTypes.Email). Returns Type Description string The claim value or an empty string if not found. | Edit this page View Source Get<T>(ISession, string) Gets an object from the session and deserializes it from JSON. Declaration public static T Get<T>(this ISession session, string key) Parameters Type Name Description ISession session The session object. string key The key the object was stored under. Returns Type Description T The deserialized object. Type Parameters Name Description T The type of the object to be retrieved. | Edit this page View Source HasFilter(ActionDescriptor, Type) Checks if the specified action descriptor has a filter of the given type. Declaration public static bool HasFilter(this ActionDescriptor action, Type filter) Parameters Type Name Description ActionDescriptor action The action descriptor. Type filter The type of filter to check for. Returns Type Description bool True if the action has the filter, otherwise false. | Edit this page View Source IsLocal(HttpContext) Check if the request is local (Code from Web) Declaration public static bool IsLocal(this HttpContext context) Parameters Type Name Description HttpContext context The current context Returns Type Description bool | Edit this page View Source Pager<T>(IHtmlHelper, PaginationBuilder<T>) Generates an HTML pager for pagination. Declaration public static IHtmlContent Pager<T>(this IHtmlHelper helper, PaginationBuilder<T> builder) where T : class Parameters Type Name Description IHtmlHelper helper The HTML helper. PaginationBuilder<T> builder The pagination builder. Returns Type Description IHtmlContent The HTML pager content. Type Parameters Name Description T The type of items being paginated. | Edit this page View Source SetHeaderApplicationContext(IApplicationBuilder, string) Sets the application context header in the request headers. Declaration public static IApplicationBuilder SetHeaderApplicationContext(this IApplicationBuilder app, string headerContext) Parameters Type Name Description IApplicationBuilder app The application builder. string headerContext The header context value. Returns Type Description IApplicationBuilder The updated application builder. | Edit this page View Source Set<T>(ISession, string, T) Sets an object in the session after serializing it to JSON. Declaration public static void Set<T>(this ISession session, string key, T value) Parameters Type Name Description ISession session The session object. string key The key to store the object under. T value The object to be stored. Type Parameters Name Description T The type of the object to be stored. | Edit this page View Source UseApplicationScope(IApplicationBuilder, string) Adds the application scope to the request headers. Declaration public static IApplicationBuilder UseApplicationScope(this IApplicationBuilder app, string scope) Parameters Type Name Description IApplicationBuilder app The application builder. string scope The application scope. Returns Type Description IApplicationBuilder The updated application builder. | Edit this page View Source UseRequestLocalization(IApplicationBuilder, IList<CultureInfo>) Default Cultures are en, en-US, pt-BR Declaration public static void UseRequestLocalization(this IApplicationBuilder app, IList<CultureInfo> supportedCultures = null) Parameters Type Name Description IApplicationBuilder app IList<CultureInfo> supportedCultures | Edit this page View Source YesAndNoList() Creates a select list containing \"Sim\" and \"Não\" items. Declaration public static SelectList YesAndNoList() Returns Type Description SelectList The select list."
  },
  "api/Innovt.AspNetCore.Extensions.SwaggerExtensions.html": {
    "href": "api/Innovt.AspNetCore.Extensions.SwaggerExtensions.html",
    "title": "Class SwaggerExtensions | Innovt Platform",
    "keywords": "Class SwaggerExtensions Extension methods for configuring Swagger authorization schemes. Inheritance object SwaggerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Extensions Assembly: Innovt.AspNetCore.dll Syntax public static class SwaggerExtensions Methods | Edit this page View Source ConfigureBasicAuthorization(IServiceCollection, Action<SwaggerGenOptions>?) Configures Basic authentication for Swagger. Declaration public static void ConfigureBasicAuthorization(this IServiceCollection services, Action<SwaggerGenOptions>? customOptions = null) Parameters Type Name Description IServiceCollection services The IServiceCollection instance. Action<SwaggerGenOptions> customOptions Custom options for Swagger configuration. | Edit this page View Source ConfigureBearerAuthorization(IServiceCollection, Action<SwaggerGenOptions>?) Configures Bearer token authorization for Swagger. Declaration public static void ConfigureBearerAuthorization(this IServiceCollection services, Action<SwaggerGenOptions>? customOptions = null) Parameters Type Name Description IServiceCollection services The IServiceCollection instance. Action<SwaggerGenOptions> customOptions Custom options for Swagger configuration."
  },
  "api/Innovt.AspNetCore.Extensions.html": {
    "href": "api/Innovt.AspNetCore.Extensions.html",
    "title": "Namespace Innovt.AspNetCore.Extensions | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Extensions Classes MvcExtensions Extension methods for configuring MVC-related functionality. SwaggerExtensions Extension methods for configuring Swagger authorization schemes."
  },
  "api/Innovt.AspNetCore.Filters.ApiExceptionFilter.html": {
    "href": "api/Innovt.AspNetCore.Filters.ApiExceptionFilter.html",
    "title": "Class ApiExceptionFilter | Innovt Platform",
    "keywords": "Class ApiExceptionFilter An exception filter attribute for handling exceptions globally and providing standardized error responses. Inheritance object Attribute ExceptionFilterAttribute ApiExceptionFilter Implements IAsyncExceptionFilter IExceptionFilter IOrderedFilter IFilterMetadata Inherited Members ExceptionFilterAttribute.OnExceptionAsync(ExceptionContext) ExceptionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Filters Assembly: Innovt.AspNetCore.dll Syntax [AttributeUsage(AttributeTargets.All)] public sealed class ApiExceptionFilter : ExceptionFilterAttribute, IAsyncExceptionFilter, IExceptionFilter, IOrderedFilter, IFilterMetadata Constructors | Edit this page View Source ApiExceptionFilter() Default Constructor Declaration public ApiExceptionFilter() | Edit this page View Source ApiExceptionFilter(ILogger) Initializes a new instance of the ApiExceptionFilter class with a logger. Declaration public ApiExceptionFilter(ILogger logger) Parameters Type Name Description ILogger logger The logger to use for logging exceptions. | Edit this page View Source ApiExceptionFilter(ILogger, IStringLocalizer<IExceptionResource>) Initializes a new instance of the ApiExceptionFilter class with a logger and a string localizer for exception messages. Declaration public ApiExceptionFilter(ILogger logger, IStringLocalizer<IExceptionResource> stringLocalizer) Parameters Type Name Description ILogger logger The logger to use for logging exceptions. IStringLocalizer<IExceptionResource> stringLocalizer The string localizer for localizing exception messages. Properties | Edit this page View Source Logger Gets or sets the logger. Declaration public ILogger? Logger { get; } Property Value Type Description ILogger | Edit this page View Source StringLocalizer Gets the string localizer for localizing exception messages. Declaration public IStringLocalizer<IExceptionResource> StringLocalizer { get; } Property Value Type Description IStringLocalizer<IExceptionResource> Methods | Edit this page View Source OnException(ExceptionContext) Called after an action has thrown an Exception. Declaration public override void OnException(ExceptionContext context) Parameters Type Name Description ExceptionContext context The ExceptionContext. Overrides ExceptionFilterAttribute.OnException(ExceptionContext) Implements IAsyncExceptionFilter IExceptionFilter IOrderedFilter IFilterMetadata Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Filters.CaptchaValidatorFilterAttribute.html": {
    "href": "api/Innovt.AspNetCore.Filters.CaptchaValidatorFilterAttribute.html",
    "title": "Class CaptchaValidatorFilterAttribute | Innovt Platform",
    "keywords": "Class CaptchaValidatorFilterAttribute Code by Rafael Cruzeiro: https://github.com/rcruzeiro/Core.Framework/tree/master/Core.Framework.reCAPTCHA Inheritance object Attribute ActionFilterAttribute CaptchaValidatorFilterAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuting(ActionExecutingContext) ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Filters Assembly: Innovt.AspNetCore.dll Syntax public sealed class CaptchaValidatorFilterAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Constructors | Edit this page View Source CaptchaValidatorFilterAttribute() Initializes a new instance of the CaptchaValidatorFilterAttribute class. Declaration public CaptchaValidatorFilterAttribute() Properties | Edit this page View Source AntiForgery Gets or sets the anti-forgery token. Declaration public string? AntiForgery { get; } Property Value Type Description string | Edit this page View Source DefaultToken Gets or sets the default reCAPTCHA token to accept without validation. Declaration public string DefaultToken { get; set; } Property Value Type Description string | Edit this page View Source HostName Gets or sets the hostname. Declaration public string? HostName { get; } Property Value Type Description string | Edit this page View Source SecretKey Gets or sets the secret key for reCAPTCHA validation. Declaration public string? SecretKey { get; } Property Value Type Description string Methods | Edit this page View Source OnActionExecutionAsync(ActionExecutingContext?, ActionExecutionDelegate) Overrides the OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) method to validate the reCAPTCHA token. Declaration public override Task OnActionExecutionAsync(ActionExecutingContext? context, ActionExecutionDelegate next) Parameters Type Name Description ActionExecutingContext context The action executing context. ActionExecutionDelegate next The action execution delegate. Returns Type Description Task A Task representing the asynchronous operation. Overrides ActionFilterAttribute.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Filters.CustomExceptionFilterAttribute.html": {
    "href": "api/Innovt.AspNetCore.Filters.CustomExceptionFilterAttribute.html",
    "title": "Class CustomExceptionFilterAttribute | Innovt Platform",
    "keywords": "Class CustomExceptionFilterAttribute An exception filter that handles exceptions of type BusinessException. Inheritance object Attribute ExceptionFilterAttribute CustomExceptionFilterAttribute Implements IAsyncExceptionFilter IExceptionFilter IOrderedFilter IFilterMetadata Inherited Members ExceptionFilterAttribute.OnExceptionAsync(ExceptionContext) ExceptionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Filters Assembly: Innovt.AspNetCore.dll Syntax public sealed class CustomExceptionFilterAttribute : ExceptionFilterAttribute, IAsyncExceptionFilter, IExceptionFilter, IOrderedFilter, IFilterMetadata Methods | Edit this page View Source OnException(ExceptionContext) Overrides the OnException(ExceptionContext) method to handle BusinessException . Declaration public override void OnException(ExceptionContext context) Parameters Type Name Description ExceptionContext context The exception context. Overrides ExceptionFilterAttribute.OnException(ExceptionContext) Implements IAsyncExceptionFilter IExceptionFilter IOrderedFilter IFilterMetadata Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Filters.InjectClaimParameterFilterAttribute.html": {
    "href": "api/Innovt.AspNetCore.Filters.InjectClaimParameterFilterAttribute.html",
    "title": "Class InjectClaimParameterFilterAttribute | Innovt Platform",
    "keywords": "Class InjectClaimParameterFilterAttribute This Filter Will inject the username claim in the action Parameters Inheritance object Attribute ActionFilterAttribute InjectClaimParameterFilterAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Filters Assembly: Innovt.AspNetCore.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public sealed class InjectClaimParameterFilterAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Constructors | Edit this page View Source InjectClaimParameterFilterAttribute() Using defaults: ExternalId and \"filter\",\"command\" Declaration public InjectClaimParameterFilterAttribute() | Edit this page View Source InjectClaimParameterFilterAttribute(string, string, params string[]) Initializes a new instance of the InjectClaimParameterFilterAttribute class. Declaration public InjectClaimParameterFilterAttribute(string defaultAuthorizationProperty, string claimTypeCheck, params string[] actionParameters) Parameters Type Name Description string defaultAuthorizationProperty The default authorization property to inject the username. string claimTypeCheck The claim type that will be used to get the value. string[] actionParameters The action parameters to inject the username. | Edit this page View Source InjectClaimParameterFilterAttribute(string, params string[]) Initializes a new instance of the InjectClaimParameterFilterAttribute class. Declaration public InjectClaimParameterFilterAttribute(string defaultAuthorizationProperty, params string[] actionParameters) Parameters Type Name Description string defaultAuthorizationProperty The default authorization property to inject the username. string[] actionParameters The action parameters to inject the username. Properties | Edit this page View Source ActionParameters Gets the action parameters to inject the username. Declaration public string[] ActionParameters { get; } Property Value Type Description string[] | Edit this page View Source ClaimTypeCheck Get the default claim type to check. Declaration public string ClaimTypeCheck { get; } Property Value Type Description string | Edit this page View Source DefaultAuthorizationProperty Gets the default authorization property for injecting the username. Declaration public string DefaultAuthorizationProperty { get; } Property Value Type Description string Methods | Edit this page View Source OnActionExecuting(ActionExecutingContext) Called before the action executes, after model binding is complete. Declaration public override void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description ActionExecutingContext context The ActionExecutingContext. Overrides ActionFilterAttribute.OnActionExecuting(ActionExecutingContext) | Edit this page View Source OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Called asynchronously before the action, after model binding is complete. Declaration public override Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) Parameters Type Name Description ActionExecutingContext context The ActionExecutingContext. ActionExecutionDelegate next The ActionExecutionDelegate. Invoked to execute the next action filter or the action itself. Returns Type Description Task A Task that on completion indicates the filter has executed. Overrides ActionFilterAttribute.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Filters.Recaptcha.CaptchaValidatorFilterAttribute.html": {
    "href": "api/Innovt.AspNetCore.Filters.Recaptcha.CaptchaValidatorFilterAttribute.html",
    "title": "Class CaptchaValidatorFilterAttribute | Innovt Platform",
    "keywords": "Class CaptchaValidatorFilterAttribute Code by Rafael Cruzeiro: https://github.com/rcruzeiro/Core.Framework/tree/master/Core.Framework.reCAPTCHA Inheritance object Attribute ActionFilterAttribute CaptchaValidatorFilterAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuting(ActionExecutingContext) ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Filters.Recaptcha Assembly: Innovt.AspNetCore.dll Syntax public sealed class CaptchaValidatorFilterAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Constructors | Edit this page View Source CaptchaValidatorFilterAttribute() Initializes a new instance of the CaptchaValidatorFilterAttribute class. Declaration public CaptchaValidatorFilterAttribute() Properties | Edit this page View Source AntiForgery Gets or sets the anti-forgery token. Declaration public string? AntiForgery { get; } Property Value Type Description string | Edit this page View Source DefaultToken Gets or sets the default reCAPTCHA token to accept without validation. Declaration public string DefaultToken { get; set; } Property Value Type Description string | Edit this page View Source HostName Gets or sets the hostname. Declaration public string? HostName { get; } Property Value Type Description string | Edit this page View Source SecretKey Gets or sets the secret key for reCAPTCHA validation. Declaration public string? SecretKey { get; } Property Value Type Description string Methods | Edit this page View Source OnActionExecutionAsync(ActionExecutingContext?, ActionExecutionDelegate) Overrides the OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) method to validate the reCAPTCHA token. Declaration public override Task OnActionExecutionAsync(ActionExecutingContext? context, ActionExecutionDelegate next) Parameters Type Name Description ActionExecutingContext context The action executing context. ActionExecutionDelegate next The action execution delegate. Returns Type Description Task A Task representing the asynchronous operation. Overrides ActionFilterAttribute.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Filters.Recaptcha.html": {
    "href": "api/Innovt.AspNetCore.Filters.Recaptcha.html",
    "title": "Namespace Innovt.AspNetCore.Filters.Recaptcha | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Filters.Recaptcha Classes CaptchaValidatorFilterAttribute Code by Rafael Cruzeiro: https://github.com/rcruzeiro/Core.Framework/tree/master/Core.Framework.reCAPTCHA"
  },
  "api/Innovt.AspNetCore.Filters.Swagger.AddCustomHeaderParameter.html": {
    "href": "api/Innovt.AspNetCore.Filters.Swagger.AddCustomHeaderParameter.html",
    "title": "Class AddCustomHeaderParameter | Innovt Platform",
    "keywords": "Class AddCustomHeaderParameter You can use this class to add custom header to swagger. Inheritance object AddCustomHeaderParameter Implements IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Filters.Swagger Assembly: Innovt.AspNetCore.dll Syntax public class AddCustomHeaderParameter : IOperationFilter Constructors | Edit this page View Source AddCustomHeaderParameter(string, string?, bool, OpenApiSchema) Initializes a new instance of the AddCustomHeaderParameter class using a specified schema. Declaration public AddCustomHeaderParameter(string name, string? description, bool required, OpenApiSchema apiSchema) Parameters Type Name Description string name The name of the custom header parameter. string description The description of the custom header parameter. bool required Indicates whether the custom header parameter is required. OpenApiSchema apiSchema The schema for the custom header parameter. | Edit this page View Source AddCustomHeaderParameter(string, string?, bool, string, string) Initializes a new instance of the AddCustomHeaderParameter class. Declaration public AddCustomHeaderParameter(string name, string? description, bool required, string schemaType = \"string\", string schemaFormat = \"uuid\") Parameters Type Name Description string name The name of the custom header parameter. string description The description of the custom header parameter. bool required Indicates whether the custom header parameter is required. string schemaType The type of the custom header parameter schema (default is \"string\"). string schemaFormat The format of the custom header parameter schema (default is \"uuid\"). Methods | Edit this page View Source Apply(OpenApiOperation, OperationFilterContext) Declaration public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters Type Name Description OpenApiOperation operation OperationFilterContext context Implements IOperationFilter Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Filters.Swagger.html": {
    "href": "api/Innovt.AspNetCore.Filters.Swagger.html",
    "title": "Namespace Innovt.AspNetCore.Filters.Swagger | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Filters.Swagger Classes AddCustomHeaderParameter You can use this class to add custom header to swagger."
  },
  "api/Innovt.AspNetCore.Filters.SwaggerExcludeFilter.html": {
    "href": "api/Innovt.AspNetCore.Filters.SwaggerExcludeFilter.html",
    "title": "Class SwaggerExcludeFilter | Innovt Platform",
    "keywords": "Class SwaggerExcludeFilter A filter used to exclude specified properties or parameters from Swagger documentation. Inheritance object SwaggerExcludeFilter Implements ISchemaFilter IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Filters Assembly: Innovt.AspNetCore.dll Syntax public class SwaggerExcludeFilter : ISchemaFilter, IOperationFilter Constructors | Edit this page View Source SwaggerExcludeFilter() Initializes a new instance of the SwaggerExcludeFilter class. Declaration public SwaggerExcludeFilter() Methods | Edit this page View Source Apply(OpenApiOperation, OperationFilterContext) Declaration public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters Type Name Description OpenApiOperation operation OperationFilterContext context | Edit this page View Source Apply(OpenApiSchema, SchemaFilterContext) Declaration public void Apply(OpenApiSchema schema, SchemaFilterContext context) Parameters Type Name Description OpenApiSchema schema SchemaFilterContext context Implements ISchemaFilter IOperationFilter Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Filters.html": {
    "href": "api/Innovt.AspNetCore.Filters.html",
    "title": "Namespace Innovt.AspNetCore.Filters | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Filters Classes ApiExceptionFilter An exception filter attribute for handling exceptions globally and providing standardized error responses. CustomExceptionFilterAttribute An exception filter that handles exceptions of type BusinessException. InjectClaimParameterFilterAttribute This Filter Will inject the username claim in the action Parameters SwaggerExcludeFilter A filter used to exclude specified properties or parameters from Swagger documentation."
  },
  "api/Innovt.AspNetCore.Handlers.BasicAuthenticationHandler.html": {
    "href": "api/Innovt.AspNetCore.Handlers.BasicAuthenticationHandler.html",
    "title": "Class BasicAuthenticationHandler | Innovt Platform",
    "keywords": "Class BasicAuthenticationHandler Custom authentication handler for handling basic authentication in ASP.NET Core. Inheritance object AuthenticationHandler<AuthenticationSchemeOptions> BasicAuthenticationHandler Implements IAuthenticationHandler Inherited Members AuthenticationHandler<AuthenticationSchemeOptions>.InitializeAsync(AuthenticationScheme, HttpContext) AuthenticationHandler<AuthenticationSchemeOptions>.InitializeEventsAsync() AuthenticationHandler<AuthenticationSchemeOptions>.CreateEventsAsync() AuthenticationHandler<AuthenticationSchemeOptions>.InitializeHandlerAsync() AuthenticationHandler<AuthenticationSchemeOptions>.BuildRedirectUri(string) AuthenticationHandler<AuthenticationSchemeOptions>.ResolveTarget(string) AuthenticationHandler<AuthenticationSchemeOptions>.AuthenticateAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleAuthenticateOnceAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleAuthenticateOnceSafeAsync() AuthenticationHandler<AuthenticationSchemeOptions>.HandleForbiddenAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.HandleChallengeAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.ChallengeAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.ForbidAsync(AuthenticationProperties) AuthenticationHandler<AuthenticationSchemeOptions>.Scheme AuthenticationHandler<AuthenticationSchemeOptions>.Options AuthenticationHandler<AuthenticationSchemeOptions>.Context AuthenticationHandler<AuthenticationSchemeOptions>.Request AuthenticationHandler<AuthenticationSchemeOptions>.Response AuthenticationHandler<AuthenticationSchemeOptions>.OriginalPath AuthenticationHandler<AuthenticationSchemeOptions>.OriginalPathBase AuthenticationHandler<AuthenticationSchemeOptions>.Logger AuthenticationHandler<AuthenticationSchemeOptions>.UrlEncoder AuthenticationHandler<AuthenticationSchemeOptions>.Clock AuthenticationHandler<AuthenticationSchemeOptions>.TimeProvider AuthenticationHandler<AuthenticationSchemeOptions>.OptionsMonitor AuthenticationHandler<AuthenticationSchemeOptions>.Events AuthenticationHandler<AuthenticationSchemeOptions>.ClaimsIssuer AuthenticationHandler<AuthenticationSchemeOptions>.CurrentUri object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Handlers Assembly: Innovt.AspNetCore.dll Syntax public class BasicAuthenticationHandler : AuthenticationHandler<AuthenticationSchemeOptions>, IAuthenticationHandler Constructors | Edit this page View Source BasicAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions>, ILoggerFactory, UrlEncoder, IBasicAuthService) Initializes a new instance of the BasicAuthenticationHandler class. Declaration public BasicAuthenticationHandler(IOptionsMonitor<AuthenticationSchemeOptions> options, ILoggerFactory logger, UrlEncoder encoder, IBasicAuthService authService) Parameters Type Name Description IOptionsMonitor<AuthenticationSchemeOptions> options The options for the authentication scheme. ILoggerFactory logger The logger factory. UrlEncoder encoder The URL encoder. IBasicAuthService authService The custom basic authentication service. Fields | Edit this page View Source SchemeName The scheme name for basic authentication. Declaration public const string SchemeName = \"BasicAuthentication\" Field Value Type Description string Methods | Edit this page View Source HandleAuthenticateAsync() Allows derived types to handle authentication. Declaration protected override Task<AuthenticateResult> HandleAuthenticateAsync() Returns Type Description Task<AuthenticateResult> The AuthenticateResult. Overrides AuthenticationHandler<AuthenticationSchemeOptions>.HandleAuthenticateAsync() Implements IAuthenticationHandler Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Handlers.HasScopeRequirement.html": {
    "href": "api/Innovt.AspNetCore.Handlers.HasScopeRequirement.html",
    "title": "Class HasScopeRequirement | Innovt Platform",
    "keywords": "Class HasScopeRequirement Requirement for checking if the user has a specific scope. Inheritance object AuthorizationHandler<HasScopeRequirement> HasScopeRequirement Implements IAuthorizationHandler IAuthorizationRequirement Inherited Members AuthorizationHandler<HasScopeRequirement>.HandleAsync(AuthorizationHandlerContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Handlers Assembly: Innovt.AspNetCore.dll Syntax public class HasScopeRequirement : AuthorizationHandler<HasScopeRequirement>, IAuthorizationHandler, IAuthorizationRequirement Constructors | Edit this page View Source HasScopeRequirement() Constructor for HasScopeRequirement with default values. Declaration public HasScopeRequirement() | Edit this page View Source HasScopeRequirement(string, string) Constructor Declaration public HasScopeRequirement(string scope, string issuer) Parameters Type Name Description string scope string issuer Methods | Edit this page View Source HandleRequirementAsync(AuthorizationHandlerContext, HasScopeRequirement) HandleRequirementAsync Declaration protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, HasScopeRequirement requirement) Parameters Type Name Description AuthorizationHandlerContext context AuthorizationHandlerContext HasScopeRequirement requirement HasScopeRequirement Returns Type Description Task Overrides AuthorizationHandler<HasScopeRequirement>.HandleRequirementAsync(AuthorizationHandlerContext, HasScopeRequirement) Implements IAuthorizationHandler IAuthorizationRequirement Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Handlers.RolesAuthorizationHandler.html": {
    "href": "api/Innovt.AspNetCore.Handlers.RolesAuthorizationHandler.html",
    "title": "Class RolesAuthorizationHandler | Innovt Platform",
    "keywords": "Class RolesAuthorizationHandler Authorization handler for role-based authorization. Inheritance object AuthorizationHandler<RolesAuthorizationRequirement> RolesAuthorizationHandler Implements IAuthorizationHandler Inherited Members AuthorizationHandler<RolesAuthorizationRequirement>.HandleAsync(AuthorizationHandlerContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Handlers Assembly: Innovt.AspNetCore.dll Syntax public class RolesAuthorizationHandler : AuthorizationHandler<RolesAuthorizationRequirement>, IAuthorizationHandler Constructors | Edit this page View Source RolesAuthorizationHandler(IAuthorizationRepository, ILogger) Constructs a new instance of RolesAuthorizationHandler. Declaration public RolesAuthorizationHandler(IAuthorizationRepository securityRepository, ILogger logger) Parameters Type Name Description IAuthorizationRepository securityRepository The security repository for retrieving user information. ILogger logger The logger for logging messages. Methods | Edit this page View Source HandleRequirementAsync(AuthorizationHandlerContext, RolesAuthorizationRequirement) Handles the authorization requirement to check user roles. Declaration protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, RolesAuthorizationRequirement requirement) Parameters Type Name Description AuthorizationHandlerContext context The authorization context. RolesAuthorizationRequirement requirement The authorization requirement. Returns Type Description Task A task representing the asynchronous operation. Overrides AuthorizationHandler<RolesAuthorizationRequirement>.HandleRequirementAsync(AuthorizationHandlerContext, RolesAuthorizationRequirement) Implements IAuthorizationHandler Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Handlers.html": {
    "href": "api/Innovt.AspNetCore.Handlers.html",
    "title": "Namespace Innovt.AspNetCore.Handlers | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Handlers Classes BasicAuthenticationHandler Custom authentication handler for handling basic authentication in ASP.NET Core. HasScopeRequirement Requirement for checking if the user has a specific scope. RolesAuthorizationHandler Authorization handler for role-based authorization."
  },
  "api/Innovt.AspNetCore.Infrastructure.InvalidModelStateResponse.html": {
    "href": "api/Innovt.AspNetCore.Infrastructure.InvalidModelStateResponse.html",
    "title": "Class InvalidModelStateResponse | Innovt Platform",
    "keywords": "Class InvalidModelStateResponse Helper class for creating a custom bad request result with validation error details. Inheritance object InvalidModelStateResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Infrastructure Assembly: Innovt.AspNetCore.dll Syntax public static class InvalidModelStateResponse Methods | Edit this page View Source CreateCustomErrorResponse(ActionContext) Create a custom bad request result Declaration public static BadRequestObjectResult CreateCustomErrorResponse(ActionContext actionContext) Parameters Type Name Description ActionContext actionContext Returns Type Description BadRequestObjectResult BadRequestObjectResult object"
  },
  "api/Innovt.AspNetCore.Infrastructure.html": {
    "href": "api/Innovt.AspNetCore.Infrastructure.html",
    "title": "Namespace Innovt.AspNetCore.Infrastructure | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Infrastructure Classes InvalidModelStateResponse Helper class for creating a custom bad request result with validation error details."
  },
  "api/Innovt.AspNetCore.Model.DefaultApiDocumentation.html": {
    "href": "api/Innovt.AspNetCore.Model.DefaultApiDocumentation.html",
    "title": "Class DefaultApiDocumentation | Innovt Platform",
    "keywords": "Class DefaultApiDocumentation Represents default documentation information for an API. Inheritance object DefaultApiDocumentation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Model Assembly: Innovt.AspNetCore.dll Syntax public class DefaultApiDocumentation Constructors | Edit this page View Source DefaultApiDocumentation(string, string, string, string?, string?) Initializes a new instance of the DefaultApiDocumentation class with the specified API details. Declaration public DefaultApiDocumentation(string apiTitle, string apiDescription, string apiVersion, string? contactName = null, string? contactEmail = null) Parameters Type Name Description string apiTitle The title of the API. string apiDescription The description of the API. string apiVersion The version of the API. string contactName The name of the contact person for the API (optional). string contactEmail The email of the contact person for the API (optional). Properties | Edit this page View Source ApiDescription Gets or sets the description of the API. Declaration public string ApiDescription { get; set; } Property Value Type Description string | Edit this page View Source ApiTitle Gets or sets the title of the API. Declaration public string ApiTitle { get; set; } Property Value Type Description string | Edit this page View Source ApiVersion Gets or sets the version of the API. Declaration public string ApiVersion { get; set; } Property Value Type Description string | Edit this page View Source ContactEmail Gets or sets the email of the contact person for the API (optional). Declaration public string? ContactEmail { get; set; } Property Value Type Description string | Edit this page View Source ContactName Gets or sets the name of the contact person for the API (optional). Declaration public string? ContactName { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Model.DefaultApiLocalization.html": {
    "href": "api/Innovt.AspNetCore.Model.DefaultApiLocalization.html",
    "title": "Class DefaultApiLocalization | Innovt Platform",
    "keywords": "Class DefaultApiLocalization Represents default localization settings for an API. Inheritance object DefaultApiLocalization Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Model Assembly: Innovt.AspNetCore.dll Syntax public class DefaultApiLocalization Constructors | Edit this page View Source DefaultApiLocalization() Initializes a new instance of the DefaultApiLocalization class with default culture settings. Declaration public DefaultApiLocalization() Properties | Edit this page View Source DefaultLocalizeResource Gets or sets the type of the default localization resource. Declaration public Type? DefaultLocalizeResource { get; set; } Property Value Type Description Type | Edit this page View Source RequestCulture Gets or sets the request culture for the API. Declaration public CultureInfo RequestCulture { get; set; } Property Value Type Description CultureInfo | Edit this page View Source SupportedCultures Gets or sets the list of supported cultures for the API. Declaration public IList<CultureInfo>? SupportedCultures { get; } Property Value Type Description IList<CultureInfo> Methods | Edit this page View Source AddSupportedCulture(string) Adds a supported culture with the specified name to the list of supported cultures. Declaration protected DefaultApiLocalization AddSupportedCulture(string name) Parameters Type Name Description string name The name of the supported culture (e.g., \"pt-br\"). Returns Type Description DefaultApiLocalization The updated DefaultApiLocalization instance. Exceptions Type Condition ArgumentNullException Thrown if the provided name is null. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Model.ResponseError.html": {
    "href": "api/Innovt.AspNetCore.Model.ResponseError.html",
    "title": "Class ResponseError | Innovt Platform",
    "keywords": "Class ResponseError Represents an error response object returned by the API. Inheritance object ResponseError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Model Assembly: Innovt.AspNetCore.dll Syntax public class ResponseError Properties | Edit this page View Source Code Gets or sets an error code associated with the error (optional). Declaration public string Code { get; set; } Property Value Type Description string | Edit this page View Source Detail Gets or sets additional error details. Declaration public object Detail { get; set; } Property Value Type Description object | Edit this page View Source Message Gets or sets a message describing the error. Declaration public string Message { get; set; } Property Value Type Description string | Edit this page View Source TraceId Gets or sets a unique identifier for tracing the error. Declaration public string TraceId { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Model.html": {
    "href": "api/Innovt.AspNetCore.Model.html",
    "title": "Namespace Innovt.AspNetCore.Model | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Model Classes DefaultApiDocumentation Represents default documentation information for an API. DefaultApiLocalization Represents default localization settings for an API. ResponseError Represents an error response object returned by the API."
  },
  "api/Innovt.AspNetCore.Resources.IExceptionResource.html": {
    "href": "api/Innovt.AspNetCore.Resources.IExceptionResource.html",
    "title": "Interface IExceptionResource | Innovt Platform",
    "keywords": "Interface IExceptionResource Marker interface for identifying exception resources. Namespace: Innovt.AspNetCore.Resources Assembly: Innovt.AspNetCore.dll Syntax public interface IExceptionResource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Resources.html": {
    "href": "api/Innovt.AspNetCore.Resources.html",
    "title": "Namespace Innovt.AspNetCore.Resources | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Resources Interfaces IExceptionResource Marker interface for identifying exception resources."
  },
  "api/Innovt.AspNetCore.Utility.ControllerUtil.html": {
    "href": "api/Innovt.AspNetCore.Utility.ControllerUtil.html",
    "title": "Class ControllerUtil | Innovt Platform",
    "keywords": "Class ControllerUtil Utility class for reading and processing MVC controllers and actions. Inheritance object ControllerUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Utility Assembly: Innovt.AspNetCore.dll Syntax public static class ControllerUtil Methods | Edit this page View Source ReadControllers(IActionDescriptorCollectionProvider) Reads and retrieves information about MVC controllers and their actions. Declaration public static IList<MvcControllerViewModel> ReadControllers(IActionDescriptorCollectionProvider actionDescriptorProvider) Parameters Type Name Description IActionDescriptorCollectionProvider actionDescriptorProvider The provider for action descriptors. Returns Type Description IList<MvcControllerViewModel> A list of MVC controller view models with associated actions. Exceptions Type Condition ArgumentNullException Thrown if the actionDescriptorProvider is null."
  },
  "api/Innovt.AspNetCore.Utility.Pagination.PaginationBuilder-1.html": {
    "href": "api/Innovt.AspNetCore.Utility.Pagination.PaginationBuilder-1.html",
    "title": "Class PaginationBuilder<T> | Innovt Platform",
    "keywords": "Class PaginationBuilder<T> Builder class for generating pagination HTML elements. Inheritance object PaginationBuilder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.Utility.Pagination Assembly: Innovt.AspNetCore.dll Syntax public class PaginationBuilder<T> where T : class Type Parameters Name Description T Type of items in the collection. Constructors | Edit this page View Source PaginationBuilder(PagedCollection<T>, string) Initializes a new instance of the PaginationBuilder class. Declaration public PaginationBuilder(PagedCollection<T> collection, string formId) Parameters Type Name Description PagedCollection<T> collection The paged collection of items. string formId The ID of the HTML form associated with the pagination. Properties | Edit this page View Source Collection Gets or sets the paged collection of items. Declaration public PagedCollection<T> Collection { get; set; } Property Value Type Description PagedCollection<T> Methods | Edit this page View Source BuildFooter() Builds the footer HTML for pagination. Declaration public virtual string BuildFooter() Returns Type Description string The HTML for the pagination footer. | Edit this page View Source BuildHeader() Builds the header HTML for pagination. Declaration public virtual string BuildHeader() Returns Type Description string The HTML for the pagination header. | Edit this page View Source BuildItem(int, bool) Builds the HTML for a pagination item. Declaration public virtual string BuildItem(int page, bool isCurrent) Parameters Type Name Description int page The page number associated with the item. bool isCurrent Indicates whether the item represents the current page. Returns Type Description string The HTML for the pagination item. | Edit this page View Source BuildNext(string) Builds the HTML for the \"Next\" pagination button. Declaration public virtual string BuildNext(string nextText = \"Próximo\") Parameters Type Name Description string nextText The text to display for the \"Next\" button (default is \"Próximo\"). Returns Type Description string The HTML for the \"Next\" button. | Edit this page View Source BuildPagerScript() Builds the pager script HTML for pagination functionality. Declaration public virtual string BuildPagerScript() Returns Type Description string The HTML for the pagination script. | Edit this page View Source BuildPrevious(string) Builds the HTML for the \"Previous\" pagination button. Declaration public virtual string BuildPrevious(string previousText = \"Anterior\") Parameters Type Name Description string previousText The text to display for the \"Previous\" button (default is \"Anterior\"). Returns Type Description string The HTML for the \"Previous\" button. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.Utility.Pagination.html": {
    "href": "api/Innovt.AspNetCore.Utility.Pagination.html",
    "title": "Namespace Innovt.AspNetCore.Utility.Pagination | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Utility.Pagination Classes PaginationBuilder<T> Builder class for generating pagination HTML elements."
  },
  "api/Innovt.AspNetCore.Utility.html": {
    "href": "api/Innovt.AspNetCore.Utility.html",
    "title": "Namespace Innovt.AspNetCore.Utility | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.Utility Classes ControllerUtil Utility class for reading and processing MVC controllers and actions."
  },
  "api/Innovt.AspNetCore.ViewModel.CreateOrEditViewModel.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.CreateOrEditViewModel.html",
    "title": "Class CreateOrEditViewModel | Innovt Platform",
    "keywords": "Class CreateOrEditViewModel Base view model for creating or editing entities. Inheritance object ViewModelBase CreateOrEditViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.ViewModel Assembly: Innovt.AspNetCore.dll Syntax public abstract class CreateOrEditViewModel : ViewModelBase Constructors | Edit this page View Source CreateOrEditViewModel() Initializes a new instance of the CreateOrEditViewModel class. Sets the default action to \"Create\". Declaration protected CreateOrEditViewModel() Fields | Edit this page View Source CreateAction Constant representing the \"Create\" action. Declaration public const string CreateAction = \"Create\" Field Value Type Description string | Edit this page View Source EditAction Constant representing the \"Edit\" action. Declaration public const string EditAction = \"Edit\" Field Value Type Description string Properties | Edit this page View Source Action Gets or sets the action to be performed (Create or Edit). Declaration public string Action { get; set; } Property Value Type Description string | Edit this page View Source Id Gets or sets the identifier of the entity being created or edited. Declaration public int Id { get; set; } Property Value Type Description int | Edit this page View Source IsCreate Gets a value indicating whether the action is \"Create\". Declaration public bool IsCreate { get; } Property Value Type Description bool | Edit this page View Source IsEdit Gets a value indicating whether the action is \"Edit\". Declaration public bool IsEdit { get; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.ViewModel.ListViewModel-1.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.ListViewModel-1.html",
    "title": "Class ListViewModel<T> | Innovt Platform",
    "keywords": "Class ListViewModel<T> Base view model for displaying a paginated list of entities. Inheritance object ViewModelBase ListViewModel<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.ViewModel Assembly: Innovt.AspNetCore.dll Syntax public abstract class ListViewModel<T> : ViewModelBase where T : class Type Parameters Name Description T Type of entities being displayed. Constructors | Edit this page View Source ListViewModel() Initializes a new instance of the ListViewModel class with default values. Declaration protected ListViewModel() | Edit this page View Source ListViewModel(int, int) Initializes a new instance of the ListViewModel class with specified pagination parameters. Declaration protected ListViewModel(int page, int pageSize) Parameters Type Name Description int page The current page number. int pageSize The number of items per page. Properties | Edit this page View Source Page Gets or sets the current page number. Declaration public int Page { get; set; } Property Value Type Description int | Edit this page View Source PageSize Gets or sets the number of items per page. Declaration public int PageSize { get; set; } Property Value Type Description int | Edit this page View Source Term Gets or sets a search term for filtering entities. Declaration public string Term { get; set; } Property Value Type Description string | Edit this page View Source TotalRecords Gets or sets the total number of records/entities. Declaration public int TotalRecords { get; set; } Property Value Type Description int Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.ViewModel.MvcActionViewModel.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.MvcActionViewModel.html",
    "title": "Class MvcActionViewModel | Innovt Platform",
    "keywords": "Class MvcActionViewModel View model representing an MVC action. Inheritance object ViewModelBase MvcActionViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.ViewModel Assembly: Innovt.AspNetCore.dll Syntax public class MvcActionViewModel : ViewModelBase Properties | Edit this page View Source Controller Gets or sets the name of the associated controller. Declaration public string Controller { get; set; } Property Value Type Description string | Edit this page View Source DisplayName Gets or sets the display name of the MVC action. Declaration public string DisplayName { get; set; } Property Value Type Description string | Edit this page View Source Method Gets or sets the HTTP method used by the MVC action. Declaration public string Method { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the MVC action. Declaration public string Name { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.ViewModel.MvcControllerViewModel.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.MvcControllerViewModel.html",
    "title": "Class MvcControllerViewModel | Innovt Platform",
    "keywords": "Class MvcControllerViewModel View model representing an MVC controller. Inheritance object ViewModelBase MvcControllerViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.ViewModel Assembly: Innovt.AspNetCore.dll Syntax public class MvcControllerViewModel : ViewModelBase Properties | Edit this page View Source Area Gets or sets the area associated with the MVC controller. Declaration public string Area { get; set; } Property Value Type Description string | Edit this page View Source DisplayName Gets or sets the display name of the MVC controller. Declaration public string DisplayName { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the MVC controller. Declaration public string Name { get; set; } Property Value Type Description string Methods | Edit this page View Source AddActions(IList<MvcActionViewModel>) Adds a list of MVC action view models to the controller. Declaration public void AddActions(IList<MvcActionViewModel> actions) Parameters Type Name Description IList<MvcActionViewModel> actions The list of MVC action view models to add. Exceptions Type Condition ArgumentNullException Thrown if the actions list is null. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.ViewModel.ViewModelBase.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.ViewModelBase.html",
    "title": "Class ViewModelBase | Innovt Platform",
    "keywords": "Class ViewModelBase Base abstract class for view models, providing common functionality and properties. Inheritance object ViewModelBase CreateOrEditViewModel ListViewModel<T> MvcActionViewModel MvcControllerViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.AspNetCore.ViewModel Assembly: Innovt.AspNetCore.dll Syntax public abstract class ViewModelBase Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.AspNetCore.ViewModel.html": {
    "href": "api/Innovt.AspNetCore.ViewModel.html",
    "title": "Namespace Innovt.AspNetCore.ViewModel | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore.ViewModel Classes CreateOrEditViewModel Base view model for creating or editing entities. ListViewModel<T> Base view model for displaying a paginated list of entities. MvcActionViewModel View model representing an MVC action. MvcControllerViewModel View model representing an MVC controller. ViewModelBase Base abstract class for view models, providing common functionality and properties."
  },
  "api/Innovt.AspNetCore.html": {
    "href": "api/Innovt.AspNetCore.html",
    "title": "Namespace Innovt.AspNetCore | Innovt Platform",
    "keywords": "Namespace Innovt.AspNetCore Classes ApiStartupBase Base class for configuring API startup settings and dependencies. Constants Class containing constants used in the application."
  },
  "api/Innovt.Cloud.AWS.AwsBaseService.html": {
    "href": "api/Innovt.Cloud.AWS.AwsBaseService.html",
    "title": "Class AwsBaseService | Innovt Platform",
    "keywords": "Class AwsBaseService An abstract base class for AWS services with common functionality for managing AWS service configurations, retries, and circuit breakers. Inheritance object AwsBaseService RedisCacheService CognitoIdentityProvider Repository DataProducer<T> MailNotificationHandler SmsNotificationHandler S3FileSystem QueueService<T> StepFunctionService Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS Assembly: Innovt.Cloud.AWS.dll Syntax [CLSCompliant(false)] public abstract class AwsBaseService : IDisposable Constructors | Edit this page View Source AwsBaseService(ILogger, IAwsConfiguration) Initializes a new instance of the AwsBaseService class with a logger and AWS configuration. Declaration protected AwsBaseService(ILogger logger, IAwsConfiguration configuration) Parameters Type Name Description ILogger logger The logger for logging service activities. IAwsConfiguration configuration The AWS configuration for the service. Exceptions Type Condition ArgumentNullException | Edit this page View Source AwsBaseService(ILogger, IAwsConfiguration, string) Initializes a new instance of the AwsBaseService class with a logger, AWS configuration, and AWS region. Declaration protected AwsBaseService(ILogger logger, IAwsConfiguration configuration, string region) Parameters Type Name Description ILogger logger The logger for logging service activities. IAwsConfiguration configuration The AWS configuration for the service. string region The AWS region for the service. Fields | Edit this page View Source Configuration Declaration protected readonly IAwsConfiguration Configuration Field Value Type Description IAwsConfiguration Properties | Edit this page View Source ExponentialBackoffInSeconds It represents the exponential backoffice in seconds Declaration public int ExponentialBackoffInSeconds { get; set; } Property Value Type Description int | Edit this page View Source Logger Gets the logger for logging service activities. Declaration protected ILogger Logger { get; } Property Value Type Description ILogger Methods | Edit this page View Source CreateCircuitBreaker<T, T1>() Declaration protected virtual AsyncCircuitBreakerPolicy CreateCircuitBreaker<T, T1>() where T : Exception where T1 : Exception Returns Type Description AsyncCircuitBreakerPolicy Type Parameters Name Description T T1 | Edit this page View Source CreateDefaultRetryAsyncPolicy() Basic Retry Policy using AmazonServiceException Declaration protected virtual AsyncRetryPolicy CreateDefaultRetryAsyncPolicy() Returns Type Description AsyncRetryPolicy | Edit this page View Source CreateDefaultRetryPolicy() Creates a default retry policy for handling AmazonServiceException exceptions with specific HTTP status codes(ServiceUnavailable or InternalServerError). Declaration protected virtual RetryPolicy CreateDefaultRetryPolicy() Returns Type Description RetryPolicy | Edit this page View Source CreateRetryAsyncPolicy<T>() Creates an asynchronous retry policy for handling exceptions of type T. Declaration protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T>() where T : Exception Returns Type Description AsyncRetryPolicy An asynchronous retry policy. Type Parameters Name Description T The type of exception to handle. | Edit this page View Source CreateRetryAsyncPolicy<T, T1>() Creates an asynchronous retry policy for handling exceptions of type T and T1. Declaration protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1>() where T : Exception where T1 : Exception Returns Type Description AsyncRetryPolicy An asynchronous retry policy. Type Parameters Name Description T The first type of exception to handle. T1 The second type of exception to handle. | Edit this page View Source CreateRetryAsyncPolicy<T, T1, T2>() Declaration protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2>() where T : Exception where T1 : Exception where T2 : Exception Returns Type Description AsyncRetryPolicy Type Parameters Name Description T T1 T2 | Edit this page View Source CreateRetryAsyncPolicy<T, T1, T2, T3>() Declaration protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2, T3>() where T : Exception where T1 : Exception where T2 : Exception where T3 : Exception Returns Type Description AsyncRetryPolicy Type Parameters Name Description T T1 T2 T3 | Edit this page View Source CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() Declaration protected virtual AsyncRetryPolicy CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() where T : Exception where T1 : Exception where T2 : Exception where T3 : Exception where T4 : Exception Returns Type Description AsyncRetryPolicy Type Parameters Name Description T T1 T2 T3 T4 | Edit this page View Source CreateService<T>() This method will decide about Configuration or Profile AWS Services Declaration protected T CreateService<T>() where T : IAmazonService Returns Type Description T Type Parameters Name Description T | Edit this page View Source Dispose() Disposes of the resources used by the service. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Disposes of resources used by the AwsBaseService. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing True if called from the Dispose method; false if called from the finalizer. | Edit this page View Source DisposeServices() Disposes of any services used by the AwsBaseService. Declaration protected abstract void DisposeServices() | Edit this page View Source ~AwsBaseService() Finalizer for AwsBaseService. Declaration protected ~AwsBaseService() | Edit this page View Source GetServiceRegionEndPoint() Gets the AWS service region endpoint based on the configured region. Declaration protected RegionEndpoint GetServiceRegionEndPoint() Returns Type Description RegionEndpoint The AWS service region endpoint. Implements IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Caching.RedisCacheService.html": {
    "href": "api/Innovt.Cloud.AWS.Caching.RedisCacheService.html",
    "title": "Class RedisCacheService | Innovt Platform",
    "keywords": "Class RedisCacheService Represents a caching service that uses Redis as the cache provider. Inheritance object AwsBaseService RedisCacheService Implements ICacheService IDisposable Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Caching Assembly: Innovt.Cloud.AWS.Caching.dll Syntax public class RedisCacheService : AwsBaseService, ICacheService, IDisposable Constructors | Edit this page View Source RedisCacheService(ILogger, IAwsConfiguration, RedisProviderConfiguration) Initializes a new instance of the RedisCacheService class. Declaration public RedisCacheService(ILogger logger, IAwsConfiguration configuration, RedisProviderConfiguration providerConfiguration) Parameters Type Name Description ILogger logger The logger instance for logging. IAwsConfiguration configuration The AWS configuration. RedisProviderConfiguration providerConfiguration The configuration for the Redis cache provider. Exceptions Type Condition ArgumentNullException Thrown when providerConfiguration is null. Fields | Edit this page View Source RedisProviderActivitySource Declaration protected static readonly ActivitySource RedisProviderActivitySource Field Value Type Description ActivitySource Methods | Edit this page View Source DisposeServices() Disposes of resources used by the RedisCacheService. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source GetValue<T>(string) Gets a cached value of type T associated with the specified key. Declaration public T GetValue<T>(string key) Parameters Type Name Description string key The key associated with the cached value. Returns Type Description T The cached value if found; otherwise, the default value for T. Type Parameters Name Description T The type of the cached value. | Edit this page View Source Remove(string) Removes a cached value associated with the specified key. Declaration public void Remove(string key) Parameters Type Name Description string key The key associated with the cached value to remove. | Edit this page View Source SetValue<T>(string, T, TimeSpan) Sets a cached value of type T associated with the specified key. Declaration public void SetValue<T>(string key, T entity, TimeSpan expiration) Parameters Type Name Description string key The key to associate with the cached value. T entity The value to cache. TimeSpan expiration The expiration time for the cached value. Type Parameters Name Description T The type of the value to cache. Implements ICacheService IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Caching.RedisProviderConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Caching.RedisProviderConfiguration.html",
    "title": "Class RedisProviderConfiguration | Innovt Platform",
    "keywords": "Class RedisProviderConfiguration Represents the configuration settings for the Redis cache provider. Inheritance object RedisProviderConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Caching Assembly: Innovt.Cloud.AWS.Caching.dll Syntax public class RedisProviderConfiguration Properties | Edit this page View Source ConnectTimeout Gets or sets the maximum time (in milliseconds) to wait for a connection to the Redis server. Declaration public int? ConnectTimeout { get; set; } Property Value Type Description int? | Edit this page View Source PoolTimeOutInSeconds Gets or sets the maximum time (in seconds) that a client is allowed to wait to acquire a connection from the pool. Declaration public int PoolTimeOutInSeconds { get; set; } Property Value Type Description int | Edit this page View Source ReadOnlyHosts Gets or sets the list of Redis hosts that support only read operations. Declaration public IEnumerable<string> ReadOnlyHosts { get; set; } Property Value Type Description IEnumerable<string> | Edit this page View Source ReadWriteHosts Gets or sets the list of Redis hosts that support both read and write operations. Declaration public IEnumerable<string> ReadWriteHosts { get; set; } Property Value Type Description IEnumerable<string> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Caching.html": {
    "href": "api/Innovt.Cloud.AWS.Caching.html",
    "title": "Namespace Innovt.Cloud.AWS.Caching | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Caching Classes RedisCacheService Represents a caching service that uses Redis as the cache provider. RedisProviderConfiguration Represents the configuration settings for the Redis cache provider."
  },
  "api/Innovt.Cloud.AWS.Cognito.CognitoIdentityProvider.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.CognitoIdentityProvider.html",
    "title": "Class CognitoIdentityProvider | Innovt Platform",
    "keywords": "Class CognitoIdentityProvider Provides functionality for user management and authentication with Amazon Cognito Identity Provider. Inheritance object AwsBaseService CognitoIdentityProvider Implements IDisposable ICognitoIdentityProvider Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public abstract class CognitoIdentityProvider : AwsBaseService, IDisposable, ICognitoIdentityProvider Constructors | Edit this page View Source CognitoIdentityProvider(ILogger, IAwsConfiguration, string, string, string, string, bool) Declaration protected CognitoIdentityProvider(ILogger logger, IAwsConfiguration configuration, string clientId, string userPoolId, string domainEndPoint, string region = null, bool allowAutoConfirmUserWithSocialLogin = false) Parameters Type Name Description ILogger logger IAwsConfiguration configuration string clientId string userPoolId string domainEndPoint string region bool allowAutoConfirmUserWithSocialLogin Methods | Edit this page View Source ChangePassword(ChangePasswordRequest, CancellationToken) Changes the password for a user with the specified access token. Declaration public virtual Task ChangePassword(ChangePasswordRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ChangePasswordRequest command A ChangePasswordRequest containing the necessary information to change the password. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task Remarks This method allows you to change the password for a user by providing an access token and the new proposed password. The previous password is also required for security verification. If successful, the user's password will be updated. Exceptions Type Condition ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. | Edit this page View Source ConfirmForgotPassword(ConfirmForgotPasswordRequest, CancellationToken) Confirms a user's forgotten password and sets a new password for the user. Declaration public Task ConfirmForgotPassword(ConfirmForgotPasswordRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ConfirmForgotPasswordRequest command A ConfirmForgotPasswordRequest containing the necessary information for confirmation. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task A task representing the asynchronous confirmation process. Remarks This method is used to confirm a user's forgotten password by providing the user's username, a new password, and a confirmation code received by the user. It sets the new password for the user if the confirmation is successful. Exceptions Type Condition ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. | Edit this page View Source ConfirmSignUp(ConfirmSignUpRequest, CancellationToken) Confirms the sign-up of a user with the specified confirmation code. Declaration public virtual Task ConfirmSignUp(ConfirmSignUpRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description ConfirmSignUpRequest request A ConfirmSignUpRequest containing the necessary information to confirm the sign-up. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task Remarks This method allows you to confirm the sign-up of a user with the specified confirmation code. The confirmation code is typically sent to the user's email or phone number during the registration process. After successful confirmation, the user becomes active and can log in. Exceptions Type Condition ArgumentNullException Thrown when the request is null. BusinessException Thrown when the request fails validation. | Edit this page View Source DeleteUser(DeleteUserAccountRequest, CancellationToken) This method will delete the user using the username and the user pool id. It's important to have the admin delete user permission. Declaration public Task<bool> DeleteUser(DeleteUserAccountRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description DeleteUserAccountRequest command CancellationToken cancellationToken Returns Type Description Task<bool> Exceptions Type Condition Exception | Edit this page View Source DisposeServices() Disposes of resources when they are no longer needed. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source ForgotPassword(ForgotPasswordRequest, CancellationToken) Sends a forgot password request for a user. Declaration public virtual Task ForgotPassword(ForgotPasswordRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ForgotPasswordRequest command The ForgotPasswordRequest containing user information. CancellationToken cancellationToken A cancellation token for async tasks. Returns Type Description Task | Edit this page View Source GetUser<T>(GetUserRequest, CancellationToken) Retrieves user information based on the specified request and response type. Declaration public virtual Task<T> GetUser<T>(GetUserRequest request, CancellationToken cancellationToken = default) where T : IGetUserResponse Parameters Type Name Description GetUserRequest request A GetUserRequest containing the criteria for retrieving user information. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task<T> An instance of the specified response type containing user information. Type Parameters Name Description T The type of response implementing IGetUserResponse to return. Remarks This method allows you to retrieve user information based on the specified request, such as the user's username or other custom fields. You can specify the response type as a generic parameter, which should implement the IGetUserResponse interface to provide a structured representation of user data. The method returns an instance of the specified response type populated with user information. Exceptions Type Condition ArgumentNullException Thrown when the request is null. BusinessException Thrown when the request fails validation. | Edit this page View Source GetUser<T>(string, CancellationToken) Get user information based on the specified request and response type. Declaration public virtual Task<T> GetUser<T>(string accessToken, CancellationToken cancellationToken = default) where T : IGetUserResponse Parameters Type Name Description string accessToken A valid access token. CancellationToken cancellationToken A cancellationToken token Returns Type Description Task<T> Null or a valid user Type Parameters Name Description T A response of type IGetUserResponse Exceptions Type Condition ArgumentNullException Exception | Edit this page View Source LinkSocialUser(LinkSocialAccountRequest, CancellationToken) Link user and social account. This is used to avoid billing issues and other problems. Declaration public Task<bool> LinkSocialUser(LinkSocialAccountRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description LinkSocialAccountRequest command CancellationToken cancellationToken Returns Type Description Task<bool> Exceptions Type Condition Exception | Edit this page View Source RefreshToken(RefreshTokenRequest, CancellationToken) Refreshes an expired access token using a refresh token, allowing the user to remain authenticated. Declaration public virtual Task<RefreshTokenResponse> RefreshToken(RefreshTokenRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description RefreshTokenRequest command The request containing the refresh token and context information. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task<RefreshTokenResponse> A RefreshTokenResponse containing the refreshed access token and associated details. Remarks This method is used to refresh an expired access token using a refresh token, allowing the user to remain authenticated without the need for re-entering credentials. The method constructs a refresh token authentication request, including user context data, and sends it to the Amazon Cognito Identity Provider service. The response contains the refreshed access token and related information. Exceptions Type Condition BusinessException Thrown when the refresh token operation is not authorized. Exception Thrown for other exceptions during the refresh token operation. | Edit this page View Source ResendConfirmationCode(ResendConfirmationCodeRequest, CancellationToken) Resends the confirmation code to a user with the specified username. Declaration public virtual Task ResendConfirmationCode(ResendConfirmationCodeRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ResendConfirmationCodeRequest command A ResendConfirmationCodeRequest containing the necessary information to resend the confirmation code. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task Remarks This method allows you to resend the confirmation code to a user with the specified username. The confirmation code is typically used during the user registration process to verify the user's email or phone number. Exceptions Type Condition ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. | Edit this page View Source RespondToAuthChallenge(RespondToAuthChallengeRequest, CancellationToken) Responds to an authentication challenge with the appropriate challenge responses. Declaration public Task<AuthChallengeResponse> RespondToAuthChallenge(RespondToAuthChallengeRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description RespondToAuthChallengeRequest command A RespondToAuthChallengeRequest containing the necessary information for the challenge response. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task<AuthChallengeResponse> An AuthChallengeResponse containing the authentication result or metadata. Remarks This method is used to respond to various authentication challenges such as custom challenges, SMS Multi-Factor Authentication (MFA), and new password requirements. It provides the appropriate challenge responses based on the challenge type and returns authentication results or metadata. Exceptions Type Condition ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. CriticalException Thrown when an unsupported challenge name is encountered. | Edit this page View Source SignIn(OtpSignInRequest, CancellationToken) Signs in a user with the provided request for OTP process authentication. Declaration public virtual Task<SignInResponse> SignIn(OtpSignInRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description OtpSignInRequest command CancellationToken cancellationToken Returns Type Description Task<SignInResponse> A SignInResponse with a valid token or null | Edit this page View Source SignIn(SignInRequest, CancellationToken) Signs in a user with the provided authentication information. Declaration public virtual Task<SignInResponse> SignIn(SignInRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description SignInRequest command CancellationToken cancellationToken Returns Type Description Task<SignInResponse> | Edit this page View Source SignOut(SignOutRequest, CancellationToken) Signs out the user associated with the provided access token. Declaration public Task SignOut(SignOutRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description SignOutRequest request A SignOutRequest object containing the access token to sign out the user. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task Remarks This method allows you to sign out the user associated with the provided access token. Signing out a user invalidates the access token, preventing further access to protected resources without reauthentication. Ensure that you provide a valid access token to successfully sign out the user. Exceptions Type Condition ArgumentNullException Thrown when the request is null. BusinessException Thrown when the request fails validation. | Edit this page View Source SignUp(ISignUpRequest, CancellationToken) Signs up a new user with the provided registration information. Declaration public virtual Task<SignUpResponse> SignUp(ISignUpRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ISignUpRequest command An ISignUpRequest object containing the user's registration information. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task<SignUpResponse> A SignUpResponse indicating whether the user was successfully signed up and their UUID (User Sub). Remarks This method allows you to sign up a new user with the provided registration information, including username, password, custom attributes, and other optional properties. After successful sign-up, the user may need to confirm their registration depending on the authentication flow and configuration. Exceptions Type Condition ArgumentNullException Thrown when the command is null. BusinessException Thrown when the command fails validation. | Edit this page View Source SocialSignIn(SocialSignInRequest, CancellationToken) Performs social sign-in using an authorization code obtained from an external identity provider. Declaration public virtual Task<OAuth2SignInResponse> SocialSignIn(SocialSignInRequest command, CancellationToken cancellationToken) Parameters Type Name Description SocialSignInRequest command The request containing the authorization code and context information. CancellationToken cancellationToken A cancellation token for cancelling the operation. Returns Type Description Task<OAuth2SignInResponse> A OAuth2SignInResponse containing user information and tokens for authentication. Remarks This method is used to perform social sign-in using an authorization code obtained from an external identity provider. It constructs an OAuth2 token request, sends it to the identity provider, and handles the response to authenticate the user. The method also retrieves user information and determines if the user needs to be registered in the system. Exceptions Type Condition BusinessException Thrown when there is an error in the OAuth2 response. CriticalException Thrown when the user is not found in the system. Exception Thrown for other exceptions during the social sign-in process. | Edit this page View Source UpdateUserAttributes(AdminUpdateUserAttributesRequest, CancellationToken) This method allow you to update user attributes without sending a token. Internally we are calling Admin Update User Attributes. Declaration public Task UpdateUserAttributes(AdminUpdateUserAttributesRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description AdminUpdateUserAttributesRequest command CancellationToken cancellationToken Returns Type Description Task | Edit this page View Source UpdateUserAttributes(UpdateUserAttributesRequest, CancellationToken) Updates user attributes. Declaration public virtual Task UpdateUserAttributes(UpdateUserAttributesRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description UpdateUserAttributesRequest command The UpdateUserAttributesRequest containing user attributes. CancellationToken cancellationToken A cancellation token for async tasks. Returns Type Description Task Implements IDisposable ICognitoIdentityProvider Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.CodeMismatchException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.CodeMismatchException.html",
    "title": "Class CodeMismatchException | Innovt Platform",
    "keywords": "Class CodeMismatchException Exception thrown when a code mismatch error occurs. This typically happens when a code provided by the user does not match the expected code. Inheritance object Exception BaseException BusinessException CodeMismatchException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class CodeMismatchException : BusinessException, ISerializable Constructors | Edit this page View Source CodeMismatchException() Initializes a new instance of the CodeMismatchException class. Declaration public CodeMismatchException() Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.ExpiredCodeException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.ExpiredCodeException.html",
    "title": "Class ExpiredCodeException | Innovt Platform",
    "keywords": "Class ExpiredCodeException Exception thrown when an expired code error occurs. This typically happens when a time-limited code or token has expired and is no longer valid. Inheritance object Exception BaseException BusinessException ExpiredCodeException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class ExpiredCodeException : BusinessException, ISerializable Constructors | Edit this page View Source ExpiredCodeException() Initializes a new instance of the ExpiredCodeException class. Declaration public ExpiredCodeException() Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.InternalException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.InternalException.html",
    "title": "Class InternalException | Innovt Platform",
    "keywords": "Class InternalException Exception thrown when an internal critical error occurs. This type of exception is used for errors that are considered critical and may require special handling. Inheritance object Exception BaseException CriticalException InternalException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class InternalException : CriticalException, ISerializable Constructors | Edit this page View Source InternalException(Exception) Initializes a new instance of the InternalException class with a reference to the inner exception that is the cause of this exception. Declaration public InternalException(Exception ex) Parameters Type Name Description Exception ex The inner exception that is the cause of this exception. | Edit this page View Source InternalException(SerializationInfo, StreamingContext) Initializes a new instance of the InternalException class with serialized data. Declaration protected InternalException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo The SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext streamingContext The StreamingContext that contains contextual information about the source or destination. | Edit this page View Source InternalException(string) Initializes a new instance of the InternalException class with a specified error message. Declaration public InternalException(string message) Parameters Type Name Description string message The error message that describes the exception. | Edit this page View Source InternalException(string, Exception) Initializes a new instance of the InternalException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public InternalException(string message, Exception ex) Parameters Type Name Description string message The error message that describes the exception. Exception ex The inner exception that is the cause of this exception. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.InvalidPasswordException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.InvalidPasswordException.html",
    "title": "Class InvalidPasswordException | Innovt Platform",
    "keywords": "Class InvalidPasswordException Exception thrown when an invalid password is encountered. This exception typically indicates that a password provided by a user or a system does not meet the required criteria or is incorrect. Inheritance object Exception BaseException BusinessException InvalidPasswordException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class InvalidPasswordException : BusinessException, ISerializable Constructors | Edit this page View Source InvalidPasswordException() Initializes a new instance of the InvalidPasswordException class with a predefined error code. Declaration public InvalidPasswordException() Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.PasswordResetRequiredException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.PasswordResetRequiredException.html",
    "title": "Class PasswordResetRequiredException | Innovt Platform",
    "keywords": "Class PasswordResetRequiredException Exception thrown when a password reset is required for a user or system operation. This exception typically indicates that a user's password has expired or that a password reset has been initiated. Inheritance object Exception BaseException BusinessException PasswordResetRequiredException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class PasswordResetRequiredException : BusinessException, ISerializable Constructors | Edit this page View Source PasswordResetRequiredException() Initializes a new instance of the PasswordResetRequiredException class with a predefined error code. Declaration public PasswordResetRequiredException() Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNameAlreadyExistsException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNameAlreadyExistsException.html",
    "title": "Class UserNameAlreadyExistsException | Innovt Platform",
    "keywords": "Class UserNameAlreadyExistsException Exception thrown when attempting to create a user account with a username that already exists in the system. Inheritance object Exception BaseException BusinessException UserNameAlreadyExistsException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class UserNameAlreadyExistsException : BusinessException, ISerializable Constructors | Edit this page View Source UserNameAlreadyExistsException() Initializes a new instance of the UserNameAlreadyExistsException class with a predefined error code. Declaration public UserNameAlreadyExistsException() Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotAuthorizedException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotAuthorizedException.html",
    "title": "Class UserNotAuthorizedException | Innovt Platform",
    "keywords": "Class UserNotAuthorizedException Exception thrown when a user is not authorized to perform a specific action or access a resource. Inheritance object Exception BaseException BusinessException UserNotAuthorizedException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class UserNotAuthorizedException : BusinessException, ISerializable Constructors | Edit this page View Source UserNotAuthorizedException() Initializes a new instance of the UserNotAuthorizedException class with a predefined error code. Declaration public UserNotAuthorizedException() Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotConfirmedException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotConfirmedException.html",
    "title": "Class UserNotConfirmedException | Innovt Platform",
    "keywords": "Class UserNotConfirmedException Exception thrown when a user is not confirmed or validated in the application. Inheritance object Exception BaseException BusinessException UserNotConfirmedException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class UserNotConfirmedException : BusinessException, ISerializable Constructors | Edit this page View Source UserNotConfirmedException() Initializes a new instance of the UserNotConfirmedException class with a predefined error code. Declaration public UserNotConfirmedException() | Edit this page View Source UserNotConfirmedException(Exception) Initializes a new instance of the UserNotConfirmedException class with a predefined error code and an inner exception. Declaration public UserNotConfirmedException(Exception ex) Parameters Type Name Description Exception ex The inner exception that caused this exception to be thrown. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotFoundException.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.UserNotFoundException.html",
    "title": "Class UserNotFoundException | Innovt Platform",
    "keywords": "Class UserNotFoundException Exception thrown when a user is not found in the application. Inheritance object Exception BaseException BusinessException UserNotFoundException Implements ISerializable Inherited Members BusinessException.Code BusinessException.Errors BusinessException.Detail BusinessException.ReadFullErrors() Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Cognito.Exceptions Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class UserNotFoundException : BusinessException, ISerializable Constructors | Edit this page View Source UserNotFoundException() Initializes a new instance of the UserNotFoundException class with a predefined error code. Declaration public UserNotFoundException() Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Exceptions.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Exceptions.html",
    "title": "Namespace Innovt.Cloud.AWS.Cognito.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Cognito.Exceptions Classes CodeMismatchException Exception thrown when a code mismatch error occurs. This typically happens when a code provided by the user does not match the expected code. ExpiredCodeException Exception thrown when an expired code error occurs. This typically happens when a time-limited code or token has expired and is no longer valid. InternalException Exception thrown when an internal critical error occurs. This type of exception is used for errors that are considered critical and may require special handling. InvalidPasswordException Exception thrown when an invalid password is encountered. This exception typically indicates that a password provided by a user or a system does not meet the required criteria or is incorrect. PasswordResetRequiredException Exception thrown when a password reset is required for a user or system operation. This exception typically indicates that a user's password has expired or that a password reset has been initiated. UserNameAlreadyExistsException Exception thrown when attempting to create a user account with a username that already exists in the system. UserNotAuthorizedException Exception thrown when a user is not authorized to perform a specific action or access a resource. UserNotConfirmedException Exception thrown when a user is not confirmed or validated in the application. UserNotFoundException Exception thrown when a user is not found in the application."
  },
  "api/Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html",
    "title": "Interface ICognitoIdentityProvider | Innovt Platform",
    "keywords": "Interface ICognitoIdentityProvider Namespace: Innovt.Cloud.AWS.Cognito Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public interface ICognitoIdentityProvider Methods | Edit this page View Source ChangePassword(ChangePasswordRequest, CancellationToken) Change the password for an authenticated user. Declaration Task ChangePassword(ChangePasswordRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ChangePasswordRequest command The request object containing the necessary information to change the user's password. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task | Edit this page View Source ConfirmForgotPassword(ConfirmForgotPasswordRequest, CancellationToken) Confirm a forgot password request and set a new password for the user. Declaration Task ConfirmForgotPassword(ConfirmForgotPasswordRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ConfirmForgotPasswordRequest command The request object containing the confirmation details. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task | Edit this page View Source ConfirmSignUp(ConfirmSignUpRequest, CancellationToken) Confirm a user's sign-up by verifying the confirmation code. Declaration Task ConfirmSignUp(ConfirmSignUpRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description ConfirmSignUpRequest request The request object containing the user's sign-up confirmation details. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task | Edit this page View Source DeleteUser(DeleteUserAccountRequest, CancellationToken) This method allow you to delete a user account from the user pool. Declaration Task<bool> DeleteUser(DeleteUserAccountRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description DeleteUserAccountRequest command CancellationToken cancellationToken Returns Type Description Task<bool> | Edit this page View Source ForgotPassword(ForgotPasswordRequest, CancellationToken) Initiate a forgot password request for a user. Declaration Task ForgotPassword(ForgotPasswordRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ForgotPasswordRequest command The request object containing the user's information. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task | Edit this page View Source GetUser<T>(GetUserRequest, CancellationToken) Retrieve user information based on the specified request. Declaration Task<T> GetUser<T>(GetUserRequest request, CancellationToken cancellationToken = default) where T : IGetUserResponse Parameters Type Name Description GetUserRequest request The request object containing the criteria to retrieve user information. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<T> The response object containing user information. Type Parameters Name Description T The response object type containing user information. Must implement the IGetUserResponse interface. | Edit this page View Source GetUser<T>(string, CancellationToken) Retrieve user information based on the access token. Declaration Task<T> GetUser<T>(string accessToken, CancellationToken cancellationToken = default) where T : IGetUserResponse Parameters Type Name Description string accessToken A valid access token. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<T> The response object containing user information. Type Parameters Name Description T The response object type containing user information. Must implement the IGetUserResponse interface. | Edit this page View Source LinkSocialUser(LinkSocialAccountRequest, CancellationToken) Link existent user account with a social user account to avoid billing issues and other problems. Declaration Task<bool> LinkSocialUser(LinkSocialAccountRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description LinkSocialAccountRequest command The request object containing the user pool and email from user. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<bool> | Edit this page View Source RefreshToken(RefreshTokenRequest, CancellationToken) Refresh the user's authentication token. Declaration Task<RefreshTokenResponse> RefreshToken(RefreshTokenRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description RefreshTokenRequest command The request object containing the refresh token. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<RefreshTokenResponse> The response object containing the refreshed authentication token. | Edit this page View Source ResendConfirmationCode(ResendConfirmationCodeRequest, CancellationToken) Resend a confirmation code to the user's email or phone number. Declaration Task ResendConfirmationCode(ResendConfirmationCodeRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ResendConfirmationCodeRequest command The request object containing the user's information. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task | Edit this page View Source RespondToAuthChallenge(RespondToAuthChallengeRequest, CancellationToken) Respond to an authentication challenge during the sign-in process. Declaration Task<AuthChallengeResponse> RespondToAuthChallenge(RespondToAuthChallengeRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description RespondToAuthChallengeRequest command The request object containing the challenge response. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<AuthChallengeResponse> The response object containing the result of the authentication challenge. | Edit this page View Source SignIn(OtpSignInRequest, CancellationToken) Authenticate a user using one-time password (OTP) credentials. Declaration Task<SignInResponse> SignIn(OtpSignInRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description OtpSignInRequest command The request object containing the OTP credentials. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<SignInResponse> The response object containing the authentication result. | Edit this page View Source SignIn(SignInRequest, CancellationToken) Authenticate a user using standard credentials (username and password). Declaration Task<SignInResponse> SignIn(SignInRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description SignInRequest command The request object containing the standard sign-in credentials. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<SignInResponse> The response object containing the authentication result. | Edit this page View Source SignOut(SignOutRequest, CancellationToken) Sign a user out of the application. Declaration Task SignOut(SignOutRequest request, CancellationToken cancellationToken = default) Parameters Type Name Description SignOutRequest request The request object containing the access token. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task | Edit this page View Source SignUp(ISignUpRequest, CancellationToken) Sign up a new user. Declaration Task<SignUpResponse> SignUp(ISignUpRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description ISignUpRequest command The request object containing the user's sign-up details. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<SignUpResponse> The response object containing the sign-up confirmation details. | Edit this page View Source SocialSignIn(SocialSignInRequest, CancellationToken) Authenticate a user using social media credentials. Declaration Task<OAuth2SignInResponse> SocialSignIn(SocialSignInRequest command, CancellationToken cancellationToken) Parameters Type Name Description SocialSignInRequest command The request object containing the social media sign-in credentials. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task<OAuth2SignInResponse> The response object containing the social media sign-in result. | Edit this page View Source UpdateUserAttributes(AdminUpdateUserAttributesRequest, CancellationToken) This method allow you to update user attributes without sending a token. Internally we are calling Admin Update User Attributes. Declaration Task UpdateUserAttributes(AdminUpdateUserAttributesRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description AdminUpdateUserAttributesRequest command CancellationToken cancellationToken Returns Type Description Task | Edit this page View Source UpdateUserAttributes(UpdateUserAttributesRequest, CancellationToken) Update user attributes with new values. Declaration Task UpdateUserAttributes(UpdateUserAttributesRequest command, CancellationToken cancellationToken = default) Parameters Type Name Description UpdateUserAttributesRequest command The request object containing the updated user attributes. CancellationToken cancellationToken A token to cancel the operation if needed. Returns Type Description Task Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest.html",
    "title": "Class AdminUpdateUserAttributesRequest | Innovt Platform",
    "keywords": "Class AdminUpdateUserAttributesRequest Represents a request to update user attributes. Inheritance object RequestBase AdminUpdateUserAttributesRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class AdminUpdateUserAttributesRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source Attributes Gets or sets the attributes to update for the user. Declaration public Dictionary<string, string> Attributes { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source UserName Gets or sets the username associated with the user. Declaration [Required] public string UserName { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse.html",
    "title": "Class AuthChallengeResponse | Innovt Platform",
    "keywords": "Class AuthChallengeResponse Represents the response of an authentication challenge, including metadata and authentication result. Inheritance object AuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class AuthChallengeResponse Properties | Edit this page View Source AuthenticationResult Gets or sets the authentication result of the challenge. Declaration public SignInResponse AuthenticationResult { get; set; } Property Value Type Description SignInResponse | Edit this page View Source Metadata Gets or sets the metadata associated with the authentication challenge. Declaration public IDictionary<string, string> Metadata { get; set; } Property Value Type Description IDictionary<string, string> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest.html",
    "title": "Class ChangePasswordRequest | Innovt Platform",
    "keywords": "Class ChangePasswordRequest Represents a request to change a user's password, including required parameters and validation. Inheritance object RequestBase ChangePasswordRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class ChangePasswordRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source AccessToken Gets or sets the access token associated with the user. Declaration [Required] public string AccessToken { get; set; } Property Value Type Description string | Edit this page View Source ConfirmProposedPassword Gets or sets the confirmation of the proposed new password. Declaration [Required] [StringLength(18, MinimumLength = 4)] public string ConfirmProposedPassword { get; set; } Property Value Type Description string | Edit this page View Source PreviousPassword Gets or sets the user's previous password. Declaration [Required] [StringLength(20, MinimumLength = 4)] public string PreviousPassword { get; set; } Property Value Type Description string | Edit this page View Source ProposedPassword Gets or sets the proposed new password. Declaration [Required] [StringLength(18, MinimumLength = 4)] public string ProposedPassword { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the properties of the ChangePasswordRequest object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> An IEnumerable<T> containing validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest.html",
    "title": "Class ConfirmForgotPasswordRequest | Innovt Platform",
    "keywords": "Class ConfirmForgotPasswordRequest Represents a request to confirm a forgotten password, including a password reset operation. Inheritance object RequestBase ConfirmForgotPasswordRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class ConfirmForgotPasswordRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source ConfirmPassword Gets or sets the confirmation of the new password. Declaration [Required] public string ConfirmPassword { get; set; } Property Value Type Description string | Edit this page View Source ConfirmationCode Gets or sets the confirmation code used for password reset. Declaration [Required] public string ConfirmationCode { get; set; } Property Value Type Description string | Edit this page View Source Password Gets or sets the new password for the user. Declaration [Required] public string Password { get; set; } Property Value Type Description string | Edit this page View Source UserName Gets or sets the user's username. Declaration [Required] public string UserName { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the properties of the ConfirmForgotPasswordRequest object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> An IEnumerable<T> containing validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest.html",
    "title": "Class ConfirmSignUpRequest | Innovt Platform",
    "keywords": "Class ConfirmSignUpRequest Represents a request to confirm a user sign-up. Inheritance object RequestBase ConfirmSignUpRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class ConfirmSignUpRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source ConfirmationCode Gets or sets the confirmation code associated with the user's sign-up request. Declaration [Required] [StringLength(20, MinimumLength = 4)] public virtual string ConfirmationCode { get; set; } Property Value Type Description string | Edit this page View Source UserName Gets or sets the username of the user to confirm. Declaration [Required] public virtual string UserName { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the properties of the ConfirmSignUpRequest object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> An IEnumerable<T> containing validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest.html",
    "title": "Class DeleteUserAccountRequest | Innovt Platform",
    "keywords": "Class DeleteUserAccountRequest Represents a request to update user attributes. Inheritance object RequestBase DeleteUserAccountRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class DeleteUserAccountRequest : RequestBase, IRequestBase, IValidatableObject Constructors | Edit this page View Source DeleteUserAccountRequest() Declaration public DeleteUserAccountRequest() | Edit this page View Source DeleteUserAccountRequest(string) Declaration public DeleteUserAccountRequest(string userName) Parameters Type Name Description string userName Properties | Edit this page View Source UserName Declaration [Required] public string UserName { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ErrorCode.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ErrorCode.html",
    "title": "Class ErrorCode | Innovt Platform",
    "keywords": "Class ErrorCode Provides a collection of error codes used in the application. Inheritance object ErrorCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public static class ErrorCode Properties | Edit this page View Source ChallengeNotAvailable Gets the error code for \"ChallengeNotAvailable\". Declaration public static string ChallengeNotAvailable { get; } Property Value Type Description string | Edit this page View Source CodeMismatch Gets the error code for \"CodeMismatch\". Declaration public static string CodeMismatch { get; } Property Value Type Description string | Edit this page View Source ExpiredCode Gets the error code for \"ExpiredCode\". Declaration public static string ExpiredCode { get; } Property Value Type Description string | Edit this page View Source InternalServerError Gets the error code for \"InternalServerError\". Declaration public static string InternalServerError { get; } Property Value Type Description string | Edit this page View Source InvalidPassword Gets the error code for \"InvalidPassword\". Declaration public static string InvalidPassword { get; } Property Value Type Description string | Edit this page View Source LimitExceeded Gets the error code for \"LimitExceeded\". Declaration public static string LimitExceeded { get; } Property Value Type Description string | Edit this page View Source NotAuthorized Gets the error code for \"NotAuthorized\". Declaration public static string NotAuthorized { get; } Property Value Type Description string | Edit this page View Source OAuthResponseError Gets the error code for \"OAuthResponseError\". Declaration public static string OAuthResponseError { get; } Property Value Type Description string | Edit this page View Source PasswordResetRequired Gets the error code for \"PasswordResetRequired\". Declaration public static string PasswordResetRequired { get; } Property Value Type Description string | Edit this page View Source TooManyRequests Gets the error code for \"TooManyRequests\". Declaration public static string TooManyRequests { get; } Property Value Type Description string | Edit this page View Source UserNotConfirmed Gets the error code for \"UserNotConfirmed\". Declaration public static string UserNotConfirmed { get; } Property Value Type Description string | Edit this page View Source UserNotFound Gets the error code for \"UserNotFound\". Declaration public static string UserNotFound { get; } Property Value Type Description string | Edit this page View Source UsernameAlreadyExists Gets the error code for \"UsernameAlreadyExists\". Declaration public static string UsernameAlreadyExists { get; } Property Value Type Description string"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest.html",
    "title": "Class ForgotPasswordRequest | Innovt Platform",
    "keywords": "Class ForgotPasswordRequest Represents a request for initiating the forgot password process. Inheritance object RequestBase ForgotPasswordRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class ForgotPasswordRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source UserName Gets or sets the username associated with the user who forgot their password. Declaration [Required] public virtual string UserName { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the ForgotPasswordRequest instance. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> An IEnumerable<T> containing validation errors, if any. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.GetUserRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.GetUserRequest.html",
    "title": "Class GetUserRequest | Innovt Platform",
    "keywords": "Class GetUserRequest Represents a request for retrieving user information based on a specified field and value. Inheritance object RequestBase GetUserRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class GetUserRequest : RequestBase, IRequestBase, IValidatableObject Constructors | Edit this page View Source GetUserRequest() Initializes a new instance of the GetUserRequest class with default settings. Declaration public GetUserRequest() | Edit this page View Source GetUserRequest(string, string) Initializes a new instance of the GetUserRequest class with specified field and value. Declaration public GetUserRequest(string field, string value) Parameters Type Name Description string field The field to filter user retrieval. string value The value to match in the specified field. Properties | Edit this page View Source ExcludeExternalUser Gets or sets a value indicating whether to exclude external users in the retrieval. Declaration public bool ExcludeExternalUser { get; set; } Property Value Type Description bool | Edit this page View Source Field Gets or sets the field to filter user retrieval. Declaration public string Field { get; set; } Property Value Type Description string | Edit this page View Source Value Gets or sets the value to match in the specified field. Declaration public string Value { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the GetUserRequest instance. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> An IEnumerable<T> containing validation errors, if any. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.IGetUserResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.IGetUserResponse.html",
    "title": "Interface IGetUserResponse | Innovt Platform",
    "keywords": "Interface IGetUserResponse Represents the response interface for retrieving user information. Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public interface IGetUserResponse Properties | Edit this page View Source CustomAttributes Gets or sets custom attributes associated with the user. Declaration Dictionary<string, string> CustomAttributes { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source FirstName Gets or sets the user's first name. Declaration string FirstName { get; set; } Property Value Type Description string | Edit this page View Source LastName Gets or sets the user's last name. Declaration string LastName { get; set; } Property Value Type Description string | Edit this page View Source Status Gets or sets the status of the user. Declaration string Status { get; set; } Property Value Type Description string | Edit this page View Source UserCreateDate Gets or sets the date and time when the user was created. Declaration DateTime UserCreateDate { get; set; } Property Value Type Description DateTime | Edit this page View Source UserLastModifiedDate Gets or sets the date and time when the user was last modified. Declaration DateTime UserLastModifiedDate { get; set; } Property Value Type Description DateTime | Edit this page View Source UserName Gets or sets the user's username. Declaration string UserName { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.IRequestBase.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.IRequestBase.html",
    "title": "Interface IRequestBase | Innovt Platform",
    "keywords": "Interface IRequestBase Represents the base interface for request objects with validation support. Inherited Members IValidatableObject.Validate(ValidationContext) Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public interface IRequestBase : IValidatableObject Properties | Edit this page View Source HttpHeader Gets or sets the collection of HTTP headers associated with the request. Declaration [JsonIgnore] Dictionary<string, string> HttpHeader { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source IpAddress Gets or sets the IP address associated with the request. Declaration [JsonIgnore] string IpAddress { get; set; } Property Value Type Description string | Edit this page View Source ServerName Gets or sets the server name associated with the request. Declaration [JsonIgnore] string ServerName { get; set; } Property Value Type Description string | Edit this page View Source ServerPath Gets or sets the server path associated with the request. Declaration [JsonIgnore] string ServerPath { get; set; } Property Value Type Description string Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest.html",
    "title": "Interface ISignUpRequest | Innovt Platform",
    "keywords": "Interface ISignUpRequest Represents the interface for sign-up requests with user information and custom attributes. Inherited Members IRequestBase.HttpHeader IRequestBase.IpAddress IRequestBase.ServerPath IRequestBase.ServerName IValidatableObject.Validate(ValidationContext) Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public interface ISignUpRequest : IRequestBase, IValidatableObject Properties | Edit this page View Source CustomAttributes Gets or sets the custom attributes associated with the sign-up request. Declaration Dictionary<string, string> CustomAttributes { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source Password Gets or sets the password associated with the sign-up request. Declaration string Password { get; set; } Property Value Type Description string | Edit this page View Source UserName Gets or sets the username associated with the sign-up request. Declaration string UserName { get; set; } Property Value Type Description string Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest.html",
    "title": "Class LinkSocialAccountRequest | Innovt Platform",
    "keywords": "Class LinkSocialAccountRequest Represents a request to update user attributes. Inheritance object RequestBase LinkSocialAccountRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class LinkSocialAccountRequest : RequestBase, IRequestBase, IValidatableObject Constructors | Edit this page View Source LinkSocialAccountRequest() Declaration public LinkSocialAccountRequest() | Edit this page View Source LinkSocialAccountRequest(string, string) Declaration public LinkSocialAccountRequest(string email, string userName) Parameters Type Name Description string email string userName Properties | Edit this page View Source Email The email of the user to link the account. Declaration [Required] public string Email { get; set; } Property Value Type Description string | Edit this page View Source UserName Declaration [Required] public string UserName { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse.html",
    "title": "Class OAuth2SignInResponse | Innovt Platform",
    "keywords": "Class OAuth2SignInResponse Gets or sets the error message associated with the sign-in response, if any. Inheritance object SignInResponse OAuth2SignInResponse Inherited Members SignInResponse.IdToken SignInResponse.AccessToken SignInResponse.ExpiresIn SignInResponse.RefreshToken SignInResponse.TokenType SignInResponse.SignInType SignInResponse.Session SignInResponse.ChallengeName SignInResponse.ChallengeParameters object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class OAuth2SignInResponse : SignInResponse Properties | Edit this page View Source Email Gets or sets the email address of the user. Declaration public string Email { get; set; } Property Value Type Description string | Edit this page View Source Error Declaration public string Error { get; set; } Property Value Type Description string | Edit this page View Source FirstName Gets or sets the first name of the user. Declaration public string FirstName { get; set; } Property Value Type Description string | Edit this page View Source LastName Gets or sets the last name of the user. Declaration public string LastName { get; set; } Property Value Type Description string | Edit this page View Source NeedRegister Gets or sets a flag indicating whether the user needs to register. Declaration public bool NeedRegister { get; set; } Property Value Type Description bool | Edit this page View Source Picture Gets or sets the URL of the user's profile picture. Declaration public string Picture { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest.html",
    "title": "Class OtpSignInRequest | Innovt Platform",
    "keywords": "Class OtpSignInRequest Represents a request for one-time password (OTP) sign-in. Inheritance object RequestBase SignInRequestBase OtpSignInRequest Implements IRequestBase IValidatableObject Inherited Members SignInRequestBase.UserName RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class OtpSignInRequest : SignInRequestBase, IRequestBase, IValidatableObject Methods | Edit this page View Source Validate(ValidationContext) Validates the request data. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> An enumerable collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest.html",
    "title": "Class RefreshTokenRequest | Innovt Platform",
    "keywords": "Class RefreshTokenRequest Represents a request for refreshing an authentication token using a refresh token. Inheritance object RequestBase RefreshTokenRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class RefreshTokenRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source RefreshToken Gets or sets the refresh token. Declaration [Required] public string RefreshToken { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request data. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> An enumerable collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse.html",
    "title": "Class RefreshTokenResponse | Innovt Platform",
    "keywords": "Class RefreshTokenResponse Represents a response containing refreshed authentication tokens. Inheritance object RefreshTokenResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class RefreshTokenResponse Properties | Edit this page View Source AccessToken Gets or sets the access token. Declaration public string AccessToken { get; set; } Property Value Type Description string | Edit this page View Source ExpiresIn Gets or sets the expiration time of the access token in seconds. Declaration public int ExpiresIn { get; set; } Property Value Type Description int | Edit this page View Source IdToken Gets or sets the ID token. Declaration public string IdToken { get; set; } Property Value Type Description string | Edit this page View Source TokenType Gets or sets the type of token (e.g., \"Bearer\"). Declaration public string TokenType { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.RequestBase.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.RequestBase.html",
    "title": "Class RequestBase | Innovt Platform",
    "keywords": "Class RequestBase Base class for request objects used in API calls. Inheritance object RequestBase AdminUpdateUserAttributesRequest ChangePasswordRequest ConfirmForgotPasswordRequest ConfirmSignUpRequest DeleteUserAccountRequest ForgotPasswordRequest GetUserRequest LinkSocialAccountRequest RefreshTokenRequest ResendConfirmationCodeRequest RespondToAuthChallengeRequest SignInRequestBase SignOutRequest SocialSignInRequest UpdateUserAttributesRequest Implements IRequestBase IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public abstract class RequestBase : IRequestBase, IValidatableObject Properties | Edit this page View Source HttpHeader Gets or sets the HTTP headers associated with the request. Declaration [JsonIgnore] public Dictionary<string, string> HttpHeader { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source IpAddress Gets or sets the IP address of the requester. Declaration [JsonIgnore] public string IpAddress { get; set; } Property Value Type Description string | Edit this page View Source ServerName Gets or sets the server name for the request. Declaration [JsonIgnore] public string ServerName { get; set; } Property Value Type Description string | Edit this page View Source ServerPath Gets or sets the server path for the request. Declaration [JsonIgnore] public string ServerPath { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public abstract IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest.html",
    "title": "Class ResendConfirmationCodeRequest | Innovt Platform",
    "keywords": "Class ResendConfirmationCodeRequest Represents a request for resending a confirmation code to a user. Inheritance object RequestBase ResendConfirmationCodeRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class ResendConfirmationCodeRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source UserName Gets or sets the user's username for whom the confirmation code will be resent. Declaration [Required] public virtual string UserName { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest.html",
    "title": "Class RespondToAuthChallengeRequest | Innovt Platform",
    "keywords": "Class RespondToAuthChallengeRequest Represents a request for responding to an authentication challenge. Inheritance object RequestBase RespondToAuthChallengeRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class RespondToAuthChallengeRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source ChallengeName Gets or sets the name of the challenge. Declaration [Required] public virtual string ChallengeName { get; set; } Property Value Type Description string | Edit this page View Source ConfirmationCode Gets or sets the confirmation code used to respond to the challenge. Declaration public virtual string ConfirmationCode { get; set; } Property Value Type Description string | Edit this page View Source Password Gets or sets the user's password used to respond to the challenge. Declaration public virtual string Password { get; set; } Property Value Type Description string | Edit this page View Source Session Gets or sets the session token associated with the authentication challenge. Declaration [Required] public virtual string Session { get; set; } Property Value Type Description string | Edit this page View Source UserName Gets or sets the user's username. Declaration [Required] public virtual string UserName { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignInRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignInRequest.html",
    "title": "Class SignInRequest | Innovt Platform",
    "keywords": "Class SignInRequest Represents a request for user sign-in. Inheritance object RequestBase SignInRequestBase SignInRequest Implements IRequestBase IValidatableObject Inherited Members SignInRequestBase.UserName RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class SignInRequest : SignInRequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source Password Gets or sets the user's password. Declaration [Required] [StringLength(30, MinimumLength = 4)] public virtual string Password { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignInRequestBase.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignInRequestBase.html",
    "title": "Class SignInRequestBase | Innovt Platform",
    "keywords": "Class SignInRequestBase Represents a base class for sign-in requests. Inheritance object RequestBase SignInRequestBase OtpSignInRequest SignInRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName RequestBase.Validate(ValidationContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public abstract class SignInRequestBase : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source UserName Gets or sets the user's username. Declaration [Required] public string UserName { get; set; } Property Value Type Description string Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignInResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignInResponse.html",
    "title": "Class SignInResponse | Innovt Platform",
    "keywords": "Class SignInResponse Represents a response containing sign-in information. Inheritance object SignInResponse OAuth2SignInResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class SignInResponse Properties | Edit this page View Source AccessToken Gets or sets the access token. Declaration public string AccessToken { get; set; } Property Value Type Description string | Edit this page View Source ChallengeName Gets or sets the challenge name. Declaration public string ChallengeName { get; set; } Property Value Type Description string | Edit this page View Source ChallengeParameters Gets or sets the challenge parameters. Declaration public Dictionary<string, string> ChallengeParameters { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source ExpiresIn Gets or sets the expiration time in seconds for the access token. Declaration public int ExpiresIn { get; set; } Property Value Type Description int | Edit this page View Source IdToken Gets or sets the ID token. Declaration public string IdToken { get; set; } Property Value Type Description string | Edit this page View Source RefreshToken Gets or sets the refresh token. Declaration public string RefreshToken { get; set; } Property Value Type Description string | Edit this page View Source Session Gets or sets the session. Declaration public string Session { get; set; } Property Value Type Description string | Edit this page View Source SignInType Gets or sets the sign-in type. Declaration public string SignInType { get; set; } Property Value Type Description string | Edit this page View Source TokenType Gets or sets the token type. Declaration public string TokenType { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignOutRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignOutRequest.html",
    "title": "Class SignOutRequest | Innovt Platform",
    "keywords": "Class SignOutRequest Represents a request to sign out with an access token. Inheritance object RequestBase SignOutRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class SignOutRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source AccessToken Gets or sets the access token used for signing out. Declaration [Required] public virtual string AccessToken { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SignUpResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SignUpResponse.html",
    "title": "Class SignUpResponse | Innovt Platform",
    "keywords": "Class SignUpResponse Represents the response from a user sign-up operation. Inheritance object SignUpResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class SignUpResponse Properties | Edit this page View Source Confirmed Gets or sets a value indicating whether the user's sign-up has been confirmed. Declaration public bool Confirmed { get; set; } Property Value Type Description bool | Edit this page View Source UUID Gets or sets the unique identifier (UUID) associated with the user. Declaration public string UUID { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest.html",
    "title": "Class SocialSignInRequest | Innovt Platform",
    "keywords": "Class SocialSignInRequest Represents a request for social sign-in using an OAuth code and redirect URI. Inheritance object RequestBase SocialSignInRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class SocialSignInRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source Code Gets or sets the OAuth code obtained from the social authentication provider. Declaration [Required] public virtual string Code { get; set; } Property Value Type Description string | Edit this page View Source RedirectUri Gets or sets the redirect URI to which the user is redirected after social authentication. Declaration [Required] public virtual string RedirectUri { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest.html",
    "title": "Class UpdateUserAttributesRequest | Innovt Platform",
    "keywords": "Class UpdateUserAttributesRequest Represents a request to update user attributes. Inheritance object RequestBase UpdateUserAttributesRequest Implements IRequestBase IValidatableObject Inherited Members RequestBase.HttpHeader RequestBase.IpAddress RequestBase.ServerPath RequestBase.ServerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Cognito.Model Assembly: Innovt.Cloud.AWS.Cognito.dll Syntax public class UpdateUserAttributesRequest : RequestBase, IRequestBase, IValidatableObject Properties | Edit this page View Source AccessToken Gets or sets the access token associated with the user. Declaration [Required] public string AccessToken { get; set; } Property Value Type Description string | Edit this page View Source Attributes Gets or sets the attributes to update for the user. Declaration public Dictionary<string, string> Attributes { get; set; } Property Value Type Description Dictionary<string, string> Methods | Edit this page View Source Validate(ValidationContext) Validates the request object. Declaration public override IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Overrides RequestBase.Validate(ValidationContext) Implements IRequestBase IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Cognito.Model.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.Model.html",
    "title": "Namespace Innovt.Cloud.AWS.Cognito.Model | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Cognito.Model Classes AdminUpdateUserAttributesRequest Represents a request to update user attributes. AuthChallengeResponse Represents the response of an authentication challenge, including metadata and authentication result. ChangePasswordRequest Represents a request to change a user's password, including required parameters and validation. ConfirmForgotPasswordRequest Represents a request to confirm a forgotten password, including a password reset operation. ConfirmSignUpRequest Represents a request to confirm a user sign-up. DeleteUserAccountRequest Represents a request to update user attributes. ErrorCode Provides a collection of error codes used in the application. ForgotPasswordRequest Represents a request for initiating the forgot password process. GetUserRequest Represents a request for retrieving user information based on a specified field and value. LinkSocialAccountRequest Represents a request to update user attributes. OAuth2SignInResponse Gets or sets the error message associated with the sign-in response, if any. OtpSignInRequest Represents a request for one-time password (OTP) sign-in. RefreshTokenRequest Represents a request for refreshing an authentication token using a refresh token. RefreshTokenResponse Represents a response containing refreshed authentication tokens. RequestBase Base class for request objects used in API calls. ResendConfirmationCodeRequest Represents a request for resending a confirmation code to a user. RespondToAuthChallengeRequest Represents a request for responding to an authentication challenge. SignInRequest Represents a request for user sign-in. SignInRequestBase Represents a base class for sign-in requests. SignInResponse Represents a response containing sign-in information. SignOutRequest Represents a request to sign out with an access token. SignUpResponse Represents the response from a user sign-up operation. SocialSignInRequest Represents a request for social sign-in using an OAuth code and redirect URI. UpdateUserAttributesRequest Represents a request to update user attributes. Interfaces IGetUserResponse Represents the response interface for retrieving user information. IRequestBase Represents the base interface for request objects with validation support. ISignUpRequest Represents the interface for sign-up requests with user information and custom attributes."
  },
  "api/Innovt.Cloud.AWS.Cognito.html": {
    "href": "api/Innovt.Cloud.AWS.Cognito.html",
    "title": "Namespace Innovt.Cloud.AWS.Cognito | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Cognito Classes CognitoIdentityProvider Provides functionality for user management and authentication with Amazon Cognito Identity Provider. Interfaces ICognitoIdentityProvider"
  },
  "api/Innovt.Cloud.AWS.Configuration.AssumeRoleAWSConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.AssumeRoleAWSConfiguration.html",
    "title": "Class AssumeRoleAwsConfiguration | Innovt Platform",
    "keywords": "Class AssumeRoleAwsConfiguration Represents the configuration for assuming a role in AWS. Inheritance object AssumeRoleAwsConfiguration Implements IAssumeRoleAwsConfiguration IAwsConfiguration IConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Configuration Assembly: Innovt.Cloud.AWS.dll Syntax [CLSCompliant(false)] public class AssumeRoleAwsConfiguration : IAssumeRoleAwsConfiguration, IAwsConfiguration, IConfiguration Constructors | Edit this page View Source AssumeRoleAwsConfiguration(IAwsConfiguration, string, string, string) Initializes a new instance of the AssumeRoleAwsConfiguration class. Declaration public AssumeRoleAwsConfiguration(IAwsConfiguration configuration, string roleArn, string roleSessionName = null, string roleExternalId = null) Parameters Type Name Description IAwsConfiguration configuration The AWS configuration. string roleArn The Amazon Resource Name (ARN) of the role to assume. string roleSessionName The name to use for the assumed role session. string roleExternalId An external ID to use when assuming the role. Exceptions Type Condition ArgumentNullException Thrown when configuration or roleArn is null. Properties | Edit this page View Source AccessKey Gets or sets the AWS access key. Declaration public string AccessKey { get; set; } Property Value Type Description string | Edit this page View Source AccountNumber Gets or sets the AWS account number. Declaration public string AccountNumber { get; set; } Property Value Type Description string | Edit this page View Source ExternalId Gets or sets the external ID to use when assuming the role. Declaration public string ExternalId { get; set; } Property Value Type Description string | Edit this page View Source Profile Gets or sets the AWS profile. Declaration public string Profile { get; set; } Property Value Type Description string | Edit this page View Source Region Gets or sets the AWS region. Declaration public string Region { get; set; } Property Value Type Description string | Edit this page View Source RoleArn Gets or sets the Amazon Resource Name (ARN) of the role to assume. Declaration public string RoleArn { get; set; } Property Value Type Description string | Edit this page View Source RoleSessionName Gets or sets the name to use for the assumed role session. Declaration public string RoleSessionName { get; set; } Property Value Type Description string | Edit this page View Source SecretKey Gets or sets the AWS secret key. Declaration public string SecretKey { get; set; } Property Value Type Description string Methods | Edit this page View Source GetCredential() Gets the AWS credentials for assuming the specified role. Declaration public AWSCredentials GetCredential() Returns Type Description AWSCredentials The AWS credentials for assuming the role. Exceptions Type Condition ConfigurationException Thrown when the source credentials are invalid. Implements IAssumeRoleAwsConfiguration IAwsConfiguration IConfiguration Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Configuration.DefaultAWSConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.DefaultAWSConfiguration.html",
    "title": "Class DefaultAwsConfiguration | Innovt Platform",
    "keywords": "Class DefaultAwsConfiguration Represents the default AWS configuration used for AWS authentication and credentials. Inheritance object DefaultAwsConfiguration Implements IAwsConfiguration IConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Configuration Assembly: Innovt.Cloud.AWS.dll Syntax [CLSCompliant(false)] public class DefaultAwsConfiguration : IAwsConfiguration, IConfiguration Constructors | Edit this page View Source DefaultAwsConfiguration() Initializes a new instance of the DefaultAwsConfiguration class. Declaration public DefaultAwsConfiguration() | Edit this page View Source DefaultAwsConfiguration(IConfiguration, string) This Constructor will use the Autobind from GetSection. Declaration public DefaultAwsConfiguration(IConfiguration configuration, string sectionName = \"AWS\") Parameters Type Name Description IConfiguration configuration IConfiguration from .Net Core string sectionName The default is AWS. | Edit this page View Source DefaultAwsConfiguration(string) The default profile name Declaration public DefaultAwsConfiguration(string profileName) Parameters Type Name Description string profileName Exceptions Type Condition ArgumentNullException | Edit this page View Source DefaultAwsConfiguration(string, string, string, string, string) Initializes a new instance of the DefaultAwsConfiguration class with provided credentials. Declaration public DefaultAwsConfiguration(string accessKey, string secretKey, string region, string accountNumber = null, string sessionToken = null) Parameters Type Name Description string accessKey The AWS access key. string secretKey The AWS secret key. string region The AWS region. string accountNumber The AWS account number. string sessionToken The AWS session token (optional). Exceptions Type Condition ArgumentNullException Thrown when accessKey, secretKey, or region is null. Properties | Edit this page View Source AccessKey Gets or sets the AWS access key for authentication. Declaration public string AccessKey { get; set; } Property Value Type Description string | Edit this page View Source AccountNumber Gets or sets the AWS account number associated with the AWS credentials. Declaration public string AccountNumber { get; set; } Property Value Type Description string | Edit this page View Source Profile Gets or sets the AWS named profile to be used for AWS credentials. If set, other credentials will be ignored. Declaration public string Profile { get; set; } Property Value Type Description string | Edit this page View Source Region Gets or sets the AWS region for AWS service requests. Declaration public string Region { get; set; } Property Value Type Description string | Edit this page View Source SecretKey Gets or sets the AWS secret key for authentication. Declaration public string SecretKey { get; set; } Property Value Type Description string | Edit this page View Source SessionToken Gets or sets the AWS session token for temporary credentials. Declaration public string SessionToken { get; set; } Property Value Type Description string Methods | Edit this page View Source GetCredential() Gets the AWS credentials based on the configured profile or provided access and secret keys. Declaration public AWSCredentials GetCredential() Returns Type Description AWSCredentials The AWS credentials. Implements IAwsConfiguration IConfiguration Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Configuration.IAssumeRoleAWSConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.IAssumeRoleAWSConfiguration.html",
    "title": "Interface IAssumeRoleAwsConfiguration | Innovt Platform",
    "keywords": "Interface IAssumeRoleAwsConfiguration Represents the configuration for assuming an AWS IAM role. Inherited Members IAwsConfiguration.AccountNumber IAwsConfiguration.Profile IAwsConfiguration.GetCredential() IConfiguration.SecretKey IConfiguration.AccessKey IConfiguration.Region Namespace: Innovt.Cloud.AWS.Configuration Assembly: Innovt.Cloud.AWS.dll Syntax [CLSCompliant(false)] public interface IAssumeRoleAwsConfiguration : IAwsConfiguration, IConfiguration Properties | Edit this page View Source ExternalId Gets or sets an external identifier used when assuming the IAM role (optional). Declaration string ExternalId { get; set; } Property Value Type Description string | Edit this page View Source RoleArn Gets or sets the Amazon Resource Name (ARN) of the IAM role to be assumed. Declaration string RoleArn { get; set; } Property Value Type Description string | Edit this page View Source RoleSessionName Gets or sets the name of the assumed role session (optional). Declaration string RoleSessionName { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Configuration.IAwsConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.IAwsConfiguration.html",
    "title": "Interface IAwsConfiguration | Innovt Platform",
    "keywords": "Interface IAwsConfiguration Inherited Members IConfiguration.SecretKey IConfiguration.AccessKey IConfiguration.Region Namespace: Innovt.Cloud.AWS.Configuration Assembly: Innovt.Cloud.AWS.dll Syntax [CLSCompliant(false)] public interface IAwsConfiguration : IConfiguration Properties | Edit this page View Source AccountNumber Declaration string AccountNumber { get; set; } Property Value Type Description string | Edit this page View Source Profile Declaration string Profile { get; set; } Property Value Type Description string Methods | Edit this page View Source GetCredential() Declaration AWSCredentials GetCredential() Returns Type Description AWSCredentials Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Configuration.html": {
    "href": "api/Innovt.Cloud.AWS.Configuration.html",
    "title": "Namespace Innovt.Cloud.AWS.Configuration | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Configuration Classes AssumeRoleAwsConfiguration Represents the configuration for assuming a role in AWS. DefaultAwsConfiguration Represents the default AWS configuration used for AWS authentication and credentials. Interfaces IAssumeRoleAwsConfiguration Represents the configuration for assuming an AWS IAM role. IAwsConfiguration"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Converters.AttributeValueConverterManager.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Converters.AttributeValueConverterManager.html",
    "title": "Class AttributeValueConverterManager | Innovt Platform",
    "keywords": "Class AttributeValueConverterManager Inheritance object AttributeValueConverterManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo.Converters Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public static class AttributeValueConverterManager Methods | Edit this page View Source CreateAttributeValue(object, HashSet<object>) Creates a dynamo db attribute value from an object. Declaration public static AttributeValue CreateAttributeValue(object value, HashSet<object> visitedObjects = null) Parameters Type Name Description object value An object. HashSet<object> visitedObjects This is a hash set to control circular reference. Returns Type Description AttributeValue A dynamo db attribute value."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Converters.AttributeValueToObjectConverterManager.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Converters.AttributeValueToObjectConverterManager.html",
    "title": "Class AttributeValueToObjectConverterManager | Innovt Platform",
    "keywords": "Class AttributeValueToObjectConverterManager Inheritance object AttributeValueToObjectConverterManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo.Converters Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public static class AttributeValueToObjectConverterManager Methods | Edit this page View Source CreateAttributeValueToObject(AttributeValue, Type) This method transforms an AttributeValue into an object of the desired type. Declaration public static object CreateAttributeValueToObject(AttributeValue value, Type desiredType) Parameters Type Name Description AttributeValue value The dynamo db attribute value. Type desiredType Thy desired type to match with the property. Returns Type Description object An object."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Converters.DateTimeOffsetConverter.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Converters.DateTimeOffsetConverter.html",
    "title": "Class DateTimeOffsetConverter | Innovt Platform",
    "keywords": "Class DateTimeOffsetConverter Inheritance object DateTimeOffsetConverter Implements IPropertyConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo.Converters Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public class DateTimeOffsetConverter : IPropertyConverter Methods | Edit this page View Source FromEntry(DynamoDBEntry) Here is from DateTimeOffSet to Date Declaration public object FromEntry(DynamoDBEntry entry) Parameters Type Name Description DynamoDBEntry entry Returns Type Description object | Edit this page View Source ToEntry(object) Convert object to DynamoDBEntry Declaration public DynamoDBEntry ToEntry(object value) Parameters Type Name Description object value Object to be deserialized Returns Type Description DynamoDBEntry Object deserialized as DynamoDBEntry Implements IPropertyConverter Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Converters.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Converters.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Converters | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Converters Classes AttributeValueConverterManager AttributeValueToObjectConverterManager DateTimeOffsetConverter"
  },
  "api/Innovt.Cloud.AWS.Dynamo.DynamoContext.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.DynamoContext.html",
    "title": "Class DynamoContext | Innovt Platform",
    "keywords": "Class DynamoContext This class is responsible for managing the context of the DynamoDB for Code First strategy. Inheritance object DynamoContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public abstract class DynamoContext Constructors | Edit this page View Source DynamoContext() Declaration protected DynamoContext() Properties | Edit this page View Source IgnoreNullValues It tells the context to ignore null properties when saving an entity. Declaration public bool IgnoreNullValues { get; set; } Property Value Type Description bool | Edit this page View Source ModelBuilder Declaration public ModelBuilder ModelBuilder { get; } Property Value Type Description ModelBuilder Methods | Edit this page View Source GetPropertyConverter(Type) Declaration public IPropertyConverter GetPropertyConverter(Type type) Parameters Type Name Description Type type Returns Type Description IPropertyConverter | Edit this page View Source GetTypeBuilder<T>() Declaration public EntityTypeBuilder<T> GetTypeBuilder<T>() Returns Type Description EntityTypeBuilder<T> Type Parameters Name Description T | Edit this page View Source HasTypeBuilder(Type) Declaration public bool HasTypeBuilder(Type type) Parameters Type Name Description Type type Returns Type Description bool | Edit this page View Source HasTypeBuilder<T>(object) Utility method to add a new entity to the context Declaration public bool HasTypeBuilder<T>(object instance = null) Parameters Type Name Description object instance Returns Type Description bool Type Parameters Name Description T | Edit this page View Source OnModelCreating(ModelBuilder) Declaration protected abstract void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Exceptions.MissingEntityMapException.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Exceptions.MissingEntityMapException.html",
    "title": "Class MissingEntityMapException | Innovt Platform",
    "keywords": "Class MissingEntityMapException Inheritance object Exception BaseException CriticalException MissingEntityMapException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Cloud.AWS.Dynamo.Exceptions Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public class MissingEntityMapException : CriticalException, ISerializable Constructors | Edit this page View Source MissingEntityMapException(string) Declaration public MissingEntityMapException(string typeName) Parameters Type Name Description string typeName | Edit this page View Source MissingEntityMapException(Type) Declaration public MissingEntityMapException(Type type) Parameters Type Name Description Type type Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Exceptions.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Exceptions.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Exceptions Classes MissingEntityMapException"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.BaseDataModel-2.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.BaseDataModel-2.html",
    "title": "Class BaseDataModel<TDataModel, TDomain> | Innovt Platform",
    "keywords": "Class BaseDataModel<TDataModel, TDomain> Base abstract class representing a data model that can be mapped to/from a domain model. Inheritance object BaseDataModel<TDataModel, TDomain> Implements ITableMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo.Mapping Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public abstract class BaseDataModel<TDataModel, TDomain> : ITableMessage where TDataModel : class where TDomain : class Type Parameters Name Description TDataModel The type of the data model. TDomain The type of the domain model. Properties | Edit this page View Source EntityType Gets or sets the entity type. Declaration [DynamoDBProperty] public string EntityType { get; set; } Property Value Type Description string | Edit this page View Source Id Gets or sets the unique identifier. Declaration public string Id { get; set; } Property Value Type Description string | Edit this page View Source Pk Gets or sets the partition key for DynamoDB. Declaration [DynamoDBHashKey(\"PK\")] public string Pk { get; set; } Property Value Type Description string | Edit this page View Source Sk Gets or sets the sort key for DynamoDB. Declaration [DynamoDBRangeKey(\"SK\")] public string Sk { get; set; } Property Value Type Description string Methods | Edit this page View Source CustomDataModelMap(TDataModel, TDomain) Custom mapping logic from domain model to data model. Declaration protected abstract void CustomDataModelMap(TDataModel dataModel, TDomain domain) Parameters Type Name Description TDataModel dataModel The data model. TDomain domain The domain model. | Edit this page View Source CustomDomainMap(TDomain, TDataModel) Custom mapping logic from data model to domain model. Declaration protected abstract void CustomDomainMap(TDomain tDomain, TDataModel dataModel) Parameters Type Name Description TDomain tDomain The domain model. TDataModel dataModel The data model. | Edit this page View Source GetEntityType() Protected abstract method to get the entity type. Declaration protected abstract string GetEntityType() Returns Type Description string The entity type. | Edit this page View Source ToDataModel(IList<TDomain>) Converts a list of domain models to a list of data models. Declaration public IList<TDataModel> ToDataModel(IList<TDomain> domains) Parameters Type Name Description IList<TDomain> domains The list of domain models to convert. Returns Type Description IList<TDataModel> The converted list of data models. | Edit this page View Source ToDataModel(TDomain) Converts a domain model to a data model. Declaration public virtual TDataModel ToDataModel(TDomain domain) Parameters Type Name Description TDomain domain The domain model to convert. Returns Type Description TDataModel The converted data model. | Edit this page View Source ToDomain(IList<TDataModel>) Converts a list of data models to a list of domain models. Declaration public IList<TDomain> ToDomain(IList<TDataModel> dataModels) Parameters Type Name Description IList<TDataModel> dataModels The list of data models to convert. Returns Type Description IList<TDomain> The converted list of domain models. | Edit this page View Source ToDomain(TDataModel) Converts a data model to a domain model. Declaration public virtual TDomain ToDomain(TDataModel dataModel) Parameters Type Name Description TDataModel dataModel The data model to convert. Returns Type Description TDomain The converted domain model. Implements ITableMessage Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.EntityTypeBuilder-1.html",
    "title": "Class EntityTypeBuilder<TEntity> | Innovt Platform",
    "keywords": "Class EntityTypeBuilder<TEntity> A builder for defining the entity type and its properties for use with DynamoDB. Inheritance object EntityTypeBuilder<TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public sealed class EntityTypeBuilder<TEntity> Type Parameters Name Description TEntity The type of the entity being defined. Properties | Edit this page View Source EntityType Gets or sets the entity type for the DynamoDB table. Declaration public string EntityType { get; } Property Value Type Description string | Edit this page View Source HashKeyPrefix Declaration public string HashKeyPrefix { get; } Property Value Type Description string | Edit this page View Source KeySeparator Define the key prefix separator Declaration public string KeySeparator { get; } Property Value Type Description string | Edit this page View Source Pk Gets or sets the partition key for the DynamoDB table. Declaration public string Pk { get; } Property Value Type Description string | Edit this page View Source RangeKeyPrefix Gets or sets the range key prefix for the DynamoDB table. Declaration public string RangeKeyPrefix { get; } Property Value Type Description string | Edit this page View Source Sk Gets or sets the sort key for the DynamoDB table. Declaration public string Sk { get; } Property Value Type Description string | Edit this page View Source TableName Gets or sets the table name associated with the entity type. Declaration public string TableName { get; } Property Value Type Description string Methods | Edit this page View Source AutoMap(bool, bool) Starts a reflection process to auto map all properties of the entity type. Declaration public EntityTypeBuilder<TEntity> AutoMap(bool withDefaultKeys = true, bool ignoreNonNativeTypes = false) Parameters Type Name Description bool withDefaultKeys Default keys are PK and SK bool ignoreNonNativeTypes Ignore all complex types Returns Type Description EntityTypeBuilder<TEntity> | Edit this page View Source GetProperties() Returns all properties defined for the entity type. Declaration public IReadOnlyCollection<PropertyTypeBuilder<TEntity>> GetProperties() Returns Type Description IReadOnlyCollection<PropertyTypeBuilder<TEntity>> | Edit this page View Source GetProperty(string) Gets a property by its column name or Name Declaration public PropertyTypeBuilder<TEntity> GetProperty(string name) Parameters Type Name Description string name Returns Type Description PropertyTypeBuilder<TEntity> | Edit this page View Source Ignore(string) Ignores a property by name during mapping. Declaration public EntityTypeBuilder<TEntity> Ignore(string name) Parameters Type Name Description string name The name of the property to ignore. Returns Type Description EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. | Edit this page View Source Ignore<TProperty>(Expression<Func<TEntity, TProperty>>) Ignores a property during mapping. Declaration public EntityTypeBuilder<TEntity> Ignore<TProperty>(Expression<Func<TEntity, TProperty>> expression) Parameters Type Name Description Expression<Func<TEntity, TProperty>> expression The property to ignore. Returns Type Description EntityTypeBuilder<TEntity> Type Parameters Name Description TProperty | Edit this page View Source Property(string) Defines a property for the entity using a specified property name. Declaration public PropertyTypeBuilder<TEntity> Property(string name) Parameters Type Name Description string name The name of the property. Returns Type Description PropertyTypeBuilder<TEntity> The property type builder for further property configuration. | Edit this page View Source Property<TProperty>(Expression<Func<TEntity, TProperty>>) Defines a property for the entity using a provided property function. Declaration public PropertyTypeBuilder<TEntity> Property<TProperty>(Expression<Func<TEntity, TProperty>> propertyExpression) Parameters Type Name Description Expression<Func<TEntity, TProperty>> propertyExpression The property function to generate the property. Returns Type Description PropertyTypeBuilder<TEntity> The property type builder for further property configuration. Type Parameters Name Description TProperty | Edit this page View Source WithDefaultKeys() Initializes a new instance of the EntityTypeBuilder<TEntity> class. In this case the default PK and SK will be created Declaration public EntityTypeBuilder<TEntity> WithDefaultKeys() Returns Type Description EntityTypeBuilder<TEntity> | Edit this page View Source WithEntityType(string) Sets the entity type for the DynamoDB table using a specified entity type. Declaration public EntityTypeBuilder<TEntity> WithEntityType(string entityTypeName) Parameters Type Name Description string entityTypeName The entity type to set. Returns Type Description EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. | Edit this page View Source WithEntityType<TProperty>(Expression<Func<TEntity, TProperty>>) Sets the entity type for the DynamoDB table using a provided entity type function. Declaration public EntityTypeBuilder<TEntity> WithEntityType<TProperty>(Expression<Func<TEntity, TProperty>> expression) Parameters Type Name Description Expression<Func<TEntity, TProperty>> expression The entity type function to generate the entity type. Returns Type Description EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. Type Parameters Name Description TProperty | Edit this page View Source WithHashKey(string) Sets the partition key for the DynamoDB table using a specified partition key. Declaration public PropertyTypeBuilder<TEntity> WithHashKey(string hashKey = \"PK\") Parameters Type Name Description string hashKey The partition key to set. Returns Type Description PropertyTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. | Edit this page View Source WithHashKeyPrefix(string) Declaration public EntityTypeBuilder<TEntity> WithHashKeyPrefix(string hashKeyPrefix) Parameters Type Name Description string hashKeyPrefix Returns Type Description EntityTypeBuilder<TEntity> | Edit this page View Source WithHashKey<TProperty>(Expression<Func<TEntity, TProperty>>) Sets the partition key for the DynamoDB table using a provided hash key function. Declaration public PropertyTypeBuilder<TEntity> WithHashKey<TProperty>(Expression<Func<TEntity, TProperty>> expression) Parameters Type Name Description Expression<Func<TEntity, TProperty>> expression The hash key function to generate the partition key. Returns Type Description PropertyTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. Type Parameters Name Description TProperty | Edit this page View Source WithRangeKey(string) Sets the range key for the DynamoDB table using a specified sort key. Declaration public PropertyTypeBuilder<TEntity> WithRangeKey(string rangeKey = \"SK\") Parameters Type Name Description string rangeKey The sort key to set. Returns Type Description PropertyTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. | Edit this page View Source WithRangeKeyPrefix(string) Sets the sort/Range key prefix for the DynamoDB table. Declaration public EntityTypeBuilder<TEntity> WithRangeKeyPrefix(string rangeKeyPrefix) Parameters Type Name Description string rangeKeyPrefix Returns Type Description EntityTypeBuilder<TEntity> | Edit this page View Source WithRangeKey<TProperty>(Expression<Func<TEntity, TProperty>>) Sets the sort key for the DynamoDB table using a provided sort key function. Declaration public PropertyTypeBuilder<TEntity> WithRangeKey<TProperty>(Expression<Func<TEntity, TProperty>> expression) Parameters Type Name Description Expression<Func<TEntity, TProperty>> expression The sort key function to generate the sort key. Returns Type Description PropertyTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. Type Parameters Name Description TProperty | Edit this page View Source WithTableName(string, string) Sets the table name associated with the entity type. Declaration public EntityTypeBuilder<TEntity> WithTableName(string tableName, string keySeparator = null) Parameters Type Name Description string tableName The table name to set. string keySeparator If you want to define a key prefix like USER#ID the separator will be # Returns Type Description EntityTypeBuilder<TEntity> The current instance of EntityTypeBuilder<TEntity>. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.PropertyTypeBuilder-1.html",
    "title": "Class PropertyTypeBuilder<T> | Innovt Platform",
    "keywords": "Class PropertyTypeBuilder<T> Represents a builder for defining the properties of an entity type. Inheritance object PropertyTypeBuilder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo.Mapping.Builder Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public class PropertyTypeBuilder<T> Type Parameters Name Description T The type of the entity. Constructors | Edit this page View Source PropertyTypeBuilder(Func<T, string>, EntityTypeBuilder<T>) Initializes a new instance of the PropertyTypeBuilder<T> class with a specified property name. Declaration public PropertyTypeBuilder(Func<T, string> propertyName, EntityTypeBuilder<T> builder) Parameters Type Name Description Func<T, string> propertyName The function to retrieve the property name. EntityTypeBuilder<T> builder This is the main build to help the user with fluent api | Edit this page View Source PropertyTypeBuilder(Func<T, string>, Type, EntityTypeBuilder<T>) Initializes a new instance of the PropertyTypeBuilder<T> class with a specified property name and type. Declaration public PropertyTypeBuilder(Func<T, string> propertyName, Type propertyType, EntityTypeBuilder<T> builder) Parameters Type Name Description Func<T, string> propertyName The function to retrieve the property name. Type propertyType The type of the property. EntityTypeBuilder<T> builder This is the main build to help the user with fluent api Properties | Edit this page View Source Builder Declaration public EntityTypeBuilder<T> Builder { get; set; } Property Value Type Description EntityTypeBuilder<T> | Edit this page View Source ColumnName Gets or sets the column name associated with the property. if the column name is not set, the property name is used. Declaration public string ColumnName { get; } Property Value Type Description string | Edit this page View Source HasMapAction Has map actions is when you need to map some property. Declaration public bool HasMapAction { get; } Property Value Type Description bool | Edit this page View Source MaxLength The max length of the property Declaration public int MaxLength { get; } Property Value Type Description int | Edit this page View Source Name Gets the name of the property. Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source Required Gets a value if the field is required. Declaration public bool Required { get; } Property Value Type Description bool | Edit this page View Source Type Gets the type of the property. Declaration public Type Type { get; } Property Value Type Description Type Methods | Edit this page View Source AsBinary() Specifies that the property is of binary type. Declaration public PropertyTypeBuilder<T> AsBinary() Returns Type Description PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. | Edit this page View Source AsDecimal() Specifies that the property is of decimal type. Declaration public PropertyTypeBuilder<T> AsDecimal() Returns Type Description PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. | Edit this page View Source AsString() Specifies that the property is of string type. Declaration public PropertyTypeBuilder<T> AsString() Returns Type Description PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. | Edit this page View Source GetValue(T) Get the instance value using a fixed value or a delegate. Declaration public object GetValue(T entity) Parameters Type Name Description T entity Returns Type Description object | Edit this page View Source IsRequired(bool) Define when a fi Declaration public PropertyTypeBuilder<T> IsRequired(bool isRequired = true) Parameters Type Name Description bool isRequired Default value if true. Returns Type Description PropertyTypeBuilder<T> | Edit this page View Source SetDynamicValue(Func<T, object>) Define a delegate to set the value of the property based on the entity. Declaration public PropertyTypeBuilder<T> SetDynamicValue(Func<T, object> valueDelegate) Parameters Type Name Description Func<T, object> valueDelegate Returns Type Description PropertyTypeBuilder<T> Exceptions Type Condition ArgumentNullException | Edit this page View Source WithColumnName(string) Specifies a custom column name for the property in the database. Declaration public PropertyTypeBuilder<T> WithColumnName(string name) Parameters Type Name Description string name The custom column name. Returns Type Description PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. | Edit this page View Source WithMap(Action<T>) Define a delegate to parse the property. Declaration public PropertyTypeBuilder<T> WithMap(Action<T> parserDelegate) Parameters Type Name Description Action<T> parserDelegate The action to parse the property. Returns Type Description PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. | Edit this page View Source WithMaxLength(int) Specifies that the property is of decimal type. Declaration public PropertyTypeBuilder<T> WithMaxLength(int maxLength) Parameters Type Name Description int maxLength Returns Type Description PropertyTypeBuilder<T> The current instance of PropertyTypeBuilder<T>. | Edit this page View Source WithValue(object) Declaration public PropertyTypeBuilder<T> WithValue(object value) Parameters Type Name Description object value Returns Type Description PropertyTypeBuilder<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.Builder.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Mapping.Builder | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Mapping.Builder Classes EntityTypeBuilder<TEntity> A builder for defining the entity type and its properties for use with DynamoDB. PropertyTypeBuilder<T> Represents a builder for defining the properties of an entity type."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.IEntityTypeDataModelMapper-1.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.IEntityTypeDataModelMapper-1.html",
    "title": "Interface IEntityTypeDataModelMapper<T> | Innovt Platform",
    "keywords": "Interface IEntityTypeDataModelMapper<T> Interface for configuring the mapping between an entity type and its corresponding data model using an EntityTypeBuilder. Namespace: Innovt.Cloud.AWS.Dynamo.Mapping Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public interface IEntityTypeDataModelMapper<T> where T : class Type Parameters Name Description T The type of the entity. Methods | Edit this page View Source Configure(EntityTypeBuilder<T>) Configures the mapping between the entity type and its corresponding data model using the provided EntityTypeBuilder. Declaration void Configure(EntityTypeBuilder<T> builder) Parameters Type Name Description EntityTypeBuilder<T> builder The EntityTypeBuilder used to configure the mapping. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.ModelBuilder.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.ModelBuilder.html",
    "title": "Class ModelBuilder | Innovt Platform",
    "keywords": "Class ModelBuilder Inheritance object ModelBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo.Mapping Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public class ModelBuilder Properties | Edit this page View Source Converters Declaration public Dictionary<Type, IPropertyConverter> Converters { get; } Property Value Type Description Dictionary<Type, IPropertyConverter> | Edit this page View Source Entities Declaration public Dictionary<string, object> Entities { get; } Property Value Type Description Dictionary<string, object> Methods | Edit this page View Source AddConfiguration<T>(IEntityTypeDataModelMapper<T>) Declaration public ModelBuilder AddConfiguration<T>(IEntityTypeDataModelMapper<T> entityTypeDataModelMapper) where T : class Parameters Type Name Description IEntityTypeDataModelMapper<T> entityTypeDataModelMapper Returns Type Description ModelBuilder Type Parameters Name Description T | Edit this page View Source AddPropertyConverter(Type, IPropertyConverter) Declaration public ModelBuilder AddPropertyConverter(Type type, IPropertyConverter converter) Parameters Type Name Description Type type IPropertyConverter converter Returns Type Description ModelBuilder | Edit this page View Source Entity<TEntity>() Declaration public EntityTypeBuilder<TEntity> Entity<TEntity>() where TEntity : class Returns Type Description EntityTypeBuilder<TEntity> Type Parameters Name Description TEntity | Edit this page View Source GetPropertyConverter(Type) Return the PropertyConverter for the given type. Declaration public IPropertyConverter GetPropertyConverter(Type type) Parameters Type Name Description Type type A type that the system will search for a converter Returns Type Description IPropertyConverter Returns a converter or null. | Edit this page View Source GetTypeBuilder<T>() It returns a EntityTypeBuilder for the given entity. Declaration public EntityTypeBuilder<T> GetTypeBuilder<T>() Returns Type Description EntityTypeBuilder<T> Type Parameters Name Description T Exceptions Type Condition MissingEntityMapException | Edit this page View Source HasTypeBuilder(Type) Declaration public bool HasTypeBuilder(Type type) Parameters Type Name Description Type type Returns Type Description bool | Edit this page View Source HasTypeBuilder<T>(object) Utility method to add a new entity to the context Declaration public bool HasTypeBuilder<T>(object instance = null) Parameters Type Name Description object instance Returns Type Description bool Type Parameters Name Description T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.Mapping.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Mapping.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo.Mapping | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo.Mapping Classes BaseDataModel<TDataModel, TDomain> Base abstract class representing a data model that can be mapped to/from a domain model. ModelBuilder Interfaces IEntityTypeDataModelMapper<T> Interface for configuring the mapping between an entity type and its corresponding data model using an EntityTypeBuilder."
  },
  "api/Innovt.Cloud.AWS.Dynamo.Repository.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.Repository.html",
    "title": "Class Repository | Innovt Platform",
    "keywords": "Class Repository Base repository class for interacting with AWS DynamoDB tables. Inheritance object AwsBaseService Repository Implements ITableRepository IDisposable Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Dynamo Assembly: Innovt.Cloud.AWS.Dynamo.dll Syntax public abstract class Repository : AwsBaseService, ITableRepository, IDisposable Constructors | Edit this page View Source Repository(ILogger, IAwsConfiguration) Initializes a new instance of the Repository class. Declaration protected Repository(ILogger logger, IAwsConfiguration configuration) Parameters Type Name Description ILogger logger The logger. IAwsConfiguration configuration AWS configuration. | Edit this page View Source Repository(ILogger, IAwsConfiguration, DynamoContext) Initializes a new instance of the Repository class using a context map. Declaration protected Repository(ILogger logger, IAwsConfiguration configuration, DynamoContext context) Parameters Type Name Description ILogger logger IAwsConfiguration configuration DynamoContext context Exceptions Type Condition ArgumentNullException | Edit this page View Source Repository(ILogger, IAwsConfiguration, string) Initializes a new instance of the Repository class. Declaration protected Repository(ILogger logger, IAwsConfiguration configuration, string region) Parameters Type Name Description ILogger logger The logger. IAwsConfiguration configuration AWS configuration. string region The AWS region. Methods | Edit this page View Source AddAsync<T>(T, CancellationToken) Asynchronously adds a single item to the repository. Declaration public Task AddAsync<T>(T message, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description T message The item to add. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous add operation. Type Parameters Name Description T The type of item to add. | Edit this page View Source AddRangeAsync<T>(ICollection<T>, CancellationToken) Adds a list of items to the DynamoDB table. Declaration public Task AddRangeAsync<T>(ICollection<T> messages, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description ICollection<T> messages The list of items to add. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task Type Parameters Name Description T The type of items to add. Exceptions Type Condition ArgumentNullException Thrown if the messages parameter is null. | Edit this page View Source BatchGetItem<T>(BatchGetItemRequest, CancellationToken) Gets a batch of items from the DynamoDB table based on the specified batch get item request. Declaration public Task<List<T>> BatchGetItem<T>(BatchGetItemRequest batchGetItemRequest, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description BatchGetItemRequest batchGetItemRequest The batch get item request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<List<T>> The list of items retrieved. Type Parameters Name Description T The type of items to get. Exceptions Type Condition ArgumentNullException Thrown when the batch get item request is null. | Edit this page View Source BatchWriteItem(BatchWriteItemRequest, CancellationToken) Writes a batch of items to the DynamoDB table based on the specified batch write item request. Declaration public Task<BatchWriteItemResponse> BatchWriteItem(BatchWriteItemRequest batchWriteItemRequest, CancellationToken cancellationToken = default) Parameters Type Name Description BatchWriteItemRequest batchWriteItemRequest The batch write item request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<BatchWriteItemResponse> The response indicating the result of the batch write operation. Exceptions Type Condition ArgumentNullException Thrown when the batch write item request is null. | Edit this page View Source CreateDefaultRetryAsyncPolicy() Creates the default asynchronous retry policy for handling exceptions during operations. Declaration protected override AsyncRetryPolicy CreateDefaultRetryAsyncPolicy() Returns Type Description AsyncRetryPolicy The asynchronous retry policy instance. Overrides AwsBaseService.CreateDefaultRetryAsyncPolicy() | Edit this page View Source CreateTransactionWriteItem<T>(T, TransactionWriteOperationType) Create a transaction write item based on the instance. Declaration public TransactionWriteItem CreateTransactionWriteItem<T>(T instance, TransactionWriteOperationType operationType = TransactionWriteOperationType.Put) where T : class, new() Parameters Type Name Description T instance A mapped instance with context. TransactionWriteOperationType operationType The operation that you want to perform. Returns Type Description TransactionWriteItem A incomplete transaction write item with properties mapped. Type Parameters Name Description T A typed mapped entity | Edit this page View Source DeleteAsync<T>(object, string, CancellationToken) Asynchronously deletes an item using its identifier and optional range key. Declaration public Task DeleteAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description object id The identifier of the item. string rangeKey The range key for the item (optional). CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous delete operation. Type Parameters Name Description T The type of item to delete. | Edit this page View Source DeleteAsync<T>(T, CancellationToken) Asynchronously deletes an item using its value. Declaration public Task DeleteAsync<T>(T message, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description T message The item to delete. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous delete operation. Type Parameters Name Description T The type of item to delete. | Edit this page View Source DeleteRangeAsync<T>(ICollection<T>, CancellationToken) Asynchronously a list of item that are from the same type. Declaration public Task DeleteRangeAsync<T>(ICollection<T> messages, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description ICollection<T> messages CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T | Edit this page View Source DisposeServices() Disposes the DynamoDB context and AmazonDynamoDBClient resources. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken) Executes a SQL statement asynchronously and returns the response containing items of type T. Declaration public Task<ExecuteSqlStatementResponse<T>> ExecuteStatementAsync<T>(ExecuteSqlStatementRequest sqlStatementRequest, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description ExecuteSqlStatementRequest sqlStatementRequest The SQL statement request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<ExecuteSqlStatementResponse<T>> The response containing items of type T. Type Parameters Name Description T The type of items to be returned. Exceptions Type Condition ArgumentNullException Thrown when the SQL statement request is null. | Edit this page View Source GetByIdAsync<T>(object, string, CancellationToken) Asynchronously retrieves an item by its identifier. Declaration public Task<T> GetByIdAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description object id The identifier of the item. string rangeKey The range key for the item (optional). CancellationToken cancellationToken The cancellation token. Returns Type Description Task<T> An item of type T if found; otherwise, null. Type Parameters Name Description T The type of item to retrieve. | Edit this page View Source QueryAsync<T>(QueryRequest, CancellationToken) Queries the DynamoDB table using a query request and returns a list of items. Declaration public Task<IList<T>> QueryAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description QueryRequest request The query request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<IList<T>> A list of items based on the query request. Type Parameters Name Description T The type of items to query. | Edit this page View Source QueryAsync<T>(object, CancellationToken) Queries the DynamoDB table and returns a list of items with the specified id. Declaration public Task<IList<T>> QueryAsync<T>(object id, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description object id The id to query. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<IList<T>> A list of items with the specified id. Type Parameters Name Description T The type of items to query. | Edit this page View Source QueryFirstAsync<T>(object, CancellationToken) Asynchronously queries and retrieves the first item of type T by its identifier. Declaration public Task<T> QueryFirstAsync<T>(object id, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description object id The identifier of the item. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<T> An item of type T if found; otherwise, null. Type Parameters Name Description T The type of item to retrieve. | Edit this page View Source QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken) Queries the DynamoDB table and returns the first or default item based on the query request. Declaration public Task<T> QueryFirstOrDefaultAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description QueryRequest request The query request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<T> The first or default item based on the query request. Type Parameters Name Description T The type of item to query. | Edit this page View Source QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken) Queries the DynamoDB table using a query request and splits the results into two types based on a key. Declaration public Task<(IList<TResult1> first, IList<TResult2> second)> QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest request, string splitBy, CancellationToken cancellationToken = default) where T : class, new() where TResult1 : class, new() where TResult2 : class, new() Parameters Type Name Description QueryRequest request The query request. string splitBy The key to split the results. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<(IList<TResult1> first, IList<TResult2> second)> Tuple containing lists of items split based on the specified key. Type Parameters Name Description T The type of items to query. TResult1 The first type to split the results into. TResult2 The second type to split the results into. | Edit this page View Source QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken) Queries the DynamoDB table using a query request and splits the results into three types based on specified keys. Declaration public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class, new() where TResult1 : class, new() where TResult2 : class, new() where TResult3 : class, new() Parameters Type Name Description QueryRequest request The query request. string[] splitBy The keys to split the results. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> Tuple containing lists of items split based on the specified keys. Type Parameters Name Description T The type of items to query. TResult1 The first type to split the results into. TResult2 The second type to split the results into. TResult3 The third type to split the results into. | Edit this page View Source QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken) Queries the DynamoDB table using a query request and splits the results into four types based on specified keys. Declaration public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class, new() where TResult1 : class, new() where TResult2 : class, new() where TResult3 : class, new() where TResult4 : class, new() Parameters Type Name Description QueryRequest request The query request. string[] splitBy The keys to split the results. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> Tuple containing lists of items split based on the specified keys. Type Parameters Name Description T The type of items to query. TResult1 The first type to split the results into. TResult2 The second type to split the results into. TResult3 The third type to split the results into. TResult4 The fourth type to split the results into. | Edit this page View Source QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken) Queries the DynamoDB table using a query request and splits the results into five types based on specified keys. Declaration public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class, new() where TResult1 : class, new() where TResult2 : class, new() where TResult3 : class, new() where TResult4 : class, new() where TResult5 : class, new() Parameters Type Name Description QueryRequest request The query request. string[] splitBy The keys to split the results. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> Tuple containing lists of items split based on the specified keys. Type Parameters Name Description T The type of items to query. TResult1 The first type to split the results into. TResult2 The second type to split the results into. TResult3 The third type to split the results into. TResult4 The fourth type to split the results into. TResult5 The fifth type to split the results into. | Edit this page View Source QueryPaginatedByAsync<T>(QueryRequest, CancellationToken) Queries the DynamoDB table using a query request and returns a paginated collection of items. Declaration public Task<PagedCollection<T>> QueryPaginatedByAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description QueryRequest request The query request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<PagedCollection<T>> A paginated collection of items based on the query request. Type Parameters Name Description T The type of items to query. | Edit this page View Source ScanAsync<T>(ScanRequest, CancellationToken) Scans the DynamoDB table based on the specified scan request. Declaration public Task<IList<T>> ScanAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description ScanRequest request The scan request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<IList<T>> The list of scanned items. Type Parameters Name Description T The type of items to scan. | Edit this page View Source ScanPaginatedByAsync<T>(ScanRequest, CancellationToken) Scans the DynamoDB table based on the specified scan request and returns a paginated collection of items. Declaration public Task<PagedCollection<T>> ScanPaginatedByAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description ScanRequest request The scan request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<PagedCollection<T>> A paginated collection of items based on the scan request. Type Parameters Name Description T The type of items to scan. Exceptions Type Condition ArgumentNullException Thrown when the request is null. | Edit this page View Source TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken) Writes a batch of transactional write items to the DynamoDB table. Declaration public Task TransactWriteItemsAsync(TransactionWriteRequest request, CancellationToken cancellationToken) Parameters Type Name Description TransactionWriteRequest request The transaction write request. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task Task representing the asynchronous operation. Exceptions Type Condition ArgumentNullException Thrown when the request is null. BusinessException Thrown when the number of transactItems is invalid. | Edit this page View Source UpdateAsync(string, Dictionary<string, AttributeValue>, Dictionary<string, AttributeValueUpdate>, CancellationToken) Updates an item in the DynamoDB table based on the provided parameters. Declaration protected Task UpdateAsync(string tableName, Dictionary<string, AttributeValue> key, Dictionary<string, AttributeValueUpdate> attributeUpdates, CancellationToken cancellationToken = default) Parameters Type Name Description string tableName The name of the DynamoDB table. Dictionary<string, AttributeValue> key The key of the item to update. Dictionary<string, AttributeValueUpdate> attributeUpdates The attribute updates for the item. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task Task representing the asynchronous update operation. Exceptions Type Condition ArgumentNullException Thrown when key or attributeUpdates is null. | Edit this page View Source UpdateAsync<T>(T, CancellationToken) This method will perform an update operation on the table. The operation is based on the primary key and type is PUT. Declaration public Task<T> UpdateAsync<T>(T instance, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description T instance The instance that you want to update CancellationToken cancellationToken A cancellation token. Returns Type Description Task<T> Type Parameters Name Description T The instance updated. Exceptions Type Condition ArgumentNullException Implements ITableRepository IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Dynamo.html": {
    "href": "api/Innovt.Cloud.AWS.Dynamo.html",
    "title": "Namespace Innovt.Cloud.AWS.Dynamo | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Dynamo Classes DynamoContext This class is responsible for managing the context of the DynamoDB for Code First strategy. Repository Base repository class for interacting with AWS DynamoDB tables."
  },
  "api/Innovt.Cloud.AWS.Kinesis.DataProducer-1.html": {
    "href": "api/Innovt.Cloud.AWS.Kinesis.DataProducer-1.html",
    "title": "Class DataProducer<T> | Innovt Platform",
    "keywords": "Class DataProducer<T> Represents a data producer for publishing data to an Amazon Kinesis stream. Inheritance object AwsBaseService DataProducer<T> EventHandler Implements IDisposable Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Kinesis Assembly: Innovt.Cloud.AWS.Kinesis.dll Syntax public class DataProducer<T> : AwsBaseService, IDisposable where T : class, IDataStream Type Parameters Name Description T The type of data streams to be published. Constructors | Edit this page View Source DataProducer(string, ILogger, IAwsConfiguration) Initializes a new instance of the DataProducer<T> class with the specified bus name, logger, and AWS configuration. Declaration protected DataProducer(string busName, ILogger logger, IAwsConfiguration configuration) Parameters Type Name Description string busName The name of the Kinesis data stream (bus) to which data will be published. ILogger logger The logger for logging informational and error messages. IAwsConfiguration configuration The AWS configuration used to create AWS service clients. | Edit this page View Source DataProducer(string, ILogger, IAwsConfiguration, string) Initializes a new instance of the DataProducer<T> class with the specified bus name, logger, AWS configuration, and AWS region. Declaration protected DataProducer(string busName, ILogger logger, IAwsConfiguration configuration, string region) Parameters Type Name Description string busName The name of the Kinesis data stream (bus) to which data will be published. ILogger logger The logger for logging informational and error messages. IAwsConfiguration configuration The AWS configuration used to create AWS service clients. string region The AWS region in which the Kinesis data stream is located. Fields | Edit this page View Source ActivityDataProducer Declaration protected static readonly ActivitySource ActivityDataProducer Field Value Type Description ActivitySource Methods | Edit this page View Source DisposeServices() Disposes the Amazon Kinesis client when the service is no longer needed. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source Publish(IEnumerable<T>, CancellationToken) Publishes a collection of data streams to the Kinesis data stream asynchronously. Declaration public Task Publish(IEnumerable<T> events, CancellationToken cancellationToken = default) Parameters Type Name Description IEnumerable<T> events The collection of data streams to be published. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task Task representing the asynchronous publish operation. | Edit this page View Source Publish(T, CancellationToken) Publishes a single data stream to the Kinesis data stream asynchronously. Declaration public Task Publish(T data, CancellationToken cancellationToken = default) Parameters Type Name Description T data The data stream to be published. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task Task representing the asynchronous publish operation. Implements IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Kinesis.EventHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Kinesis.EventHandler.html",
    "title": "Class EventHandler | Innovt Platform",
    "keywords": "Class EventHandler The event handler for processing domain events and publishing them to an AWS Kinesis stream. Inheritance object AwsBaseService DataProducer<DomainEvent> EventHandler Implements IDisposable IEventHandler Inherited Members DataProducer<DomainEvent>.ActivityDataProducer DataProducer<DomainEvent>.Publish(DomainEvent, CancellationToken) DataProducer<DomainEvent>.Publish(IEnumerable<DomainEvent>, CancellationToken) DataProducer<DomainEvent>.DisposeServices() AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Kinesis Assembly: Innovt.Cloud.AWS.Kinesis.dll Syntax public class EventHandler : DataProducer<DomainEvent>, IDisposable, IEventHandler Constructors | Edit this page View Source EventHandler(string, ILogger, IAwsConfiguration) Initializes a new instance of the EventHandler class with the specified parameters. Declaration public EventHandler(string busName, ILogger logger, IAwsConfiguration configuration) Parameters Type Name Description string busName The name of the AWS Kinesis stream to publish events to. ILogger logger The logger instance for logging events. IAwsConfiguration configuration The AWS configuration for accessing AWS services. | Edit this page View Source EventHandler(string, ILogger, IAwsConfiguration, string) Initializes a new instance of the EventHandler class with the specified parameters. Declaration public EventHandler(string busName, ILogger logger, IAwsConfiguration configuration, string region) Parameters Type Name Description string busName The name of the AWS Kinesis stream to publish events to. ILogger logger The logger instance for logging events. IAwsConfiguration configuration The AWS configuration for accessing AWS services. string region The AWS region to use. Implements IDisposable IEventHandler Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Kinesis.html": {
    "href": "api/Innovt.Cloud.AWS.Kinesis.html",
    "title": "Namespace Innovt.Cloud.AWS.Kinesis | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Kinesis Classes DataProducer<T> Represents a data producer for publishing data to an Amazon Kinesis stream. EventHandler The event handler for processing domain events and publishing them to an AWS Kinesis stream."
  },
  "api/Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html",
    "title": "Class BaseEventProcessor | Innovt Platform",
    "keywords": "Class BaseEventProcessor Represents a base class for event processors with common functionality such as logging, IOC container setup, and configuration. Inheritance object BaseEventProcessor EventProcessor<T> EventProcessor<T, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda Assembly: Innovt.Cloud.AWS.Lambda.dll Syntax public abstract class BaseEventProcessor Constructors | Edit this page View Source BaseEventProcessor() Declaration protected BaseEventProcessor() | Edit this page View Source BaseEventProcessor(ILogger) Initializes a new instance of the BaseEventProcessor class. Declaration protected BaseEventProcessor(ILogger logger) Parameters Type Name Description ILogger logger | Edit this page View Source BaseEventProcessor(ILogger, IConfigurationRoot) Allows to use the configuration and logger from outside. In This case, the method SetupConfiguration will not be called. Declaration protected BaseEventProcessor(ILogger logger, IConfigurationRoot configuration) Parameters Type Name Description ILogger logger The logger provider. IConfigurationRoot configuration The configuration to be used. Exceptions Type Condition ArgumentNullException If the logger or configuration is null. | Edit this page View Source BaseEventProcessor(IConfigurationRoot) Allows to use the configuration from outside. In This case, the method SetupConfiguration will not be called. Declaration protected BaseEventProcessor(IConfigurationRoot configuration) Parameters Type Name Description IConfigurationRoot configuration The configuration to be used. Exceptions Type Condition ArgumentNullException If the logger or configuration is null. Fields | Edit this page View Source EventProcessorActivitySource Initializes a new instance of the BaseEventProcessor class with an optional logger. Declaration protected static readonly ActivitySource EventProcessorActivitySource Field Value Type Description ActivitySource Properties | Edit this page View Source Configuration Gets or sets the configuration root for accessing application settings. Declaration protected IConfigurationRoot Configuration { get; set; } Property Value Type Description IConfigurationRoot | Edit this page View Source Context Gets or sets the Lambda context associated with the event processing. Declaration protected ILambdaContext Context { get; set; } Property Value Type Description ILambdaContext | Edit this page View Source Logger Gets or sets the logger for recording processing information. Declaration protected ILogger Logger { get; } Property Value Type Description ILogger Methods | Edit this page View Source EnrichConfiguration(ConfigurationBuilder) Configures additional sources for enriching the application configuration. Declaration protected virtual void EnrichConfiguration(ConfigurationBuilder configurationBuilder) Parameters Type Name Description ConfigurationBuilder configurationBuilder The configuration builder to which additional sources can be added. | Edit this page View Source InitializeLogger(IContainer) Initializes the logger with an optional logger instance or creates a new logger if not provided. Declaration protected void InitializeLogger(IContainer iocContainer = null) Parameters Type Name Description IContainer iocContainer An optional logger instance to use. | Edit this page View Source SetupConfiguration() Sets up the application configuration using environment variables and JSON files. When the configuration is already set, this method does nothing. Declaration protected virtual void SetupConfiguration() | Edit this page View Source SetupIoc() Sets up the Inversion of Control (IOC) container for managing dependencies. Declaration protected void SetupIoc() | Edit this page View Source SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. Declaration protected abstract IContainer SetupIocContainer() Returns Type Description IContainer The configured IOC container. | Edit this page View Source StartBaseActivity(string) Starts a new activity for tracing and adds relevant tags and baggage information. Declaration protected Activity StartBaseActivity(string activityName) Parameters Type Name Description string activityName The name of the activity to start. Returns Type Description Activity The started Activity. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.BatchFailureResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.BatchFailureResponse.html",
    "title": "Class BatchFailureResponse | Innovt Platform",
    "keywords": "Class BatchFailureResponse Represents a response containing information about batch item failures. Inheritance object BatchFailureResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda Assembly: Innovt.Cloud.AWS.Lambda.dll Syntax public class BatchFailureResponse Properties | Edit this page View Source BatchItemFailures Gets the list of batch item failures identified by their item identifiers. Declaration [JsonPropertyName(\"batchItemFailures\")] public IList<ItemFailureIdentifier> BatchItemFailures { get; } Property Value Type Description IList<ItemFailureIdentifier> Methods | Edit this page View Source AddItem(string) Adds a batch item failure to the response using its item identifier. Declaration public void AddItem(string itemIdentifier) Parameters Type Name Description string itemIdentifier The identifier of the failed item to add to the response. | Edit this page View Source AddItems(IEnumerable<string>) Adds multiple batch item failures to the response using their item identifiers. Declaration public void AddItems(IEnumerable<string> itemsIdentifier) Parameters Type Name Description IEnumerable<string> itemsIdentifier A collection of item identifiers for the failed items to add to the response. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.ChallengeResultItem.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.ChallengeResultItem.html",
    "title": "Class ChallengeResultItem | Innovt Platform",
    "keywords": "Class ChallengeResultItem Represents an item containing information about a challenge result. Inheritance object ChallengeResultItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax [DataContract] public class ChallengeResultItem Properties | Edit this page View Source ChallengeMetadata Gets or sets metadata associated with the challenge. Declaration [DataMember(Name = \"challengeMetadata\")] [JsonPropertyName(\"challengeMetadata\")] public string ChallengeMetadata { get; set; } Property Value Type Description string | Edit this page View Source ChallengeName Gets or sets the name of the challenge. Declaration [DataMember(Name = \"challengeName\")] [JsonPropertyName(\"challengeName\")] public string ChallengeName { get; set; } Property Value Type Description string | Edit this page View Source ChallengeResult Gets or sets a value indicating whether the challenge was successful. Declaration [DataMember(Name = \"challengeResult\")] [JsonPropertyName(\"challengeResult\")] public bool ChallengeResult { get; set; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.ClaimOverrideDetails.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.ClaimOverrideDetails.html",
    "title": "Class ClaimOverrideDetails | Innovt Platform",
    "keywords": "Class ClaimOverrideDetails Represents details for overriding claims in a token. Inheritance object ClaimOverrideDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax [DataContract] public class ClaimOverrideDetails Properties | Edit this page View Source ClaimsToAddOrOverride Gets or sets the claims to add or override in the token. Declaration [DataMember(Name = \"claimsToAddOrOverride\")] [JsonPropertyName(\"claimsToAddOrOverride\")] public Dictionary<string, string> ClaimsToAddOrOverride { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source ClaimsToSuppress Gets or sets the claims to suppress in the token. Declaration [DataMember(Name = \"claimsToSuppress\")] [JsonPropertyName(\"claimsToSuppress\")] public List<string> ClaimsToSuppress { get; set; } Property Value Type Description List<string> | Edit this page View Source GroupOverrideDetails Gets or sets group override details associated with the token. Declaration [DataMember(Name = \"groupOverrideDetails\")] [JsonPropertyName(\"groupOverrideDetails\")] public GroupConfiguration GroupOverrideDetails { get; set; } Property Value Type Description GroupConfiguration Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeEvent.html",
    "title": "Class CreateAuthChallengeEvent | Innovt Platform",
    "keywords": "Class CreateAuthChallengeEvent Class to represents an event for creating authentication challenges. Inheritance object TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse> CreateAuthChallengeEvent Inherited Members TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.Version TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.Region TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.UserPoolId TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.UserName TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.CallerContext TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.TriggerSource TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.Request TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class CreateAuthChallengeEvent : TriggerEvent<CreateAuthChallengeRequest, CreateAuthChallengeResponse> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeRequest.html",
    "title": "Class CreateAuthChallengeRequest | Innovt Platform",
    "keywords": "Class CreateAuthChallengeRequest Class to represents a request for creating authentication challenges. Inheritance object TriggerRequest CreateAuthChallengeRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class CreateAuthChallengeRequest : TriggerRequest Properties | Edit this page View Source ChallengeName Gets or sets the name of the authentication challenge. Declaration [DataMember(Name = \"challengeName\")] [JsonPropertyName(\"challengeName\")] public string ChallengeName { get; set; } Property Value Type Description string | Edit this page View Source ClientMetadata Gets or sets the client-specific metadata associated with the request. Declaration [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source Session Gets or sets a list of challenge result items associated with the user's session. Declaration [DataMember(Name = \"session\")] [JsonPropertyName(\"session\")] public List<ChallengeResultItem> Session { get; set; } Property Value Type Description List<ChallengeResultItem> | Edit this page View Source UserNotFound Gets or sets a value indicating whether the user was not found. Declaration [DataMember(Name = \"userNotFound\")] [JsonPropertyName(\"userNotFound\")] public bool UserNotFound { get; set; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeResponse.html",
    "title": "Class CreateAuthChallengeResponse | Innovt Platform",
    "keywords": "Class CreateAuthChallengeResponse Class to represents a response for creating authentication challenges. Inheritance object TriggerResponse CreateAuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class CreateAuthChallengeResponse : TriggerResponse Properties | Edit this page View Source ChallengeMetadata Gets or sets metadata associated with the authentication challenge. Declaration [DataMember(Name = \"challengeMetadata\")] [JsonPropertyName(\"challengeMetadata\")] public string ChallengeMetadata { get; set; } Property Value Type Description string | Edit this page View Source PrivateChallengeParameters Gets or sets the private challenge parameters associated with the response. Declaration [DataMember(Name = \"privateChallengeParameters\")] [JsonPropertyName(\"privateChallengeParameters\")] public Dictionary<string, string> PrivateChallengeParameters { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source PublicChallengeParameters Gets or sets the public challenge parameters associated with the response. Declaration [DataMember(Name = \"publicChallengeParameters\")] [JsonPropertyName(\"publicChallengeParameters\")] public Dictionary<string, string> PublicChallengeParameters { get; set; } Property Value Type Description Dictionary<string, string> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge Classes CreateAuthChallengeEvent Class to represents an event for creating authentication challenges. CreateAuthChallengeRequest Class to represents a request for creating authentication challenges. CreateAuthChallengeResponse Class to represents a response for creating authentication challenges."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeEvent.html",
    "title": "Class DefineAuthChallengeEvent | Innovt Platform",
    "keywords": "Class DefineAuthChallengeEvent Represents an event for defining authentication challenges. Inheritance object TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse> DefineAuthChallengeEvent Inherited Members TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.Version TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.Region TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.UserPoolId TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.UserName TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.CallerContext TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.TriggerSource TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.Request TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class DefineAuthChallengeEvent : TriggerEvent<DefineAuthChallengeRequest, DefineAuthChallengeResponse> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeRequest.html",
    "title": "Class DefineAuthChallengeRequest | Innovt Platform",
    "keywords": "Class DefineAuthChallengeRequest Represents a request for defining authentication challenges. Inheritance object TriggerRequest DefineAuthChallengeRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class DefineAuthChallengeRequest : TriggerRequest Properties | Edit this page View Source ClientMetadata Gets or sets the client-specific metadata associated with the request. Declaration [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source Session Gets or sets a list of challenge result items associated with the user's session. Declaration [DataMember(Name = \"session\")] [JsonPropertyName(\"session\")] public List<ChallengeResultItem> Session { get; set; } Property Value Type Description List<ChallengeResultItem> | Edit this page View Source UserNotFound Gets or sets a value indicating whether the user was not found. Declaration [DataMember(Name = \"userNotFound\")] [JsonPropertyName(\"userNotFound\")] public bool UserNotFound { get; set; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeResponse.html",
    "title": "Class DefineAuthChallengeResponse | Innovt Platform",
    "keywords": "Class DefineAuthChallengeResponse Represents a response for defining authentication challenges. Inheritance object TriggerResponse DefineAuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax [DataContract] public class DefineAuthChallengeResponse : TriggerResponse Properties | Edit this page View Source ChallengeName Gets or sets the name of the authentication challenge. Declaration [DataMember(Name = \"challengeName\")] [JsonPropertyName(\"challengeName\")] public string ChallengeName { get; set; } Property Value Type Description string | Edit this page View Source FailAuthentication Gets or sets a value indicating whether authentication should fail. Declaration [DataMember(Name = \"failAuthentication\")] [JsonPropertyName(\"failAuthentication\")] public bool? FailAuthentication { get; set; } Property Value Type Description bool? | Edit this page View Source IssueTokens Gets or sets a value indicating whether to issue tokens. Declaration [DataMember(Name = \"issueTokens\")] [JsonPropertyName(\"issueTokens\")] public bool? IssueTokens { get; set; } Property Value Type Description bool? Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge Classes DefineAuthChallengeEvent Represents an event for defining authentication challenges. DefineAuthChallengeRequest Represents a request for defining authentication challenges. DefineAuthChallengeResponse Represents a response for defining authentication challenges."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.GroupConfiguration.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.GroupConfiguration.html",
    "title": "Class GroupConfiguration | Innovt Platform",
    "keywords": "Class GroupConfiguration Represents configuration for overriding groups and IAM roles. Inheritance object GroupConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax [DataContract] public class GroupConfiguration Properties | Edit this page View Source GroupsToOverride Gets or sets the list of groups to override. Declaration [DataMember(Name = \"groupsToOverride\")] [JsonPropertyName(\"groupsToOverride\")] public List<string> GroupsToOverride { get; set; } Property Value Type Description List<string> | Edit this page View Source IamRolesToOverride Gets or sets the list of IAM roles to override. Declaration [DataMember(Name = \"iamRolesToOverride\")] [JsonPropertyName(\"iamRolesToOverride\")] public List<string> IamRolesToOverride { get; set; } Property Value Type Description List<string> | Edit this page View Source PreferredRole Gets or sets the preferred role. Declaration [DataMember(Name = \"preferredRole\")] [JsonPropertyName(\"preferredRole\")] public string PreferredRole { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationEvent.html",
    "title": "Class PostConfirmationEvent | Innovt Platform",
    "keywords": "Class PostConfirmationEvent Represents an event for post-confirmation actions. Inheritance object TriggerEvent<PostConfirmationRequest, PostConfirmationResponse> PostConfirmationEvent Inherited Members TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.Version TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.Region TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.UserPoolId TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.UserName TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.CallerContext TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.TriggerSource TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.Request TriggerEvent<PostConfirmationRequest, PostConfirmationResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PostConfirmationEvent : TriggerEvent<PostConfirmationRequest, PostConfirmationResponse> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationRequest.html",
    "title": "Class PostConfirmationRequest | Innovt Platform",
    "keywords": "Class PostConfirmationRequest Represents a request for post-confirmation actions. Inheritance object TriggerRequest PostConfirmationRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PostConfirmationRequest : TriggerRequest Properties | Edit this page View Source ClientMetadata Gets or sets the client-specific metadata associated with the request. Declaration [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Type Description Dictionary<string, string> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationResponse.html",
    "title": "Class PostConfirmationResponse | Innovt Platform",
    "keywords": "Class PostConfirmationResponse Represents a response for post-confirmation actions. Inheritance object TriggerResponse PostConfirmationResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PostConfirmationResponse : TriggerResponse Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation Classes PostConfirmationEvent Represents an event for post-confirmation actions. PostConfirmationRequest Represents a request for post-confirmation actions. PostConfirmationResponse Represents a response for post-confirmation actions."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupEvent.html",
    "title": "Class PreSignupEvent | Innovt Platform",
    "keywords": "Class PreSignupEvent Represents an event for post-confirmation actions. Inheritance object TriggerEvent<PreSignupRequest, PreSignupResponse> PreSignupEvent Inherited Members TriggerEvent<PreSignupRequest, PreSignupResponse>.Version TriggerEvent<PreSignupRequest, PreSignupResponse>.Region TriggerEvent<PreSignupRequest, PreSignupResponse>.UserPoolId TriggerEvent<PreSignupRequest, PreSignupResponse>.UserName TriggerEvent<PreSignupRequest, PreSignupResponse>.CallerContext TriggerEvent<PreSignupRequest, PreSignupResponse>.TriggerSource TriggerEvent<PreSignupRequest, PreSignupResponse>.Request TriggerEvent<PreSignupRequest, PreSignupResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PreSignupEvent : TriggerEvent<PreSignupRequest, PreSignupResponse> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupRequest.html",
    "title": "Class PreSignupRequest | Innovt Platform",
    "keywords": "Class PreSignupRequest Represents a request for post-confirmation actions. Inheritance object TriggerRequest PreSignupRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PreSignupRequest : TriggerRequest Properties | Edit this page View Source ClientMetadata Gets or sets the client-specific metadata associated with the request. Declaration [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source ValidationData One or more name-value pairs containing the validation data in the request to register a user. The validation data is set and then passed from the client in the request to register a user. You can pass this data to your Lambda function by using the ClientMetadata parameter in the InitiateAuth and AdminInitiateAuth API actions. Declaration [DataMember(Name = \"validationData\")] [JsonPropertyName(\"validationData\")] public Dictionary<string, string> ValidationData { get; set; } Property Value Type Description Dictionary<string, string> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupResponse.html",
    "title": "Class PreSignupResponse | Innovt Platform",
    "keywords": "Class PreSignupResponse Represents a response for post-confirmation actions. Inheritance object TriggerResponse PreSignupResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PreSignupResponse : TriggerResponse Properties | Edit this page View Source AutoConfirmUser Set to true to auto-confirm the user, or false otherwise. Declaration [DataMember(Name = \"autoConfirmUser\")] [JsonPropertyName(\"autoConfirmUser\")] public bool AutoConfirmUser { get; set; } Property Value Type Description bool | Edit this page View Source AutoVerifyEmail Set to true to set as verified the phone number of a user who is signing up, or false otherwise. If autoVerifyPhone is set to true, the phone_number attribute must have a valid, non-null value. Otherwise an error will occur and the user will not be able to complete sign-up. Declaration [DataMember(Name = \"autoVerifyEmail\")] [JsonPropertyName(\"autoVerifyEmail\")] public bool AutoVerifyEmail { get; set; } Property Value Type Description bool | Edit this page View Source AutoVerifyPhone Set to true to set as verified the email of a user who is signing up, or false otherwise. If autoVerifyEmail is set to true, the email attribute must have a valid, non-null value. Otherwise an error will occur and the user will not be able to complete sign-up. Declaration [DataMember(Name = \"autoVerifyPhone\")] [JsonPropertyName(\"autoVerifyPhone\")] public bool AutoVerifyPhone { get; set; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup Classes PreSignupEvent Represents an event for post-confirmation actions. PreSignupRequest Represents a request for post-confirmation actions. PreSignupResponse Represents a response for post-confirmation actions."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationEvent.html",
    "title": "Class PreTokenGenerationEvent | Innovt Platform",
    "keywords": "Class PreTokenGenerationEvent Represents an event for pre-token generation actions. Inheritance object TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse> PreTokenGenerationEvent Inherited Members TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.Version TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.Region TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.UserPoolId TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.UserName TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.CallerContext TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.TriggerSource TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.Request TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PreTokenGenerationEvent : TriggerEvent<PreTokenGenerationRequest, PreTokenGenerationResponse> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationRequest.html",
    "title": "Class PreTokenGenerationRequest | Innovt Platform",
    "keywords": "Class PreTokenGenerationRequest Represents a request for pre-token generation actions. Inheritance object TriggerRequest PreTokenGenerationRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PreTokenGenerationRequest : TriggerRequest Properties | Edit this page View Source ClientMetadata Gets or sets the client-specific metadata associated with the request. Declaration [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source GroupConfiguration Gets or sets the group configuration associated with the request. Declaration [DataMember(Name = \"groupConfiguration\")] [JsonPropertyName(\"groupConfiguration\")] public GroupConfiguration GroupConfiguration { get; set; } Property Value Type Description GroupConfiguration Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationResponse.html",
    "title": "Class PreTokenGenerationResponse | Innovt Platform",
    "keywords": "Class PreTokenGenerationResponse Represents a response for pre-token generation actions. Inheritance object TriggerResponse PreTokenGenerationResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class PreTokenGenerationResponse : TriggerResponse Properties | Edit this page View Source ClaimsOverrideDetails Gets or sets the claim override details associated with the response. Declaration [DataMember(Name = \"claimsOverrideDetails\")] [JsonPropertyName(\"claimsOverrideDetails\")] public ClaimOverrideDetails ClaimsOverrideDetails { get; set; } Property Value Type Description ClaimOverrideDetails Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration Classes PreTokenGenerationEvent Represents an event for pre-token generation actions. PreTokenGenerationRequest Represents a request for pre-token generation actions. PreTokenGenerationResponse Represents a response for pre-token generation actions."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext.html",
    "title": "Class TriggerCallerContext | Innovt Platform",
    "keywords": "Class TriggerCallerContext Represents context information about the trigger caller. Inheritance object TriggerCallerContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class TriggerCallerContext Properties | Edit this page View Source AwsSdkVersion Gets or sets the AWS SDK version used by the caller. Declaration [DataMember(Name = \"awsSdkVersion\")] [JsonPropertyName(\"awsSdkVersion\")] public string AwsSdkVersion { get; set; } Property Value Type Description string | Edit this page View Source ClientId Gets or sets the client ID associated with the caller. Declaration [DataMember(Name = \"clientId\")] [JsonPropertyName(\"clientId\")] public string ClientId { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html",
    "title": "Class TriggerEvent<TRequest, TResponse> | Innovt Platform",
    "keywords": "Class TriggerEvent<TRequest, TResponse> Represents a base class for trigger events with request and response types. Inheritance object TriggerEvent<TRequest, TResponse> CreateAuthChallengeEvent DefineAuthChallengeEvent PostConfirmationEvent PreSignupEvent PreTokenGenerationEvent VerifyAuthChallengeEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax [DataContract] public abstract class TriggerEvent<TRequest, TResponse> where TRequest : TriggerRequest, new() where TResponse : TriggerResponse, new() Type Parameters Name Description TRequest The type of the trigger request. TResponse The type of the trigger response. Properties | Edit this page View Source CallerContext Gets or sets the caller context associated with the event. Declaration [DataMember(Name = \"callerContext\")] [JsonPropertyName(\"callerContext\")] public TriggerCallerContext CallerContext { get; set; } Property Value Type Description TriggerCallerContext | Edit this page View Source Region Gets or sets the region associated with the event. Declaration [DataMember(Name = \"region\")] [JsonPropertyName(\"region\")] public string Region { get; set; } Property Value Type Description string | Edit this page View Source Request Gets or sets the request associated with the event. Declaration [DataMember(Name = \"request\")] [JsonPropertyName(\"request\")] public TRequest Request { get; set; } Property Value Type Description TRequest | Edit this page View Source Response Gets or sets the response associated with the event. Declaration [DataMember(Name = \"response\")] [JsonPropertyName(\"response\")] public TResponse Response { get; set; } Property Value Type Description TResponse | Edit this page View Source TriggerSource Gets or sets the trigger source associated with the event. Declaration [DataMember(Name = \"triggerSource\")] [JsonPropertyName(\"triggerSource\")] public string TriggerSource { get; set; } Property Value Type Description string | Edit this page View Source UserName Gets or sets the user name associated with the event. Declaration [DataMember(Name = \"userName\")] [JsonPropertyName(\"userName\")] public string UserName { get; set; } Property Value Type Description string | Edit this page View Source UserPoolId Gets or sets the user pool ID associated with the event. Declaration [DataMember(Name = \"userPoolId\")] [JsonPropertyName(\"userPoolId\")] public string UserPoolId { get; set; } Property Value Type Description string | Edit this page View Source Version Gets or sets the version associated with the event. Declaration [DataMember(Name = \"version\")] [JsonPropertyName(\"version\")] public string Version { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerRequest.html",
    "title": "Class TriggerRequest | Innovt Platform",
    "keywords": "Class TriggerRequest Represents a base class for trigger request objects. Inheritance object TriggerRequest CreateAuthChallengeRequest DefineAuthChallengeRequest PostConfirmationRequest PreSignupRequest PreTokenGenerationRequest VerifyAuthChallengeRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax [DataContract] public abstract class TriggerRequest Properties | Edit this page View Source UserAttributes Gets or sets user attributes associated with the request. Declaration [DataMember(Name = \"userAttributes\")] [JsonPropertyName(\"userAttributes\")] public Dictionary<string, string> UserAttributes { get; set; } Property Value Type Description Dictionary<string, string> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerResponse.html",
    "title": "Class TriggerResponse | Innovt Platform",
    "keywords": "Class TriggerResponse Represents a base class for trigger response objects. Inheritance object TriggerResponse CreateAuthChallengeResponse DefineAuthChallengeResponse PostConfirmationResponse PreSignupResponse PreTokenGenerationResponse VerifyAuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax [DataContract] public abstract class TriggerResponse Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeEvent.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeEvent.html",
    "title": "Class VerifyAuthChallengeEvent | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeEvent Represents an event for verifying authentication challenges. Inheritance object TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse> VerifyAuthChallengeEvent Inherited Members TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.Version TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.Region TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.UserPoolId TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.UserName TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.CallerContext TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.TriggerSource TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.Request TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse>.Response object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class VerifyAuthChallengeEvent : TriggerEvent<VerifyAuthChallengeRequest, VerifyAuthChallengeResponse> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeRequest.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeRequest.html",
    "title": "Class VerifyAuthChallengeRequest | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeRequest Represents a request for verifying authentication challenges. Inheritance object TriggerRequest VerifyAuthChallengeRequest Inherited Members TriggerRequest.UserAttributes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class VerifyAuthChallengeRequest : TriggerRequest Properties | Edit this page View Source ChallengeAnswer Gets or sets the challenge answer provided by the user. Declaration [DataMember(Name = \"challengeAnswer\")] [JsonPropertyName(\"challengeAnswer\")] public string ChallengeAnswer { get; set; } Property Value Type Description string | Edit this page View Source ClientMetadata Gets or sets client-specific metadata associated with the request. Declaration [DataMember(Name = \"clientMetadata\")] [JsonPropertyName(\"clientMetadata\")] public Dictionary<string, string> ClientMetadata { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source PrivateChallengeParameters Gets or sets private challenge parameters associated with the request. Declaration [DataMember(Name = \"privateChallengeParameters\")] [JsonPropertyName(\"privateChallengeParameters\")] public Dictionary<string, string> PrivateChallengeParameters { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source UserNotFound Gets or sets a value indicating whether the user was not found. Declaration [DataMember(Name = \"userNotFound\")] [JsonPropertyName(\"userNotFound\")] public bool UserNotFound { get; set; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeResponse.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeResponse.html",
    "title": "Class VerifyAuthChallengeResponse | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeResponse Represents a response for verifying authentication challenges. Inheritance object TriggerResponse VerifyAuthChallengeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge Assembly: Innovt.Cloud.AWS.Lambda.Cognito.Events.dll Syntax public class VerifyAuthChallengeResponse : TriggerResponse Properties | Edit this page View Source AnswerCorrect Gets or sets a value indicating whether the challenge answer is correct. Declaration [DataMember(Name = \"answerCorrect\")] [JsonPropertyName(\"answerCorrect\")] public bool? AnswerCorrect { get; set; } Property Value Type Description bool? Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge Classes VerifyAuthChallengeEvent Represents an event for verifying authentication challenges. VerifyAuthChallengeRequest Represents a request for verifying authentication challenges. VerifyAuthChallengeResponse Represents a response for verifying authentication challenges."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Events.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Events Classes ChallengeResultItem Represents an item containing information about a challenge result. ClaimOverrideDetails Represents details for overriding claims in a token. GroupConfiguration Represents configuration for overriding groups and IAM roles. TriggerCallerContext Represents context information about the trigger caller. TriggerEvent<TRequest, TResponse> Represents a base class for trigger events with request and response types. TriggerRequest Represents a base class for trigger request objects. TriggerResponse Represents a base class for trigger response objects."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.CreateAuthChallengeHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.CreateAuthChallengeHandler.html",
    "title": "Class CreateAuthChallengeHandler | Innovt Platform",
    "keywords": "Class CreateAuthChallengeHandler An abstract base class for handling authentication challenge creation events. Inheritance object BaseEventProcessor EventProcessor<CreateAuthChallengeEvent, CreateAuthChallengeEvent> CreateAuthChallengeHandler Inherited Members EventProcessor<CreateAuthChallengeEvent, CreateAuthChallengeEvent>.Process(CreateAuthChallengeEvent, ILambdaContext) EventProcessor<CreateAuthChallengeEvent, CreateAuthChallengeEvent>.Handle(CreateAuthChallengeEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax public abstract class CreateAuthChallengeHandler : EventProcessor<CreateAuthChallengeEvent, CreateAuthChallengeEvent> Constructors | Edit this page View Source CreateAuthChallengeHandler() Initializes a new instance of the CreateAuthChallengeHandler class. Declaration protected CreateAuthChallengeHandler() | Edit this page View Source CreateAuthChallengeHandler(ILogger) Initializes a new instance of the CreateAuthChallengeHandler class with a logger. Declaration protected CreateAuthChallengeHandler(ILogger logger) Parameters Type Name Description ILogger logger An ILogger instance for logging. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.DefineAuthChallengeHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.DefineAuthChallengeHandler.html",
    "title": "Class DefineAuthChallengeHandler | Innovt Platform",
    "keywords": "Class DefineAuthChallengeHandler An abstract base class for handling the definition of authentication challenges. Inheritance object BaseEventProcessor EventProcessor<DefineAuthChallengeEvent, DefineAuthChallengeEvent> DefineAuthChallengeHandler Inherited Members EventProcessor<DefineAuthChallengeEvent, DefineAuthChallengeEvent>.Process(DefineAuthChallengeEvent, ILambdaContext) EventProcessor<DefineAuthChallengeEvent, DefineAuthChallengeEvent>.Handle(DefineAuthChallengeEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax public abstract class DefineAuthChallengeHandler : EventProcessor<DefineAuthChallengeEvent, DefineAuthChallengeEvent> Constructors | Edit this page View Source DefineAuthChallengeHandler() Initializes a new instance of the DefineAuthChallengeHandler class. Declaration protected DefineAuthChallengeHandler() | Edit this page View Source DefineAuthChallengeHandler(ILogger) Initializes a new instance of the DefineAuthChallengeHandler class with a logger. Declaration protected DefineAuthChallengeHandler(ILogger logger) Parameters Type Name Description ILogger logger An ILogger instance for logging. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PostConfirmationHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PostConfirmationHandler.html",
    "title": "Class PostConfirmationHandler | Innovt Platform",
    "keywords": "Class PostConfirmationHandler An abstract base class for handling post-confirmation events. Inheritance object BaseEventProcessor EventProcessor<PostConfirmationEvent, PostConfirmationEvent> PostConfirmationHandler Inherited Members EventProcessor<PostConfirmationEvent, PostConfirmationEvent>.Process(PostConfirmationEvent, ILambdaContext) EventProcessor<PostConfirmationEvent, PostConfirmationEvent>.Handle(PostConfirmationEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax public abstract class PostConfirmationHandler : EventProcessor<PostConfirmationEvent, PostConfirmationEvent> Constructors | Edit this page View Source PostConfirmationHandler() Initializes a new instance of the PostConfirmationHandler class. Declaration protected PostConfirmationHandler() | Edit this page View Source PostConfirmationHandler(ILogger) Initializes a new instance of the PostConfirmationHandler class with a logger. Declaration protected PostConfirmationHandler(ILogger logger) Parameters Type Name Description ILogger logger An ILogger instance for logging. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PreSignupHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PreSignupHandler.html",
    "title": "Class PreSignupHandler | Innovt Platform",
    "keywords": "Class PreSignupHandler An abstract base class for handling pre-signup generation events. Inheritance object BaseEventProcessor EventProcessor<PreSignupEvent, PreSignupEvent> PreSignupHandler Inherited Members EventProcessor<PreSignupEvent, PreSignupEvent>.Process(PreSignupEvent, ILambdaContext) EventProcessor<PreSignupEvent, PreSignupEvent>.Handle(PreSignupEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax public abstract class PreSignupHandler : EventProcessor<PreSignupEvent, PreSignupEvent> Constructors | Edit this page View Source PreSignupHandler() Initializes a new instance of the PreSignupHandler class. Declaration protected PreSignupHandler() | Edit this page View Source PreSignupHandler(ILogger) Initializes a new instance of the PreSignupHandler class with a logger. Declaration protected PreSignupHandler(ILogger logger) Parameters Type Name Description ILogger logger An ILogger instance for logging. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PreTokenGenerationHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.PreTokenGenerationHandler.html",
    "title": "Class PreTokenGenerationHandler | Innovt Platform",
    "keywords": "Class PreTokenGenerationHandler An abstract base class for handling pre-token generation events. Inheritance object BaseEventProcessor EventProcessor<PreTokenGenerationEvent, PreTokenGenerationEvent> PreTokenGenerationHandler Inherited Members EventProcessor<PreTokenGenerationEvent, PreTokenGenerationEvent>.Process(PreTokenGenerationEvent, ILambdaContext) EventProcessor<PreTokenGenerationEvent, PreTokenGenerationEvent>.Handle(PreTokenGenerationEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax public abstract class PreTokenGenerationHandler : EventProcessor<PreTokenGenerationEvent, PreTokenGenerationEvent> Constructors | Edit this page View Source PreTokenGenerationHandler() Initializes a new instance of the PreTokenGenerationHandler class. Declaration protected PreTokenGenerationHandler() | Edit this page View Source PreTokenGenerationHandler(ILogger) Initializes a new instance of the PreTokenGenerationHandler class with a logger. Declaration protected PreTokenGenerationHandler(ILogger logger) Parameters Type Name Description ILogger logger An ILogger instance for logging. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.VerifyAuthChallengeHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.VerifyAuthChallengeHandler.html",
    "title": "Class VerifyAuthChallengeHandler | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeHandler An abstract base class for handling verification of authentication challenges. Inheritance object BaseEventProcessor EventProcessor<VerifyAuthChallengeEvent, VerifyAuthChallengeEvent> VerifyAuthChallengeHandler Inherited Members EventProcessor<VerifyAuthChallengeEvent, VerifyAuthChallengeEvent>.Process(VerifyAuthChallengeEvent, ILambdaContext) EventProcessor<VerifyAuthChallengeEvent, VerifyAuthChallengeEvent>.Handle(VerifyAuthChallengeEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Handlers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax public abstract class VerifyAuthChallengeHandler : EventProcessor<VerifyAuthChallengeEvent, VerifyAuthChallengeEvent> Constructors | Edit this page View Source VerifyAuthChallengeHandler() Initializes a new instance of the VerifyAuthChallengeHandler class. Declaration protected VerifyAuthChallengeHandler() | Edit this page View Source VerifyAuthChallengeHandler(ILogger) Initializes a new instance of the VerifyAuthChallengeHandler class with a logger. Declaration protected VerifyAuthChallengeHandler(ILogger logger) Parameters Type Name Description ILogger logger An ILogger instance for logging. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Handlers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Handlers Classes CreateAuthChallengeHandler An abstract base class for handling authentication challenge creation events. DefineAuthChallengeHandler An abstract base class for handling the definition of authentication challenges. PostConfirmationHandler An abstract base class for handling post-confirmation events. PreSignupHandler An abstract base class for handling pre-signup generation events. PreTokenGenerationHandler An abstract base class for handling pre-token generation events. VerifyAuthChallengeHandler An abstract base class for handling verification of authentication challenges."
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.CreateAuthChallengeJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.CreateAuthChallengeJsonSerializerContext.html",
    "title": "Class CreateAuthChallengeJsonSerializerContext | Innovt Platform",
    "keywords": "Class CreateAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of CreateAuthChallenge-related objects. Inheritance object JsonSerializerContext CreateAuthChallengeJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax [JsonSerializable(typeof(CreateAuthChallengeEvent))] [JsonSerializable(typeof(CreateAuthChallengeRequest))] [JsonSerializable(typeof(CreateAuthChallengeResponse))] public class CreateAuthChallengeJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors CreateAuthChallengeJsonSerializerContext() Declaration public CreateAuthChallengeJsonSerializerContext() CreateAuthChallengeJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public CreateAuthChallengeJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties Boolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool> Boolean { get; } Property Value Type Description JsonTypeInfo<bool> ChallengeResultItem Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ChallengeResultItem> ChallengeResultItem { get; } Property Value Type Description JsonTypeInfo<ChallengeResultItem> CreateAuthChallengeEvent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<CreateAuthChallengeEvent> CreateAuthChallengeEvent { get; } Property Value Type Description JsonTypeInfo<CreateAuthChallengeEvent> CreateAuthChallengeRequest Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<CreateAuthChallengeRequest> CreateAuthChallengeRequest { get; } Property Value Type Description JsonTypeInfo<CreateAuthChallengeRequest> CreateAuthChallengeResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<CreateAuthChallengeResponse> CreateAuthChallengeResponse { get; } Property Value Type Description JsonTypeInfo<CreateAuthChallengeResponse> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static CreateAuthChallengeJsonSerializerContext Default { get; } Property Value Type Description CreateAuthChallengeJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions ListChallengeResultItem Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<List<ChallengeResultItem>> ListChallengeResultItem { get; } Property Value Type Description JsonTypeInfo<List<ChallengeResultItem>> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value Type Description JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.DefineAuthChallengeJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.DefineAuthChallengeJsonSerializerContext.html",
    "title": "Class DefineAuthChallengeJsonSerializerContext | Innovt Platform",
    "keywords": "Class DefineAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to DefineAuthChallenge. Inheritance object JsonSerializerContext DefineAuthChallengeJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax [JsonSerializable(typeof(DefineAuthChallengeEvent))] [JsonSerializable(typeof(DefineAuthChallengeRequest))] [JsonSerializable(typeof(DefineAuthChallengeResponse))] public class DefineAuthChallengeJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors DefineAuthChallengeJsonSerializerContext() Declaration public DefineAuthChallengeJsonSerializerContext() DefineAuthChallengeJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public DefineAuthChallengeJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties Boolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool> Boolean { get; } Property Value Type Description JsonTypeInfo<bool> ChallengeResultItem Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ChallengeResultItem> ChallengeResultItem { get; } Property Value Type Description JsonTypeInfo<ChallengeResultItem> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static DefineAuthChallengeJsonSerializerContext Default { get; } Property Value Type Description DefineAuthChallengeJsonSerializerContext DefineAuthChallengeEvent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<DefineAuthChallengeEvent> DefineAuthChallengeEvent { get; } Property Value Type Description JsonTypeInfo<DefineAuthChallengeEvent> DefineAuthChallengeRequest Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<DefineAuthChallengeRequest> DefineAuthChallengeRequest { get; } Property Value Type Description JsonTypeInfo<DefineAuthChallengeRequest> DefineAuthChallengeResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<DefineAuthChallengeResponse> DefineAuthChallengeResponse { get; } Property Value Type Description JsonTypeInfo<DefineAuthChallengeResponse> DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions ListChallengeResultItem Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<List<ChallengeResultItem>> ListChallengeResultItem { get; } Property Value Type Description JsonTypeInfo<List<ChallengeResultItem>> NullableBoolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool?> NullableBoolean { get; } Property Value Type Description JsonTypeInfo<bool?> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value Type Description JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PostConfirmationJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PostConfirmationJsonSerializerContext.html",
    "title": "Class PostConfirmationJsonSerializerContext | Innovt Platform",
    "keywords": "Class PostConfirmationJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PostConfirmation events. Inheritance object JsonSerializerContext PostConfirmationJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax [JsonSerializable(typeof(PostConfirmationEvent))] [JsonSerializable(typeof(PostConfirmationRequest))] [JsonSerializable(typeof(PostConfirmationResponse))] public class PostConfirmationJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors PostConfirmationJsonSerializerContext() Declaration public PostConfirmationJsonSerializerContext() PostConfirmationJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public PostConfirmationJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static PostConfirmationJsonSerializerContext Default { get; } Property Value Type Description PostConfirmationJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions PostConfirmationEvent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PostConfirmationEvent> PostConfirmationEvent { get; } Property Value Type Description JsonTypeInfo<PostConfirmationEvent> PostConfirmationRequest Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PostConfirmationRequest> PostConfirmationRequest { get; } Property Value Type Description JsonTypeInfo<PostConfirmationRequest> PostConfirmationResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PostConfirmationResponse> PostConfirmationResponse { get; } Property Value Type Description JsonTypeInfo<PostConfirmationResponse> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value Type Description JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PreSignupJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PreSignupJsonSerializerContext.html",
    "title": "Class PreSignupJsonSerializerContext | Innovt Platform",
    "keywords": "Class PreSignupJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PreSignup events. Inheritance object JsonSerializerContext PreSignupJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax [JsonSerializable(typeof(PreSignupEvent))] [JsonSerializable(typeof(PreSignupRequest))] [JsonSerializable(typeof(PreSignupResponse))] public class PreSignupJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors PreSignupJsonSerializerContext() Declaration public PreSignupJsonSerializerContext() PreSignupJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public PreSignupJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties Boolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool> Boolean { get; } Property Value Type Description JsonTypeInfo<bool> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static PreSignupJsonSerializerContext Default { get; } Property Value Type Description PreSignupJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions PreSignupEvent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PreSignupEvent> PreSignupEvent { get; } Property Value Type Description JsonTypeInfo<PreSignupEvent> PreSignupRequest Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PreSignupRequest> PreSignupRequest { get; } Property Value Type Description JsonTypeInfo<PreSignupRequest> PreSignupResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PreSignupResponse> PreSignupResponse { get; } Property Value Type Description JsonTypeInfo<PreSignupResponse> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value Type Description JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PreTokenGenerationJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.PreTokenGenerationJsonSerializerContext.html",
    "title": "Class PreTokenGenerationJsonSerializerContext | Innovt Platform",
    "keywords": "Class PreTokenGenerationJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PreTokenGeneration events. Inheritance object JsonSerializerContext PreTokenGenerationJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax [JsonSerializable(typeof(PreTokenGenerationEvent))] [JsonSerializable(typeof(PreTokenGenerationRequest))] [JsonSerializable(typeof(PreTokenGenerationResponse))] public class PreTokenGenerationJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors PreTokenGenerationJsonSerializerContext() Declaration public PreTokenGenerationJsonSerializerContext() PreTokenGenerationJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public PreTokenGenerationJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties ClaimOverrideDetails Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ClaimOverrideDetails> ClaimOverrideDetails { get; } Property Value Type Description JsonTypeInfo<ClaimOverrideDetails> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static PreTokenGenerationJsonSerializerContext Default { get; } Property Value Type Description PreTokenGenerationJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions GroupConfiguration Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<GroupConfiguration> GroupConfiguration { get; } Property Value Type Description JsonTypeInfo<GroupConfiguration> ListString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<List<string>> ListString { get; } Property Value Type Description JsonTypeInfo<List<string>> PreTokenGenerationEvent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PreTokenGenerationEvent> PreTokenGenerationEvent { get; } Property Value Type Description JsonTypeInfo<PreTokenGenerationEvent> PreTokenGenerationRequest Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PreTokenGenerationRequest> PreTokenGenerationRequest { get; } Property Value Type Description JsonTypeInfo<PreTokenGenerationRequest> PreTokenGenerationResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<PreTokenGenerationResponse> PreTokenGenerationResponse { get; } Property Value Type Description JsonTypeInfo<PreTokenGenerationResponse> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value Type Description JsonTypeInfo<TriggerCallerContext> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.VerifyAuthChallengeJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.VerifyAuthChallengeJsonSerializerContext.html",
    "title": "Class VerifyAuthChallengeJsonSerializerContext | Innovt Platform",
    "keywords": "Class VerifyAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to VerifyAuthChallenge events. Inheritance object JsonSerializerContext VerifyAuthChallengeJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Cognito.Serializers Assembly: Innovt.Cloud.AWS.Lambda.Cognito.dll Syntax [JsonSerializable(typeof(VerifyAuthChallengeEvent))] [JsonSerializable(typeof(VerifyAuthChallengeRequest))] [JsonSerializable(typeof(VerifyAuthChallengeResponse))] public class VerifyAuthChallengeJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors VerifyAuthChallengeJsonSerializerContext() Declaration public VerifyAuthChallengeJsonSerializerContext() VerifyAuthChallengeJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public VerifyAuthChallengeJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties Boolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool> Boolean { get; } Property Value Type Description JsonTypeInfo<bool> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static VerifyAuthChallengeJsonSerializerContext Default { get; } Property Value Type Description VerifyAuthChallengeJsonSerializerContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions NullableBoolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool?> NullableBoolean { get; } Property Value Type Description JsonTypeInfo<bool?> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> TriggerCallerContext Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TriggerCallerContext> TriggerCallerContext { get; } Property Value Type Description JsonTypeInfo<TriggerCallerContext> VerifyAuthChallengeEvent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<VerifyAuthChallengeEvent> VerifyAuthChallengeEvent { get; } Property Value Type Description JsonTypeInfo<VerifyAuthChallengeEvent> VerifyAuthChallengeRequest Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<VerifyAuthChallengeRequest> VerifyAuthChallengeRequest { get; } Property Value Type Description JsonTypeInfo<VerifyAuthChallengeRequest> VerifyAuthChallengeResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<VerifyAuthChallengeResponse> VerifyAuthChallengeResponse { get; } Property Value Type Description JsonTypeInfo<VerifyAuthChallengeResponse> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Cognito.Serializers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Cognito.Serializers Classes CreateAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of CreateAuthChallenge-related objects. DefineAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to DefineAuthChallenge. PostConfirmationJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PostConfirmation events. PreSignupJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PreSignup events. PreTokenGenerationJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to PreTokenGeneration events. VerifyAuthChallengeJsonSerializerContext A custom JSON serializer context for handling serialization of objects related to VerifyAuthChallenge events."
  },
  "api/Innovt.Cloud.AWS.Lambda.CustomRuntime.Bootstrap.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.CustomRuntime.Bootstrap.html",
    "title": "Class Bootstrap | Innovt Platform",
    "keywords": "Class Bootstrap The Bootstrap class provides a method to run asynchronous Lambda functions. Inheritance object Bootstrap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.CustomRuntime Assembly: Innovt.Cloud.AWS.Lambda.CustomRuntime.dll Syntax public static class Bootstrap Methods | Edit this page View Source RunAsync<T>(Func<T, ILambdaContext, Task>, CancellationToken) Runs an asynchronous Lambda function using the provided handler function and cancellation token. Declaration public static Task RunAsync<T>(Func<T, ILambdaContext, Task> func, CancellationToken cancellationToken) Parameters Type Name Description Func<T, ILambdaContext, Task> func The Lambda function handler to execute. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task Type Parameters Name Description T The type of input the Lambda function expects."
  },
  "api/Innovt.Cloud.AWS.Lambda.CustomRuntime.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.CustomRuntime.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.CustomRuntime | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.CustomRuntime Classes Bootstrap The Bootstrap class provides a method to run asynchronous Lambda functions."
  },
  "api/Innovt.Cloud.AWS.Lambda.EventProcessor-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.EventProcessor-1.html",
    "title": "Class EventProcessor<T> | Innovt Platform",
    "keywords": "Class EventProcessor<T> Represents a base class for event processors that handle specific event types without producing a result. Inheritance object BaseEventProcessor EventProcessor<T> S3EventProcessor Inherited Members BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda Assembly: Innovt.Cloud.AWS.Lambda.dll Syntax public abstract class EventProcessor<T> : BaseEventProcessor where T : class Type Parameters Name Description T The type of the event to process. Constructors | Edit this page View Source EventProcessor() Initializes a new instance of the EventProcessor<T> class without a logger. Declaration protected EventProcessor() | Edit this page View Source EventProcessor(ILogger) Initializes a new instance of the EventProcessor<T> class with a logger. Declaration protected EventProcessor(ILogger logger) Parameters Type Name Description ILogger logger The logger to use for logging events and errors. Methods | Edit this page View Source Handle(T, ILambdaContext) Handles the event message. Declaration protected abstract Task Handle(T message, ILambdaContext context) Parameters Type Name Description T message The event message to handle. ILambdaContext context The Lambda context associated with the event processing. Returns Type Description Task | Edit this page View Source Process(T, ILambdaContext) Processes the specified event message. Declaration public Task Process(T message, ILambdaContext context) Parameters Type Name Description T message The event message to process. ILambdaContext context The Lambda context associated with the event processing. Returns Type Description Task Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.EventProcessor-2.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.EventProcessor-2.html",
    "title": "Class EventProcessor<T, TResult> | Innovt Platform",
    "keywords": "Class EventProcessor<T, TResult> Represents a base class for event processors that handle specific event types and produce a result. Inheritance object BaseEventProcessor EventProcessor<T, TResult> CreateAuthChallengeHandler DefineAuthChallengeHandler PostConfirmationHandler PreSignupHandler PreTokenGenerationHandler VerifyAuthChallengeHandler KinesisProcessorBase<TBody> SqsEventProcessor<TBody> Inherited Members BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda Assembly: Innovt.Cloud.AWS.Lambda.dll Syntax public abstract class EventProcessor<T, TResult> : BaseEventProcessor where T : class Type Parameters Name Description T The type of the event to process. TResult The type of the result produced by the event processing. Constructors | Edit this page View Source EventProcessor() Initializes a new instance of the EventProcessor<T, TResult> class without a logger. Declaration protected EventProcessor() | Edit this page View Source EventProcessor(ILogger) Initializes a new instance of the EventProcessor<T, TResult> class with a logger. Declaration protected EventProcessor(ILogger logger) Parameters Type Name Description ILogger logger The logger to use for logging events and errors. Methods | Edit this page View Source Handle(T, ILambdaContext) Handles the event message and produces a result. Declaration protected abstract Task<TResult> Handle(T message, ILambdaContext context) Parameters Type Name Description T message The event message to handle. ILambdaContext context The Lambda context associated with the event processing. Returns Type Description Task<TResult> The result of handling the event message. | Edit this page View Source Process(T, ILambdaContext) Processes the specified event message and produces a result. Declaration public Task<TResult> Process(T message, ILambdaContext context) Parameters Type Name Description T message The event message to process. ILambdaContext context The Lambda context associated with the event processing. Returns Type Description Task<TResult> The result of processing the event message. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Helpers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Helpers.html",
    "title": "Class Helpers | Innovt Platform",
    "keywords": "Class Helpers A utility class containing helper methods for common tasks in AWS Lambda functions. Inheritance object Helpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda Assembly: Innovt.Cloud.AWS.Lambda.dll Syntax public static class Helpers Methods | Edit this page View Source BuildConfiguration(string, string, ILambdaContext) Builds a configuration object based on an environment variable and default value. Declaration public static IConfigurationRoot BuildConfiguration(string environmentVariableName, string defaultValue, ILambdaContext context = null) Parameters Type Name Description string environmentVariableName The name of the environment variable containing the configuration name. string defaultValue The default configuration name to use if the environment variable is not found. ILambdaContext context The Lambda context associated with the function execution (optional). Returns Type Description IConfigurationRoot An IConfigurationRoot object representing the configuration. | Edit this page View Source GetEnvironmentVariable(string, string, ILambdaContext) Retrieves the value of an environment variable or a default value. Declaration public static string GetEnvironmentVariable(string varName, string defaultValue, ILambdaContext context = null) Parameters Type Name Description string varName The name of the environment variable to retrieve. string defaultValue The default value to use if the environment variable is not found. ILambdaContext context The Lambda context associated with the function execution (optional). Returns Type Description string The value of the environment variable if found, or the default value if not found."
  },
  "api/Innovt.Cloud.AWS.Lambda.ItemFailureIdentifier.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.ItemFailureIdentifier.html",
    "title": "Class ItemFailureIdentifier | Innovt Platform",
    "keywords": "Class ItemFailureIdentifier Represents an identifier for an item that has failed in a batch operation. Inheritance object ItemFailureIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda Assembly: Innovt.Cloud.AWS.Lambda.dll Syntax public sealed class ItemFailureIdentifier Constructors | Edit this page View Source ItemFailureIdentifier() Initializes a new instance of the ItemFailureIdentifier class. Declaration public ItemFailureIdentifier() | Edit this page View Source ItemFailureIdentifier(string) Initializes a new instance of the ItemFailureIdentifierclass with the specified item identifier. Declaration public ItemFailureIdentifier(string itemIdentifier) Parameters Type Name Description string itemIdentifier The identifier of the failed item. Properties | Edit this page View Source ItemIdentifier Gets or sets the identifier of the failed item. Declaration [JsonPropertyName(\"itemIdentifier\")] public string ItemIdentifier { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDataProcessor-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDataProcessor-1.html",
    "title": "Class KinesisDataProcessor<TBody> | Innovt Platform",
    "keywords": "Class KinesisDataProcessor<TBody> Represents a base class for processing Kinesis data streams in batch, where each batch consists of messages of type TBody. Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDataProcessorBatch<TBody> KinesisDataProcessor<TBody> Inherited Members KinesisDataProcessorBatch<TBody>.DeserializeBody(string, string) KinesisDataProcessorBatch<TBody>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<TBody>.ReportBatchFailures KinesisProcessorBase<TBody>.IsEmptyMessage(TBody) KinesisProcessorBase<TBody>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Kinesis Assembly: Innovt.Cloud.AWS.Lambda.Kinesis.dll Syntax public abstract class KinesisDataProcessor<TBody> : KinesisDataProcessorBatch<TBody> where TBody : class, IDataStream Type Parameters Name Description TBody The type of messages in the data stream. Constructors | Edit this page View Source KinesisDataProcessor(ILogger, bool) Initializes a new instance of the KinesisDataProcessor<TBody> class with optional logging and batch failure reporting. Declaration protected KinesisDataProcessor(ILogger logger, bool reportBatchFailures = false) Parameters Type Name Description ILogger logger An optional logger for recording processing information. bool reportBatchFailures Specifies whether to report batch processing failures. | Edit this page View Source KinesisDataProcessor(bool) Initializes a new instance of the KinesisDataProcessor<TBody> class with optional batch failure reporting. Declaration protected KinesisDataProcessor(bool reportBatchFailures = false) Parameters Type Name Description bool reportBatchFailures Specifies whether to report batch processing failures. Methods | Edit this page View Source ProcessMessage(TBody) Processes an individual Kinesis message of type TBody. Declaration protected abstract Task ProcessMessage(TBody message) Parameters Type Name Description TBody message The Kinesis message to process. Returns Type Description Task A task representing the asynchronous processing operation. | Edit this page View Source ProcessMessages(IList<TBody>) Processes a batch of Kinesis messages represented as a list of TBody objects. Declaration protected override Task<BatchFailureResponse> ProcessMessages(IList<TBody> messages) Parameters Type Name Description IList<TBody> messages The list of Kinesis messages to process. Returns Type Description Task<BatchFailureResponse> A BatchFailureResponse containing information about failed message processing. Overrides KinesisDataProcessorBatch<TBody>.ProcessMessages(IList<TBody>) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDataProcessorBatch-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDataProcessorBatch-1.html",
    "title": "Class KinesisDataProcessorBatch<TBody> | Innovt Platform",
    "keywords": "Class KinesisDataProcessorBatch<TBody> Represents a base class for processing Kinesis data streams in batch, where each batch consists of messages of type TBody. Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDataProcessorBatch<TBody> KinesisDataProcessor<TBody> Inherited Members KinesisProcessorBase<TBody>.ReportBatchFailures KinesisProcessorBase<TBody>.IsEmptyMessage(TBody) KinesisProcessorBase<TBody>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Kinesis Assembly: Innovt.Cloud.AWS.Lambda.Kinesis.dll Syntax public abstract class KinesisDataProcessorBatch<TBody> : KinesisProcessorBase<TBody> where TBody : class, IDataStream Type Parameters Name Description TBody The type of messages in the data stream. Constructors | Edit this page View Source KinesisDataProcessorBatch(ILogger, bool) Initializes a new instance of the KinesisDataProcessorBatch<TBody> class with optional logging and batch failure reporting. Declaration protected KinesisDataProcessorBatch(ILogger logger, bool reportBatchFailures = false) Parameters Type Name Description ILogger logger An optional logger for recording processing information. bool reportBatchFailures Specifies whether to report batch processing failures. | Edit this page View Source KinesisDataProcessorBatch(bool) Initializes a new instance of the KinesisDataProcessorBatch<TBody> class with optional batch failure reporting. Declaration protected KinesisDataProcessorBatch(bool reportBatchFailures = false) Parameters Type Name Description bool reportBatchFailures Specifies whether to report batch processing failures. Methods | Edit this page View Source DeserializeBody(string, string) Deserializes the content of a Kinesis message into an instance of type TBody. Declaration protected override TBody DeserializeBody(string content, string partition) Parameters Type Name Description string content The content of the Kinesis message. string partition The partition associated with the message. Returns Type Description TBody An instance of type TBody representing the deserialized message. Overrides KinesisProcessorBase<TBody>.DeserializeBody(string, string) | Edit this page View Source Handle(KinesisEvent, ILambdaContext) Handles a Kinesis event by processing a batch of messages. Declaration protected override Task<BatchFailureResponse> Handle(KinesisEvent message, ILambdaContext context) Parameters Type Name Description KinesisEvent message The Kinesis event containing multiple records. ILambdaContext context The Lambda execution context. Returns Type Description Task<BatchFailureResponse> A BatchFailureResponse containing information about failed message processing. Overrides EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) | Edit this page View Source ProcessMessages(IList<TBody>) Processes a batch of messages of type TBody. Declaration protected abstract Task<BatchFailureResponse> ProcessMessages(IList<TBody> messages) Parameters Type Name Description IList<TBody> messages The batch of messages to process. Returns Type Description Task<BatchFailureResponse> A BatchFailureResponse containing information about failed message processing. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDomainEventProcessor-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDomainEventProcessor-1.html",
    "title": "Class KinesisDomainEventProcessor<TBody> | Innovt Platform",
    "keywords": "Class KinesisDomainEventProcessor<TBody> Represents a base class for processing domain-specific Kinesis events, where each event is of type TBody. Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDomainEventProcessorBatch<TBody> KinesisDomainEventProcessor<TBody> Inherited Members KinesisDomainEventProcessorBatch<TBody>.DeserializeBody(string, string) KinesisDomainEventProcessorBatch<TBody>.Handle(KinesisEvent, ILambdaContext) KinesisProcessorBase<TBody>.ReportBatchFailures KinesisProcessorBase<TBody>.IsEmptyMessage(TBody) KinesisProcessorBase<TBody>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Kinesis Assembly: Innovt.Cloud.AWS.Lambda.Kinesis.dll Syntax public abstract class KinesisDomainEventProcessor<TBody> : KinesisDomainEventProcessorBatch<TBody> where TBody : DomainEvent Type Parameters Name Description TBody The type of domain-specific events to process. Constructors | Edit this page View Source KinesisDomainEventProcessor(ILogger, bool) Initializes a new instance of the KinesisDomainEventProcessor<TBody> class with optional logging and batch failure reporting. Declaration protected KinesisDomainEventProcessor(ILogger logger, bool reportBatchFailures = false) Parameters Type Name Description ILogger logger An optional logger for recording processing information. bool reportBatchFailures Specifies whether to report batch processing failures. | Edit this page View Source KinesisDomainEventProcessor(bool) Initializes a new instance of the KinesisDomainEventProcessor<TBody> class with optional batch failure reporting. Declaration protected KinesisDomainEventProcessor(bool reportBatchFailures = false) Parameters Type Name Description bool reportBatchFailures Specifies whether to report batch processing failures. Methods | Edit this page View Source ProcessMessage(TBody) Processes a single domain-specific event of type TBody. Declaration protected abstract Task ProcessMessage(TBody message) Parameters Type Name Description TBody message The domain-specific event to process. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source ProcessMessages(IList<TBody>) Processes a batch of domain-specific events of type TBody. Declaration protected override Task<BatchFailureResponse> ProcessMessages(IList<TBody> messages) Parameters Type Name Description IList<TBody> messages The batch of domain-specific events to process. Returns Type Description Task<BatchFailureResponse> A BatchFailureResponse containing information about failed event processing. Overrides KinesisDomainEventProcessorBatch<TBody>.ProcessMessages(IList<TBody>) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDomainEventProcessorBatch-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisDomainEventProcessorBatch-1.html",
    "title": "Class KinesisDomainEventProcessorBatch<TBody> | Innovt Platform",
    "keywords": "Class KinesisDomainEventProcessorBatch<TBody> Represents a base class for processing batches of domain-specific Kinesis events, where each event is of type Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDomainEventProcessorBatch<TBody> KinesisDomainEventProcessor<TBody> Inherited Members KinesisProcessorBase<TBody>.ReportBatchFailures KinesisProcessorBase<TBody>.IsEmptyMessage(TBody) KinesisProcessorBase<TBody>.ParseRecord(KinesisEvent.KinesisEventRecord) EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Kinesis Assembly: Innovt.Cloud.AWS.Lambda.Kinesis.dll Syntax public abstract class KinesisDomainEventProcessorBatch<TBody> : KinesisProcessorBase<TBody> where TBody : DomainEvent Type Parameters Name Description TBody The type of domain-specific events to process. Constructors | Edit this page View Source KinesisDomainEventProcessorBatch(ILogger, bool) Initializes a new instance of the KinesisDomainEventProcessorBatch<TBody> class with optional logging and batch failure reporting. Declaration protected KinesisDomainEventProcessorBatch(ILogger logger, bool reportBatchFailures = false) Parameters Type Name Description ILogger logger An optional logger for recording processing information. bool reportBatchFailures Specifies whether to report batch processing failures. | Edit this page View Source KinesisDomainEventProcessorBatch(bool) Initializes a new instance of the KinesisDomainEventProcessorBatch<TBody> class with optional batch failure reporting. Declaration protected KinesisDomainEventProcessorBatch(bool reportBatchFailures = false) Parameters Type Name Description bool reportBatchFailures Specifies whether to report batch processing failures. Methods | Edit this page View Source DeserializeBody(string, string) Deserializes the content of a Kinesis message into an instance of type TBody. Declaration protected override TBody DeserializeBody(string content, string partition) Parameters Type Name Description string content The content of the Kinesis message. string partition The partition associated with the message. Returns Type Description TBody An instance of type TBody representing the deserialized message. Overrides KinesisProcessorBase<TBody>.DeserializeBody(string, string) | Edit this page View Source Handle(KinesisEvent, ILambdaContext) Handles a Kinesis event by processing a batch of domain-specific events. Declaration protected override Task<BatchFailureResponse> Handle(KinesisEvent message, ILambdaContext context) Parameters Type Name Description KinesisEvent message The Kinesis event containing multiple records. ILambdaContext context The Lambda execution context. Returns Type Description Task<BatchFailureResponse> A BatchFailureResponse containing information about failed event processing. Overrides EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) | Edit this page View Source ProcessMessages(IList<TBody>) Processes a batch of domain-specific events of type TBody. Declaration protected abstract Task<BatchFailureResponse> ProcessMessages(IList<TBody> messages) Parameters Type Name Description IList<TBody> messages The batch of domain-specific events to process. Returns Type Description Task<BatchFailureResponse> A BatchFailureResponse containing information about failed event processing. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisProcessorBase-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.KinesisProcessorBase-1.html",
    "title": "Class KinesisProcessorBase<TBody> | Innovt Platform",
    "keywords": "Class KinesisProcessorBase<TBody> Represents a base class for processing Kinesis events with content of type TBody. Inheritance object BaseEventProcessor EventProcessor<KinesisEvent, BatchFailureResponse> KinesisProcessorBase<TBody> KinesisDataProcessorBatch<TBody> KinesisDomainEventProcessorBatch<TBody> Inherited Members EventProcessor<KinesisEvent, BatchFailureResponse>.Process(KinesisEvent, ILambdaContext) EventProcessor<KinesisEvent, BatchFailureResponse>.Handle(KinesisEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Kinesis Assembly: Innovt.Cloud.AWS.Lambda.Kinesis.dll Syntax public abstract class KinesisProcessorBase<TBody> : EventProcessor<KinesisEvent, BatchFailureResponse> where TBody : IDataStream Type Parameters Name Description TBody The type of content contained in the Kinesis events. Constructors | Edit this page View Source KinesisProcessorBase(ILogger, bool) Initializes a new instance of the KinesisProcessorBase<TBody> class with optional logging and batch failure reporting. Declaration protected KinesisProcessorBase(ILogger logger, bool reportBatchFailures = false) Parameters Type Name Description ILogger logger An optional logger for recording processing information. bool reportBatchFailures Specifies whether to report batch processing failures. | Edit this page View Source KinesisProcessorBase(bool) Initializes a new instance of the KinesisProcessorBase<TBody> class with optional batch failure reporting. Declaration protected KinesisProcessorBase(bool reportBatchFailures = false) Parameters Type Name Description bool reportBatchFailures Specifies whether to report batch processing failures. Properties | Edit this page View Source ReportBatchFailures Gets or sets a value indicating whether batch processing failures should be reported. Declaration protected bool ReportBatchFailures { get; set; } Property Value Type Description bool Methods | Edit this page View Source DeserializeBody(string, string) Deserializes the content of a Kinesis event record into an instance of type TBody. Declaration protected abstract TBody DeserializeBody(string content, string partition) Parameters Type Name Description string content The content of the Kinesis event record. string partition The partition associated with the message. Returns Type Description TBody An instance of type TBody representing the deserialized content. | Edit this page View Source IsEmptyMessage(TBody) Checks if a Kinesis message of type TBody is empty and should be discarded. Declaration protected bool IsEmptyMessage(TBody message) Parameters Type Name Description TBody message The Kinesis message to check. Returns Type Description bool True if the message is empty and should be discarded; otherwise, false. | Edit this page View Source ParseRecord(KinesisEventRecord) Parses a Kinesis event record and returns its content as an instance of type TBody. Declaration protected Task<TBody> ParseRecord(KinesisEvent.KinesisEventRecord record) Parameters Type Name Description KinesisEvent.KinesisEventRecord record The Kinesis event record to parse. Returns Type Description Task<TBody> An instance of type TBody representing the parsed content. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Serializers.KinesisEventJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Serializers.KinesisEventJsonSerializerContext.html",
    "title": "Class KinesisEventJsonSerializerContext | Innovt Platform",
    "keywords": "Class KinesisEventJsonSerializerContext Represents a JSON serializer context for Kinesis events. Inheritance object JsonSerializerContext KinesisEventJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Kinesis.Serializers Assembly: Innovt.Cloud.AWS.Lambda.Kinesis.dll Syntax [JsonSerializable(typeof(KinesisEvent))] [JsonSerializable(typeof(BatchFailureResponse))] public class KinesisEventJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors KinesisEventJsonSerializerContext() Declaration public KinesisEventJsonSerializerContext() KinesisEventJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public KinesisEventJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties BatchFailureResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<BatchFailureResponse> BatchFailureResponse { get; } Property Value Type Description JsonTypeInfo<BatchFailureResponse> Boolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool> Boolean { get; } Property Value Type Description JsonTypeInfo<bool> DateTime Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<DateTime> DateTime { get; } Property Value Type Description JsonTypeInfo<DateTime> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static KinesisEventJsonSerializerContext Default { get; } Property Value Type Description KinesisEventJsonSerializerContext EncryptionType Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<EncryptionType> EncryptionType { get; } Property Value Type Description JsonTypeInfo<EncryptionType> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions IListItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<IList<ItemFailureIdentifier>> IListItemFailureIdentifier { get; } Property Value Type Description JsonTypeInfo<IList<ItemFailureIdentifier>> IListKinesisEventRecord Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<IList<KinesisEvent.KinesisEventRecord>> IListKinesisEventRecord { get; } Property Value Type Description JsonTypeInfo<IList<KinesisEvent.KinesisEventRecord>> Int32 Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<int> Int32 { get; } Property Value Type Description JsonTypeInfo<int> Int64 Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<long> Int64 { get; } Property Value Type Description JsonTypeInfo<long> ItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ItemFailureIdentifier> ItemFailureIdentifier { get; } Property Value Type Description JsonTypeInfo<ItemFailureIdentifier> KinesisEvent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<KinesisEvent> KinesisEvent { get; } Property Value Type Description JsonTypeInfo<KinesisEvent> KinesisEventRecord Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<KinesisEvent.KinesisEventRecord> KinesisEventRecord { get; } Property Value Type Description JsonTypeInfo<KinesisEvent.KinesisEventRecord> MemoryStream Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<MemoryStream> MemoryStream { get; } Property Value Type Description JsonTypeInfo<MemoryStream> Record Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<KinesisEvent.Record> Record { get; } Property Value Type Description JsonTypeInfo<KinesisEvent.Record> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.Serializers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.Serializers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Serializers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis.Serializers Classes KinesisEventJsonSerializerContext Represents a JSON serializer context for Kinesis events."
  },
  "api/Innovt.Cloud.AWS.Lambda.Kinesis.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Kinesis.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Kinesis Classes KinesisDataProcessorBatch<TBody> Represents a base class for processing Kinesis data streams in batch, where each batch consists of messages of type TBody. KinesisDataProcessor<TBody> Represents a base class for processing Kinesis data streams in batch, where each batch consists of messages of type TBody. KinesisDomainEventProcessorBatch<TBody> Represents a base class for processing batches of domain-specific Kinesis events, where each event is of type KinesisDomainEventProcessor<TBody> Represents a base class for processing domain-specific Kinesis events, where each event is of type TBody. KinesisProcessorBase<TBody> Represents a base class for processing Kinesis events with content of type TBody."
  },
  "api/Innovt.Cloud.AWS.Lambda.S3.S3EventProcessor.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.S3.S3EventProcessor.html",
    "title": "Class S3EventProcessor | Innovt Platform",
    "keywords": "Class S3EventProcessor The abstract S3EventProcessor class serves as the base class for processing Amazon S3 events in AWS Lambda functions. Inheritance object BaseEventProcessor EventProcessor<S3Event> S3EventProcessor Inherited Members EventProcessor<S3Event>.Process(S3Event, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.S3 Assembly: Innovt.Cloud.AWS.Lambda.S3.dll Syntax public abstract class S3EventProcessor : EventProcessor<S3Event> Constructors | Edit this page View Source S3EventProcessor() Initializes a new instance of the S3EventProcessor class with default settings. Declaration protected S3EventProcessor() | Edit this page View Source S3EventProcessor(ILogger) Initializes a new instance of the S3EventProcessor class with the specified logger. Declaration protected S3EventProcessor(ILogger logger) Parameters Type Name Description ILogger logger The logger used for logging events and messages. Methods | Edit this page View Source Handle(S3Event, ILambdaContext) Handles the processing of an incoming S3Event, which may contain multiple S3 event records. Declaration protected override Task Handle(S3Event message, ILambdaContext context) Parameters Type Name Description S3Event message The S3Event containing one or more S3 event records. ILambdaContext context The ILambdaContext providing information about the Lambda function's execution environment. Returns Type Description Task A Task representing the asynchronous processing operation. Overrides Innovt.Cloud.AWS.Lambda.EventProcessor<Amazon.Lambda.S3Events.S3Event>.Handle(Amazon.Lambda.S3Events.S3Event, Amazon.Lambda.Core.ILambdaContext) | Edit this page View Source ProcessMessage(S3EventNotificationRecord) Handles the processing of an individual S3 event record. Declaration protected abstract Task ProcessMessage(S3Event.S3EventNotificationRecord message) Parameters Type Name Description S3Event.S3EventNotificationRecord message The S3Event.S3EventNotificationRecord representing a single S3 event record. Returns Type Description Task A Task representing the asynchronous processing operation. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.S3.Serializers.S3EventJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.S3.Serializers.S3EventJsonSerializerContext.html",
    "title": "Class S3EventJsonSerializerContext | Innovt Platform",
    "keywords": "Class S3EventJsonSerializerContext Represents a JSON serializer context for S3 Serializer for AOT Support Inheritance object JsonSerializerContext S3EventJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.S3.Serializers Assembly: Innovt.Cloud.AWS.Lambda.S3.dll Syntax [JsonSerializable(typeof(S3Event))] [JsonSerializable(typeof(BatchFailureResponse))] public class S3EventJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors S3EventJsonSerializerContext() Declaration public S3EventJsonSerializerContext() S3EventJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public S3EventJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties BatchFailureResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<BatchFailureResponse> BatchFailureResponse { get; } Property Value Type Description JsonTypeInfo<BatchFailureResponse> DateTime Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<DateTime> DateTime { get; } Property Value Type Description JsonTypeInfo<DateTime> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static S3EventJsonSerializerContext Default { get; } Property Value Type Description S3EventJsonSerializerContext GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions IListItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<IList<ItemFailureIdentifier>> IListItemFailureIdentifier { get; } Property Value Type Description JsonTypeInfo<IList<ItemFailureIdentifier>> Int64 Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<long> Int64 { get; } Property Value Type Description JsonTypeInfo<long> ItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ItemFailureIdentifier> ItemFailureIdentifier { get; } Property Value Type Description JsonTypeInfo<ItemFailureIdentifier> ListS3EventNotificationRecord Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<List<S3Event.S3EventNotificationRecord>> ListS3EventNotificationRecord { get; } Property Value Type Description JsonTypeInfo<List<S3Event.S3EventNotificationRecord>> RequestParametersEntity Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.RequestParametersEntity> RequestParametersEntity { get; } Property Value Type Description JsonTypeInfo<S3Event.RequestParametersEntity> ResponseElementsEntity Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.ResponseElementsEntity> ResponseElementsEntity { get; } Property Value Type Description JsonTypeInfo<S3Event.ResponseElementsEntity> S3BucketEntity Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.S3BucketEntity> S3BucketEntity { get; } Property Value Type Description JsonTypeInfo<S3Event.S3BucketEntity> S3Entity Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.S3Entity> S3Entity { get; } Property Value Type Description JsonTypeInfo<S3Event.S3Entity> S3Event Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event> S3Event { get; } Property Value Type Description JsonTypeInfo<S3Event> S3EventNotificationRecord Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.S3EventNotificationRecord> S3EventNotificationRecord { get; } Property Value Type Description JsonTypeInfo<S3Event.S3EventNotificationRecord> S3GlacierEventDataEntity Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.S3GlacierEventDataEntity> S3GlacierEventDataEntity { get; } Property Value Type Description JsonTypeInfo<S3Event.S3GlacierEventDataEntity> S3ObjectEntity Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.S3ObjectEntity> S3ObjectEntity { get; } Property Value Type Description JsonTypeInfo<S3Event.S3ObjectEntity> S3RestoreEventDataEntity Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.S3RestoreEventDataEntity> S3RestoreEventDataEntity { get; } Property Value Type Description JsonTypeInfo<S3Event.S3RestoreEventDataEntity> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> UserIdentityEntity Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<S3Event.UserIdentityEntity> UserIdentityEntity { get; } Property Value Type Description JsonTypeInfo<S3Event.UserIdentityEntity> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.S3.Serializers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.S3.Serializers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.S3.Serializers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.S3.Serializers Classes S3EventJsonSerializerContext Represents a JSON serializer context for S3 Serializer for AOT Support"
  },
  "api/Innovt.Cloud.AWS.Lambda.S3.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.S3.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.S3 | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.S3 Classes S3EventProcessor The abstract S3EventProcessor class serves as the base class for processing Amazon S3 events in AWS Lambda functions."
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.Serializers.SqsEventJsonSerializerContext.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.Serializers.SqsEventJsonSerializerContext.html",
    "title": "Class SqsEventJsonSerializerContext | Innovt Platform",
    "keywords": "Class SqsEventJsonSerializerContext Represents a JSON serializer context for Sqs Serializer for AOT Support Inheritance object JsonSerializerContext SqsEventJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Sqs.Serializers Assembly: Innovt.Cloud.AWS.Lambda.Sqs.dll Syntax [JsonSerializable(typeof(SQSEvent))] [JsonSerializable(typeof(BatchFailureResponse))] public class SqsEventJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors SqsEventJsonSerializerContext() Declaration public SqsEventJsonSerializerContext() SqsEventJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public SqsEventJsonSerializerContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties BatchFailureResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<BatchFailureResponse> BatchFailureResponse { get; } Property Value Type Description JsonTypeInfo<BatchFailureResponse> Boolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool> Boolean { get; } Property Value Type Description JsonTypeInfo<bool> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static SqsEventJsonSerializerContext Default { get; } Property Value Type Description SqsEventJsonSerializerContext DictionaryStringMessageAttribute Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, SQSEvent.MessageAttribute>> DictionaryStringMessageAttribute { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, SQSEvent.MessageAttribute>> DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, string>> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions IListItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<IList<ItemFailureIdentifier>> IListItemFailureIdentifier { get; } Property Value Type Description JsonTypeInfo<IList<ItemFailureIdentifier>> Int32 Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<int> Int32 { get; } Property Value Type Description JsonTypeInfo<int> Int64 Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<long> Int64 { get; } Property Value Type Description JsonTypeInfo<long> ItemFailureIdentifier Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ItemFailureIdentifier> ItemFailureIdentifier { get; } Property Value Type Description JsonTypeInfo<ItemFailureIdentifier> ListMemoryStream Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<List<MemoryStream>> ListMemoryStream { get; } Property Value Type Description JsonTypeInfo<List<MemoryStream>> ListSQSMessage Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<List<SQSEvent.SQSMessage>> ListSQSMessage { get; } Property Value Type Description JsonTypeInfo<List<SQSEvent.SQSMessage>> ListString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<List<string>> ListString { get; } Property Value Type Description JsonTypeInfo<List<string>> MemoryStream Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<MemoryStream> MemoryStream { get; } Property Value Type Description JsonTypeInfo<MemoryStream> MessageAttribute Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<SQSEvent.MessageAttribute> MessageAttribute { get; } Property Value Type Description JsonTypeInfo<SQSEvent.MessageAttribute> SQSEvent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<SQSEvent> SQSEvent { get; } Property Value Type Description JsonTypeInfo<SQSEvent> SQSMessage Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<SQSEvent.SQSMessage> SQSMessage { get; } Property Value Type Description JsonTypeInfo<SQSEvent.SQSMessage> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.Serializers.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.Serializers.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Sqs.Serializers | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Sqs.Serializers Classes SqsEventJsonSerializerContext Represents a JSON serializer context for Sqs Serializer for AOT Support"
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor-1.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor-1.html",
    "title": "Class SqsEventProcessor<TBody> | Innovt Platform",
    "keywords": "Class SqsEventProcessor<TBody> If you're using this feature with a FIFO queue, your function should stop processing messages after the first failure and return all failed and unprocessed messages in batchItemFailures. This helps preserve the ordering of messages in your queue. The abstract SqsEventProcessor class serves as the base class for processing Amazon SQS events in AWS Lambda functions. Inheritance object BaseEventProcessor EventProcessor<SQSEvent, BatchFailureResponse> SqsEventProcessor<TBody> Inherited Members EventProcessor<SQSEvent, BatchFailureResponse>.Process(SQSEvent, ILambdaContext) EventProcessor<SQSEvent, BatchFailureResponse>.Handle(SQSEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.SetupIocContainer() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Lambda.Sqs Assembly: Innovt.Cloud.AWS.Lambda.Sqs.dll Syntax public abstract class SqsEventProcessor<TBody> : EventProcessor<SQSEvent, BatchFailureResponse> where TBody : class Type Parameters Name Description TBody Constructors | Edit this page View Source SqsEventProcessor(ILogger, ISerializer, bool, bool) Initializes a new instance of the SqsEventProcessor class with the specified logger, serializer, FIFO queue setting, and report batch failures setting. Declaration protected SqsEventProcessor(ILogger logger, ISerializer serializer, bool isFifo = false, bool reportBatchFailures = false) Parameters Type Name Description ILogger logger The logger used for logging events and messages. ISerializer serializer The serializer used for message deserialization. bool isFifo A boolean indicating whether the SQS queue is FIFO (First-In-First-Out). bool reportBatchFailures A boolean indicating whether to report batch processing failures. | Edit this page View Source SqsEventProcessor(ILogger, bool, bool) Initializes a new instance of the SqsEventProcessor class with the specified logger, FIFO queue setting, and report batch failures setting. Declaration protected SqsEventProcessor(ILogger logger, bool isFifo = false, bool reportBatchFailures = false) Parameters Type Name Description ILogger logger The logger used for logging events and messages. bool isFifo A boolean indicating whether the SQS queue is FIFO (First-In-First-Out). bool reportBatchFailures A boolean indicating whether to report batch processing failures. | Edit this page View Source SqsEventProcessor(bool, bool) Initializes a new instance of the SqsEventProcessor class with the specified FIFO queue setting and report batch failures setting. Declaration protected SqsEventProcessor(bool isFifo = false, bool reportBatchFailures = false) Parameters Type Name Description bool isFifo A boolean indicating whether the SQS queue is FIFO (First-In-First-Out). bool reportBatchFailures A boolean indicating whether to report batch processing failures. Properties | Edit this page View Source ReportBatchFailures Gets or sets a boolean indicating whether to report batch processing failures. Declaration protected bool ReportBatchFailures { get; set; } Property Value Type Description bool Methods | Edit this page View Source Handle(SQSEvent, ILambdaContext) Handles the processing of an incoming SQSEvent, which may contain multiple SQS event records. Declaration protected override Task<BatchFailureResponse> Handle(SQSEvent message, ILambdaContext context) Parameters Type Name Description SQSEvent message The SQSEvent containing one or more SQS event records. ILambdaContext context The ILambdaContext providing information about the Lambda function's execution environment. Returns Type Description Task<BatchFailureResponse> A Task representing the asynchronous processing operation. Overrides EventProcessor<SQSEvent, BatchFailureResponse>.Handle(SQSEvent, ILambdaContext) | Edit this page View Source ProcessMessage(QueueMessage<TBody>) Handles the processing of an individual SQS message. Declaration protected abstract Task ProcessMessage(QueueMessage<TBody> message) Parameters Type Name Description QueueMessage<TBody> message The QueueMessage object containing information about the SQS message. Returns Type Description Task A Task representing the asynchronous processing operation. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Lambda.Sqs.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.Sqs.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda.Sqs | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda.Sqs Classes SqsEventProcessor<TBody> If you're using this feature with a FIFO queue, your function should stop processing messages after the first failure and return all failed and unprocessed messages in batchItemFailures. This helps preserve the ordering of messages in your queue. The abstract SqsEventProcessor class serves as the base class for processing Amazon SQS events in AWS Lambda functions."
  },
  "api/Innovt.Cloud.AWS.Lambda.html": {
    "href": "api/Innovt.Cloud.AWS.Lambda.html",
    "title": "Namespace Innovt.Cloud.AWS.Lambda | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Lambda Classes BaseEventProcessor Represents a base class for event processors with common functionality such as logging, IOC container setup, and configuration. BatchFailureResponse Represents a response containing information about batch item failures. EventProcessor<T> Represents a base class for event processors that handle specific event types without producing a result. EventProcessor<T, TResult> Represents a base class for event processors that handle specific event types and produce a result. Helpers A utility class containing helper methods for common tasks in AWS Lambda functions. ItemFailureIdentifier Represents an identifier for an item that has failed in a batch operation."
  },
  "api/Innovt.Cloud.AWS.Notification.MailNotificationHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Notification.MailNotificationHandler.html",
    "title": "Class MailNotificationHandler | Innovt Platform",
    "keywords": "Class MailNotificationHandler Handles sending notifications via email using Amazon Simple Email Service (SES). Inheritance object AwsBaseService MailNotificationHandler Implements IDisposable INotificationHandler Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Notification Assembly: Innovt.Cloud.AWS.Notification.dll Syntax public class MailNotificationHandler : AwsBaseService, IDisposable, INotificationHandler Constructors | Edit this page View Source MailNotificationHandler(ILogger, IAwsConfiguration) Initializes a new instance of the MailNotificationHandler class. Declaration public MailNotificationHandler(ILogger logger, IAwsConfiguration configuration) Parameters Type Name Description ILogger logger The logger. IAwsConfiguration configuration The AWS configuration. | Edit this page View Source MailNotificationHandler(ILogger, IAwsConfiguration, string) Initializes a new instance of the MailNotificationHandler class with a specified region. Declaration public MailNotificationHandler(ILogger logger, IAwsConfiguration configuration, string region) Parameters Type Name Description ILogger logger The logger. IAwsConfiguration configuration The AWS configuration. string region The AWS region. Properties | Edit this page View Source DefaultCharset Gets or sets the default charset for the email. Declaration public string DefaultCharset { get; set; } Property Value Type Description string Methods | Edit this page View Source DisposeServices() Disposes of the Amazon Simple Email Service (SES) client instance. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source SendAsync(NotificationMessage, CancellationToken) Sends a notification via email asynchronously. Declaration public Task<dynamic> SendAsync(NotificationMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description NotificationMessage message The notification message. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<dynamic> A dynamic response from the email sending operation. Implements IDisposable INotificationHandler Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Notification.NotificationHandleFactory.html": {
    "href": "api/Innovt.Cloud.AWS.Notification.NotificationHandleFactory.html",
    "title": "Class NotificationHandleFactory | Innovt Platform",
    "keywords": "Class NotificationHandleFactory Factory for creating notification handlers based on the notification message type. Inheritance object NotificationHandleFactory Implements INotificationHandleFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Notification Assembly: Innovt.Cloud.AWS.Notification.dll Syntax public class NotificationHandleFactory : INotificationHandleFactory Constructors | Edit this page View Source NotificationHandleFactory(IContainer) Initializes a new instance of the NotificationHandleFactory class. Declaration public NotificationHandleFactory(IContainer container) Parameters Type Name Description IContainer container The IoC container. Methods | Edit this page View Source Create(NotificationMessageType) Creates a notification handler based on the provided notification message type. Declaration public virtual INotificationHandler Create(NotificationMessageType notificationMessageType) Parameters Type Name Description NotificationMessageType notificationMessageType The notification message type. Returns Type Description INotificationHandler A notification handler for the specified message type. | Edit this page View Source CreateCustomHandle(NotificationMessageType) Creates a custom notification handler for the specified message type. Override this method to implement custom handling for specific message types. Declaration public virtual INotificationHandler CreateCustomHandle(NotificationMessageType notificationMessageType) Parameters Type Name Description NotificationMessageType notificationMessageType The notification message type. Returns Type Description INotificationHandler A custom notification handler. Implements INotificationHandleFactory Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Notification.SmsNotificationHandler.html": {
    "href": "api/Innovt.Cloud.AWS.Notification.SmsNotificationHandler.html",
    "title": "Class SmsNotificationHandler | Innovt Platform",
    "keywords": "Class SmsNotificationHandler SMS notification handler using Amazon Simple Notification Service (SNS). Inheritance object AwsBaseService SmsNotificationHandler Implements IDisposable INotificationHandler Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.Notification Assembly: Innovt.Cloud.AWS.Notification.dll Syntax public class SmsNotificationHandler : AwsBaseService, IDisposable, INotificationHandler Constructors | Edit this page View Source SmsNotificationHandler(ILogger, IAwsConfiguration) Initializes a new instance of the SmsNotificationHandler class. Declaration public SmsNotificationHandler(ILogger logger, IAwsConfiguration configuration) Parameters Type Name Description ILogger logger The logger. IAwsConfiguration configuration The AWS configuration. | Edit this page View Source SmsNotificationHandler(ILogger, IAwsConfiguration, string) Initializes a new instance of the SmsNotificationHandler class with a specific AWS region. Declaration public SmsNotificationHandler(ILogger logger, IAwsConfiguration configuration, string region) Parameters Type Name Description ILogger logger The logger. IAwsConfiguration configuration The AWS configuration. string region The AWS region. Methods | Edit this page View Source DisposeServices() Disposes the resources used by the SMS notification handler. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source SendAsync(NotificationMessage, CancellationToken) Sends an SMS notification asynchronously. Declaration public Task<dynamic> SendAsync(NotificationMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description NotificationMessage message The notification message. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<dynamic> A dynamic result representing the delivery status of the SMS. Implements IDisposable INotificationHandler Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.Notification.html": {
    "href": "api/Innovt.Cloud.AWS.Notification.html",
    "title": "Namespace Innovt.Cloud.AWS.Notification | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.Notification Classes MailNotificationHandler Handles sending notifications via email using Amazon Simple Email Service (SES). NotificationHandleFactory Factory for creating notification handlers based on the notification message type. SmsNotificationHandler SMS notification handler using Amazon Simple Notification Service (SNS)."
  },
  "api/Innovt.Cloud.AWS.S3.S3FileSystem.html": {
    "href": "api/Innovt.Cloud.AWS.S3.S3FileSystem.html",
    "title": "Class S3FileSystem | Innovt Platform",
    "keywords": "Class S3FileSystem Amazon S3 file system implementation. Inheritance object AwsBaseService S3FileSystem Implements IDisposable IFileSystem Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.S3 Assembly: Innovt.Cloud.AWS.S3.dll Syntax public class S3FileSystem : AwsBaseService, IDisposable, IFileSystem Constructors | Edit this page View Source S3FileSystem(ILogger, IAwsConfiguration) Initializes a new instance of the S3FileSystem class. Declaration public S3FileSystem(ILogger logger, IAwsConfiguration configuration) Parameters Type Name Description ILogger logger The logger. IAwsConfiguration configuration The AWS configuration. | Edit this page View Source S3FileSystem(ILogger, IAwsConfiguration, string) Initializes a new instance of the S3FileSystem class with a specific AWS region. Declaration public S3FileSystem(ILogger logger, IAwsConfiguration configuration, string region) Parameters Type Name Description ILogger logger The logger. IAwsConfiguration configuration The AWS configuration. string region The AWS region. Methods | Edit this page View Source CopyObject(string, string, string, string, string, string, CancellationToken) Asynchronously copies an object (file or folder) from the source bucket to the destination bucket. Declaration public Task<bool> CopyObject(string sourceBucket, string sourceKey, string destinationBucket, string destinationKey, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sourceBucket The source bucket name. string sourceKey The source key of the object to copy. string destinationBucket The destination bucket name. string destinationKey The destination key for the copied object. string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control for the copied object (optional). CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<bool> True if the object was successfully copied; otherwise, false. | Edit this page View Source DeleteObject(string, string) Synchronously deletes an object (file or folder) from the specified Amazon S3 bucket. Declaration public bool DeleteObject(string bucketName, string key) Parameters Type Name Description string bucketName The name of the S3 bucket. string key The key of the object to delete. Returns Type Description bool True if the object was successfully deleted; otherwise, false. | Edit this page View Source DeleteObjectAsync(string, string, CancellationToken) Asynchronously deletes an object (file or folder) from the specified Amazon S3 bucket. Declaration public Task<bool> DeleteObjectAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. string key The key of the object to delete. CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<bool> True if the object was successfully deleted; otherwise, false. | Edit this page View Source DisposeServices() Disposes the S3 client instance. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source Download(string, string, string) Downloads a file from an Amazon S3 bucket. Declaration public void Download(string bucketName, string fileName, string destination) Parameters Type Name Description string bucketName The name of the S3 bucket. string fileName The name of the file to download. string destination The local file path to save the downloaded file. | Edit this page View Source DownloadStream(string) Downloads a file from an Amazon S3 bucket as a stream using the provided URL. Declaration public Stream DownloadStream(string url) Parameters Type Name Description string url The URL of the file to download from Amazon S3. Returns Type Description Stream A stream containing the downloaded file's content. | Edit this page View Source DownloadStream(string, string) Downloads a file from an Amazon S3 bucket as a stream. Declaration public Stream DownloadStream(string bucketName, string fileName) Parameters Type Name Description string bucketName The name of the S3 bucket. string fileName The name of the file to download. Returns Type Description Stream A stream containing the downloaded file's content. | Edit this page View Source DownloadStreamAsync(string, string, CancellationToken) Asynchronously downloads a file from an Amazon S3 bucket as a stream. Declaration public Task<Stream> DownloadStreamAsync(string bucketName, string fileName, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. string fileName The name of the file to download. CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<Stream> A stream containing the downloaded file's content. | Edit this page View Source DownloadStreamAsync(string, CancellationToken) Asynchronously downloads a file from an Amazon S3 bucket as a stream using the provided URL. Declaration public Task<Stream> DownloadStreamAsync(string url, CancellationToken cancellationToken = default) Parameters Type Name Description string url The URL of the file to download from Amazon S3. CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<Stream> A stream containing the downloaded file's content. | Edit this page View Source ExtractBucketFromGetUrl(string) Extracts bucket name and file key from the S3 bucket URL. Declaration public (string bucket, string fileKey) ExtractBucketFromGetUrl(string bucketUrl) Parameters Type Name Description string bucketUrl The S3 bucket URL. Returns Type Description (string bucket, string fileKey) A tuple containing the bucket name and the file key. | Edit this page View Source FileExistsAsync(string, string, CancellationToken) Asynchronously checks if a file exists in the specified Amazon S3 bucket. Declaration public Task<bool> FileExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. string key The key representing the file in the S3 bucket. CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<bool> True if the file exists; otherwise, false. | Edit this page View Source FolderExists(string, string) Synchronously checks if a folder exists in the specified Amazon S3 bucket. Declaration public bool FolderExists(string bucketName, string key) Parameters Type Name Description string bucketName The name of the S3 bucket. string key The key representing the folder in the S3 bucket. Returns Type Description bool True if the folder exists; otherwise, false. | Edit this page View Source FolderExistsAsync(string, string, CancellationToken) Asynchronously checks if a folder exists in the specified Amazon S3 bucket. Declaration public Task<bool> FolderExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. string key The key representing the folder in the S3 bucket. CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<bool> True if the folder exists; otherwise, false. | Edit this page View Source GeneratePreSignedUrl(string, string, DateTime, IDictionary<string, object>) Generates a pre-signed URL for accessing an object in the S3 bucket. Declaration public string GeneratePreSignedUrl(string bucketName, string key, DateTime expiration, IDictionary<string, object> additionalProperties) Parameters Type Name Description string bucketName The name of the S3 bucket. string key The key of the object in the S3 bucket. DateTime expiration The expiration date and time for the pre-signed URL. IDictionary<string, object> additionalProperties Additional properties for the pre-signed URL (optional). Returns Type Description string The pre-signed URL for accessing the object. | Edit this page View Source GetObjectContentAsync(string, string, Encoding, CancellationToken) Gets the content of the object from the specified URL asynchronously. Declaration public Task<string> GetObjectContentAsync(string bucketName, string key, Encoding encoding, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The Bucket name. string key The file url Encoding encoding CancellationToken cancellationToken Returns Type Description Task<string> | Edit this page View Source GetObjectContentAsync(string, Encoding, CancellationToken) Asynchronously gets the content of an object from a specified URL with the given encoding. Declaration public Task<string> GetObjectContentAsync(string url, Encoding encoding, CancellationToken cancellationToken = default) Parameters Type Name Description string url The URL of the object to retrieve. Encoding encoding The encoding to use for reading the object's content. CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<string> The content of the object as a string. | Edit this page View Source GetObjectFromJsonAsync<T>(Uri, CancellationToken) When you need to get a content from Json file as an typed method. Declaration public Task<T> GetObjectFromJsonAsync<T>(Uri filePath, CancellationToken cancellationToken = default) Parameters Type Name Description Uri filePath CancellationToken cancellationToken Returns Type Description Task<T> Type Parameters Name Description T | Edit this page View Source GetPreSignedUrl(string, string, DateTime) Gets a pre-signed URL for accessing an object in the S3 bucket. Declaration public string GetPreSignedUrl(string bucketName, string key, DateTime expires) Parameters Type Name Description string bucketName The name of the S3 bucket. string key The key of the object in the S3 bucket. DateTime expires The expiration date and time for the pre-signed URL. Returns Type Description string The pre-signed URL for accessing the object. | Edit this page View Source PutObject(string, Stream, string, string, string, string) Uploads a stream to an Amazon S3 bucket. Declaration public string PutObject(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters Type Name Description string bucketName The name of the S3 bucket. Stream stream The stream to upload. string fileName The name to assign to the uploaded file. string contentType The content type of the file (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control list (optional). Returns Type Description string The key of the uploaded object in the S3 bucket. | Edit this page View Source PutObject(string, string, string, string, string) Uploads a file to an Amazon S3 bucket. Declaration public string PutObject(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters Type Name Description string bucketName The name of the S3 bucket. string filePath The local file path of the file to upload. string contentType The content type of the file (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control list (optional). Returns Type Description string The key of the uploaded object in the S3 bucket. | Edit this page View Source PutObjectAsync(string, Stream, string, string, string, string, CancellationToken) Asynchronously uploads a stream to an Amazon S3 bucket. Declaration public Task<string> PutObjectAsync(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. Stream stream The stream to upload. string fileName The name to assign to the uploaded file. string contentType The content type of the file (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control list (optional). CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<string> The key of the uploaded object in the S3 bucket. | Edit this page View Source PutObjectAsync(string, string, string, string, string, CancellationToken) Asynchronously uploads a file to an Amazon S3 bucket. Declaration public Task<string> PutObjectAsync(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. string filePath The local file path of the file to upload. string contentType The content type of the file (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control list (optional). CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<string> The key of the uploaded object in the S3 bucket. | Edit this page View Source Upload(string, Stream, string, IList<KeyValuePair<string, string>>, string, string) Uploads a file to the specified Amazon S3 bucket from a stream. Declaration public string Upload(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters Type Name Description string bucketName The name of the S3 bucket. Stream stream The stream containing the file content to upload. string fileName The name of the file to upload. IList<KeyValuePair<string, string>> metadata Metadata key-value pairs for the uploaded file (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control for the uploaded file (optional). Returns Type Description string The URL of the uploaded file. | Edit this page View Source Upload(string, string, IList<KeyValuePair<string, string>>, string, string) Uploads a file to the specified Amazon S3 bucket from a local file path. Declaration public string Upload(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters Type Name Description string bucketName The name of the S3 bucket. string filePath The local file path to upload. IList<KeyValuePair<string, string>> metadata Metadata key-value pairs for the uploaded file (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control for the uploaded file (optional). Returns Type Description string The URL of the uploaded file. | Edit this page View Source UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Asynchronously uploads an object serialized as JSON to the specified Amazon S3 bucket. Declaration public Task<string> UploadAsJsonAsync<T>(string bucketName, T obj, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. T obj The object to serialize and upload. string fileName The name of the file to use for the uploaded object. IList<KeyValuePair<string, string>> metadata Metadata key-value pairs for the uploaded object (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control for the uploaded object (optional). CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<string> The URL of the uploaded object. Type Parameters Name Description T The type of the object to serialize. | Edit this page View Source UploadAsync(string, Stream, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Asynchronously uploads a file to the specified Amazon S3 bucket from a stream. Declaration public Task<string> UploadAsync(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. Stream stream The stream containing the file content to upload. string fileName The name of the file to upload. IList<KeyValuePair<string, string>> metadata Metadata key-value pairs for the uploaded file (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control for the uploaded file (optional). CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<string> The URL of the uploaded file. | Edit this page View Source UploadAsync(string, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Asynchronously uploads an object from a local file path to the specified Amazon S3 bucket. Declaration public Task<string> UploadAsync(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. string filePath The local file path to upload. IList<KeyValuePair<string, string>> metadata Metadata key-value pairs for the uploaded object (optional). string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control for the uploaded object (optional). CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task<string> The URL of the uploaded object. | Edit this page View Source UploadDirectoryAsync(string, string, string, string, CancellationToken) Asynchronously uploads a directory to the specified Amazon S3 bucket. Declaration public Task UploadDirectoryAsync(string bucketName, string directory, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the S3 bucket. string directory The path of the local directory to upload. string serverSideEncryptionMethod The server-side encryption method (optional). string fileAcl The file access control for the uploaded files (optional). CancellationToken cancellationToken A token to cancel the asynchronous operation (optional). Returns Type Description Task A task representing the asynchronous operation. Implements IDisposable IFileSystem Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.S3.html": {
    "href": "api/Innovt.Cloud.AWS.S3.html",
    "title": "Namespace Innovt.Cloud.AWS.S3 | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.S3 Classes S3FileSystem Amazon S3 file system implementation."
  },
  "api/Innovt.Cloud.AWS.SQS.QueueService-1.html": {
    "href": "api/Innovt.Cloud.AWS.SQS.QueueService-1.html",
    "title": "Class QueueService<T> | Innovt Platform",
    "keywords": "Class QueueService<T> Provides functionalities to interact with an Amazon SQS queue for a specified message type T. Inheritance object AwsBaseService QueueService<T> Implements IDisposable IQueueService<T> Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.SQS Assembly: Innovt.Cloud.AWS.SQS.dll Syntax public class QueueService<T> : AwsBaseService, IDisposable, IQueueService<T> where T : IQueueMessage Type Parameters Name Description T Type of the messages in the queue, must implement IQueueMessage. Constructors | Edit this page View Source QueueService(ILogger, IAwsConfiguration, string, ISerializer) Initializes a new instance of the QueueService<T> class. Declaration public QueueService(ILogger logger, IAwsConfiguration configuration, string queueName = null, ISerializer serializer = null) Parameters Type Name Description ILogger logger Logger instance. IAwsConfiguration configuration AWS configuration. string queueName Optional queue name, defaults to the name of type T. ISerializer serializer Custom serializer (optional). | Edit this page View Source QueueService(ILogger, IAwsConfiguration, string, string, ISerializer) Initializes a new instance of the QueueService<T> class. Declaration public QueueService(ILogger logger, IAwsConfiguration configuration, string region, string queueName = null, ISerializer serializer = null) Parameters Type Name Description ILogger logger Logger instance. IAwsConfiguration configuration AWS configuration. string region string queueName Optional queue name, defaults to the name of type T. ISerializer serializer Custom serializer (optional). Properties | Edit this page View Source QueueName Gets the name of the queue. Declaration public string QueueName { get; protected set; } Property Value Type Description string | Edit this page View Source QueueUrl Gets the URL of the queue. Declaration public string QueueUrl { get; } Property Value Type Description string Methods | Edit this page View Source ApproximateMessageCountAsync(CancellationToken) Retrieves the approximate message count of the queue asynchronously. Declaration public Task<int> ApproximateMessageCountAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task<int> The approximate message count of the queue. | Edit this page View Source CreateIfNotExistAsync(CancellationToken) Creates the queue if it does not exist asynchronously. Declaration public Task CreateIfNotExistAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source DeQueueAsync(string, CancellationToken) Dequeues a message asynchronously from the queue using the provided pop receipt. Declaration public Task DeQueueAsync(string popReceipt, CancellationToken cancellationToken = default) Parameters Type Name Description string popReceipt The pop receipt of the message to be dequeued. CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source DisposeServices() Disposes of the Amazon SQS client. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source EnQueueAsync<TK>(TK, int?, CancellationToken) Declaration public Task<string> EnQueueAsync<TK>(TK message, int? visibilityTimeoutInSeconds = null, CancellationToken cancellationToken = default) Parameters Type Name Description TK message int? visibilityTimeoutInSeconds CancellationToken cancellationToken // Gets and sets the property DelaySeconds. The length of time, in seconds, for which to delay a specific message. Valid values: 0 to 900. Maximum: 15 minutes. Messages with a positive DelaySeconds value become available for processing after the delay period is finished. If you don't specify a value, the default value for the queue applies. When you set FifoQueue , you can't set DelaySeconds per message. You can set this parameter only on a queue level. Returns Type Description Task<string> Type Parameters Name Description TK | Edit this page View Source EnQueueBatchAsync(IEnumerable<MessageBatchRequest>, int?, CancellationToken) Enqueues a batch of messages asynchronously to the queue. Declaration public Task<IList<MessageQueueResult>> EnQueueBatchAsync(IEnumerable<MessageBatchRequest> message, int? delaySeconds = null, CancellationToken cancellationToken = default) Parameters Type Name Description IEnumerable<MessageBatchRequest> message The messages to be enqueued. int? delaySeconds The delay in seconds for message delivery (optional). CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task<IList<MessageQueueResult>> A list of message queue results indicating success or failure for each message. | Edit this page View Source GetMessagesAsync(int, int?, int?, CancellationToken) Enable user to receive messages Declaration public Task<IList<T>> GetMessagesAsync(int quantity, int? waitTimeInSeconds = null, int? visibilityTimeoutInSeconds = null, CancellationToken cancellationToken = default) Parameters Type Name Description int quantity 1-10 int? waitTimeInSeconds To enable long pooling int? visibilityTimeoutInSeconds CancellationToken cancellationToken Returns Type Description Task<IList<T>> Implements IDisposable IQueueService<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.SQS.html": {
    "href": "api/Innovt.Cloud.AWS.SQS.html",
    "title": "Namespace Innovt.Cloud.AWS.SQS | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.SQS Classes QueueService<T> Provides functionalities to interact with an Amazon SQS queue for a specified message type T."
  },
  "api/Innovt.Cloud.AWS.StepFunction.StepFunctionService.html": {
    "href": "api/Innovt.Cloud.AWS.StepFunction.StepFunctionService.html",
    "title": "Class StepFunctionService | Innovt Platform",
    "keywords": "Class StepFunctionService Represents a service for interacting with AWS Step Functions. Inheritance object AwsBaseService StepFunctionService Implements IDisposable IStateMachine Inherited Members AwsBaseService.Configuration AwsBaseService.ExponentialBackoffInSeconds AwsBaseService.Logger AwsBaseService.Dispose() AwsBaseService.GetServiceRegionEndPoint() AwsBaseService.CreateService<T>() AwsBaseService.CreateDefaultRetryAsyncPolicy() AwsBaseService.CreateDefaultRetryPolicy() AwsBaseService.CreateRetryAsyncPolicy<T>() AwsBaseService.CreateRetryAsyncPolicy<T, T1>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>() AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>() AwsBaseService.CreateCircuitBreaker<T, T1>() AwsBaseService.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.AWS.StepFunction Assembly: Innovt.Cloud.AWS.StepFunction.dll Syntax public class StepFunctionService : AwsBaseService, IDisposable, IStateMachine Constructors | Edit this page View Source StepFunctionService(ILogger, IAwsConfiguration) Initializes a new instance of the StepFunctionService class. Declaration public StepFunctionService(ILogger logger, IAwsConfiguration configuration) Parameters Type Name Description ILogger logger The logger instance. IAwsConfiguration configuration The AWS configuration instance. | Edit this page View Source StepFunctionService(ILogger, IAwsConfiguration, string) Initializes a new instance of the StepFunctionService class with a specific region. Declaration public StepFunctionService(ILogger logger, IAwsConfiguration configuration, string region) Parameters Type Name Description ILogger logger The logger instance. IAwsConfiguration configuration The AWS configuration instance. string region The AWS region. Methods | Edit this page View Source DisposeServices() Disposes of the Amazon Step Functions client. Declaration protected override void DisposeServices() Overrides AwsBaseService.DisposeServices() | Edit this page View Source SendTaskFailure(string, string, string, CancellationToken) Sends a failure response for a task in the state machine. Declaration public Task SendTaskFailure(string taskToken, string reason, string taskError, CancellationToken cancellationToken) Parameters Type Name Description string taskToken The token for the task. string reason The reason for the failure. string taskError The error associated with the failure. CancellationToken cancellationToken Cancellation token. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source SendTaskHeartbeat(string, CancellationToken) Sends a heartbeat for a task in the state machine. Declaration public Task SendTaskHeartbeat(string taskToken, CancellationToken cancellationToken) Parameters Type Name Description string taskToken The token for the task. CancellationToken cancellationToken Cancellation token. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source SendTaskSuccess(string, object, CancellationToken) Sends a success response for a task in the state machine. Declaration public Task SendTaskSuccess(string taskToken, object output, CancellationToken cancellationToken) Parameters Type Name Description string taskToken The token for the task. object output The output of the task. CancellationToken cancellationToken Cancellation token. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source StartExecution(object, string, string, CancellationToken) Starts the execution of a state machine. Declaration public Task StartExecution(object input, string stateMachineArn, string executionId, CancellationToken cancellationToken) Parameters Type Name Description object input The input for the execution. string stateMachineArn The ARN of the state machine. string executionId The execution ID. CancellationToken cancellationToken Cancellation token. Returns Type Description Task A task representing the asynchronous operation. Implements IDisposable IStateMachine Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.AWS.StepFunction.html": {
    "href": "api/Innovt.Cloud.AWS.StepFunction.html",
    "title": "Namespace Innovt.Cloud.AWS.StepFunction | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS.StepFunction Classes StepFunctionService Represents a service for interacting with AWS Step Functions."
  },
  "api/Innovt.Cloud.AWS.html": {
    "href": "api/Innovt.Cloud.AWS.html",
    "title": "Namespace Innovt.Cloud.AWS | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.AWS Classes AwsBaseService An abstract base class for AWS services with common functionality for managing AWS service configurations, retries, and circuit breakers."
  },
  "api/Innovt.Cloud.File.IFileSystem.html": {
    "href": "api/Innovt.Cloud.File.IFileSystem.html",
    "title": "Interface IFileSystem | Innovt Platform",
    "keywords": "Interface IFileSystem Interface for File System Namespace: Innovt.Cloud.File Assembly: Innovt.Cloud.dll Syntax public interface IFileSystem Methods | Edit this page View Source CopyObject(string, string, string, string, string, string, CancellationToken) Copy a file from one bucket to another Declaration Task<bool> CopyObject(string sourceBucket, string sourceKey, string destinationBucket, string destinationKey, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sourceBucket string sourceKey string destinationBucket string destinationKey string serverSideEncryptionMethod string fileAcl CancellationToken cancellationToken Returns Type Description Task<bool> | Edit this page View Source DeleteObject(string, string) Deletes an object from the specified bucket. Declaration bool DeleteObject(string bucketName, string key) Parameters Type Name Description string bucketName string key Returns Type Description bool | Edit this page View Source DeleteObjectAsync(string, string, CancellationToken) Deletes an object from the specified bucket. Declaration Task<bool> DeleteObjectAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName string key CancellationToken cancellationToken Returns Type Description Task<bool> | Edit this page View Source Download(string, string, string) Downloads a file from the specified bucket and saves it to the destination path. Declaration void Download(string bucketName, string fileName, string destination) Parameters Type Name Description string bucketName string fileName string destination | Edit this page View Source DownloadStream(string) Downloads a file from the provided URL and returns the stream. Declaration Stream DownloadStream(string url) Parameters Type Name Description string url Returns Type Description Stream | Edit this page View Source DownloadStream(string, string) Downloads a file from the specified bucket and file name synchronously and returns the stream. Declaration Stream DownloadStream(string bucketName, string fileName) Parameters Type Name Description string bucketName The name of the bucket. string fileName The name of the file to download. Returns Type Description Stream The stream of the downloaded file. | Edit this page View Source DownloadStreamAsync(string, string, CancellationToken) Downloads a file from the specified bucket and file name asynchronously and returns the stream. Declaration Task<Stream> DownloadStreamAsync(string bucketName, string fileName, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the bucket. string fileName The name of the file to download. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<Stream> The stream of the downloaded file. | Edit this page View Source DownloadStreamAsync(string, CancellationToken) Downloads a file from the provided URL asynchronously and returns the stream. Declaration Task<Stream> DownloadStreamAsync(string url, CancellationToken cancellationToken = default) Parameters Type Name Description string url The URL of the file to download. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<Stream> The stream of the downloaded file. | Edit this page View Source ExtractBucketFromGetUrl(string) Extracts the bucket name and file key from the provided URL. Declaration (string bucket, string fileKey) ExtractBucketFromGetUrl(string bucketUrl) Parameters Type Name Description string bucketUrl The URL containing bucket information. Returns Type Description (string bucket, string fileKey) A tuple containing the bucket name and file key. | Edit this page View Source FileExistsAsync(string, string, CancellationToken) Checks if a file exists in the specified bucket asynchronously. Declaration Task<bool> FileExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the bucket. string key The key of the file. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<bool> True if the file exists; otherwise, false. | Edit this page View Source FolderExists(string, string) Checks if a folder exists in the specified bucket. Declaration bool FolderExists(string bucketName, string key) Parameters Type Name Description string bucketName The name of the bucket. string key The key of the folder. Returns Type Description bool True if the folder exists; otherwise, false. | Edit this page View Source FolderExistsAsync(string, string, CancellationToken) Checks if a folder exists in the specified bucket asynchronously. Declaration Task<bool> FolderExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the bucket. string key The key of the folder. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<bool> True if the folder exists; otherwise, false. | Edit this page View Source GeneratePreSignedUrl(string, string, DateTime, IDictionary<string, object>) Generates a pre-signed URL for accessing the object in the specified bucket. Declaration string GeneratePreSignedUrl(string bucketName, string key, DateTime expiration, IDictionary<string, object> additionalProperties) Parameters Type Name Description string bucketName The name of the bucket. string key The key of the object. DateTime expiration The expiration date and time for the pre-signed URL. IDictionary<string, object> additionalProperties Additional properties for customizing the URL generation. Returns Type Description string The pre-signed URL for accessing the object. | Edit this page View Source GetObjectContentAsync(string, string, Encoding, CancellationToken) Gets the content of the object from the specified URL asynchronously. Declaration Task<string> GetObjectContentAsync(string bucketName, string key, Encoding encoding, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The Bucket name. string key The file url Encoding encoding CancellationToken cancellationToken Returns Type Description Task<string> | Edit this page View Source GetObjectContentAsync(string, Encoding, CancellationToken) Gets the content of the object from the specified URL asynchronously. Declaration Task<string> GetObjectContentAsync(string url, Encoding encoding, CancellationToken cancellationToken = default) Parameters Type Name Description string url The URL of the object. Encoding encoding The encoding to use for reading the content. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<string> The content of the object as a string. | Edit this page View Source GetObjectFromJsonAsync<T>(Uri, CancellationToken) Deserializes a JSON object from the content of a file specified by a URI. Declaration Task<T> GetObjectFromJsonAsync<T>(Uri filePath, CancellationToken cancellationToken = default) Parameters Type Name Description Uri filePath The URI pointing to the JSON file. CancellationToken cancellationToken Returns Type Description Task<T> The deserialized object of type T. Type Parameters Name Description T The type of the object to deserialize to. | Edit this page View Source GetPreSignedUrl(string, string, DateTime) Gets a pre-signed URL for accessing the object in the specified bucket. Declaration string GetPreSignedUrl(string bucketName, string key, DateTime expires) Parameters Type Name Description string bucketName The name of the bucket. string key The key of the object. DateTime expires The expiration date and time for the pre-signed URL. Returns Type Description string The pre-signed URL for accessing the object. | Edit this page View Source PutObject(string, Stream, string, string, string, string) Uploads a file from a stream to the specified bucket. Declaration string PutObject(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters Type Name Description string bucketName Stream stream string fileName string contentType string serverSideEncryptionMethod string fileAcl Returns Type Description string | Edit this page View Source PutObject(string, string, string, string, string) Uploads a file from a local file path to the specified bucket. Declaration string PutObject(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters Type Name Description string bucketName string filePath string contentType string serverSideEncryptionMethod string fileAcl Returns Type Description string | Edit this page View Source PutObjectAsync(string, Stream, string, string, string, string, CancellationToken) Uploads an object from a stream to the specified bucket asynchronously. Declaration Task<string> PutObjectAsync(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the bucket. Stream stream The stream containing the object to upload. string fileName The name of the file to upload. string contentType The content type of the object. string serverSideEncryptionMethod The server-side encryption method to use. string fileAcl The access control for the object. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<string> The unique identifier of the uploaded object. | Edit this page View Source PutObjectAsync(string, string, string, string, string, CancellationToken) Uploads an object from a local file to the specified bucket asynchronously. Declaration Task<string> PutObjectAsync(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the bucket. string filePath The local file path of the object to upload. string contentType The content type of the object. string serverSideEncryptionMethod The server-side encryption method to use. string fileAcl The access control for the object. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<string> The unique identifier of the uploaded object. | Edit this page View Source Upload(string, Stream, string, IList<KeyValuePair<string, string>>, string, string) Uploads an object from a stream to the specified bucket synchronously. Declaration string Upload(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters Type Name Description string bucketName The name of the bucket. Stream stream The stream containing the object to upload. string fileName The name of the file to upload. IList<KeyValuePair<string, string>> metadata Metadata for the object. string serverSideEncryptionMethod The server-side encryption method to use. string fileAcl The access control for the object. Returns Type Description string The unique identifier of the uploaded object. | Edit this page View Source Upload(string, string, IList<KeyValuePair<string, string>>, string, string) Uploads an object from a local file to the specified bucket synchronously. Declaration string Upload(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null) Parameters Type Name Description string bucketName The name of the bucket. string filePath The local file path of the object to upload. IList<KeyValuePair<string, string>> metadata Metadata for the object. string serverSideEncryptionMethod The server-side encryption method to use. string fileAcl The access control for the object. Returns Type Description string The unique identifier of the uploaded object. | Edit this page View Source UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Uploads an object as JSON to the specified bucket. Declaration Task<string> UploadAsJsonAsync<T>(string bucketName, T obj, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName T obj string fileName IList<KeyValuePair<string, string>> metadata string serverSideEncryptionMethod string fileAcl CancellationToken cancellationToken Returns Type Description Task<string> Type Parameters Name Description T | Edit this page View Source UploadAsync(string, Stream, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Uploads an object from a stream to the specified bucket asynchronously. Declaration Task<string> UploadAsync(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the bucket. Stream stream The stream containing the object to upload. string fileName The name of the file to upload. IList<KeyValuePair<string, string>> metadata Metadata for the object. string serverSideEncryptionMethod The server-side encryption method to use. string fileAcl The access control for the object. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<string> The unique identifier of the uploaded object. | Edit this page View Source UploadAsync(string, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken) Uploads an object from a local file to the specified bucket asynchronously. Declaration Task<string> UploadAsync(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName The name of the bucket. string filePath The local file path of the object to upload. IList<KeyValuePair<string, string>> metadata Metadata for the object. string serverSideEncryptionMethod The server-side encryption method to use. string fileAcl The access control for the object. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task<string> The unique identifier of the uploaded object. | Edit this page View Source UploadDirectoryAsync(string, string, string, string, CancellationToken) Uploads all files in a directory to the specified bucket. Declaration Task UploadDirectoryAsync(string bucketName, string directory, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default) Parameters Type Name Description string bucketName string directory string serverSideEncryptionMethod string fileAcl CancellationToken cancellationToken Returns Type Description Task Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.File.html": {
    "href": "api/Innovt.Cloud.File.html",
    "title": "Namespace Innovt.Cloud.File | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.File Interfaces IFileSystem Interface for File System"
  },
  "api/Innovt.Cloud.IConfiguration.html": {
    "href": "api/Innovt.Cloud.IConfiguration.html",
    "title": "Interface IConfiguration | Innovt Platform",
    "keywords": "Interface IConfiguration Interface to be used for configuration Namespace: Innovt.Cloud Assembly: Innovt.Cloud.dll Syntax public interface IConfiguration Properties | Edit this page View Source AccessKey Gets or sets the access key for accessing the service. Declaration string AccessKey { get; set; } Property Value Type Description string | Edit this page View Source Region Gets or sets the region associated with the service. Declaration string Region { get; set; } Property Value Type Description string | Edit this page View Source SecretKey Gets or sets the secret key for accessing the service. Declaration string SecretKey { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Queue.IQueueMessage.html": {
    "href": "api/Innovt.Cloud.Queue.IQueueMessage.html",
    "title": "Interface IQueueMessage | Innovt Platform",
    "keywords": "Interface IQueueMessage Represents a message in a queue. Namespace: Innovt.Cloud.Queue Assembly: Innovt.Cloud.dll Syntax public interface IQueueMessage Properties | Edit this page View Source ApproximateFirstReceiveTimestamp Gets or sets the approximate timestamp when the message was first received. Declaration double? ApproximateFirstReceiveTimestamp { get; set; } Property Value Type Description double? | Edit this page View Source ApproximateReceiveCount Gets or sets the approximate number of times the message has been received. Declaration int? ApproximateReceiveCount { get; set; } Property Value Type Description int? | Edit this page View Source Attributes Gets or sets the attributes associated with the message in the form of key-value pairs. Declaration Dictionary<string, string> Attributes { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source MessageId Gets or sets the unique identifier of the message. Declaration string MessageId { get; set; } Property Value Type Description string | Edit this page View Source ReceiptHandle Gets or sets the receipt handle for the message. Declaration string ReceiptHandle { get; set; } Property Value Type Description string | Edit this page View Source TraceId Gets or sets the trace ID associated with the message. Declaration string TraceId { get; set; } Property Value Type Description string Extension Methods QueueExtensions.ParseQueueAttributes(IQueueMessage, Dictionary<string, string>) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Queue.IQueueService-1.html": {
    "href": "api/Innovt.Cloud.Queue.IQueueService-1.html",
    "title": "Interface IQueueService<T> | Innovt Platform",
    "keywords": "Interface IQueueService<T> Defines the operations for interacting with a queue service for a specific type of queue messages. Namespace: Innovt.Cloud.Queue Assembly: Innovt.Cloud.dll Syntax public interface IQueueService<T> where T : IQueueMessage Type Parameters Name Description T The type of queue messages. Methods | Edit this page View Source ApproximateMessageCountAsync(CancellationToken) Retrieves the approximate number of messages in the queue asynchronously. Declaration Task<int> ApproximateMessageCountAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<int> The approximate message count in the queue. | Edit this page View Source CreateIfNotExistAsync(CancellationToken) Creates the queue if it does not already exist asynchronously. Declaration Task CreateIfNotExistAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source DeQueueAsync(string, CancellationToken) Removes a message from the queue asynchronously. Declaration Task DeQueueAsync(string popReceipt, CancellationToken cancellationToken = default) Parameters Type Name Description string popReceipt The pop receipt of the message to be removed. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source EnQueueAsync<TK>(TK, int?, CancellationToken) Enqueues a message asynchronously. Declaration Task<string> EnQueueAsync<TK>(TK message, int? visibilityTimeoutInSeconds = null, CancellationToken cancellationToken = default) Parameters Type Name Description TK message The message to be enqueued. int? visibilityTimeoutInSeconds The duration for which the enqueued message is invisible to other consumers. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<string> The message ID associated with the enqueued message. Type Parameters Name Description TK The type of the message to be enqueued. | Edit this page View Source EnQueueBatchAsync(IEnumerable<MessageBatchRequest>, int?, CancellationToken) Enqueues a batch of messages asynchronously. Declaration Task<IList<MessageQueueResult>> EnQueueBatchAsync(IEnumerable<MessageBatchRequest> message, int? delaySeconds = null, CancellationToken cancellationToken = default) Parameters Type Name Description IEnumerable<MessageBatchRequest> message The collection of messages to be enqueued. int? delaySeconds The delay in seconds before the messages become available for retrieval. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<IList<MessageQueueResult>> A list of message enqueue results. | Edit this page View Source GetMessagesAsync(int, int?, int?, CancellationToken) Retrieves a list of messages from the queue asynchronously. Declaration Task<IList<T>> GetMessagesAsync(int quantity, int? waitTimeInSeconds = null, int? visibilityTimeoutInSeconds = null, CancellationToken cancellationToken = default) Parameters Type Name Description int quantity The number of messages to retrieve. int? waitTimeInSeconds The maximum time to wait for messages to become available. int? visibilityTimeoutInSeconds The duration for which retrieved messages are invisible to other consumers. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<IList<T>> A list of retrieved messages. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Queue.MessageBatchRequest.html": {
    "href": "api/Innovt.Cloud.Queue.MessageBatchRequest.html",
    "title": "Class MessageBatchRequest | Innovt Platform",
    "keywords": "Class MessageBatchRequest Represents a message and its associated ID in a batch for enqueueing. Inheritance object MessageBatchRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Queue Assembly: Innovt.Cloud.dll Syntax public class MessageBatchRequest Properties | Edit this page View Source Id Gets or sets the ID associated with the message. Declaration public string Id { get; set; } Property Value Type Description string | Edit this page View Source Message Gets or sets the message to be enqueued. Declaration public object Message { get; set; } Property Value Type Description object Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Queue.MessageQueueResult.html": {
    "href": "api/Innovt.Cloud.Queue.MessageQueueResult.html",
    "title": "Class MessageQueueResult | Innovt Platform",
    "keywords": "Class MessageQueueResult Represents the result of enqueuing a message into a message queue. Inheritance object MessageQueueResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Queue Assembly: Innovt.Cloud.dll Syntax public class MessageQueueResult Properties | Edit this page View Source Error Gets or sets an error message in case of a failed enqueue operation. Declaration public string Error { get; set; } Property Value Type Description string | Edit this page View Source Id Gets or sets the ID associated with the enqueued message. Declaration public string Id { get; set; } Property Value Type Description string | Edit this page View Source Success Gets or sets a value indicating whether the enqueue operation was successful. Declaration public bool Success { get; set; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Queue.QueueExtensions.html": {
    "href": "api/Innovt.Cloud.Queue.QueueExtensions.html",
    "title": "Class QueueExtensions | Innovt Platform",
    "keywords": "Class QueueExtensions Extension methods for parsing queue message attributes. Inheritance object QueueExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Queue Assembly: Innovt.Cloud.dll Syntax public static class QueueExtensions Methods | Edit this page View Source ParseQueueAttributes(IQueueMessage, Dictionary<string, string>) Parses queue message attributes and updates the provided queueMessage. Declaration public static void ParseQueueAttributes(this IQueueMessage queueMessage, Dictionary<string, string> queueAttributes) Parameters Type Name Description IQueueMessage queueMessage The queue message. Dictionary<string, string> queueAttributes The queue attributes to parse."
  },
  "api/Innovt.Cloud.Queue.QueueMessage-1.html": {
    "href": "api/Innovt.Cloud.Queue.QueueMessage-1.html",
    "title": "Class QueueMessage<T> | Innovt Platform",
    "keywords": "Class QueueMessage<T> Represents a message in a queue with a specified body type. Inheritance object QueueMessage<T> Implements IQueueMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Queue Assembly: Innovt.Cloud.dll Syntax public class QueueMessage<T> : IQueueMessage Type Parameters Name Description T The type of the message body. Constructors | Edit this page View Source QueueMessage() Initializes a new instance of the QueueMessage<T> class. Declaration public QueueMessage() | Edit this page View Source QueueMessage(Dictionary<string, string>) Initializes a new instance of the QueueMessage<T> class with specified attributes. Declaration public QueueMessage(Dictionary<string, string> attributes) Parameters Type Name Description Dictionary<string, string> attributes The attributes associated with the message. | Edit this page View Source QueueMessage(T) Initializes a new instance of the QueueMessage<T> class with a specified body. Declaration public QueueMessage(T body) Parameters Type Name Description T body The body of the message. Properties | Edit this page View Source ApproximateFirstReceiveTimestamp Gets or sets the approximate timestamp when the message was first received. Declaration public double? ApproximateFirstReceiveTimestamp { get; set; } Property Value Type Description double? | Edit this page View Source ApproximateReceiveCount Gets or sets the approximate number of times the message has been received. Declaration public int? ApproximateReceiveCount { get; set; } Property Value Type Description int? | Edit this page View Source Attributes Gets or sets the attributes associated with the message in the form of key-value pairs. Declaration public Dictionary<string, string> Attributes { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source Body Gets or sets the body of the message. Declaration public T Body { get; set; } Property Value Type Description T | Edit this page View Source MessageId Gets or sets the ID associated with the message. Declaration public string MessageId { get; set; } Property Value Type Description string | Edit this page View Source ReceiptHandle Gets or sets the receipt handle for the message. Declaration public string ReceiptHandle { get; set; } Property Value Type Description string | Edit this page View Source TraceId Gets or sets the trace ID associated with the message. Declaration public string TraceId { get; set; } Property Value Type Description string Implements IQueueMessage Extension Methods QueueExtensions.ParseQueueAttributes(IQueueMessage, Dictionary<string, string>) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Queue.SimpleQueueMessage-1.html": {
    "href": "api/Innovt.Cloud.Queue.SimpleQueueMessage-1.html",
    "title": "Class SimpleQueueMessage<T> | Innovt Platform",
    "keywords": "Class SimpleQueueMessage<T> Represents a simple queue message. Inheritance object SimpleQueueMessage<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Queue Assembly: Innovt.Cloud.dll Syntax public class SimpleQueueMessage<T> Type Parameters Name Description T The type of value held in the message. Constructors | Edit this page View Source SimpleQueueMessage() Initializes a new instance of the SimpleQueueMessage<T> class. Declaration public SimpleQueueMessage() | Edit this page View Source SimpleQueueMessage(T) Initializes a new instance of the SimpleQueueMessage<T> class with a specified value. Declaration public SimpleQueueMessage(T value) Parameters Type Name Description T value The value to be set for the message. Properties | Edit this page View Source Value Gets or sets the value of the queue message. Declaration public T Value { get; set; } Property Value Type Description T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Queue.html": {
    "href": "api/Innovt.Cloud.Queue.html",
    "title": "Namespace Innovt.Cloud.Queue | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.Queue Classes MessageBatchRequest Represents a message and its associated ID in a batch for enqueueing. MessageQueueResult Represents the result of enqueuing a message into a message queue. QueueExtensions Extension methods for parsing queue message attributes. QueueMessage<T> Represents a message in a queue with a specified body type. SimpleQueueMessage<T> Represents a simple queue message. Interfaces IQueueMessage Represents a message in a queue. IQueueService<T> Defines the operations for interacting with a queue service for a specific type of queue messages."
  },
  "api/Innovt.Cloud.StateMachine.IStateMachine.html": {
    "href": "api/Innovt.Cloud.StateMachine.IStateMachine.html",
    "title": "Interface IStateMachine | Innovt Platform",
    "keywords": "Interface IStateMachine Represents a state machine interface. Namespace: Innovt.Cloud.StateMachine Assembly: Innovt.Cloud.dll Syntax public interface IStateMachine Methods | Edit this page View Source SendTaskFailure(string, string, string, CancellationToken) Sends a failure signal for a task to the state machine. Declaration Task SendTaskFailure(string taskToken, string reason, string taskError, CancellationToken cancellationToken) Parameters Type Name Description string taskToken The token representing the task. string reason The reason for task failure. string taskError The error associated with the task failure. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source SendTaskHeartbeat(string, CancellationToken) Sends a heartbeat signal for a task to the state machine. Declaration Task SendTaskHeartbeat(string taskToken, CancellationToken cancellationToken) Parameters Type Name Description string taskToken The token representing the task. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source SendTaskSuccess(string, object, CancellationToken) Sends a success signal for a task to the state machine. Declaration Task SendTaskSuccess(string taskToken, object output, CancellationToken cancellationToken) Parameters Type Name Description string taskToken The token representing the task. object output The output of the task. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source StartExecution(object, string, string, CancellationToken) Starts the execution of the state machine. Declaration Task StartExecution(object input, string stateMachineArn, string executionId, CancellationToken cancellationToken) Parameters Type Name Description object input The input for the state machine. string stateMachineArn The Amazon Resource Name (ARN) of the state machine. string executionId The execution ID for this execution. CancellationToken cancellationToken The cancellation token to cancel the asynchronous operation. Returns Type Description Task A task representing the asynchronous operation. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.StateMachine.html": {
    "href": "api/Innovt.Cloud.StateMachine.html",
    "title": "Namespace Innovt.Cloud.StateMachine | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.StateMachine Interfaces IStateMachine Represents a state machine interface."
  },
  "api/Innovt.Cloud.Table.BaseRequest.html": {
    "href": "api/Innovt.Cloud.Table.BaseRequest.html",
    "title": "Class BaseRequest | Innovt Platform",
    "keywords": "Class BaseRequest Represents a base request for querying or scanning a database. Inheritance object BaseRequest QueryRequest ScanRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class BaseRequest Properties | Edit this page View Source AttributesToGet Gets or sets the attributes to retrieve in the query or scan. Declaration public string AttributesToGet { get; set; } Property Value Type Description string | Edit this page View Source ExpressionAttributeNames Used to define the attributes that you can customize. Declaration public Dictionary<string, string> ExpressionAttributeNames { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source Filter Gets or sets the filter to apply to the query or scan. Declaration public object Filter { get; set; } Property Value Type Description object | Edit this page View Source FilterExpression Gets or sets the filter expression for the query or scan. Declaration public string FilterExpression { get; set; } Property Value Type Description string | Edit this page View Source IndexName Gets or sets the index name to query or scan. Declaration public string IndexName { get; set; } Property Value Type Description string | Edit this page View Source Page Gets or sets the page token for pagination in the query or scan. Declaration public string Page { get; set; } Property Value Type Description string | Edit this page View Source PageSize Gets or sets the page size for the query or scan. Declaration public int? PageSize { get; set; } Property Value Type Description int? Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.BatchGetItem.html": {
    "href": "api/Innovt.Cloud.Table.BatchGetItem.html",
    "title": "Class BatchGetItem | Innovt Platform",
    "keywords": "Class BatchGetItem Represents a request to batch get items from a database. Inheritance object BatchGetItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class BatchGetItem Properties | Edit this page View Source ConsistentRead Gets or sets a value indicating whether a consistent read is requested. Declaration public bool ConsistentRead { get; set; } Property Value Type Description bool | Edit this page View Source ExpressionAttributeNames Gets or sets the expression attribute names used in the request. Declaration public Dictionary<string, string> ExpressionAttributeNames { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source Keys Gets or sets the keys for which items will be retrieved in the batch. Each key is represented as a dictionary of attribute names and values. Declaration public List<Dictionary<string, object>> Keys { get; set; } Property Value Type Description List<Dictionary<string, object>> | Edit this page View Source ProjectionExpression Gets or sets the projection expression for retrieving specific attributes. Declaration public string ProjectionExpression { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.BatchGetItemRequest.html": {
    "href": "api/Innovt.Cloud.Table.BatchGetItemRequest.html",
    "title": "Class BatchGetItemRequest | Innovt Platform",
    "keywords": "Class BatchGetItemRequest Represents a request to batch get items from multiple tables. Inheritance object BatchGetItemRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class BatchGetItemRequest Constructors | Edit this page View Source BatchGetItemRequest() Initializes a new instance of the BatchGetItemRequest class. Declaration public BatchGetItemRequest() | Edit this page View Source BatchGetItemRequest(string, BatchGetItem) Initializes a new instance of the BatchGetItemRequest class with a table name and batch request item. Declaration public BatchGetItemRequest(string tableName, BatchGetItem batchRequestItem) Parameters Type Name Description string tableName The name of the table. BatchGetItem batchRequestItem The batch request item for the specified table. Properties | Edit this page View Source Items Gets the items to be retrieved in the batch, keyed by table name. Declaration public Dictionary<string, BatchGetItem> Items { get; } Property Value Type Description Dictionary<string, BatchGetItem> Methods | Edit this page View Source AddItem(string, BatchGetItem) Adds a batch request item for a specific table. Declaration public void AddItem(string tableName, BatchGetItem batchRequestItem) Parameters Type Name Description string tableName The name of the table. BatchGetItem batchRequestItem The batch request item for the specified table. Exceptions Type Condition ArgumentNullException Thrown when batchRequestItem is null. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.BatchWriteItem.html": {
    "href": "api/Innovt.Cloud.Table.BatchWriteItem.html",
    "title": "Class BatchWriteItem | Innovt Platform",
    "keywords": "Class BatchWriteItem Represents a request to batch write items to a database. Inheritance object BatchWriteItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class BatchWriteItem Properties | Edit this page View Source DeleteRequest Gets or sets a collection of items to be deleted in the batch. The key represents the table name and the value represents the item to delete. Declaration public Dictionary<string, object> DeleteRequest { get; set; } Property Value Type Description Dictionary<string, object> | Edit this page View Source PutRequest Gets or sets a collection of items to be added or updated in the batch. The key represents the table name and the value represents the item to put. Declaration public Dictionary<string, object> PutRequest { get; set; } Property Value Type Description Dictionary<string, object> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.BatchWriteItemRequest.html": {
    "href": "api/Innovt.Cloud.Table.BatchWriteItemRequest.html",
    "title": "Class BatchWriteItemRequest | Innovt Platform",
    "keywords": "Class BatchWriteItemRequest Represents a request to batch write items to multiple tables. Inheritance object BatchWriteItemRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class BatchWriteItemRequest Constructors | Edit this page View Source BatchWriteItemRequest() Initializes a new instance of the BatchWriteItemRequest class. Declaration public BatchWriteItemRequest() Properties | Edit this page View Source Items Gets the items to be written in the batch, grouped by table name. Declaration public Dictionary<string, List<BatchWriteItem>> Items { get; } Property Value Type Description Dictionary<string, List<BatchWriteItem>> | Edit this page View Source MaxRetry Gets or sets the maximum number of retry attempts in case of failures. Declaration public int MaxRetry { get; set; } Property Value Type Description int | Edit this page View Source RetryDelay Gets or sets the delay between retry attempts in case of failures. Declaration public TimeSpan RetryDelay { get; set; } Property Value Type Description TimeSpan Methods | Edit this page View Source AddItem(string, BatchWriteItem) Adds a batch write item for a specific table. Declaration public void AddItem(string tableName, BatchWriteItem batchRequestItem) Parameters Type Name Description string tableName The name of the table. BatchWriteItem batchRequestItem The batch write item for the specified table. Exceptions Type Condition ArgumentNullException Thrown when batchRequestItem is null. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.BatchWriteItemResponse.html": {
    "href": "api/Innovt.Cloud.Table.BatchWriteItemResponse.html",
    "title": "Class BatchWriteItemResponse | Innovt Platform",
    "keywords": "Class BatchWriteItemResponse Represents a response from a batch write items operation. Inheritance object BatchWriteItemResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class BatchWriteItemResponse Constructors | Edit this page View Source BatchWriteItemResponse() Initializes a new instance of the BatchWriteItemResponse class. Declaration public BatchWriteItemResponse() Properties | Edit this page View Source Success Gets a value indicating whether the batch write operation was successful. Declaration public bool Success { get; } Property Value Type Description bool | Edit this page View Source UnprocessedItems Gets the unprocessed items from the batch write operation, grouped by table name. Declaration public Dictionary<string, List<BatchWriteItem>> UnprocessedItems { get; set; } Property Value Type Description Dictionary<string, List<BatchWriteItem>> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.ExecuteSqlStatementRequest.html": {
    "href": "api/Innovt.Cloud.Table.ExecuteSqlStatementRequest.html",
    "title": "Class ExecuteSqlStatementRequest | Innovt Platform",
    "keywords": "Class ExecuteSqlStatementRequest Represents a request to execute an SQL statement. Inheritance object ExecuteSqlStatementRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class ExecuteSqlStatementRequest Properties | Edit this page View Source ConsistentRead Gets or sets a flag indicating whether to perform a consistent read. Declaration public bool ConsistentRead { get; set; } Property Value Type Description bool | Edit this page View Source NextToken Gets or sets a token that can be used for paginating results if necessary. Declaration public string NextToken { get; set; } Property Value Type Description string | Edit this page View Source Statment Gets or sets the SQL statement to be executed. Declaration public string Statment { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.ExecuteSqlStatementResponse-1.html": {
    "href": "api/Innovt.Cloud.Table.ExecuteSqlStatementResponse-1.html",
    "title": "Class ExecuteSqlStatementResponse<T> | Innovt Platform",
    "keywords": "Class ExecuteSqlStatementResponse<T> Represents a response from executing an SQL statement, including a list of items of type T. Inheritance object ExecuteSqlStatementResponse<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class ExecuteSqlStatementResponse<T> where T : class Type Parameters Name Description T The type of items in the response. Properties | Edit this page View Source Items Gets or sets a list of items of type T returned by the SQL statement execution. Declaration public IList<T> Items { get; set; } Property Value Type Description IList<T> | Edit this page View Source NextToken Gets or sets a token that can be used for paginating results if necessary. Declaration public string NextToken { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.ITableMessage.html": {
    "href": "api/Innovt.Cloud.Table.ITableMessage.html",
    "title": "Interface ITableMessage | Innovt Platform",
    "keywords": "Interface ITableMessage Represents a message associated with a table, defining a unique identifier. Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public interface ITableMessage Properties | Edit this page View Source Id Gets or sets the unique identifier for the table message. Declaration string Id { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.ITableRepository.html": {
    "href": "api/Innovt.Cloud.Table.ITableRepository.html",
    "title": "Interface ITableRepository | Innovt Platform",
    "keywords": "Interface ITableRepository Interface representing a repository for interacting with a table. Inherited Members IDisposable.Dispose() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public interface ITableRepository : IDisposable Methods | Edit this page View Source AddAsync<T>(T, CancellationToken) Asynchronously adds a single item to the repository. Declaration Task AddAsync<T>(T message, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description T message The item to add. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous add operation. Type Parameters Name Description T The type of item to add. | Edit this page View Source AddRangeAsync<T>(ICollection<T>, CancellationToken) Asynchronously adds multiple items to the repository. Declaration Task AddRangeAsync<T>(ICollection<T> messages, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description ICollection<T> messages The list of items to add. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous add operation. Type Parameters Name Description T The type of items to add. | Edit this page View Source BatchGetItem<T>(BatchGetItemRequest, CancellationToken) Asynchronously retrieves multiple items in a batch. Declaration Task<List<T>> BatchGetItem<T>(BatchGetItemRequest batchGetItemRequest, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description BatchGetItemRequest batchGetItemRequest The batch get item request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<List<T>> A list of items of type T. Type Parameters Name Description T The type of items to retrieve. | Edit this page View Source BatchWriteItem(BatchWriteItemRequest, CancellationToken) Asynchronously performs a batch write operation. Declaration Task<BatchWriteItemResponse> BatchWriteItem(BatchWriteItemRequest batchWriteItemRequest, CancellationToken cancellationToken = default) Parameters Type Name Description BatchWriteItemRequest batchWriteItemRequest The batch write item request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<BatchWriteItemResponse> A response from the batch write operation. | Edit this page View Source CreateTransactionWriteItem<T>(T, TransactionWriteOperationType) Create a transaction write item based on the instance. Declaration TransactionWriteItem CreateTransactionWriteItem<T>(T instance, TransactionWriteOperationType operationType = TransactionWriteOperationType.Put) where T : class, new() Parameters Type Name Description T instance A mapped instance with context. TransactionWriteOperationType operationType The operation that you want to perform. Returns Type Description TransactionWriteItem A incomplete transaction write item with properties mapped. Type Parameters Name Description T A typed mapped entity | Edit this page View Source DeleteAsync<T>(object, string, CancellationToken) Asynchronously deletes an item using its identifier and optional range key. Declaration Task DeleteAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description object id The identifier of the item. string rangeKey The range key for the item (optional). CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous delete operation. Type Parameters Name Description T The type of item to delete. | Edit this page View Source DeleteAsync<T>(T, CancellationToken) Asynchronously deletes an item using its value. Declaration Task DeleteAsync<T>(T message, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description T message The item to delete. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous delete operation. Type Parameters Name Description T The type of item to delete. | Edit this page View Source DeleteRangeAsync<T>(ICollection<T>, CancellationToken) Asynchronously a list of item that are from the same type. Declaration Task DeleteRangeAsync<T>(ICollection<T> messages, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description ICollection<T> messages CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T | Edit this page View Source ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken) Executes an SQL statement asynchronously and retrieves the results. Declaration Task<ExecuteSqlStatementResponse<T>> ExecuteStatementAsync<T>(ExecuteSqlStatementRequest sqlStatementRequest, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description ExecuteSqlStatementRequest sqlStatementRequest The SQL statement request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<ExecuteSqlStatementResponse<T>> A response containing the results of the SQL statement execution. Type Parameters Name Description T The type of results to expect. | Edit this page View Source GetByIdAsync<T>(object, string, CancellationToken) Asynchronously retrieves an item by its identifier. Declaration Task<T> GetByIdAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description object id The identifier of the item. string rangeKey The range key for the item (optional). CancellationToken cancellationToken The cancellation token. Returns Type Description Task<T> An item of type T if found; otherwise, null. Type Parameters Name Description T The type of item to retrieve. | Edit this page View Source QueryAsync<T>(QueryRequest, CancellationToken) Asynchronously queries and retrieves a list of items of type T based on the provided query request. Declaration Task<IList<T>> QueryAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description QueryRequest request The query request specifying the query parameters. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<IList<T>> A list of items of type T based on the query request. Type Parameters Name Description T The type of items to retrieve. | Edit this page View Source QueryAsync<T>(object, CancellationToken) Asynchronously queries and retrieves a list of items of type T by their identifier. Declaration Task<IList<T>> QueryAsync<T>(object id, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description object id The identifier of the items. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<IList<T>> A list of items of type T. Type Parameters Name Description T The type of items to retrieve. | Edit this page View Source QueryFirstAsync<T>(object, CancellationToken) Asynchronously queries and retrieves the first item of type T by its identifier. Declaration Task<T> QueryFirstAsync<T>(object id, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description object id The identifier of the item. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<T> An item of type T if found; otherwise, null. Type Parameters Name Description T The type of item to retrieve. | Edit this page View Source QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken) Asynchronously queries and retrieves the first item of type T based on the provided query request. Declaration Task<T> QueryFirstOrDefaultAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description QueryRequest request The query request specifying the query parameters. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<T> The first item of type T based on the query request; otherwise, null. Type Parameters Name Description T The type of item to retrieve. | Edit this page View Source QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken) Asynchronously queries and retrieves multiple sets of results from a single query. Declaration Task<(IList<TResult1> first, IList<TResult2> second)> QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest request, string splitBy, CancellationToken cancellationToken = default) where T : class, new() where TResult1 : class, new() where TResult2 : class, new() Parameters Type Name Description QueryRequest request The query request. string splitBy The parameter to split the results by. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<(IList<TResult1> first, IList<TResult2> second)> Tuple containing the first and second result sets. Type Parameters Name Description T The type of items to retrieve. TResult1 The type of the first result set. TResult2 The type of the second result set. | Edit this page View Source QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken) Asynchronously queries and retrieves multiple sets of results from a single query. Declaration Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class, new() where TResult1 : class, new() where TResult2 : class, new() where TResult3 : class, new() Parameters Type Name Description QueryRequest request The query request specifying the query parameters. string[] splitBy The parameter to split the results by. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> Tuple containing the first, second, and third result sets. Type Parameters Name Description T The type of items to retrieve. TResult1 The type of the first result set. TResult2 The type of the second result set. TResult3 The type of the third result set. | Edit this page View Source QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken) Asynchronously queries and retrieves multiple sets of results from a single query. Declaration Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class, new() where TResult1 : class, new() where TResult2 : class, new() where TResult3 : class, new() where TResult4 : class, new() Parameters Type Name Description QueryRequest request The query request specifying the query parameters. string[] splitBy The parameter to split the results by. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> Tuple containing the first, second, third, and fourth result sets. Type Parameters Name Description T The type of items to retrieve. TResult1 The type of the first result set. TResult2 The type of the second result set. TResult3 The type of the third result set. TResult4 The type of the fourth result set. | Edit this page View Source QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken) Asynchronously queries and retrieves multiple sets of results from a single query. Declaration Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class, new() where TResult1 : class, new() where TResult2 : class, new() where TResult3 : class, new() where TResult4 : class, new() where TResult5 : class, new() Parameters Type Name Description QueryRequest request The query request specifying the query parameters. string[] splitBy The parameter to split the results by. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> Tuple containing the first, second, third, fourth, and fifth result sets. Type Parameters Name Description T The type of items to retrieve. TResult1 The type of the first result set. TResult2 The type of the second result set. TResult3 The type of the third result set. TResult4 The type of the fourth result set. TResult5 The type of the fifth result set. | Edit this page View Source QueryPaginatedByAsync<T>(QueryRequest, CancellationToken) Asynchronously queries and retrieves a paged collection of items of type T based on the provided query request. Declaration Task<PagedCollection<T>> QueryPaginatedByAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description QueryRequest request The query request specifying the query parameters. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<PagedCollection<T>> A paged collection of items of type T based on the query request. Type Parameters Name Description T The type of items to retrieve. | Edit this page View Source ScanAsync<T>(ScanRequest, CancellationToken) Asynchronously scans and retrieves a list of items of type T based on the provided scan request. Declaration Task<IList<T>> ScanAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description ScanRequest request The scan request specifying the scan parameters. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<IList<T>> A list of items of type T based on the scan request. Type Parameters Name Description T The type of items to retrieve. | Edit this page View Source ScanPaginatedByAsync<T>(ScanRequest, CancellationToken) Asynchronously scans and retrieves a paged collection of items of type T based on the provided scan request. Declaration Task<PagedCollection<T>> ScanPaginatedByAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description ScanRequest request The scan request specifying the scan parameters. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<PagedCollection<T>> A paged collection of items of type T based on the scan request. Type Parameters Name Description T The type of items to retrieve. | Edit this page View Source TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken) Asynchronously performs a transactional write of items. Declaration Task TransactWriteItemsAsync(TransactionWriteRequest request, CancellationToken cancellationToken) Parameters Type Name Description TransactionWriteRequest request The transaction write request specifying the items to write. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous transactional write operation. | Edit this page View Source UpdateAsync<T>(T, CancellationToken) This method will perform an update operation on the table. The operation is based on the primary key and type is PUT. Declaration Task<T> UpdateAsync<T>(T instance, CancellationToken cancellationToken = default) where T : class, new() Parameters Type Name Description T instance The instance that you want to update CancellationToken cancellationToken A cancellation token. Returns Type Description Task<T> Type Parameters Name Description T The instance updated. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.QueryRequest.html": {
    "href": "api/Innovt.Cloud.Table.QueryRequest.html",
    "title": "Class QueryRequest | Innovt Platform",
    "keywords": "Class QueryRequest Represents a request for querying a data source. Inheritance object BaseRequest QueryRequest Implements ICloneable Inherited Members BaseRequest.IndexName BaseRequest.Filter BaseRequest.AttributesToGet BaseRequest.PageSize BaseRequest.Page BaseRequest.FilterExpression BaseRequest.ExpressionAttributeNames object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class QueryRequest : BaseRequest, ICloneable Properties | Edit this page View Source KeyConditionExpression Gets or sets the key condition expression used in the query. Declaration public string KeyConditionExpression { get; set; } Property Value Type Description string | Edit this page View Source ScanIndexForward Gets or sets a value indicating whether to scan the index forward or backward. Declaration public bool ScanIndexForward { get; set; } Property Value Type Description bool Methods | Edit this page View Source Clone() Creates a deep copy of the current instance. Declaration public object Clone() Returns Type Description object A new instance of QueryRequest that is a copy of the current instance. Implements ICloneable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.ScanRequest.html": {
    "href": "api/Innovt.Cloud.Table.ScanRequest.html",
    "title": "Class ScanRequest | Innovt Platform",
    "keywords": "Class ScanRequest Represents a request for scanning a data source. Inheritance object BaseRequest ScanRequest Inherited Members BaseRequest.IndexName BaseRequest.Filter BaseRequest.AttributesToGet BaseRequest.PageSize BaseRequest.Page BaseRequest.FilterExpression BaseRequest.ExpressionAttributeNames object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public sealed class ScanRequest : BaseRequest Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.TableMessage.html": {
    "href": "api/Innovt.Cloud.Table.TableMessage.html",
    "title": "Class TableMessage | Innovt Platform",
    "keywords": "Class TableMessage Represents a message associated with a table, implementing the ITableMessage interface. Inheritance object TableMessage Implements ITableMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class TableMessage : ITableMessage Constructors | Edit this page View Source TableMessage() Default constructor for TableMessage. Declaration public TableMessage() | Edit this page View Source TableMessage(string) Constructor for TableMessage with an identifier. Declaration public TableMessage(string id) Parameters Type Name Description string id The unique identifier for the message. | Edit this page View Source TableMessage(string, string) Constructor for TableMessage with an identifier and a range key. Declaration public TableMessage(string id, string rangeKey) Parameters Type Name Description string id The unique identifier for the message. string rangeKey The range key for the message. Properties | Edit this page View Source Id Gets or sets the unique identifier for the message. Declaration public string Id { get; set; } Property Value Type Description string | Edit this page View Source RangeKey Gets or sets the range key associated with the message. Declaration public string RangeKey { get; set; } Property Value Type Description string Implements ITableMessage Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.TransactionWriteItem.html": {
    "href": "api/Innovt.Cloud.Table.TransactionWriteItem.html",
    "title": "Class TransactionWriteItem | Innovt Platform",
    "keywords": "Class TransactionWriteItem Represents an item within a transaction for write operations. Inheritance object TransactionWriteItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class TransactionWriteItem Properties | Edit this page View Source ConditionExpression Gets or sets the condition expression for the transaction item. Declaration public string ConditionExpression { get; set; } Property Value Type Description string | Edit this page View Source ExpressionAttributeValues Represents a dictionary of attribute values to be used in expressions. Declaration public Dictionary<string, object> ExpressionAttributeValues { get; set; } Property Value Type Description Dictionary<string, object> | Edit this page View Source Items Only for Put operations Declaration public Dictionary<string, object> Items { get; set; } Property Value Type Description Dictionary<string, object> | Edit this page View Source Keys Represents a dictionary of keys, typically used for key-value pairs. Declaration public Dictionary<string, object> Keys { get; set; } Property Value Type Description Dictionary<string, object> | Edit this page View Source OperationType Gets or sets the type of write operation in the transaction. Declaration public TransactionWriteOperationType OperationType { get; set; } Property Value Type Description TransactionWriteOperationType | Edit this page View Source TableName Gets or sets the name of the table associated with the transaction item. Declaration public string TableName { get; set; } Property Value Type Description string | Edit this page View Source UpdateExpression Only for update operations Declaration public string UpdateExpression { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.TransactionWriteOperationType.html": {
    "href": "api/Innovt.Cloud.Table.TransactionWriteOperationType.html",
    "title": "Enum TransactionWriteOperationType | Innovt Platform",
    "keywords": "Enum TransactionWriteOperationType Defines the types of write operations within a transaction. Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public enum TransactionWriteOperationType Fields Name Description Check Represents a \"Check\" operation in the transaction. Delete Represents a \"Delete\" operation in the transaction. Put Represents a \"Put\" operation in the transaction. Update Represents an \"Update\" operation in the transaction. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.TransactionWriteRequest.html": {
    "href": "api/Innovt.Cloud.Table.TransactionWriteRequest.html",
    "title": "Class TransactionWriteRequest | Innovt Platform",
    "keywords": "Class TransactionWriteRequest Represents a request for a transactional write operation. Inheritance object TransactionWriteRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cloud.Table Assembly: Innovt.Cloud.dll Syntax public class TransactionWriteRequest Constructors | Edit this page View Source TransactionWriteRequest() Default constructor for TransactionWriteRequest. Declaration public TransactionWriteRequest() Properties | Edit this page View Source ClientRequestToken Gets or sets a client-provided request token to ensure idempotent execution of the transaction. Declaration public string ClientRequestToken { get; set; } Property Value Type Description string | Edit this page View Source TransactItems Gets or sets a list of transactional write items to be included in the transaction. Declaration public IList<TransactionWriteItem> TransactItems { get; set; } Property Value Type Description IList<TransactionWriteItem> Methods | Edit this page View Source AddItem(TransactionWriteItem) Add a new item to the transaction Declaration public void AddItem(TransactionWriteItem item) Parameters Type Name Description TransactionWriteItem item Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cloud.Table.html": {
    "href": "api/Innovt.Cloud.Table.html",
    "title": "Namespace Innovt.Cloud.Table | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud.Table Classes BaseRequest Represents a base request for querying or scanning a database. BatchGetItem Represents a request to batch get items from a database. BatchGetItemRequest Represents a request to batch get items from multiple tables. BatchWriteItem Represents a request to batch write items to a database. BatchWriteItemRequest Represents a request to batch write items to multiple tables. BatchWriteItemResponse Represents a response from a batch write items operation. ExecuteSqlStatementRequest Represents a request to execute an SQL statement. ExecuteSqlStatementResponse<T> Represents a response from executing an SQL statement, including a list of items of type T. QueryRequest Represents a request for querying a data source. ScanRequest Represents a request for scanning a data source. TableMessage Represents a message associated with a table, implementing the ITableMessage interface. TransactionWriteItem Represents an item within a transaction for write operations. TransactionWriteRequest Represents a request for a transactional write operation. Interfaces ITableMessage Represents a message associated with a table, defining a unique identifier. ITableRepository Interface representing a repository for interacting with a table. Enums TransactionWriteOperationType Defines the types of write operations within a transaction."
  },
  "api/Innovt.Cloud.html": {
    "href": "api/Innovt.Cloud.html",
    "title": "Namespace Innovt.Cloud | Innovt Platform",
    "keywords": "Namespace Innovt.Cloud Interfaces IConfiguration Interface to be used for configuration"
  },
  "api/Innovt.Core.Attributes.ArrayValidatorAttribute.html": {
    "href": "api/Innovt.Core.Attributes.ArrayValidatorAttribute.html",
    "title": "Class ArrayValidatorAttribute | Innovt Platform",
    "keywords": "Class ArrayValidatorAttribute Custom validation attribute for arrays. Inheritance object Attribute ValidationAttribute RequiredAttribute ArrayValidatorAttribute Inherited Members RequiredAttribute.AllowEmptyStrings ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Attributes Assembly: Innovt.Core.dll Syntax public sealed class ArrayValidatorAttribute : RequiredAttribute Remarks This attribute is used to validate whether an object is an array and, in the case of string arrays, whether any of the strings in the array are empty or contain only whitespace. Methods | Edit this page View Source IsValid(object) Determines whether the specified value is a valid array. Declaration public override bool IsValid(object value) Parameters Type Name Description object value The value to validate. Returns Type Description bool true if the value is a valid array; otherwise, false. Overrides RequiredAttribute.IsValid(object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Attributes.ModelExcludeFilterAttribute.html": {
    "href": "api/Innovt.Core.Attributes.ModelExcludeFilterAttribute.html",
    "title": "Class ModelExcludeFilterAttribute | Innovt Platform",
    "keywords": "Class ModelExcludeFilterAttribute You can use it for different purpose at the framework Inheritance object Attribute ModelExcludeFilterAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Attributes Assembly: Innovt.Core.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public sealed class ModelExcludeFilterAttribute : Attribute Constructors | Edit this page View Source ModelExcludeFilterAttribute(string) Initializes a new instance of the ModelExcludeFilterAttribute class. Declaration public ModelExcludeFilterAttribute(string propertyName = null) Parameters Type Name Description string propertyName The name of the property to be excluded (optional). | Edit this page View Source ModelExcludeFilterAttribute(params string[]) Initializes a new instance of the ModelExcludeFilterAttribute class. Declaration public ModelExcludeFilterAttribute(params string[] excludeAttributes) Parameters Type Name Description string[] excludeAttributes An array of property names to be excluded. Properties | Edit this page View Source ExcludeAttributes Gets or sets an array of property names to be excluded when applying filters. Declaration public string[] ExcludeAttributes { get; } Property Value Type Description string[] Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Attributes.RequiredGuidAttribute.html": {
    "href": "api/Innovt.Core.Attributes.RequiredGuidAttribute.html",
    "title": "Class RequiredGuidAttribute | Innovt Platform",
    "keywords": "Class RequiredGuidAttribute Inheritance object Attribute ValidationAttribute RequiredAttribute RequiredGuidAttribute Inherited Members RequiredAttribute.AllowEmptyStrings ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Attributes Assembly: Innovt.Core.dll Syntax [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field|AttributeTargets.Parameter)] public sealed class RequiredGuidAttribute : RequiredAttribute Methods | Edit this page View Source IsValid(object) Determines whether the specified value is a non-empty Guid. Declaration public override bool IsValid(object value) Parameters Type Name Description object value The value to validate. Returns Type Description bool true if the value is a non-empty Guid; otherwise, false. Overrides RequiredAttribute.IsValid(object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Attributes.RequiredNumberGreaterThanZeroAttribute.html": {
    "href": "api/Innovt.Core.Attributes.RequiredNumberGreaterThanZeroAttribute.html",
    "title": "Class RequiredNumberGreaterThanZeroAttribute | Innovt Platform",
    "keywords": "Class RequiredNumberGreaterThanZeroAttribute Attribute used to validate that a numeric property, field, or parameter is greater than zero. Inheritance object Attribute ValidationAttribute RequiredNumberGreaterThanZeroAttribute Inherited Members ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Attributes Assembly: Innovt.Core.dll Syntax [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field|AttributeTargets.Parameter)] public sealed class RequiredNumberGreaterThanZeroAttribute : ValidationAttribute Remarks This attribute is applied to properties, fields, or parameters and is used to ensure that the value is a numeric value greater than zero. It can be used for data validation in various scenarios. Methods | Edit this page View Source IsValid(object) Determines whether the specified value is a numeric value greater than zero. Declaration public override bool IsValid(object value) Parameters Type Name Description object value The value to validate. Returns Type Description bool true if the value is a numeric value greater than zero; otherwise, false. Overrides ValidationAttribute.IsValid(object) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Attributes.html": {
    "href": "api/Innovt.Core.Attributes.html",
    "title": "Namespace Innovt.Core.Attributes | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Attributes Classes ArrayValidatorAttribute Custom validation attribute for arrays. ModelExcludeFilterAttribute You can use it for different purpose at the framework RequiredGuidAttribute RequiredNumberGreaterThanZeroAttribute Attribute used to validate that a numeric property, field, or parameter is greater than zero."
  },
  "api/Innovt.Core.Caching.ICacheService.html": {
    "href": "api/Innovt.Core.Caching.ICacheService.html",
    "title": "Interface ICacheService | Innovt Platform",
    "keywords": "Interface ICacheService Represents a caching service interface for storing and retrieving data. Inherited Members IDisposable.Dispose() Namespace: Innovt.Core.Caching Assembly: Innovt.Core.dll Syntax public interface ICacheService : IDisposable Remarks This interface defines methods for retrieving and caching data, as well as removing cached data. Implement this interface to create a caching service for your application. Methods | Edit this page View Source GetValueOrCreate<T>(string, Func<CancellationToken, Task<T>>, TimeSpan, CancellationToken) Asynchronously retrieves a cached value associated with the specified key, or creates and caches it if not found. Declaration Task<T> GetValueOrCreate<T>(string key, Func<CancellationToken, Task<T>> factory, TimeSpan expiration, CancellationToken cancellationToken) Parameters Type Name Description string key The unique identifier for the cached item. Func<CancellationToken, Task<T>> factory A factory function to create the value if not found. TimeSpan expiration The time duration for which the value should be cached. CancellationToken cancellationToken A token to monitor for cancellation requests. Returns Type Description Task<T> The cached value if found, or a newly created value from the factory function if not found. Type Parameters Name Description T The type of the cached value. | Edit this page View Source GetValue<T>(string) Gets the cached value associated with the specified key. Declaration T GetValue<T>(string key) Parameters Type Name Description string key The unique identifier for the cached item. Returns Type Description T The cached value if found; otherwise, the default value for the type. Type Parameters Name Description T The type of the cached value. | Edit this page View Source GetValue<T>(string, Func<CancellationToken, Task<T>>, CancellationToken) Declaration Task<T> GetValue<T>(string key, Func<CancellationToken, Task<T>> factory, CancellationToken cancellationToken) Parameters Type Name Description string key Func<CancellationToken, Task<T>> factory CancellationToken cancellationToken Returns Type Description Task<T> Type Parameters Name Description T | Edit this page View Source Remove(string) Removes a cached value associated with the specified key. Declaration void Remove(string key) Parameters Type Name Description string key The unique identifier for the cached item to be removed. | Edit this page View Source SetValue<T>(string, T, TimeSpan) Sets a value in the cache with the specified key and expiration duration. Declaration void SetValue<T>(string key, T entity, TimeSpan expiration) Parameters Type Name Description string key The unique identifier for the cached item. T entity The value to be cached. TimeSpan expiration The time duration for which the value should be cached. Type Parameters Name Description T The type of the value to be cached. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Caching.LocalCache.html": {
    "href": "api/Innovt.Core.Caching.LocalCache.html",
    "title": "Class LocalCache | Innovt Platform",
    "keywords": "Class LocalCache Represents a local caching service that implements the ICacheService interface using an in-memory cache provided by IMemoryCache. Inheritance object LocalCache Implements ICacheService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Caching Assembly: Innovt.Core.dll Syntax public sealed class LocalCache : ICacheService, IDisposable Remarks This class provides a concrete implementation of the ICacheService interface using an in-memory cache for storing and retrieving data. It is designed for local caching within an application. Constructors | Edit this page View Source LocalCache(IMemoryCache) Initializes a new instance of the LocalCache class with the specified IMemoryCache. Declaration public LocalCache(IMemoryCache memoryCache) Parameters Type Name Description IMemoryCache memoryCache The in-memory cache implementation provided by IMemoryCache. Exceptions Type Condition ArgumentNullException Thrown when memoryCache is null. Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source ~LocalCache() Finalizes an instance of the LocalCache class. Declaration protected ~LocalCache() | Edit this page View Source GetValue<T>(string) Gets the cached value associated with the specified key. Declaration public T GetValue<T>(string key) Parameters Type Name Description string key The unique identifier for the cached item. Returns Type Description T The cached value if found; otherwise, the default value for the type. Type Parameters Name Description T The type of the cached value. | Edit this page View Source Remove(string) Removes a cached value associated with the specified key. Declaration public void Remove(string key) Parameters Type Name Description string key The unique identifier for the cached item to be removed. | Edit this page View Source SetValue<T>(string, T, TimeSpan) Sets a value in the cache with the specified key and expiration duration. Declaration public void SetValue<T>(string key, T entity, TimeSpan expiration) Parameters Type Name Description string key The unique identifier for the cached item. T entity The value to be cached. TimeSpan expiration The time duration for which the value should be cached. Type Parameters Name Description T The type of the value to be cached. Implements ICacheService IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Caching.MultiLayerCacheService.html": {
    "href": "api/Innovt.Core.Caching.MultiLayerCacheService.html",
    "title": "Class MultiLayerCacheService | Innovt Platform",
    "keywords": "Class MultiLayerCacheService Represents a multi-layer caching service that implements the ICacheService interface. Inheritance object MultiLayerCacheService Implements ICacheService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Caching Assembly: Innovt.Core.dll Syntax public sealed class MultiLayerCacheService : ICacheService, IDisposable Remarks This class provides a caching service that supports multiple caching layers. It allows data retrieval and storage through a series of cache layers, falling back to subsequent layers if data is not found in earlier layers. Constructors | Edit this page View Source MultiLayerCacheService(ICacheService, ICacheService, ILogger) Initializes a new instance of the MultiLayerCacheService class with multiple caching layers. Declaration public MultiLayerCacheService(ICacheService cacheDefaultLayer, ICacheService cacheSecondLayer, ILogger logger) Parameters Type Name Description ICacheService cacheDefaultLayer The default caching layer implementing ICacheService. ICacheService cacheSecondLayer The secondary caching layer implementing ICacheService. ILogger logger The logger implementation provided by ILogger. Exceptions Type Condition ArgumentNullException Thrown when cacheDefaultLayer, cacheSecondLayer, or logger is null. | Edit this page View Source MultiLayerCacheService(ICacheService, ILogger) Initializes a new instance of the MultiLayerCacheService class with a default caching layer. Declaration public MultiLayerCacheService(ICacheService cacheDefaultLayer, ILogger logger) Parameters Type Name Description ICacheService cacheDefaultLayer The default caching layer implementing ICacheService. ILogger logger The logger implementation provided by ILogger. Exceptions Type Condition ArgumentNullException Thrown when cacheDefaultLayer or logger is null. Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source ~MultiLayerCacheService() Finalizes an instance of the MultiLayerCacheService class. Declaration protected ~MultiLayerCacheService() | Edit this page View Source GetValue<T>(string) Gets the cached value associated with the specified key. Declaration public T GetValue<T>(string key) Parameters Type Name Description string key The unique identifier for the cached item. Returns Type Description T The cached value if found; otherwise, the default value for the type. Type Parameters Name Description T The type of the cached value. | Edit this page View Source Remove(string) Removes a cached value associated with the specified key. Declaration public void Remove(string key) Parameters Type Name Description string key The unique identifier for the cached item to be removed. | Edit this page View Source SetValue<T>(string, T, TimeSpan) Sets a value in the cache with the specified key and expiration duration. Declaration public void SetValue<T>(string key, T entity, TimeSpan expiration) Parameters Type Name Description string key The unique identifier for the cached item. T entity The value to be cached. TimeSpan expiration The time duration for which the value should be cached. Type Parameters Name Description T The type of the value to be cached. Implements ICacheService IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Caching.html": {
    "href": "api/Innovt.Core.Caching.html",
    "title": "Namespace Innovt.Core.Caching | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Caching Classes LocalCache Represents a local caching service that implements the ICacheService interface using an in-memory cache provided by IMemoryCache. MultiLayerCacheService Represents a multi-layer caching service that implements the ICacheService interface. Interfaces ICacheService Represents a caching service interface for storing and retrieving data."
  },
  "api/Innovt.Core.Collections.Extensions.html": {
    "href": "api/Innovt.Core.Collections.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions A collection of extension methods for common operations on collections and objects. Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Collections Assembly: Innovt.Core.dll Syntax public static class Extensions Remarks This static class provides extension methods to simplify common operations on collections, such as checking for null or empty, adding items, and merging dictionaries. Methods | Edit this page View Source AddFluent<T>(IList<T>, T) Initialize the collection if is null, so you don't have to check it Declaration public static IList<T> AddFluent<T>(this IList<T> list, T value) where T : class Parameters Type Name Description IList<T> list T value Returns Type Description IList<T> Type Parameters Name Description T | Edit this page View Source AddFluent<TKey, TValue>(Dictionary<TKey, TValue>, TKey, TValue) Adds a key-value pair to the dictionary and initializes it if it is null. Declaration public static Dictionary<TKey, TValue> AddFluent<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, TKey key, TValue value) Parameters Type Name Description Dictionary<TKey, TValue> dictionary The Dictionary<TKey, TValue> to add to. TKey key The key to add to the dictionary. TValue value The value to add to the dictionary. Returns Type Description Dictionary<TKey, TValue> Type Parameters Name Description TKey The type of keys in the dictionary. TValue The type of values in the dictionary. | Edit this page View Source HasItems<T>(ICollection<T>) Returns if the collection has more items Declaration public static bool HasItems<T>(this ICollection<T> collection) Parameters Type Name Description ICollection<T> collection Returns Type Description bool true if the collection has more items; otherwise, false. Type Parameters Name Description T | Edit this page View Source IsNotNullOrEmpty<T>(ICollection<T>) Checks if an ICollection<T> is not null and not empty. Declaration public static bool IsNotNullOrEmpty<T>(this ICollection<T> collection) Parameters Type Name Description ICollection<T> collection The ICollection<T> to check. Returns Type Description bool true if the collection is not null and not empty; otherwise, false. Type Parameters Name Description T The type of elements in the collection. | Edit this page View Source IsNotNullOrEmpty<T>(IEnumerable<T>) Checks if an IEnumerable<T> is not null and not empty. Declaration public static bool IsNotNullOrEmpty<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable The IEnumerable<T> to check. Returns Type Description bool true if the enumerable is not null and not empty; otherwise, false. Type Parameters Name Description T The type of elements in the enumerable. | Edit this page View Source IsNullOrEmpty<T>(ICollection<T>) Checks if an ICollection<T> is null or empty. Declaration public static bool IsNullOrEmpty<T>(this ICollection<T> collection) Parameters Type Name Description ICollection<T> collection The ICollection<T> to check. Returns Type Description bool true if the collection is null or empty; otherwise, false. Type Parameters Name Description T The type of elements in the collection. | Edit this page View Source IsNullOrEmpty<T>(IEnumerable<T>) Checks if an IEnumerable<T> is null or empty. Declaration public static bool IsNullOrEmpty<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable<T> enumerable The IEnumerable<T> to check. Returns Type Description bool true if the enumerable is null or empty; otherwise, false. Type Parameters Name Description T The type of elements in the enumerable. | Edit this page View Source IsNullOrEmpty<T>(IList<T>) Checks if an IList<T> is null or empty. Declaration public static bool IsNullOrEmpty<T>(this IList<T> list) Parameters Type Name Description IList<T> list The IList<T> to check. Returns Type Description bool true if the list is null or empty; otherwise, false. Type Parameters Name Description T The type of elements in the list. | Edit this page View Source MapToPagedCollection<T, T2>(IPagedCollection<T>) Using a simple mapper to map an page collection of objects to another page collection of objects Declaration public static PagedCollection<T2> MapToPagedCollection<T, T2>(this IPagedCollection<T> pageCollection) where T : class where T2 : class Parameters Type Name Description IPagedCollection<T> pageCollection Returns Type Description PagedCollection<T2> Type Parameters Name Description T T2 | Edit this page View Source Merge<TKey, TValue>(Dictionary<TKey, TValue>, Dictionary<TKey, TValue>) Merges two dictionaries, adding values from the second dictionary to the first. Declaration public static Dictionary<TKey, TValue> Merge<TKey, TValue>(this Dictionary<TKey, TValue> dictionary, Dictionary<TKey, TValue> dictionarySecond) Parameters Type Name Description Dictionary<TKey, TValue> dictionary The target Dictionary<TKey, TValue> to merge into. Dictionary<TKey, TValue> dictionarySecond The source dictionary to merge from. Returns Type Description Dictionary<TKey, TValue> The updated dictionary after merging. Type Parameters Name Description TKey The type of keys in the dictionaries. TValue The type of values in the dictionaries."
  },
  "api/Innovt.Core.Collections.IPagedCollection-1.html": {
    "href": "api/Innovt.Core.Collections.IPagedCollection-1.html",
    "title": "Interface IPagedCollection<T> | Innovt Platform",
    "keywords": "Interface IPagedCollection<T> Namespace: Innovt.Core.Collections Assembly: Innovt.Core.dll Syntax public interface IPagedCollection<T> Type Parameters Name Description T Properties | Edit this page View Source Items Gets or sets the collection of items in the current page. Declaration IEnumerable<T> Items { get; set; } Property Value Type Description IEnumerable<T> | Edit this page View Source Page Gets or sets the current page number. Declaration string Page { get; set; } Property Value Type Description string | Edit this page View Source PageCount Gets the total number of pages in the paged collection. Declaration int PageCount { get; } Property Value Type Description int | Edit this page View Source PageSize Gets or sets the number of items per page. Declaration int PageSize { get; set; } Property Value Type Description int | Edit this page View Source TotalRecords Gets or sets the total number of records in the entire collection. Declaration int TotalRecords { get; set; } Property Value Type Description int Methods | Edit this page View Source HasNext() Determines whether there is a next page in the paged collection. Declaration bool HasNext() Returns Type Description bool true if there is a next page; otherwise, false. | Edit this page View Source HasPrevious() Determines whether there is a previous page in the paged collection. Declaration bool HasPrevious() Returns Type Description bool true if there is a previous page; otherwise, false. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Collections.PagedCollection-1.html": {
    "href": "api/Innovt.Core.Collections.PagedCollection-1.html",
    "title": "Class PagedCollection<T> | Innovt Platform",
    "keywords": "Class PagedCollection<T> Represents a paged collection of items of type T. Inheritance object PagedCollection<T> Implements IPagedCollection<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Collections Assembly: Innovt.Core.dll Syntax public class PagedCollection<T> : IPagedCollection<T> Type Parameters Name Description T The type of items in the collection. Remarks This class implements the IPagedCollection<T> interface to represent a paged collection of items. It provides properties and methods to work with paged collections, including pagination information and navigation. Constructors | Edit this page View Source PagedCollection() Initializes a new instance of the PagedCollection<T> class with an empty collection. Declaration public PagedCollection() | Edit this page View Source PagedCollection(IEnumerable<T>) Initializes a new instance of the PagedCollection<T> class with the specified collection of items. Declaration public PagedCollection(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection The collection of items to be paged. | Edit this page View Source PagedCollection(IEnumerable<T>, int?, int?) Initializes a new instance of the PagedCollection<T> class with the specified collection of items, page number, and page size. Declaration public PagedCollection(IEnumerable<T> collection, int? page = null, int? pageSize = null) Parameters Type Name Description IEnumerable<T> collection The collection of items to be paged. int? page The current page number. int? pageSize The number of items per page. | Edit this page View Source PagedCollection(IEnumerable<T>, string, int?) Initializes a new instance of the PagedCollection<T> class with the specified collection of items, page number, and page size. Declaration public PagedCollection(IEnumerable<T> collection, string page = null, int? pageSize = null) Parameters Type Name Description IEnumerable<T> collection The collection of items to be paged. string page The current page number as a string. int? pageSize The number of items per page. Properties | Edit this page View Source IsNumberPagination Gets a value indicating whether the page number is a valid numeric representation. Declaration public bool IsNumberPagination { get; } Property Value Type Description bool | Edit this page View Source Items Gets or sets the collection of items in the current page. Declaration public IEnumerable<T> Items { get; set; } Property Value Type Description IEnumerable<T> | Edit this page View Source Page Gets or sets the current page number. Declaration public string Page { get; set; } Property Value Type Description string | Edit this page View Source PageCount Gets the total number of pages in the paged collection. Declaration public int PageCount { get; } Property Value Type Description int | Edit this page View Source PageSize Gets or sets the number of items per page. Declaration public int PageSize { get; set; } Property Value Type Description int | Edit this page View Source TotalRecords Gets or sets the total number of records in the entire collection. Declaration public int TotalRecords { get; set; } Property Value Type Description int Methods | Edit this page View Source HasNext() Determines whether there is a next page in the paged collection. Declaration public bool HasNext() Returns Type Description bool true if there is a next page; otherwise, false. | Edit this page View Source HasPrevious() Determines whether there is a previous page in the paged collection. Declaration public bool HasPrevious() Returns Type Description bool true if there is a previous page; otherwise, false. Implements IPagedCollection<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Collections.ParamsWrappers-1.html": {
    "href": "api/Innovt.Core.Collections.ParamsWrappers-1.html",
    "title": "Class ParamsWrappers<T> | Innovt Platform",
    "keywords": "Class ParamsWrappers<T> Represents a wrapper for an array of parameters of type T. Inheritance object ParamsWrappers<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Collections Assembly: Innovt.Core.dll Syntax public class ParamsWrappers<T> Type Parameters Name Description T The type of parameters in the array. Remarks This class allows you to wrap an array of parameters and provide a convenient way to work with them. It is commonly used when you need to pass a variable number of parameters to a method or function. Constructors | Edit this page View Source ParamsWrappers(params T[]) Initializes a new instance of the ParamsWrappers<T> class with the specified parameters. Declaration public ParamsWrappers(params T[] parameters) Parameters Type Name Description T[] parameters The array of parameters to wrap. Properties | Edit this page View Source Parameters Gets or sets the array of parameters wrapped by this instance. Declaration public T[] Parameters { get; set; } Property Value Type Description T[] Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Collections.html": {
    "href": "api/Innovt.Core.Collections.html",
    "title": "Namespace Innovt.Core.Collections | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Collections Classes Extensions A collection of extension methods for common operations on collections and objects. PagedCollection<T> Represents a paged collection of items of type T. ParamsWrappers<T> Represents a wrapper for an array of parameters of type T. Interfaces IPagedCollection<T>"
  },
  "api/Innovt.Core.Cqrs.Commands.ICommand.html": {
    "href": "api/Innovt.Core.Cqrs.Commands.ICommand.html",
    "title": "Interface ICommand | Innovt Platform",
    "keywords": "Interface ICommand Represents a command interface that can be validated. Inherited Members IValidatableObject.Validate(ValidationContext) Namespace: Innovt.Core.Cqrs.Commands Assembly: Innovt.Core.dll Syntax public interface ICommand : IValidatableObject Remarks This interface is used to define a command, which represents an action or operation that can be executed. Commands often include data or parameters needed to perform the action. Implementing the IValidatableObject interface allows for command validation. Extension Methods Extensions.EnsureIsValid(ICommand, ValidationContext) Extensions.EnsureIsValid(ICommand, string) Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Cqrs.Commands.html": {
    "href": "api/Innovt.Core.Cqrs.Commands.html",
    "title": "Namespace Innovt.Core.Cqrs.Commands | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Cqrs.Commands Interfaces ICommand Represents a command interface that can be validated."
  },
  "api/Innovt.Core.Cqrs.Queries.IFilter.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.IFilter.html",
    "title": "Interface IFilter | Innovt Platform",
    "keywords": "Interface IFilter Represents an interface for defining filters. Inherited Members IValidatableObject.Validate(ValidationContext) Namespace: Innovt.Core.Cqrs.Queries Assembly: Innovt.Core.dll Syntax public interface IFilter : IValidatableObject Remarks This interface serves as a base for defining filters that can be used to filter data in queries or operations. Filters may include various criteria to narrow down data selection. Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Cqrs.Queries.IPagedFilter.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.IPagedFilter.html",
    "title": "Interface IPagedFilter | Innovt Platform",
    "keywords": "Interface IPagedFilter Represents an interface for defining paged filters with pagination options. Inherited Members IValidatableObject.Validate(ValidationContext) Namespace: Innovt.Core.Cqrs.Queries Assembly: Innovt.Core.dll Syntax public interface IPagedFilter : IFilter, IValidatableObject Remarks This interface extends the IFilter interface and includes properties for pagination control. Paged filters are typically used when retrieving data in paginated views or queries. Properties | Edit this page View Source Page Gets or sets the page number for pagination. Declaration int Page { get; set; } Property Value Type Description int | Edit this page View Source PageSize Gets or sets the number of items to display per page. Declaration int PageSize { get; set; } Property Value Type Description int Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Cqrs.Queries.PagedFilterBase-1.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.PagedFilterBase-1.html",
    "title": "Class PagedFilterBase<T> | Innovt Platform",
    "keywords": "Class PagedFilterBase<T> Represents a generic base class for implementing paged filters. Inheritance object PagedFilterBase<T> PagedFilterBase Implements IPagedFilter IFilter IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Cqrs.Queries Assembly: Innovt.Core.dll Syntax public class PagedFilterBase<T> : IPagedFilter, IFilter, IValidatableObject Type Parameters Name Description T The type of search term or filter criteria. Remarks This generic class provides a foundation for creating paged filters with specific filter criteria. Paged filters typically include criteria such as search terms, sorting options, and pagination settings. Properties | Edit this page View Source OrderBy Gets or sets the field by which to order the results. Declaration public string OrderBy { get; set; } Property Value Type Description string | Edit this page View Source OrderByDirection Gets or sets the direction of the sorting (e.g., ascending or descending). Declaration public string OrderByDirection { get; set; } Property Value Type Description string | Edit this page View Source Page Gets or sets the page number for pagination. Declaration public int Page { get; set; } Property Value Type Description int | Edit this page View Source PageSize Gets or sets the number of items to display per page. Declaration public int PageSize { get; set; } Property Value Type Description int | Edit this page View Source Term Gets or sets the search term or filter criteria. Declaration public T Term { get; set; } Property Value Type Description T Methods | Edit this page View Source Validate(ValidationContext) Determines whether the specified object is valid. Declaration public virtual IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection that holds failed-validation information. Implements IPagedFilter IFilter IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Cqrs.Queries.PagedFilterBase.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.PagedFilterBase.html",
    "title": "Class PagedFilterBase | Innovt Platform",
    "keywords": "Class PagedFilterBase Represents a base class for implementing paged filters. Inheritance object PagedFilterBase<string> PagedFilterBase Implements IPagedFilter IFilter IValidatableObject Inherited Members PagedFilterBase<string>.Term PagedFilterBase<string>.OrderBy PagedFilterBase<string>.OrderByDirection PagedFilterBase<string>.Page PagedFilterBase<string>.PageSize PagedFilterBase<string>.Validate(ValidationContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Cqrs.Queries Assembly: Innovt.Core.dll Syntax public class PagedFilterBase : PagedFilterBase<string>, IPagedFilter, IFilter, IValidatableObject Remarks This class provides a foundation for creating paged filters that can be used to filter and paginate data in a query. Paged filters typically include criteria such as search terms, sorting options, and pagination settings. Implements IPagedFilter IFilter IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Cqrs.Queries.SimpleFilter-1.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.SimpleFilter-1.html",
    "title": "Class SimpleFilter<T> | Innovt Platform",
    "keywords": "Class SimpleFilter<T> Represents a simple filter with generic data. Inheritance object SimpleFilter<T> Implements IFilter IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Cqrs.Queries Assembly: Innovt.Core.dll Syntax public class SimpleFilter<T> : IFilter, IValidatableObject Type Parameters Name Description T The type of data used as filter criteria. Remarks This class allows you to create simple filters with generic data that can be used to filter data in queries or operations. The filter may include criteria specific to the data type T. Constructors | Edit this page View Source SimpleFilter(T) Initializes a new instance of the SimpleFilter<T> class with the specified data. Declaration public SimpleFilter(T data) Parameters Type Name Description T data The filter criteria of type T. Properties | Edit this page View Source Data Gets or sets the filter criteria of type T. Declaration public T Data { get; set; } Property Value Type Description T Methods | Edit this page View Source Validate(ValidationContext) Determines whether the specified object is valid. Declaration public virtual IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection that holds failed-validation information. Implements IFilter IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Cqrs.Queries.html": {
    "href": "api/Innovt.Core.Cqrs.Queries.html",
    "title": "Namespace Innovt.Core.Cqrs.Queries | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Cqrs.Queries Classes PagedFilterBase Represents a base class for implementing paged filters. PagedFilterBase<T> Represents a generic base class for implementing paged filters. SimpleFilter<T> Represents a simple filter with generic data. Interfaces IFilter Represents an interface for defining filters. IPagedFilter Represents an interface for defining paged filters with pagination options."
  },
  "api/Innovt.Core.CrossCutting.Ioc.Extensions.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions Provides extension methods for working with IServiceCollection and dependency injection. Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.CrossCutting.Ioc Assembly: Innovt.Core.dll Syntax public static class Extensions Remarks This static class contains extension methods that enhance the functionality of the IServiceCollection interface, enabling easier registration of services and modules. Methods | Edit this page View Source AddModule(IServiceCollection, IocModule) Adds services from the specified module to the services collection. Declaration public static void AddModule(this IServiceCollection services, IocModule module) Parameters Type Name Description IServiceCollection services The IServiceCollection to which services should be added. IocModule module The IocModule containing services to be added. Exceptions Type Condition ArgumentNullException Thrown if services or module is null. | Edit this page View Source AddModule(IServiceCollection, Assembly) Adds services defined in modules from the specified assembly to the services collection. Declaration public static void AddModule(this IServiceCollection services, Assembly assembly) Parameters Type Name Description IServiceCollection services The IServiceCollection to which services should be added. Assembly assembly The assembly containing modules to be added. Exceptions Type Condition ArgumentNullException Thrown if services or assembly is null."
  },
  "api/Innovt.Core.CrossCutting.Ioc.IContainer.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.IContainer.html",
    "title": "Interface IContainer | Innovt Platform",
    "keywords": "Interface IContainer Represents an interface for a dependency injection container. Inherited Members IDisposable.Dispose() Namespace: Innovt.Core.CrossCutting.Ioc Assembly: Innovt.Core.dll Syntax public interface IContainer : IDisposable Remarks This interface defines a contract for a dependency injection container that provides methods for registering modules, resolving services, releasing resources, and creating service scopes. It also includes a method for checking container configuration. Methods | Edit this page View Source AddModule(IocModule) Adds an IocModule to the container. Declaration void AddModule(IocModule iocModule) Parameters Type Name Description IocModule iocModule The IocModule to be added to the container. | Edit this page View Source CheckConfiguration() Checks the configuration of the container. Declaration void CheckConfiguration() | Edit this page View Source CreateScope() Creates and returns a new service scope. Declaration IServiceScope CreateScope() Returns Type Description IServiceScope An IServiceScope representing the new service scope. | Edit this page View Source Release(object) Releases the specified object and frees associated resources. Declaration void Release(object obj) Parameters Type Name Description object obj The object to release. | Edit this page View Source Resolve(Type) Resolves a service of the specified type. Declaration object Resolve(Type type) Parameters Type Name Description Type type The Type of the service to resolve. Returns Type Description object The resolved service object. | Edit this page View Source Resolve<TService>() Resolves a service of type TService. Declaration TService Resolve<TService>() Returns Type Description TService The resolved service object. Type Parameters Name Description TService The type of service to resolve. | Edit this page View Source Resolve<TService>(string) Resolves a named instance of a service of type TService. Declaration TService Resolve<TService>(string instanceKey) Parameters Type Name Description string instanceKey The key identifying the named instance to resolve. Returns Type Description TService The resolved service object. Type Parameters Name Description TService The type of service to resolve. | Edit this page View Source Resolve<TService>(Type) Resolves a service of type TService with the specified type. Declaration TService Resolve<TService>(Type type) Parameters Type Name Description Type type The Type of the service implementation to resolve. Returns Type Description TService The resolved service object. Type Parameters Name Description TService The type of service to resolve. | Edit this page View Source TryToResolve<TService>() Try to resolve a service. If the service is not registered, return null. Declaration TService TryToResolve<TService>() Returns Type Description TService Type Parameters Name Description TService | Edit this page View Source TryToResolve<TService>(Type) This method will not throw an exception if the service is not registered. Return null instead. Declaration TService TryToResolve<TService>(Type type) Parameters Type Name Description Type type The type that you want to get an instance Returns Type Description TService Null or an instance of your type Type Parameters Name Description TService Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.CrossCutting.Ioc.IocLocator.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.IocLocator.html",
    "title": "Class IocLocator | Innovt Platform",
    "keywords": "Class IocLocator Provides a locator for resolving services and managing dependency injection containers. Inheritance object IocLocator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.CrossCutting.Ioc Assembly: Innovt.Core.dll Syntax public static class IocLocator Remarks This static class acts as a locator for resolving services and managing dependency injection containers. It provides methods for initializing the container, resolving services, adding modules, releasing resources, creating service scopes, and checking container configuration. Methods | Edit this page View Source AddModule(IocModule) Adds an IocModule to the container. Declaration public static void AddModule(IocModule module) Parameters Type Name Description IocModule module The IocModule to be added to the container. Exceptions Type Condition ArgumentNullException Thrown if module is null. | Edit this page View Source AddModuleFromAssembly(Assembly) Adds modules from the specified assembly to the container. Declaration public static void AddModuleFromAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly The assembly containing modules to be added. Exceptions Type Condition ArgumentNullException Thrown if assembly is null. | Edit this page View Source CheckConfiguration() Checks the configuration of the container. Declaration public static void CheckConfiguration() | Edit this page View Source CreateScope() Creates and returns a new service scope. Declaration public static IServiceScope CreateScope() Returns Type Description IServiceScope An IServiceScope representing the new service scope. | Edit this page View Source Initialize(IContainer) Initializes the locator with the specified main dependency injection container. Declaration public static void Initialize(IContainer mainContainer) Parameters Type Name Description IContainer mainContainer The main IContainer to be used for service resolution. Exceptions Type Condition ArgumentNullException Thrown if mainContainer is null. | Edit this page View Source Release(object) Releases the specified object and frees associated resources. Declaration public static void Release(object obj) Parameters Type Name Description object obj The object to release. | Edit this page View Source Resolve(Type) Resolves a service of the specified type. Declaration public static object Resolve(Type type) Parameters Type Name Description Type type The Type of the service to resolve. Returns Type Description object The resolved service object. | Edit this page View Source Resolve<TService>() Resolves a service of type TService. Declaration public static TService Resolve<TService>() Returns Type Description TService The resolved service object. Type Parameters Name Description TService The type of service to resolve. | Edit this page View Source Resolve<TService>(string) Resolves a named instance of a service of type TService. Declaration public static TService Resolve<TService>(string intanceKey) Parameters Type Name Description string intanceKey The key identifying the named instance to resolve. Returns Type Description TService The resolved service object. Type Parameters Name Description TService The type of service to resolve. | Edit this page View Source Resolve<TService>(Type) Resolves a service of type TService with the specified type. Declaration public static TService Resolve<TService>(Type type) Parameters Type Name Description Type type The Type of the service implementation to resolve. Returns Type Description TService The resolved service object. Type Parameters Name Description TService The type of service to resolve."
  },
  "api/Innovt.Core.CrossCutting.Ioc.IocModule.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.IocModule.html",
    "title": "Class IocModule | Innovt Platform",
    "keywords": "Class IocModule Represents a module for configuring and managing services within a dependency injection container. Inheritance object IocModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.CrossCutting.Ioc Assembly: Innovt.Core.dll Syntax public class IocModule Remarks This class provides a way to define and manage services within a dependency injection container. Developers can create custom modules to configure and add services to the container, making it easier to organize and maintain the service registration code. Constructors | Edit this page View Source IocModule() Initializes a new instance of the IocModule class with a new ServiceCollection. Declaration public IocModule() | Edit this page View Source IocModule(IServiceCollection) Initializes a new instance of the IocModule class with the provided services. Declaration public IocModule(IServiceCollection services) Parameters Type Name Description IServiceCollection services The IServiceCollection to be used for service registration. Properties | Edit this page View Source Services Gets the IServiceCollection used for service registration and configuration. Declaration public IServiceCollection Services { get; } Property Value Type Description IServiceCollection Methods | Edit this page View Source AppendServices(IServiceCollection) Appends services from an external IServiceCollection to the module's services. Declaration public IServiceCollection AppendServices(IServiceCollection externalServices) Parameters Type Name Description IServiceCollection externalServices The external IServiceCollection containing services to append. Returns Type Description IServiceCollection The updated IServiceCollection after appending external services. | Edit this page View Source GetServices() Gets the IServiceCollection used for service registration and configuration. Declaration public IServiceCollection GetServices() Returns Type Description IServiceCollection The IServiceCollection associated with this module. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.CrossCutting.Ioc.html": {
    "href": "api/Innovt.Core.CrossCutting.Ioc.html",
    "title": "Namespace Innovt.Core.CrossCutting.Ioc | Innovt Platform",
    "keywords": "Namespace Innovt.Core.CrossCutting.Ioc Classes Extensions Provides extension methods for working with IServiceCollection and dependency injection. IocLocator Provides a locator for resolving services and managing dependency injection containers. IocModule Represents a module for configuring and managing services within a dependency injection container. Interfaces IContainer Represents an interface for a dependency injection container."
  },
  "api/Innovt.Core.CrossCutting.Log.ILogger-1.html": {
    "href": "api/Innovt.Core.CrossCutting.Log.ILogger-1.html",
    "title": "Interface ILogger<T> | Innovt Platform",
    "keywords": "Interface ILogger<T> Provides a typed logging interface that inherits from ILogger. Inherited Members ILogger.Debug(string) ILogger.Debug(string, params object[]) ILogger.Debug(Exception, string) ILogger.Debug(Exception, string, params object[]) ILogger.Error(string) ILogger.Error(string, params object[]) ILogger.Error(Exception, string) ILogger.Error(Exception, string, params object[]) ILogger.Fatal(string) ILogger.Fatal(string, params object[]) ILogger.Fatal(Exception, string) ILogger.Fatal(Exception, string, params object[]) ILogger.Info(string) ILogger.Info(string, params object[]) ILogger.Info(Exception, string) ILogger.Info(Exception, string, params object[]) ILogger.Verbose(string) ILogger.Verbose(string, params object[]) ILogger.Verbose(Exception, string) ILogger.Verbose(Exception, string, params object[]) ILogger.Warning(string) ILogger.Warning(string, params object[]) ILogger.Warning(Exception, string) ILogger.Warning(Exception, string, params object[]) Namespace: Innovt.Core.CrossCutting.Log Assembly: Innovt.Core.dll Syntax public interface ILogger<T> : ILogger Type Parameters Name Description T The type associated with the logger. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.CrossCutting.Log.ILogger.html": {
    "href": "api/Innovt.Core.CrossCutting.Log.ILogger.html",
    "title": "Interface ILogger | Innovt Platform",
    "keywords": "Interface ILogger Provides an interface for logging messages with different log levels and message formatting options. Namespace: Innovt.Core.CrossCutting.Log Assembly: Innovt.Core.dll Syntax [CLSCompliant(true)] public interface ILogger Methods | Edit this page View Source Debug(Exception, string) Debug is the noisiest level, rarely (if ever) enabled for a production app. Declaration void Debug(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception An Exception parameter string messageTemplate The message templete will follow the Serilog Pattern. | Edit this page View Source Debug(Exception, string, params object[]) Debug is the noisiest level, rarely (if ever) enabled for a production app. Declaration void Debug(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception An exception string messageTemplate The message templete will follow the Serilog Pattern. object[] propertyValues | Edit this page View Source Debug(string) Debug is the noisiest level, rarely (if ever) enabled for a production app. Declaration void Debug(string message) Parameters Type Name Description string message The message will follow the Serilog Pattern. | Edit this page View Source Debug(string, params object[]) Debug is the noisiest level, rarely (if ever) enabled for a production app. Declaration void Debug(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The message templete will follow the Serilog Pattern. object[] propertyValues Properties that will be used as template of the message | Edit this page View Source Error(Exception, string) Logs an error message with an exception and a message template. Declaration void Error(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The error message template following the Serilog pattern. | Edit this page View Source Error(Exception, string, params object[]) Logs an error message with an exception, a message template, and optional property values. Declaration void Error(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The error message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Error(string) An error logger Declaration void Error(string message) Parameters Type Name Description string message The message templete will follow the Serilog Pattern. | Edit this page View Source Error(string, params object[]) Logs an error message with a message template and optional property values. Declaration void Error(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The error message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Fatal(Exception, string) Logs a fatal error message with an exception and a message template. Declaration void Fatal(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The fatal error message template following the Serilog pattern. | Edit this page View Source Fatal(Exception, string, params object[]) Logs a fatal error message with an exception, a message template, and optional property values. Declaration void Fatal(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The fatal error message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Fatal(string) Logs a fatal error message. Declaration void Fatal(string message) Parameters Type Name Description string message The fatal error message to log. | Edit this page View Source Fatal(string, params object[]) Logs a fatal error message with a message template and optional property values. Declaration void Fatal(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The fatal error message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Info(Exception, string) Logs an information message with an exception and a message template. Declaration void Info(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The information message template following the Serilog pattern. | Edit this page View Source Info(Exception, string, params object[]) Logs an information message with an exception, a message template, and optional property values. Declaration void Info(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The information message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Info(string) Logs an information message. Declaration void Info(string message) Parameters Type Name Description string message The information message to log. | Edit this page View Source Info(string, params object[]) Logs an information message with a message template and optional property values. Declaration void Info(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The information message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Verbose(Exception, string) Logs a verbose message with an exception and a message template. Declaration void Verbose(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The verbose message template following the Serilog pattern. | Edit this page View Source Verbose(Exception, string, params object[]) Logs a verbose message with an exception, a message template, and optional property values. Declaration void Verbose(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The verbose message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Verbose(string) Logs a verbose message. Declaration void Verbose(string message) Parameters Type Name Description string message The verbose message to log. | Edit this page View Source Verbose(string, params object[]) Logs a verbose message with a message template and optional property values. Declaration void Verbose(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The verbose message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Warning(Exception, string) Logs a warning message with an exception and a message template. Declaration void Warning(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The warning message template following the Serilog pattern. | Edit this page View Source Warning(Exception, string, params object[]) Logs a warning message with an exception, a message template, and optional property values. Declaration void Warning(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to log. string messageTemplate The warning message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. | Edit this page View Source Warning(string) Logs a warning message. Declaration void Warning(string message) Parameters Type Name Description string message The warning message to log. | Edit this page View Source Warning(string, params object[]) Logs a warning message with a message template and optional property values. Declaration void Warning(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The warning message template following the Serilog pattern. object[] propertyValues Optional property values used in the message template. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.CrossCutting.Log.html": {
    "href": "api/Innovt.Core.CrossCutting.Log.html",
    "title": "Namespace Innovt.Core.CrossCutting.Log | Innovt Platform",
    "keywords": "Namespace Innovt.Core.CrossCutting.Log Interfaces ILogger Provides an interface for logging messages with different log levels and message formatting options. ILogger<T> Provides a typed logging interface that inherits from ILogger."
  },
  "api/Innovt.Core.Exceptions.BaseException.html": {
    "href": "api/Innovt.Core.Exceptions.BaseException.html",
    "title": "Class BaseException | Innovt Platform",
    "keywords": "Class BaseException Inheritance object Exception BaseException BusinessException ConfigurationException CriticalException FatalException HttpException SqlSyntaxException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Core.Exceptions Assembly: Innovt.Core.dll Syntax [Serializable] public class BaseException : Exception, ISerializable Constructors | Edit this page View Source BaseException() Initializes a new instance of the BaseException class. Declaration public BaseException() | Edit this page View Source BaseException(Exception) Initializes a new instance of the BaseException class with a reference to the inner exception that is the cause of this exception. Declaration public BaseException(Exception innerException) Parameters Type Name Description Exception innerException The exception that is the cause of the current exception, or a null reference if no inner exception is specified. | Edit this page View Source BaseException(SerializationInfo, StreamingContext) Initializes a new instance of the BaseException class with serialized data. Declaration protected BaseException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo The SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext streamingContext The StreamingContext that contains contextual information about the source or destination. | Edit this page View Source BaseException(string) Initializes a new instance of the BaseException class with a specified error message. Declaration public BaseException(string message) Parameters Type Name Description string message The error message that explains the reason for the exception. | Edit this page View Source BaseException(string, Exception) Initializes a new instance of the BaseException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public BaseException(string message, Exception innerException) Parameters Type Name Description string message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference if no inner exception is specified. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Exceptions.BusinessException.html": {
    "href": "api/Innovt.Core.Exceptions.BusinessException.html",
    "title": "Class BusinessException | Innovt Platform",
    "keywords": "Class BusinessException Inheritance object Exception BaseException BusinessException CodeMismatchException ExpiredCodeException InvalidPasswordException PasswordResetRequiredException UserNameAlreadyExistsException UserNotAuthorizedException UserNotConfirmedException UserNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Core.Exceptions Assembly: Innovt.Core.dll Syntax [Serializable] public class BusinessException : BaseException, ISerializable Constructors | Edit this page View Source BusinessException() Initializes a new instance of the BusinessException class with no specified error message. Declaration public BusinessException() | Edit this page View Source BusinessException(ErrorMessage) Initializes a new instance of the BusinessException class with a single validation error. Declaration public BusinessException(ErrorMessage error) Parameters Type Name Description ErrorMessage error A single validation error message. | Edit this page View Source BusinessException(ErrorMessage[]) Initializes a new instance of the BusinessException class with an array of validation errors. Declaration public BusinessException(ErrorMessage[] errors) Parameters Type Name Description ErrorMessage[] errors An array of validation error messages. | Edit this page View Source BusinessException(IList<ErrorMessage>) Initializes a new instance of the BusinessException class with a list of validation errors. Declaration public BusinessException(IList<ErrorMessage> errors) Parameters Type Name Description IList<ErrorMessage> errors A list of validation error messages. | Edit this page View Source BusinessException(SerializationInfo, StreamingContext) Initializes a new instance of the BusinessException class with serialized data. Declaration protected BusinessException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo The SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext streamingContext The StreamingContext that contains contextual information about the source or destination. | Edit this page View Source BusinessException(string) Initializes a new instance of the BusinessException class with a specified error message. Declaration public BusinessException(string message) Parameters Type Name Description string message The error message that explains the reason for the exception. | Edit this page View Source BusinessException(string, Exception) Initializes a new instance of the BusinessException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public BusinessException(string message, Exception ex) Parameters Type Name Description string message The error message that explains the reason for the exception. Exception ex The exception that is the cause of the current exception, or a null reference if no inner exception is specified. | Edit this page View Source BusinessException(string, string) Initializes a new instance of the BusinessException class with a code and a specified error message. Declaration public BusinessException(string code, string message) Parameters Type Name Description string code A code associated with the exception. string message The error message that explains the reason for the exception. | Edit this page View Source BusinessException(string, string, Exception) Initializes a new instance of the BusinessException class with a code, a specified error message, and a reference to the inner exception that is the cause of this exception. Declaration public BusinessException(string code, string message, Exception ex) Parameters Type Name Description string code A code associated with the exception. string message The error message that explains the reason for the exception. Exception ex The exception that is the cause of the current exception, or a null reference if no inner exception is specified. Properties | Edit this page View Source Code Gets or sets a code associated with the exception. Declaration public string Code { get; protected set; } Property Value Type Description string | Edit this page View Source Detail Gets the detail information associated with the exception. Declaration public object Detail { get; } Property Value Type Description object | Edit this page View Source Errors Gets or sets a list of validation error messages. Declaration public IEnumerable<ErrorMessage> Errors { get; set; } Property Value Type Description IEnumerable<ErrorMessage> Methods | Edit this page View Source ReadFullErrors() Reads the full validation error messages. Declaration public string ReadFullErrors() Returns Type Description string A concatenated string of validation error messages. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Exceptions.ConfigurationException.html": {
    "href": "api/Innovt.Core.Exceptions.ConfigurationException.html",
    "title": "Class ConfigurationException | Innovt Platform",
    "keywords": "Class ConfigurationException Inheritance object Exception BaseException ConfigurationException ConnectionStringException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Core.Exceptions Assembly: Innovt.Core.dll Syntax [Serializable] public class ConfigurationException : BaseException, ISerializable Constructors | Edit this page View Source ConfigurationException(Exception) Initializes a new instance of the ConfigurationException class with a specified inner exception. Declaration public ConfigurationException(Exception ex) Parameters Type Name Description Exception ex The inner exception that caused the configuration issue. | Edit this page View Source ConfigurationException(SerializationInfo, StreamingContext) Initializes a new instance of the ConfigurationException class with serialized data. Declaration protected ConfigurationException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo The SerializationInfo containing serialized object data. StreamingContext streamingContext The StreamingContext representing the source or destination of the serialized data. | Edit this page View Source ConfigurationException(string) Initializes a new instance of the ConfigurationException class with a specified error message. Declaration public ConfigurationException(string message) Parameters Type Name Description string message The error message that describes the issue with the configuration. | Edit this page View Source ConfigurationException(string, Exception) Initializes a new instance of the ConfigurationException class with a specified error message and inner exception. Declaration public ConfigurationException(string message, Exception ex) Parameters Type Name Description string message The error message that describes the issue with the configuration. Exception ex The inner exception that caused the configuration issue. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Exceptions.CriticalException.html": {
    "href": "api/Innovt.Core.Exceptions.CriticalException.html",
    "title": "Class CriticalException | Innovt Platform",
    "keywords": "Class CriticalException Inheritance object Exception BaseException CriticalException InternalException MissingEntityMapException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Core.Exceptions Assembly: Innovt.Core.dll Syntax [Serializable] public class CriticalException : BaseException, ISerializable Constructors | Edit this page View Source CriticalException(Exception) Initializes a new instance of the CriticalException class with a specified inner exception. Declaration public CriticalException(Exception ex) Parameters Type Name Description Exception ex The inner exception that caused the critical issue. | Edit this page View Source CriticalException(SerializationInfo, StreamingContext) Initializes a new instance of the CriticalException class with serialized data. Declaration protected CriticalException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo The SerializationInfo containing serialized object data. StreamingContext streamingContext The StreamingContext representing the source or destination of the serialized data. | Edit this page View Source CriticalException(string) Initializes a new instance of the CriticalException class with a specified error message. Declaration public CriticalException(string message) Parameters Type Name Description string message The error message that describes the critical issue. | Edit this page View Source CriticalException(string, Exception) Initializes a new instance of the CriticalException class with a specified error message and inner exception. Declaration public CriticalException(string message, Exception ex) Parameters Type Name Description string message The error message that describes the critical issue. Exception ex The inner exception that caused the critical issue. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Exceptions.ErrorMessage.html": {
    "href": "api/Innovt.Core.Exceptions.ErrorMessage.html",
    "title": "Class ErrorMessage | Innovt Platform",
    "keywords": "Class ErrorMessage You can use it to create custom error messages that will be used by our framework. Inheritance object ErrorMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Exceptions Assembly: Innovt.Core.dll Syntax public class ErrorMessage Constructors | Edit this page View Source ErrorMessage() Initializes a new instance of the ErrorMessage class with default values. Declaration public ErrorMessage() | Edit this page View Source ErrorMessage(string) Constructor Declaration public ErrorMessage(string message) Parameters Type Name Description string message The message that you want to send. | Edit this page View Source ErrorMessage(string, string) Constructor Declaration public ErrorMessage(string message, string propertyName) Parameters Type Name Description string message The message that you want to send. string propertyName The property(optional) that this error happened. | Edit this page View Source ErrorMessage(string, string, string) Constructor Declaration public ErrorMessage(string message, string propertyName, string code) Parameters Type Name Description string message The message that you want to send. string propertyName The property(optional) that this error happened. string code The code of you error Properties | Edit this page View Source Code Gets or sets the error code associated with the error message. Declaration public string Code { get; protected set; } Property Value Type Description string | Edit this page View Source Message Gets or sets the error message describing the error. Declaration public string Message { get; protected set; } Property Value Type Description string | Edit this page View Source PropertyName Gets or sets the name of the property to which the error is related. Declaration public string PropertyName { get; protected set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Exceptions.FatalException.html": {
    "href": "api/Innovt.Core.Exceptions.FatalException.html",
    "title": "Class FatalException | Innovt Platform",
    "keywords": "Class FatalException Inheritance object Exception BaseException FatalException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Core.Exceptions Assembly: Innovt.Core.dll Syntax [Serializable] public class FatalException : BaseException, ISerializable Constructors | Edit this page View Source FatalException(Exception) Initializes a new instance of the FatalException class with a specified inner exception. Declaration public FatalException(Exception ex) Parameters Type Name Description Exception ex The inner exception that is the cause of this exception. | Edit this page View Source FatalException(SerializationInfo, StreamingContext) Declaration protected FatalException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters Type Name Description SerializationInfo serializationInfo StreamingContext streamingContext | Edit this page View Source FatalException(string) Initializes a new instance of the FatalException class with a specified error message. Declaration public FatalException(string message) Parameters Type Name Description string message The error message that describes the reason for the exception. | Edit this page View Source FatalException(string, Exception) Initializes a new instance of the FatalException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public FatalException(string message, Exception ex) Parameters Type Name Description string message The error message that describes the reason for the exception. Exception ex The inner exception that is the cause of this exception. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Exceptions.html": {
    "href": "api/Innovt.Core.Exceptions.html",
    "title": "Namespace Innovt.Core.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Exceptions Classes BaseException BusinessException ConfigurationException CriticalException ErrorMessage You can use it to create custom error messages that will be used by our framework. FatalException"
  },
  "api/Innovt.Core.HealthChecks.IServiceHealthCheck.html": {
    "href": "api/Innovt.Core.HealthChecks.IServiceHealthCheck.html",
    "title": "Interface IServiceHealthCheck | Innovt Platform",
    "keywords": "Interface IServiceHealthCheck Represents a service health check that can be used to monitor the status of a service. Namespace: Innovt.Core.HealthChecks Assembly: Innovt.Core.dll Syntax public interface IServiceHealthCheck Properties | Edit this page View Source Name Gets or sets the name of the health check, which is used to identify the check. Declaration string Name { get; set; } Property Value Type Description string Methods | Edit this page View Source Check() Performs the health check to determine the status of the associated service. Declaration bool Check() Returns Type Description bool true if the service is healthy; otherwise, false. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.HealthChecks.html": {
    "href": "api/Innovt.Core.HealthChecks.html",
    "title": "Namespace Innovt.Core.HealthChecks | Innovt Platform",
    "keywords": "Namespace Innovt.Core.HealthChecks Interfaces IServiceHealthCheck Represents a service health check that can be used to monitor the status of a service."
  },
  "api/Innovt.Core.Http.Extensions.html": {
    "href": "api/Innovt.Core.Http.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions Provides a set of extension methods for working with URIs and HTTP requests. Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Http Assembly: Innovt.Core.dll Syntax public static class Extensions Methods | Edit this page View Source AddBody(HttpWebRequest, string) Adds a request body to an HTTP request. Declaration public static HttpWebRequest AddBody(this HttpWebRequest request, string dataToSend) Parameters Type Name Description HttpWebRequest request The HTTP request to which the body will be added. string dataToSend The data to include in the request body. Returns Type Description HttpWebRequest The modified HTTP request with the added request body. | Edit this page View Source AddHeader(HttpWebRequest, NameValueCollection) Adds headers to an HTTP request. Declaration public static HttpWebRequest AddHeader(this HttpWebRequest request, NameValueCollection headerData) Parameters Type Name Description HttpWebRequest request The HTTP request to which headers will be added. NameValueCollection headerData The collection of headers to add to the request. Returns Type Description HttpWebRequest The modified HTTP request with added headers. | Edit this page View Source AppendResourceUri(Uri, string) Appends a resource path to the base URI. Declaration public static Uri AppendResourceUri(this Uri baseUri, string resource) Parameters Type Name Description Uri baseUri The base URI to which the resource path will be appended. string resource The resource path to append. Returns Type Description Uri A new URI containing the base URI with the appended resource path. Exceptions Type Condition ArgumentNullException Thrown if the baseUri is null. Exception Thrown if the URL cannot be created."
  },
  "api/Innovt.Core.Http.HttpConnection.html": {
    "href": "api/Innovt.Core.Http.HttpConnection.html",
    "title": "Class HttpConnection | Innovt Platform",
    "keywords": "Class HttpConnection Provides methods for making HTTP requests and handling responses. Inheritance object HttpConnection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Http Assembly: Innovt.Core.dll Syntax public static class HttpConnection Methods | Edit this page View Source Delete(Uri, string, NameValueCollection, int?) Sends an HTTP DELETE request to the specified endpoint and retrieves detailed information about the request and response. Declaration public static HttpRequestDetail Delete(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null) Parameters Type Name Description Uri endpoint The URI of the HTTP endpoint. string dataToSend Optional data to send with the request. NameValueCollection headerData Optional headers to include in the request. int? connectionTimeout Optional connection timeout in milliseconds. Returns Type Description HttpRequestDetail An HttpRequestDetail object containing request and response details. | Edit this page View Source Get<T>(Uri, ISerializer, string, NameValueCollection, int?) Sends an HTTP GET request to the specified endpoint, deserializes the response to the specified type, and returns the deserialized object. Declaration public static T Get<T>(Uri endpoint, ISerializer serializer, string dataToSend = null, NameValueCollection headerData = null, int? connectionTimeout = null) where T : class Parameters Type Name Description Uri endpoint The URI of the HTTP endpoint. ISerializer serializer An instance of the serializer to use for deserialization. string dataToSend Optional data to send with the request. NameValueCollection headerData Optional headers to include in the request. int? connectionTimeout Optional connection timeout in milliseconds. Returns Type Description T The deserialized response of type T. Type Parameters Name Description T The type to deserialize the response to. Exceptions Type Condition HttpException Thrown if the response status code is not OK or Created. | Edit this page View Source Head(Uri, string, NameValueCollection, int?) Sends an HTTP HEAD request to the specified endpoint and retrieves detailed information about the request and response. Declaration public static HttpRequestDetail Head(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null) Parameters Type Name Description Uri endpoint The URI of the HTTP endpoint. string dataToSend Optional data to send with the request. NameValueCollection headerData Optional headers to include in the request. int? connectionTimeout Optional connection timeout in milliseconds. Returns Type Description HttpRequestDetail An HttpRequestDetail object containing request and response details. | Edit this page View Source Post(Uri, string, NameValueCollection, int?) Sends an HTTP POST request to the specified endpoint and retrieves detailed information about the request and response. Declaration public static HttpRequestDetail Post(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null) Parameters Type Name Description Uri endpoint The URI of the HTTP endpoint. string dataToSend The data to send with the request. NameValueCollection headerData Optional headers to include in the request. int? connectionTimeout Optional connection timeout in milliseconds. Returns Type Description HttpRequestDetail An HttpRequestDetail object containing request and response details. | Edit this page View Source Post<T>(Uri, string, ISerializer, NameValueCollection, int?) Sends an HTTP POST request to the specified endpoint and retrieves the response, deserializing it to the specified type. Declaration public static T Post<T>(Uri endpoint, string dataToSend, ISerializer serializer, NameValueCollection headerData = null, int? connectionTimeout = null) where T : class Parameters Type Name Description Uri endpoint The URI of the HTTP endpoint. string dataToSend The data to send with the request. ISerializer serializer An instance of the serializer to use for deserialization. NameValueCollection headerData Optional headers to include in the request. int? connectionTimeout Optional connection timeout in milliseconds. Returns Type Description T The deserialized response of type T. Type Parameters Name Description T The type to deserialize the response to. Exceptions Type Condition ArgumentNullException Thrown if the serializer is null. HttpException Thrown if the response status code is not OK or Created. | Edit this page View Source Put(Uri, string, NameValueCollection, int?) Sends an HTTP PUT request to the specified endpoint and retrieves detailed information about the request and response. Declaration public static HttpRequestDetail Put(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null) Parameters Type Name Description Uri endpoint The URI of the HTTP endpoint. string dataToSend Optional data to send with the request. NameValueCollection headerData Optional headers to include in the request. int? connectionTimeout Optional connection timeout in milliseconds. Returns Type Description HttpRequestDetail An HttpRequestDetail object containing request and response details."
  },
  "api/Innovt.Core.Http.HttpException.html": {
    "href": "api/Innovt.Core.Http.HttpException.html",
    "title": "Class HttpException | Innovt Platform",
    "keywords": "Class HttpException Represents an exception related to HTTP requests, providing information about the request details and any associated exception. Inheritance object Exception BaseException HttpException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Core.Http Assembly: Innovt.Core.dll Syntax public class HttpException : BaseException, ISerializable Constructors | Edit this page View Source HttpException(HttpRequestDetail) Initializes a new instance of the HttpException class with information about the HTTP request. Declaration public HttpException(HttpRequestDetail detail) Parameters Type Name Description HttpRequestDetail detail The details of the HTTP request that triggered the exception. | Edit this page View Source HttpException(Exception) Initializes a new instance of the HttpException class with an exception related to the HTTP request. Declaration public HttpException(Exception requestException) Parameters Type Name Description Exception requestException The exception related to the HTTP request. Properties | Edit this page View Source RequestDetail Gets the details of the HTTP request that triggered the exception. Declaration public HttpRequestDetail RequestDetail { get; } Property Value Type Description HttpRequestDetail | Edit this page View Source RequestException Gets the exception related to the HTTP request. Declaration public Exception RequestException { get; } Property Value Type Description Exception Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Http.HttpRequestDetail.html": {
    "href": "api/Innovt.Core.Http.HttpRequestDetail.html",
    "title": "Class HttpRequestDetail | Innovt Platform",
    "keywords": "Class HttpRequestDetail Represents detailed information about an HTTP request, including its identifier, URL, method, headers, request content, response content, and response status code. Inheritance object HttpRequestDetail Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Http Assembly: Innovt.Core.dll Syntax public class HttpRequestDetail Constructors | Edit this page View Source HttpRequestDetail() Initializes a new instance of the HttpRequestDetail class with a unique identifier. Declaration public HttpRequestDetail() Properties | Edit this page View Source Header Gets or sets the collection of headers associated with the HTTP request. Declaration public NameValueCollection Header { get; set; } Property Value Type Description NameValueCollection | Edit this page View Source Id Gets or sets the unique identifier for the HTTP request detail. Declaration public Guid Id { get; set; } Property Value Type Description Guid | Edit this page View Source Method Gets or sets the HTTP method used in the request (e.g., GET, POST, PUT). Declaration public string Method { get; set; } Property Value Type Description string | Edit this page View Source RawRequest Gets or sets the raw content of the HTTP request. Declaration public string RawRequest { get; set; } Property Value Type Description string | Edit this page View Source RawResponse Gets or sets the raw content of the HTTP response. Declaration public string RawResponse { get; set; } Property Value Type Description string | Edit this page View Source ResponseStatusCode Gets or sets the HTTP status code of the response. Declaration public HttpStatusCode ResponseStatusCode { get; set; } Property Value Type Description HttpStatusCode | Edit this page View Source Url Gets or sets the URL of the HTTP request. Declaration public string Url { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Http.html": {
    "href": "api/Innovt.Core.Http.html",
    "title": "Namespace Innovt.Core.Http | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Http Classes Extensions Provides a set of extension methods for working with URIs and HTTP requests. HttpConnection Provides methods for making HTTP requests and handling responses. HttpException Represents an exception related to HTTP requests, providing information about the request details and any associated exception. HttpRequestDetail Represents detailed information about an HTTP request, including its identifier, URL, method, headers, request content, response content, and response status code."
  },
  "api/Innovt.Core.Security.IBasicAuthService.html": {
    "href": "api/Innovt.Core.Security.IBasicAuthService.html",
    "title": "Interface IBasicAuthService | Innovt Platform",
    "keywords": "Interface IBasicAuthService Represents an interface for basic authentication services. Namespace: Innovt.Core.Security Assembly: Innovt.Core.dll Syntax public interface IBasicAuthService Methods | Edit this page View Source Authenticate(string, string) Authenticates a user based on a provided username and password. Declaration Task<bool> Authenticate(string userName, string password) Parameters Type Name Description string userName The username to authenticate. string password The password associated with the username. Returns Type Description Task<bool> A task that represents the asynchronous authentication operation. The task result is true if the authentication is successful; otherwise, false. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Security.html": {
    "href": "api/Innovt.Core.Security.html",
    "title": "Namespace Innovt.Core.Security | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Security Interfaces IBasicAuthService Represents an interface for basic authentication services."
  },
  "api/Innovt.Core.Serialization.Converters.DateTimeConverter.html": {
    "href": "api/Innovt.Core.Serialization.Converters.DateTimeConverter.html",
    "title": "Class DateTimeConverter | Innovt Platform",
    "keywords": "Class DateTimeConverter Custom JSON converter for DateTime objects with a specified format. Inheritance object JsonConverter JsonConverter<DateTime> DateTimeConverter Inherited Members JsonConverter<DateTime>.CanConvert(Type) JsonConverter<DateTime>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<DateTime>.WriteAsPropertyName(Utf8JsonWriter, DateTime, JsonSerializerOptions) JsonConverter<DateTime>.HandleNull JsonConverter<DateTime>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Serialization.Converters Assembly: Innovt.Core.dll Syntax public class DateTimeConverter : JsonConverter<DateTime> Constructors | Edit this page View Source DateTimeConverter(string) Initializes a new instance of the DateTimeConverter class with the specified format. Declaration public DateTimeConverter(string format) Parameters Type Name Description string format The format string to be used for formatting and parsing DateTime objects. Methods | Edit this page View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts a JSON value to a DateTime object. Declaration public override DateTime Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader The JSON reader to read from. Type typeToConvert The type to convert (should be DateTime). JsonSerializerOptions options The JSON serializer options. Returns Type Description DateTime A DateTime object parsed from the JSON value. Overrides JsonConverter<DateTime>.Read(ref Utf8JsonReader, Type, JsonSerializerOptions) | Edit this page View Source Write(Utf8JsonWriter, DateTime, JsonSerializerOptions) Writes a DateTime value as a JSON string using the specified format. Declaration public override void Write(Utf8JsonWriter writer, DateTime value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer The JSON writer to write to. DateTime value The DateTime value to be written. JsonSerializerOptions options The JSON serializer options. Overrides JsonConverter<DateTime>.Write(Utf8JsonWriter, DateTime, JsonSerializerOptions) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Serialization.Converters.html": {
    "href": "api/Innovt.Core.Serialization.Converters.html",
    "title": "Namespace Innovt.Core.Serialization.Converters | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Serialization.Converters Classes DateTimeConverter Custom JSON converter for DateTime objects with a specified format."
  },
  "api/Innovt.Core.Serialization.DeserializerFactory.html": {
    "href": "api/Innovt.Core.Serialization.DeserializerFactory.html",
    "title": "Class DeserializerFactory | Innovt Platform",
    "keywords": "Class DeserializerFactory Represents a factory for deserializing JSON content into objects based on their registered type mappings. Inheritance object DeserializerFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Serialization Assembly: Innovt.Core.dll Syntax public class DeserializerFactory Properties | Edit this page View Source Instance Gets the singleton instance of the DeserializerFactory. Declaration public static DeserializerFactory Instance { get; } Property Value Type Description DeserializerFactory Methods | Edit this page View Source AddMapping<T>(string) Adds a type mapping to the factory, associating a key with a specific .NET type. Declaration public DeserializerFactory AddMapping<T>(string key = null) Parameters Type Name Description string key The key used to identify the type mapping. If not provided, the full name of the type will be used as the key. Returns Type Description DeserializerFactory The current DeserializerFactory instance for method chaining. Type Parameters Name Description T The .NET type to be associated with the key. | Edit this page View Source Deserialize(string, string) Deserializes JSON content into an object of the registered type associated with the specified key. Declaration public object Deserialize(string key, string content) Parameters Type Name Description string key The key associated with the registered type mapping. string content The JSON content to deserialize. Returns Type Description object The deserialized object of the registered type, or null if the key is not found or the content is empty. | Edit this page View Source Deserialize<T>(string, string) Deserializes JSON content into an object of the registered type associated with the specified key. Declaration public T Deserialize<T>(string key, string content) Parameters Type Name Description string key The key associated with the registered type mapping. string content The JSON content to deserialize. Returns Type Description T The deserialized object of the specified type, or the default value for T if the key is not found or the content is empty. Type Parameters Name Description T The expected type of the deserialized object. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Serialization.ISerializer.html": {
    "href": "api/Innovt.Core.Serialization.ISerializer.html",
    "title": "Interface ISerializer | Innovt Platform",
    "keywords": "Interface ISerializer Represents an interface for serializing and deserializing objects. Namespace: Innovt.Core.Serialization Assembly: Innovt.Core.dll Syntax public interface ISerializer Methods | Edit this page View Source DeserializeObject<T>(string) Deserializes a serialized object of type T. Declaration T DeserializeObject<T>(string serializedObject) Parameters Type Name Description string serializedObject The serialized object as a string. Returns Type Description T The deserialized object of type T. Type Parameters Name Description T The type of object to deserialize. | Edit this page View Source SerializeObject<T>(T) Serializes an object of type T to a string. Declaration string SerializeObject<T>(T obj) Parameters Type Name Description T obj The object to serialize. Returns Type Description string The serialized object as a string. Type Parameters Name Description T The type of object to serialize. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Serialization.JsonFormatAttribute.html": {
    "href": "api/Innovt.Core.Serialization.JsonFormatAttribute.html",
    "title": "Class JsonFormatAttribute | Innovt Platform",
    "keywords": "Class JsonFormatAttribute Represents a custom JSON attribute for specifying the format of a property when serializing to JSON. Inheritance object Attribute JsonAttribute JsonFormatAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Serialization Assembly: Innovt.Core.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class JsonFormatAttribute : JsonAttribute Constructors | Edit this page View Source JsonFormatAttribute(string) Initializes a new instance of the JsonFormatAttribute class with the specified format. Declaration public JsonFormatAttribute(string format) Parameters Type Name Description string format The format string used to specify how the property should be formatted when serialized to JSON. Properties | Edit this page View Source Format Gets the format string that specifies how the property should be formatted when serialized to JSON. Declaration public string Format { get; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Serialization.JsonSerializer.html": {
    "href": "api/Innovt.Core.Serialization.JsonSerializer.html",
    "title": "Class JsonSerializer | Innovt Platform",
    "keywords": "Class JsonSerializer Provides JSON serialization and deserialization using System.Text.Json. Inheritance object JsonSerializer Implements ISerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Serialization Assembly: Innovt.Core.dll Syntax public class JsonSerializer : ISerializer Constructors | Edit this page View Source JsonSerializer(bool, bool, bool, IList<JsonConverter>) Initializes a new instance of the JsonSerializer class with specified options. Declaration public JsonSerializer(bool ignoreNullValues = true, bool ignoreReadOnlyProperties = true, bool propertyNameCaseInsensitive = true, IList<JsonConverter> converters = null) Parameters Type Name Description bool ignoreNullValues Indicates whether null values should be ignored during serialization. bool ignoreReadOnlyProperties Indicates whether read-only properties should be ignored during serialization. bool propertyNameCaseInsensitive Indicates whether property name casing should be treated as case-insensitive. IList<JsonConverter> converters A list of custom JSON converters to be used during serialization and deserialization. Methods | Edit this page View Source DeserializeObject<T>(string) Deserializes a JSON string into an object of type T. Declaration public T DeserializeObject<T>(string serializedObject) Parameters Type Name Description string serializedObject The JSON string to deserialize. Returns Type Description T The deserialized object of type T. Type Parameters Name Description T The type of object to deserialize. | Edit this page View Source SerializeObject<T>(T) Serializes an object of type T into a JSON string. Declaration public string SerializeObject<T>(T obj) Parameters Type Name Description T obj The object to serialize. Returns Type Description string The serialized object as a JSON string. Type Parameters Name Description T The type of object to serialize. Exceptions Type Condition ArgumentNullException Thrown when the obj parameter is null. Implements ISerializer Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Serialization.XmlSerializer.html": {
    "href": "api/Innovt.Core.Serialization.XmlSerializer.html",
    "title": "Class XmlSerializer | Innovt Platform",
    "keywords": "Class XmlSerializer Provides XML serialization and deserialization using System.Xml.Serialization. Inheritance object XmlSerializer Implements ISerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Serialization Assembly: Innovt.Core.dll Syntax public class XmlSerializer : ISerializer Methods | Edit this page View Source DeserializeObject<T>(string) Deserializes an XML string into an object of type T. Declaration public T DeserializeObject<T>(string serializedObject) Parameters Type Name Description string serializedObject The XML string to deserialize. Returns Type Description T The deserialized object of type T. Type Parameters Name Description T The type of object to deserialize. | Edit this page View Source SerializeObject<T>(T) Serializes an object of type T into an XML string. Declaration public string SerializeObject<T>(T obj) Parameters Type Name Description T obj The object to serialize. Returns Type Description string The serialized object as an XML string. Type Parameters Name Description T The type of object to serialize. | Edit this page View Source SerializeObject<T>(T, Dictionary<string, string>) Serializes an object of type T into an XML string with optional namespaces. Declaration public string SerializeObject<T>(T obj, Dictionary<string, string> namespaces) Parameters Type Name Description T obj The object to serialize. Dictionary<string, string> namespaces A dictionary of namespaces to include in the XML serialization. Returns Type Description string The serialized object as an XML string. Type Parameters Name Description T The type of object to serialize. Exceptions Type Condition Exception Thrown when there is an XML serialization error. Implements ISerializer Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Serialization.html": {
    "href": "api/Innovt.Core.Serialization.html",
    "title": "Namespace Innovt.Core.Serialization | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Serialization Classes DeserializerFactory Represents a factory for deserializing JSON content into objects based on their registered type mappings. JsonFormatAttribute Represents a custom JSON attribute for specifying the format of a property when serializing to JSON. JsonSerializer Provides JSON serialization and deserialization using System.Text.Json. XmlSerializer Provides XML serialization and deserialization using System.Xml.Serialization. Interfaces ISerializer Represents an interface for serializing and deserializing objects."
  },
  "api/Innovt.Core.Utilities.AsyncHelper.html": {
    "href": "api/Innovt.Core.Utilities.AsyncHelper.html",
    "title": "Class AsyncHelper | Innovt Platform",
    "keywords": "Class AsyncHelper Reference https://cpratt.co/async-tips-tricks/ Inheritance object AsyncHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public static class AsyncHelper Methods | Edit this page View Source RunSync(Func<Task>, CancellationToken) Runs an asynchronous action synchronously. Declaration public static void RunSync(Func<Task> func, CancellationToken cancellationToken = default) Parameters Type Name Description Func<Task> func The asynchronous action to run synchronously. CancellationToken cancellationToken An optional cancellation token for the operation. | Edit this page View Source RunSync<TResult>(Func<Task<TResult>>, CancellationToken) Runs an asynchronous function synchronously and returns its result. Declaration public static TResult RunSync<TResult>(Func<Task<TResult>> func, CancellationToken cancellationToken = default) Parameters Type Name Description Func<Task<TResult>> func The asynchronous function to run synchronously. CancellationToken cancellationToken An optional cancellation token for the operation. Returns Type Description TResult The result of the asynchronous function. Type Parameters Name Description TResult The type of the result returned by the asynchronous function."
  },
  "api/Innovt.Core.Utilities.Check.html": {
    "href": "api/Innovt.Core.Utilities.Check.html",
    "title": "Class Check | Innovt Platform",
    "keywords": "Class Check Provides static methods for checking arguments and values. Inheritance object Check Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public static class Check Methods | Edit this page View Source AreEqual(decimal, decimal, string) Checks if two decimal values are equal; otherwise, throws a BusinessException with the specified message. Declaration public static void AreEqual(decimal value, decimal value2, string message) Parameters Type Name Description decimal value The first decimal value to compare. decimal value2 The second decimal value to compare. string message The message to include in the exception if the values are not equal. Exceptions Type Condition BusinessException Thrown if the two decimal values are not equal. | Edit this page View Source AreEqual(int, int, string) Checks if two long values are equal; otherwise, throws a BusinessException with the specified message. Declaration public static void AreEqual(int value, int value2, string message) Parameters Type Name Description int value The first long value to compare. int value2 The second long value to compare. string message The message for the exception if the values are not equal. Exceptions Type Condition BusinessException Thrown if the values are not equal, with the specified message. | Edit this page View Source AreEqual(long, long, string) Checks if two decimal values are equal; otherwise, throws a BusinessException with the specified message. Declaration public static void AreEqual(long value, long value2, string message) Parameters Type Name Description long value The first decimal value to compare. long value2 The second decimal value to compare. string message The message for the exception if the values are not equal. Exceptions Type Condition BusinessException Thrown if the values are not equal, with the specified message. | Edit this page View Source AreEqual(string, string, string) Checks if two integer values are equal; otherwise, throws a BusinessException with the specified message. Declaration public static void AreEqual(string value, string value2, string message) Parameters Type Name Description string value The first integer value to compare. string value2 The second integer value to compare. string message The message for the exception if the values are not equal. Exceptions Type Condition BusinessException Thrown if the values are not equal, with the specified message. | Edit this page View Source AreNotEqual(int, int, string) Checks if two integer values are not equal; otherwise, throws a BusinessException with the specified message. Declaration public static void AreNotEqual(int value, int value2, string message) Parameters Type Name Description int value The first integer value to compare. int value2 The second integer value to compare. string message The message for the exception if the values are equal. Exceptions Type Condition BusinessException Thrown if the values are equal, with the specified message. | Edit this page View Source AreNotEqual(long, long, string) Checks if two long values are not equal; otherwise, throws a BusinessException with the specified message. Declaration public static void AreNotEqual(long value, long value2, string message) Parameters Type Name Description long value The first long value to compare. long value2 The second long value to compare. string message The message for the exception if the values are equal. Exceptions Type Condition BusinessException Thrown if the values are equal, with the specified message. | Edit this page View Source AreNotEqual(string, string, string) Checks if two strings are not equal while ignoring case sensitivity; otherwise, throws a BusinessException with the specified message. Declaration public static void AreNotEqual(string value, string value2, string message) Parameters Type Name Description string value The first string to compare. string value2 The second string to compare. string message The message for the exception if the strings are equal. Exceptions Type Condition BusinessException Thrown if the strings are equal, ignoring case sensitivity, with the specified message. | Edit this page View Source NotEmpty(string, string) Checks if the specified string is not null and not empty; otherwise, throws an ArgumentNullException or ArgumentException. Declaration public static string NotEmpty(string value, string parameterName = null) Parameters Type Name Description string value The string to check for null and emptiness. string parameterName The name of the parameter associated with the string. Returns Type Description string The original string if it is not null and not empty. Exceptions Type Condition ArgumentNullException Thrown if the string is null. ArgumentException Thrown if the string is empty. | Edit this page View Source NotEmpty<T>(IReadOnlyList<T>, string) Checks if the specified collection is not null and not empty; otherwise, throws an ArgumentException . Declaration public static IReadOnlyList<T> NotEmpty<T>(IReadOnlyList<T> value, string parameterName) Parameters Type Name Description IReadOnlyList<T> value The collection to check for null and emptiness. string parameterName The name of the parameter associated with the collection. Returns Type Description IReadOnlyList<T> The original collection if it is not null and not empty. Type Parameters Name Description T The type of the collection elements. Exceptions Type Condition ArgumentNullException Thrown if the collection is null. ArgumentException Thrown if the collection is empty. | Edit this page View Source NotLessThanZero(int, string) Checks if the specified integer value is greater than zero; otherwise, throws a BusinessException. Declaration public static int NotLessThanZero(int value, string parameterName) Parameters Type Name Description int value The integer value to check. string parameterName The name of the parameter associated with the value. Returns Type Description int Zero if the value is greater than zero. Exceptions Type Condition BusinessException Thrown if the value is less than or equal to zero. | Edit this page View Source NotLessThanZero(int?, string) Checks if the specified nullable integer value is greater than zero; otherwise, throws a BusinessException. Declaration public static int NotLessThanZero(int? value, string parameterName) Parameters Type Name Description int? value The nullable integer value to check. string parameterName The name of the parameter associated with the value. Returns Type Description int Zero if the value is greater than zero. Exceptions Type Condition BusinessException Thrown if the value is less than or equal to zero. | Edit this page View Source NotLessThanZero<T>(params T[]) Checks if the specified array of integers are greater than zero; otherwise, throws a BusinessException. Declaration public static void NotLessThanZero<T>(params T[] value) Parameters Type Name Description T[] value The array of values to check. Type Parameters Name Description T The type of the array elements, which must be convertible to an integer. Exceptions Type Condition BusinessException Thrown if any of the values is less than or equal to zero. | Edit this page View Source NotNullWithBusinessException<T>(T, string) Checks if the specified value is not null; otherwise, throws a BusinessException with the specified message. Declaration public static T NotNullWithBusinessException<T>(T value, string message) Parameters Type Name Description T value The value to check for null. string message The message for the exception if the value is null. Returns Type Description T The original value if it is not null. Type Parameters Name Description T The type of the value to check. Exceptions Type Condition BusinessException Thrown if the value is null, with the specified message. | Edit this page View Source NotNullWithCriticalException<T>(T, string) Checks if the specified value is not null; otherwise, throws a CriticalException with the specified message. Declaration public static T NotNullWithCriticalException<T>(T value, string message) Parameters Type Name Description T value The value to check for null. string message The message for the exception if the value is null. Returns Type Description T The original value if it is not null. Type Parameters Name Description T The type of the value to check. Exceptions Type Condition CriticalException Thrown if the value is null, with the specified message. | Edit this page View Source NotNull<T>(T, string) Checks if the specified value is not null; otherwise, throws an ArgumentNullException. Declaration public static T NotNull<T>(T value, string parameterName) Parameters Type Name Description T value The value to check for null. string parameterName The name of the parameter associated with the value. Returns Type Description T The original value if it is not null. Type Parameters Name Description T The type of the value to check. Exceptions Type Condition ArgumentNullException Thrown if the value is null. | Edit this page View Source NullButNotEmpty(string, string) Checks if the specified string is null but not empty; otherwise, throws an ArgumentException. Declaration public static string NullButNotEmpty(string value, string parameterName) Parameters Type Name Description string value The string to check for null but not emptiness. string parameterName The name of the parameter associated with the string. Returns Type Description string The original string if it is not null but not empty. Exceptions Type Condition ArgumentException Thrown if the string is null or empty."
  },
  "api/Innovt.Core.Utilities.ConstantClass.html": {
    "href": "api/Innovt.Core.Utilities.ConstantClass.html",
    "title": "Class ConstantClass | Innovt Platform",
    "keywords": "Class ConstantClass Represents a base class for constants with a string value. Inheritance object ConstantClass Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public class ConstantClass Constructors | Edit this page View Source ConstantClass(string) Initializes a new instance of the ConstantClass class with the specified value. Declaration protected ConstantClass(string value) Parameters Type Name Description string value The constant value as a string. Properties | Edit this page View Source Value Gets the constant value as a string. Declaration public string Value { get; } Property Value Type Description string Methods | Edit this page View Source Equals(ConstantClass) Determines whether this instance of ConstantClass is equal to another ConstantClass by comparing their string values. Declaration public virtual bool Equals(ConstantClass obj) Parameters Type Name Description ConstantClass obj The ConstantClass to compare with this instance. Returns Type Description bool true if the objects are equal; otherwise, false. | Edit this page View Source Equals(object) Determines whether this instance of ConstantClass is equal to another object by comparing their string values. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the objects are equal; otherwise, false. Overrides object.Equals(object) | Edit this page View Source Equals(string) Compares a ConstantClass instance and a string for equality by comparing their string values. Declaration protected virtual bool Equals(string value) Parameters Type Name Description string value Returns Type Description bool true if the ConstantClass and string are equal; otherwise, false. | Edit this page View Source GetHashCode() Returns the hash code for this instance of ConstantClass. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Operators | Edit this page View Source operator ==(ConstantClass, ConstantClass) Compares a ConstantClass instance and a string for equality by comparing their string values. Declaration public static bool operator ==(ConstantClass a, ConstantClass b) Parameters Type Name Description ConstantClass a The ConstantClass to compare. ConstantClass b The string to compare. Returns Type Description bool true if the ConstantClass and string are equal; otherwise, false. | Edit this page View Source operator ==(ConstantClass, string) Compares a string and a ConstantClass instance for equality by comparing their string values. Declaration public static bool operator ==(ConstantClass a, string b) Parameters Type Name Description ConstantClass a The string to compare. string b The ConstantClass to compare. Returns Type Description bool true if the string and ConstantClass are equal; otherwise, false. | Edit this page View Source operator ==(string, ConstantClass) Compares two ConstantClass instances for inequality by comparing their string values. Declaration public static bool operator ==(string a, ConstantClass b) Parameters Type Name Description string a The first ConstantClass to compare. ConstantClass b The second ConstantClass to compare. Returns Type Description bool true if the two ConstantClass instances are not equal; otherwise, false. | Edit this page View Source implicit operator string(ConstantClass) Implicitly converts a ConstantClass instance to a string by returning its string value. Declaration public static implicit operator string(ConstantClass value) Parameters Type Name Description ConstantClass value The ConstantClass instance to convert. Returns Type Description string The string value of the ConstantClass instance. | Edit this page View Source operator !=(ConstantClass, ConstantClass) Compares a ConstantClass instance and a string for inequality by comparing their string values. Declaration public static bool operator !=(ConstantClass a, ConstantClass b) Parameters Type Name Description ConstantClass a The ConstantClass to compare. ConstantClass b The string to compare. Returns Type Description bool true if the ConstantClass and string are not equal; otherwise, false. | Edit this page View Source operator !=(ConstantClass, string) Compares a string and a ConstantClass instance for inequality by comparing their string values. Declaration public static bool operator !=(ConstantClass a, string b) Parameters Type Name Description ConstantClass a The string to compare. string b The ConstantClass to compare. Returns Type Description bool true if the string and ConstantClass are not equal; otherwise, false. | Edit this page View Source operator !=(string, ConstantClass) Compares a string and a ConstantClass instance for inequality by comparing their string values. Declaration public static bool operator !=(string a, ConstantClass b) Parameters Type Name Description string a The string to compare. ConstantClass b The ConstantClass to compare. Returns Type Description bool true if the string and ConstantClass are not equal; otherwise, false. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Utilities.Cryptography.html": {
    "href": "api/Innovt.Core.Utilities.Cryptography.html",
    "title": "Class Cryptography | Innovt Platform",
    "keywords": "Class Cryptography Provides methods for cryptographic operations, including hashing and encryption. Inheritance object Cryptography Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public static class Cryptography Methods | Edit this page View Source AesDecrypt(string, string) Decrypts an encrypted string using the AES algorithm with a specified key. Declaration public static string AesDecrypt(string encryptedText, string keyString) Parameters Type Name Description string encryptedText The encrypted string to be decrypted. string keyString The key for AES decryption. Returns Type Description string The decrypted plaintext string. | Edit this page View Source AesEncrypt(string, string) Encrypts a plaintext string using the AES algorithm with a specified key. Declaration public static string AesEncrypt(string plainText, string keyString) Parameters Type Name Description string plainText The plaintext string to be encrypted. string keyString The key for AES encryption. Returns Type Description string The encrypted string. | Edit this page View Source Md5Hash(string) Computes the MD5 hash of a given plaintext password. Declaration public static string Md5Hash(this string plainPassword) Parameters Type Name Description string plainPassword The plaintext password to be hashed. Returns Type Description string The MD5 hash of the plaintext password. | Edit this page View Source RijndaelDecrypt(string, string) Decrypts an encrypted string using the Rijndael algorithm with a specified key. Declaration public static string RijndaelDecrypt(string encryptedText, string keyString) Parameters Type Name Description string encryptedText The encrypted string to be decrypted. string keyString The key for Rijndael decryption. Returns Type Description string The decrypted plaintext string. | Edit this page View Source RijndaelEncrypt(string, string) Encrypts a plaintext string using the Rijndael algorithm with a specified key. Declaration public static string RijndaelEncrypt(string plainText, string keyString) Parameters Type Name Description string plainText The plaintext string to be encrypted. string keyString The key for Rijndael encryption. Returns Type Description string The encrypted string. | Edit this page View Source ShaHash(string, string) Computes the SHA-256 hash of a given plaintext password with an optional salt. Declaration public static string ShaHash(this string plainPassword, string salt = \"\") Parameters Type Name Description string plainPassword The plaintext password to be hashed. string salt An optional salt value to add to the plaintext before hashing. Returns Type Description string The SHA-256 hash of the plaintext password."
  },
  "api/Innovt.Core.Utilities.Extensions.html": {
    "href": "api/Innovt.Core.Utilities.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions Provides extension methods for various data types and operations. Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public static class Extensions Methods | Edit this page View Source ConvertToStringArray(int) Converts an integer value to a string array containing numbers from 0 to the specified value. Declaration public static string[] ConvertToStringArray(this int value) Parameters Type Name Description int value The integer value specifying the upper bound of the array. Returns Type Description string[] An array of strings containing numbers from 0 to the specified value. | Edit this page View Source CopyTo(Stream, Stream) Copies data from one stream to another. Declaration public static void CopyTo(Stream src, Stream dest) Parameters Type Name Description Stream src The source stream to copy from. Stream dest The destination stream to copy to. | Edit this page View Source ExtractCoordinates(string, char) Extracts latitude and longitude coordinates from a string. Declaration public static (long Latitude, long Longitude) ExtractCoordinates(this string str, char splittedBy = ';') Parameters Type Name Description string str The string containing coordinates. char splittedBy The character used to split latitude and longitude values. Returns Type Description (long Latitude, long Longitude) A tuple containing latitude and longitude values. | Edit this page View Source FormatToCurrency(decimal) Formats a decimal value as currency. Declaration public static string FormatToCurrency(this decimal value) Parameters Type Name Description decimal value The decimal value to format. Returns Type Description string A string representation of the decimal value in currency format. | Edit this page View Source FormatToExtensionDateTime(DateTimeOffset) Formats a DateTimeOffset as a human-readable date and time string. Declaration public static string FormatToExtensionDateTime(this DateTimeOffset value) Parameters Type Name Description DateTimeOffset value The DateTimeOffset to format. Returns Type Description string A string representation of the DateTimeOffset in a custom format. | Edit this page View Source FormatToPeriod(DateTime, DateTime, CultureInfo) Formats a date period between two DateTimes as a string. Declaration public static string FormatToPeriod(this DateTime startDate, DateTime endDate, CultureInfo cultureInfo = null) Parameters Type Name Description DateTime startDate The start date of the period. DateTime endDate The end date of the period. CultureInfo cultureInfo Optional CultureInfo for formatting. Defaults to null. Returns Type Description string A string representing the formatted date period. | Edit this page View Source FormatToPeriod(DateTimeOffset, DateTimeOffset, CultureInfo) Formats a date period between two DateTimeOffset instances as a string, considering culture information. Declaration public static string FormatToPeriod(this DateTimeOffset startDate, DateTimeOffset endDate, CultureInfo cultureInfo = null) Parameters Type Name Description DateTimeOffset startDate The start date of the period. DateTimeOffset endDate The end date of the period. CultureInfo cultureInfo Optional CultureInfo for formatting. Defaults to null. Returns Type Description string A string representing the formatted date period. | Edit this page View Source FormatToSimpleDateTime(DateTimeOffset) Formats a DateTimeOffset as a simple date and time string. Declaration public static string FormatToSimpleDateTime(this DateTimeOffset value) Parameters Type Name Description DateTimeOffset value The DateTimeOffset to format. Returns Type Description string A string representation of the DateTimeOffset in a simple format. | Edit this page View Source FromByteArray<T>(byte[]) Deserializes a byte array into an object of the specified type. Declaration public static T FromByteArray<T>(this byte[] data) Parameters Type Name Description byte[] data The byte array containing serialized data. Returns Type Description T The deserialized object of type T. Type Parameters Name Description T The type of object to deserialize into. | Edit this page View Source FromUnixTimestamp(double) Converts a Unix timestamp (seconds since the Unix epoch) to a DateTime. Declaration public static DateTime FromUnixTimestamp(this double unixTimestamp) Parameters Type Name Description double unixTimestamp The Unix timestamp to convert. Returns Type Description DateTime A DateTime representing the converted date and time. | Edit this page View Source GetMimeType(string) Returns a mimetype based on the file extension Declaration public static string GetMimeType(this string fileName) Parameters Type Name Description string fileName Returns Type Description string | Edit this page View Source IsGuidEmpty(Guid) Determines whether the specified Guid is empty. Declaration public static bool IsGuidEmpty(this Guid id) Parameters Type Name Description Guid id The Guid to check for emptiness. Returns Type Description bool True if the Guid is empty; otherwise, false. | Edit this page View Source IsGuidNUllOrEmpty(Guid?) Determines whether the specified nullable Guid is null or empty. Declaration public static bool IsGuidNUllOrEmpty(this Guid? id) Parameters Type Name Description Guid? id The nullable Guid to check for null or emptiness. Returns Type Description bool True if the Guid is null or empty; otherwise, false. | Edit this page View Source IsLessThanOrEqualToZero(double) Determines whether the specified double is less than or equal to zero. Declaration public static bool IsLessThanOrEqualToZero(this double id) Parameters Type Name Description double id The double to check. Returns Type Description bool True if the double is less than or equal to zero; otherwise, false. | Edit this page View Source IsLessThanOrEqualToZero(int) Determines whether the specified integer is less than or equal to zero. Declaration public static bool IsLessThanOrEqualToZero(this int id) Parameters Type Name Description int id The integer to check. Returns Type Description bool True if the integer is less than or equal to zero; otherwise, false. | Edit this page View Source IsLessThanOrEqualToZero(long) Determines whether the specified long integer is less than or equal to zero. Declaration public static bool IsLessThanOrEqualToZero(this long id) Parameters Type Name Description long id The long integer to check. Returns Type Description bool True if the long integer is less than or equal to zero; otherwise, false. | Edit this page View Source IsLessThanOrEqualToZero(int?) Determines whether the specified nullable integer is null or less than or equal to zero. Declaration public static bool IsLessThanOrEqualToZero(this int? id) Parameters Type Name Description int? id The nullable integer to check. Returns Type Description bool True if the integer is null or less than or equal to zero; otherwise, false. | Edit this page View Source IsNull(object) Determines whether the specified object is null. Declaration public static bool IsNull(this object obj) Parameters Type Name Description object obj The object to check for null. Returns Type Description bool True if the object is null; otherwise, false. | Edit this page View Source IsPrimitiveType(Type) Determines whether the specified type is a primitive data type. Declaration public static bool IsPrimitiveType(this Type type) Parameters Type Name Description Type type The Type to check. Returns Type Description bool True if the type is a primitive data type; otherwise, false. | Edit this page View Source LastDayOfMonth(DateTimeOffset) Returns the last day of the month for a given DateTimeOffset. Declaration public static DateTimeOffset LastDayOfMonth(this DateTimeOffset date) Parameters Type Name Description DateTimeOffset date The DateTimeOffset for which to find the last day of the month. Returns Type Description DateTimeOffset The DateTimeOffset representing the last day of the month. | Edit this page View Source MaskCreditCard(string) Masks the credit card number by replacing the middle digits with asterisks. Declaration public static string MaskCreditCard(this string number) Parameters Type Name Description string number The credit card number to mask. Returns Type Description string The masked credit card number. | Edit this page View Source MillisecondToDateTime(double) Converts a double value representing milliseconds since the Unix epoch to a DateTimeOffset. Declaration public static DateTimeOffset? MillisecondToDateTime(this double fromSeconds) Parameters Type Name Description double fromSeconds The double value representing milliseconds since the Unix epoch. Returns Type Description DateTimeOffset? A DateTimeOffset representing the converted date and time. | Edit this page View Source OnlyDate(DateTimeOffset) Returns a DateTimeOffset with the same date as the input DateTimeOffset but with the time set to midnight (00:00:00). Declaration public static DateTimeOffset OnlyDate(this DateTimeOffset now) Parameters Type Name Description DateTimeOffset now The input DateTimeOffset. Returns Type Description DateTimeOffset A DateTimeOffset with the same date and midnight time. | Edit this page View Source StartOfWeek(DateTimeOffset, DayOfWeek) Calculates the start of the week for a given DateTimeOffset based on the specified DayOfWeek. Declaration public static DateTimeOffset StartOfWeek(this DateTimeOffset dt, DayOfWeek startOfWeek) Parameters Type Name Description DateTimeOffset dt The DateTimeOffset for which to find the start of the week. DayOfWeek startOfWeek The DayOfWeek that defines the start of the week. Returns Type Description DateTimeOffset The DateTimeOffset representing the start of the week. | Edit this page View Source ToBase64(Stream) Converts a stream to a base 64 string Declaration public static string ToBase64(this Stream stream) Parameters Type Name Description Stream stream Returns Type Description string | Edit this page View Source ToBrazilianTimeZone(DateTime) Converts a DateTime to the Brazilian time zone (UTC-3). Declaration public static DateTime ToBrazilianTimeZone(this DateTime date) Parameters Type Name Description DateTime date The DateTime to convert. Returns Type Description DateTime The DateTime converted to the Brazilian time zone. | Edit this page View Source ToDataUriBase64(Stream, string) Converts a string to a uri base 64 pattern Declaration public static string ToDataUriBase64(this Stream stream, string mimeType) Parameters Type Name Description Stream stream The Stream file. string mimeType The stream mimeType Returns Type Description string | Edit this page View Source ToStringOrDefault(object) Converts the specified object to a string or returns an empty string if the object is null. Declaration public static string ToStringOrDefault(this object obj) Parameters Type Name Description object obj The object to convert to a string. Returns Type Description string The string representation of the object or an empty string if the object is null. | Edit this page View Source ToTimeZone(DateTime, TimeSpan, TimeSpan) Converts one timezone to another using the offset difference. Declaration public static DateTime ToTimeZone(this DateTime sourceDateTime, TimeSpan sourceOffset, TimeSpan targetOffset) Parameters Type Name Description DateTime sourceDateTime The datetime without timezone TimeSpan sourceOffset The offset from the source TimeSpan targetOffset The final offset. Returns Type Description DateTime A DateTime with the difference. | Edit this page View Source ToTimeZone(DateTimeOffset, TimeSpan) Converts one timezone to another using the offset difference. Declaration public static DateTime ToTimeZone(this DateTimeOffset sourceDateTime, TimeSpan targetOffset) Parameters Type Name Description DateTimeOffset sourceDateTime The datetime without timezone TimeSpan targetOffset The final offset. Returns Type Description DateTime A DateTime with the difference. | Edit this page View Source ToUnixTimestamp(DateTime) Converts a DateTime to a Unix timestamp (seconds since the Unix epoch). Declaration public static double ToUnixTimestamp(this DateTime dateTime) Parameters Type Name Description DateTime dateTime The DateTime to convert. Returns Type Description double A double representing the Unix timestamp. | Edit this page View Source ToUnixTimestamp(DateTimeOffset) Converts a DateTimeOffset to a Unix timestamp (seconds since the Unix epoch). Declaration public static double ToUnixTimestamp(this DateTimeOffset dateTime) Parameters Type Name Description DateTimeOffset dateTime The DateTimeOffset to convert. Returns Type Description double A double representing the Unix timestamp. | Edit this page View Source ToYesNo(bool) Converts a boolean value to a \"Sim\" (Yes) or \"Não\" (No) string representation. Declaration public static string ToYesNo(this bool value) Parameters Type Name Description bool value The boolean value to convert. Returns Type Description string \"Sim\" if the value is true; otherwise, \"Não\". | Edit this page View Source Unzip(byte[]) Decompresses a compressed byte array using GZip compression into a string. Declaration public static string Unzip(this byte[] bytes) Parameters Type Name Description byte[] bytes The compressed byte array to decompress. Returns Type Description string The decompressed string. | Edit this page View Source Zip(byte[]) Compresses a byte array using GZip compression. Declaration public static byte[] Zip(this byte[] bytes) Parameters Type Name Description byte[] bytes The byte array to compress. Returns Type Description byte[] The compressed byte array. | Edit this page View Source Zip(string) Compresses a string into a byte array using GZip compression. Declaration public static byte[] Zip(this string str) Parameters Type Name Description string str The string to compress. Returns Type Description byte[] The compressed byte array."
  },
  "api/Innovt.Core.Utilities.Mapper.SimpleMapper.html": {
    "href": "api/Innovt.Core.Utilities.Mapper.SimpleMapper.html",
    "title": "Class SimpleMapper | Innovt Platform",
    "keywords": "Class SimpleMapper Provides simple object mapping functionality between two objects of different types. Inheritance object SimpleMapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities.Mapper Assembly: Innovt.Core.dll Syntax public static class SimpleMapper Methods | Edit this page View Source MapToList<T1>(IEnumerable<object>) Extension method to map object list to another object list Declaration public static IList<T1> MapToList<T1>(this IEnumerable<object> inputInstance) where T1 : class Parameters Type Name Description IEnumerable<object> inputInstance The list that you want to convert. Returns Type Description IList<T1> Type Parameters Name Description T1 The final type | Edit this page View Source MapTo<T1>(object) Extension method to map object to another object Declaration public static T1 MapTo<T1>(this object inputInstance) where T1 : class Parameters Type Name Description object inputInstance The instance that you want to map Returns Type Description T1 Type Parameters Name Description T1 The final type | Edit this page View Source Map<T1, T2>(T1) Maps the properties from the input object to a new instance of the output object type. Declaration public static T2 Map<T1, T2>(T1 input) where T1 : class where T2 : class Parameters Type Name Description T1 input The input object to map from. Returns Type Description T2 A new instance of the output object type with properties mapped from the input object. Type Parameters Name Description T1 The type of the input object. T2 The type of the output object. | Edit this page View Source Map<T1, T2>(T1, T2) Maps the properties from the input object to the provided output object instance. Declaration public static void Map<T1, T2>(T1 inputInstance, T2 outputInstance) where T1 : class where T2 : class Parameters Type Name Description T1 inputInstance The input object to map from. T2 outputInstance The output object to map to. Type Parameters Name Description T1 The type of the input object. T2 The type of the output object."
  },
  "api/Innovt.Core.Utilities.Mapper.html": {
    "href": "api/Innovt.Core.Utilities.Mapper.html",
    "title": "Namespace Innovt.Core.Utilities.Mapper | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Utilities.Mapper Classes SimpleMapper Provides simple object mapping functionality between two objects of different types."
  },
  "api/Innovt.Core.Utilities.PasswordHelper.html": {
    "href": "api/Innovt.Core.Utilities.PasswordHelper.html",
    "title": "Class PasswordHelper | Innovt Platform",
    "keywords": "Class PasswordHelper Provides utility methods for handling password hashing and validation. Inheritance object PasswordHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public static class PasswordHelper Methods | Edit this page View Source GeneratePassword(int) Generates a random password of specified length using cryptographic randomness to ensure security. Declaration public static string GeneratePassword(int passwordLength) Parameters Type Name Description int passwordLength (int): The desired length of the generated password. If the specified length is less than 6, the method defaults to a minimum length of 6 to ensure a reasonable level of security. Returns Type Description string (string) A randomly generated password consisting of characters chosen from a predefined set. | Edit this page View Source HashPassword(string) Hashes a plain text password using a randomly generated salt and returns both the hashed password and the salt. Declaration public static (string password, string salt) HashPassword(string plainPassword) Parameters Type Name Description string plainPassword The plain text password to hash. Returns Type Description (string bucket, string fileKey) A tuple containing the hashed password and the salt used. | Edit this page View Source HashPassword(string, string) Hashes a plain text password using the provided salt. Declaration public static string HashPassword(string plainPassword, string salt) Parameters Type Name Description string plainPassword The plain text password to hash. string salt The salt used for hashing the password. Returns Type Description string The hashed password as a string. | Edit this page View Source IsValid(string, string, string) Checks if a decoded password matches its hashed representation using the provided salt. Declaration public static bool IsValid(string decodedPassword, string hashedPassword, string salt) Parameters Type Name Description string decodedPassword The plain text password to validate. string hashedPassword The hashed password to compare against. string salt The salt used for hashing the password. Returns Type Description bool True if the decoded password matches the hashed password; otherwise, false. | Edit this page View Source RandomSalt() Generates a random salt and returns it as a Base64-encoded string. Declaration public static string RandomSalt() Returns Type Description string A Base64-encoded salt."
  },
  "api/Innovt.Core.Utilities.ReflectionTypeUtil.html": {
    "href": "api/Innovt.Core.Utilities.ReflectionTypeUtil.html",
    "title": "Class ReflectionTypeUtil | Innovt Platform",
    "keywords": "Class ReflectionTypeUtil Inheritance object ReflectionTypeUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public static class ReflectionTypeUtil Methods | Edit this page View Source CreateInstance(Type) Declaration public static Func<object> CreateInstance(Type type) Parameters Type Name Description Type type Returns Type Description Func<object> | Edit this page View Source CreateInstance(Type, params object[]) Declaration public static Func<object> CreateInstance(Type type, params object[] args) Parameters Type Name Description Type type object[] args Returns Type Description Func<object> | Edit this page View Source CreateInstance<T>() Perform a cache of the compiled expression to create instances of T Declaration public static Func<T> CreateInstance<T>() where T : class Returns Type Description Func<T> Type Parameters Name Description T Exceptions Type Condition InvalidOperationException"
  },
  "api/Innovt.Core.Utilities.StopWatchHelper.html": {
    "href": "api/Innovt.Core.Utilities.StopWatchHelper.html",
    "title": "Class StopWatchHelper | Innovt Platform",
    "keywords": "Class StopWatchHelper A helper class for measuring and logging the execution time of an action using a stopwatch. Inheritance object StopWatchHelper Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public class StopWatchHelper : IDisposable Constructors | Edit this page View Source StopWatchHelper(ILogger, string) Initializes a new instance of the StopWatchHelper class with a logger and an action description. Declaration public StopWatchHelper(ILogger logger, string action) Parameters Type Name Description ILogger logger The logger used to log the elapsed time. string action A description of the action being measured. Methods | Edit this page View Source Dispose() Releases the resources used by the StopWatchHelper instance and logs the elapsed time. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Releases the resources used by the StopWatchHelper instance and logs the elapsed time. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing True if called from the Dispose() method, false if called from the finalizer. | Edit this page View Source ~StopWatchHelper() Finalizes an instance of the StopWatchHelper class. Declaration protected ~StopWatchHelper() Implements IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Core.Utilities.StringExtensions.html": {
    "href": "api/Innovt.Core.Utilities.StringExtensions.html",
    "title": "Class StringExtensions | Innovt Platform",
    "keywords": "Class StringExtensions Provides a collection of extension methods for string manipulation and validation. Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public static class StringExtensions Methods | Edit this page View Source ApplyQuotes(string) Encloses a string in double quotes if it contains spaces. Declaration public static string ApplyQuotes(this string value) Parameters Type Name Description string value The string to enclose in double quotes. Returns Type Description string The original string if it does not contain spaces; otherwise, the string enclosed in double quotes. | Edit this page View Source ClearMask(string) Removes specified special characters from a string. Declaration public static string ClearMask(this string value) Parameters Type Name Description string value The string to remove special characters from. Returns Type Description string The string with specified special characters removed. | Edit this page View Source FormatCelPhone(string) Formats a string as a cell phone number with a mask (e.g., \"(00)00000-0000\"). Declaration public static string FormatCelPhone(this string celPhone) Parameters Type Name Description string celPhone The string to format as a cell phone number. Returns Type Description string The formatted cell phone number string or the original string if it is null or empty. | Edit this page View Source FormatCnpj(string) Formats a string as a CNPJ (Cadastro Nacional da Pessoa Jurídica) number with a mask (e.g., \"00.000.000/0000-00\"). Declaration public static string FormatCnpj(this string cnpj) Parameters Type Name Description string cnpj The string to format as a CNPJ number. Returns Type Description string The formatted CNPJ string or null if the input is null or empty. | Edit this page View Source FormatCoordinate(long) You can use this method to forma DD stardand Latitude or Longitude Declaration public static string FormatCoordinate(this long value) Parameters Type Name Description long value Returns Type Description string | Edit this page View Source FormatCpf(string) Formats a string as a CPF (Cadastro de Pessoas Físicas) number with a mask (e.g., \"000.000.000-00\"). Declaration public static string FormatCpf(this string cpf) Parameters Type Name Description string cpf The string to format as a CPF. Returns Type Description string The formatted CPF string or the original string if it is null or empty. | Edit this page View Source FormatPhoneNumber(string) Formats a string as a phone number with a mask (e.g., \"(00)000-0000\"). Declaration public static string FormatPhoneNumber(this string phoneNumber) Parameters Type Name Description string phoneNumber The string to format as a phone number. Returns Type Description string The formatted phone number string or the original string if it is null or empty. | Edit this page View Source FormatZipCode(string) Formats a string as a zip code with a mask (e.g., \"00000-000\"). Declaration public static string FormatZipCode(this string cep) Parameters Type Name Description string cep The string to format as a zip code. Returns Type Description string The formatted zip code string or the original string if it is null or empty. | Edit this page View Source FromBase64(string, Encoding) Decode your string from Base64 Declaration public static string FromBase64(this string toDecode, Encoding encoding = null) Parameters Type Name Description string toDecode The string to decode Encoding encoding Optional and will be ASCII if null Returns Type Description string | Edit this page View Source GetValueOrDefault(string, string) Gets the value of a string or a default value if the string is null or empty. Declaration public static string GetValueOrDefault(this string str, string defaultValue = null) Parameters Type Name Description string str The string to check. string defaultValue The default value to return if the string is null or empty (optional). Returns Type Description string The original string if it is not null or empty; otherwise, the default value if provided; otherwise, an empty string. | Edit this page View Source HasSpecialCharacter(string) Check is a string has special characters Declaration public static bool HasSpecialCharacter(this string str) Parameters Type Name Description string str Returns Type Description bool | Edit this page View Source IsCnpj(string) Determines whether the string is a valid CNPJ (Cadastro Nacional da Pessoa Jurídica) number. Declaration public static bool IsCnpj(this string cnpj) Parameters Type Name Description string cnpj The string to validate as a CNPJ number. Returns Type Description bool True if the string is a valid CNPJ number; otherwise, false. | Edit this page View Source IsCpf(string) Determines whether the string is a valid CPF (Cadastro de Pessoas Físicas) number. Declaration public static bool IsCpf(this string value) Parameters Type Name Description string value The string to validate as a CPF number. Returns Type Description bool True if the string is a valid CPF number; otherwise, false. | Edit this page View Source IsEmail(string) Determines whether the string represents a valid email address. Declaration public static bool IsEmail(this string value) Parameters Type Name Description string value The string to validate as an email address. Returns Type Description bool True if the string is a valid email address; otherwise, false. | Edit this page View Source IsEmpty(Guid) Determines whether a Guid is empty (all zeros). Declaration public static bool IsEmpty(this Guid yourGuid) Parameters Type Name Description Guid yourGuid The Guid to check. Returns Type Description bool True if the Guid is empty; otherwise, false. | Edit this page View Source IsNotEmpty(Guid) Determines whether a Guid is not empty (contains non-zero values). Declaration public static bool IsNotEmpty(this Guid yourGuid) Parameters Type Name Description Guid yourGuid The Guid to check. Returns Type Description bool True if the Guid is not empty; otherwise, false. | Edit this page View Source IsNotNullOrEmpty(Guid?) Determines whether a nullable Guid is not null or empty. Declaration public static bool IsNotNullOrEmpty(this Guid? yourGuid) Parameters Type Name Description Guid? yourGuid The nullable Guid to check. Returns Type Description bool True if the nullable Guid is not null or empty; otherwise, false. | Edit this page View Source IsNotNullOrEmpty(string) Determines whether a string is not null, empty, or consists only of white-space characters. Declaration public static bool IsNotNullOrEmpty(this string str) Parameters Type Name Description string str The string to check. Returns Type Description bool True if the string is not null, not empty, and not consisting only of white-space characters; otherwise, false. | Edit this page View Source IsNullOrEmpty(Guid?) Determines whether a nullable Guid is null or empty. Declaration public static bool IsNullOrEmpty(this Guid? yourGuid) Parameters Type Name Description Guid? yourGuid The nullable Guid to check. Returns Type Description bool True if the nullable Guid is null or empty; otherwise, false. | Edit this page View Source IsNullOrEmpty(string) Determines whether a string is null, empty, or consists only of white-space characters. Declaration public static bool IsNullOrEmpty(this string str) Parameters Type Name Description string str The string to check. Returns Type Description bool True if the string is null, empty, or consists only of white-space characters; otherwise, false. | Edit this page View Source IsNumber(string) Determines whether the string consists of numeric characters only. Declaration public static bool IsNumber(this string value) Parameters Type Name Description string value The string to validate as a number. Returns Type Description bool True if the string consists of numeric characters only; otherwise, false. | Edit this page View Source MaskEmail(string) Will mask an email using this format mich***@gmail.com Declaration public static string MaskEmail(this string email) Parameters Type Name Description string email The email that you want to mask Returns Type Description string mich***@gmail.com | Edit this page View Source NormalizeText(string) Normalizes a string by removing accents, special characters, and trimming whitespace. Declaration public static string NormalizeText(this string str) Parameters Type Name Description string str The string to normalize. Returns Type Description string The normalized string. | Edit this page View Source OnlyNumber(string) Removes all non-numeric characters from a string. Declaration public static string OnlyNumber(this string value) Parameters Type Name Description string value The string to remove non-numeric characters from. Returns Type Description string The string containing only numeric characters. | Edit this page View Source RemoveAccents(string) Removes accents from a string. Declaration public static string RemoveAccents(this string str) Parameters Type Name Description string str The string to remove accents from. Returns Type Description string The string with accents removed. | Edit this page View Source RemoveSpecialCharacter(string) Removes all special characters from a string. Declaration public static string RemoveSpecialCharacter(this string str) Parameters Type Name Description string str The string to remove special characters from. Returns Type Description string The string with special characters replaced by spaces. | Edit this page View Source SmartTrim(string) Trims leading and trailing white-space characters from a string. Declaration public static string SmartTrim(this string str) Parameters Type Name Description string str The string to trim. Returns Type Description string The trimmed string or null if the input string is null. | Edit this page View Source ToBase64(string, Encoding) Encode your string to Base64 Declaration public static string ToBase64(this string toEncode, Encoding encoding = null) Parameters Type Name Description string toEncode The String to encode Encoding encoding Optional and will be ASCII if null Returns Type Description string | Edit this page View Source ToBoolean(string, bool) Converts a string to a boolean, using a specified default value if the string is null or empty. Declaration public static bool ToBoolean(this string str, bool defaultValue = false) Parameters Type Name Description string str The string to convert to a boolean. bool defaultValue The default value to return if the string is null or empty (optional). Returns Type Description bool The boolean value of the string, or the default value if the string is null or empty. | Edit this page View Source ToBoolean(string, bool?) Converts a string to a boolean value, using a specified default value if the string is null or empty. Declaration public static bool? ToBoolean(this string str, bool? defaultValue = null) Parameters Type Name Description string str The string to convert to a boolean. bool? defaultValue The default value to return if the string is null or empty (optional). Returns Type Description bool? The boolean value of the string if it represents a valid boolean; otherwise, the default value. | Edit this page View Source ToCamelCase(string) Converts a string to camel case by applying title case. Declaration public static string ToCamelCase(this string str) Parameters Type Name Description string str The string to convert to camel case. Returns Type Description string The string in camel case format. | Edit this page View Source ToDateTime(string, DateTime) Converts a string to a DateTime, using a specified default value if the string is null or empty. Declaration public static DateTime ToDateTime(this string str, DateTime defaultValue = default) Parameters Type Name Description string str The string to convert to a DateTime. DateTime defaultValue The default value to return if the string is null or empty (optional). Returns Type Description DateTime The DateTime value of the string, or the default value if the string is null or empty. | Edit this page View Source ToDateTime(string, DateTime?) Converts a string to a nullable DateTime, using a specified default value if the string is null or empty. Declaration public static DateTime? ToDateTime(this string str, DateTime? defaultValue = null) Parameters Type Name Description string str The string to convert to a nullable DateTime. DateTime? defaultValue The default value to return if the string is null or empty (optional). Returns Type Description DateTime? The nullable DateTime value of the string, or the default value if the string is null or empty. | Edit this page View Source ToDateTimeOffset(string, DateTimeOffset) Converts a string to a DateTimeOffset, using a specified default value if the string is null or empty. Declaration public static DateTimeOffset ToDateTimeOffset(this string str, DateTimeOffset defaultValue = default) Parameters Type Name Description string str The string to convert to a DateTimeOffset. DateTimeOffset defaultValue The default value to return if the string is null or empty (optional). Returns Type Description DateTimeOffset The DateTimeOffset value of the string, or the default value if the string is null or empty. | Edit this page View Source ToDateTimeOffset(string, DateTimeOffset?) Converts a string to a nullable DateTimeOffset, using a specified default value if the string is null or empty. Declaration public static DateTimeOffset? ToDateTimeOffset(this string str, DateTimeOffset? defaultValue = null) Parameters Type Name Description string str The string to convert to a nullable DateTimeOffset. DateTimeOffset? defaultValue The default value to return if the string is null or empty (optional). Returns Type Description DateTimeOffset? The nullable DateTimeOffset value of the string, or the default value if the string is null or empty. | Edit this page View Source ToDecimal(string, decimal) Converts a string to a decimal, using a specified default value if the string is null or empty. Declaration public static decimal ToDecimal(this string str, decimal defaultValue = 0) Parameters Type Name Description string str The string to convert to a decimal. decimal defaultValue The default value to return if the string is null or empty (optional). Returns Type Description decimal The decimal value of the string, or the default value if the string is null or empty. | Edit this page View Source ToDecimal(string, decimal?) Converts a string to a nullable decimal, using a specified default value if the string is null or empty. Declaration public static decimal? ToDecimal(this string str, decimal? defaultValue = null) Parameters Type Name Description string str The string to convert to a nullable decimal. decimal? defaultValue The default value to return if the string is null or empty (optional). Returns Type Description decimal? The nullable decimal value of the string, or the default value if the string is null or empty. | Edit this page View Source ToDouble(string, double) Converts a string to a double, using a specified default value if the string is null or empty. Declaration public static double ToDouble(this string str, double defaultValue = 0) Parameters Type Name Description string str The string to convert to a double. double defaultValue The default value to return if the string is null or empty (optional). Returns Type Description double The double value of the string, or the default value if the string is null or empty. | Edit this page View Source ToDouble(string, double?) Converts a string to a nullable double, using a specified default value if the string is null or empty. Declaration public static double? ToDouble(this string str, double? defaultValue = null) Parameters Type Name Description string str The string to convert to a nullable double. double? defaultValue The default value to return if the string is null or empty (optional). Returns Type Description double? The nullable double value of the string, or the default value if the string is null or empty. | Edit this page View Source ToFloat(string, float?) Converts a string to a nullable float, using a specified default value if the string is null or empty. Declaration public static float? ToFloat(this string str, float? defaultValue = null) Parameters Type Name Description string str The string to convert to a nullable float. float? defaultValue The default value to return if the string is null or empty (optional). Returns Type Description float? The nullable float value of the string, or the default value if the string is null or empty. | Edit this page View Source ToFloat(string, float) Converts a string to a float, using a specified default value if the string is null or empty. Declaration public static float ToFloat(this string str, float defaultValue = 0) Parameters Type Name Description string str The string to convert to a float. float defaultValue The default value to return if the string is null or empty (optional). Returns Type Description float The float value of the string, or the default value if the string is null or empty. | Edit this page View Source ToGuid(string) Converts a string to a Guid. Declaration public static Guid ToGuid(this string str) Parameters Type Name Description string str The string to convert to a Guid. Returns Type Description Guid The Guid value of the string. | Edit this page View Source ToGuidOrEmpty(string) Converts a string to a Guid or returns Guid.Empty if the conversion fails. Declaration public static Guid? ToGuidOrEmpty(this string str) Parameters Type Name Description string str The string to convert to a Guid. Returns Type Description Guid? The Guid value of the string or Guid.Empty if the conversion fails. | Edit this page View Source ToInt(string, int) Converts a string to an integer, using a specified default value if the string is null or empty. Declaration public static int ToInt(this string str, int defaultValue = 0) Parameters Type Name Description string str The string to convert to an integer. int defaultValue The default value to return if the string is null or empty (optional). Returns Type Description int The integer value of the string, or the default value if the string is null or empty. | Edit this page View Source ToInt(string, int?) Converts a string to a nullable integer, using a specified default value if the string is null or empty. Declaration public static int? ToInt(this string str, int? defaultValue = null) Parameters Type Name Description string str The string to convert to a nullable integer. int? defaultValue The default value to return if the string is null or empty (optional). Returns Type Description int? The nullable integer value of the string, or the default value if the string is null or empty. | Edit this page View Source ToList(string, char) Converts a delimited string into a list of strings using the specified separator character. Declaration public static List<string> ToList(this string str, char separator) Parameters Type Name Description string str The delimited string to convert. char separator The character used to separate values in the string. Returns Type Description List<string> A list of strings containing the individual values from the delimited string. | Edit this page View Source ToTitleCase(string) Converts a string to title case using the current culture's rules. Declaration public static string ToTitleCase(this string str) Parameters Type Name Description string str The string to convert to title case. Returns Type Description string The string in title case format. | Edit this page View Source ToUpperFirstLetter(string) Converts the first letter of a string to uppercase. Declaration public static string ToUpperFirstLetter(this string value) Parameters Type Name Description string value The string to convert. Returns Type Description string The string with its first letter in uppercase or the original string if it is null or empty. | Edit this page View Source Truncate(string, int) Truncates the string to a specified maximum length. Declaration public static string Truncate(this string value, int maxLength) Parameters Type Name Description string value The string to truncate. int maxLength The maximum length of the truncated string. Returns Type Description string The truncated string, or the original string if its length is less than or equal to the specified maximum length. | Edit this page View Source UrlDecode(string) Decodes a URL-encoded string using UTF-8 encoding. Declaration public static string UrlDecode(this string str) Parameters Type Name Description string str The URL-encoded string to decode. Returns Type Description string The decoded string, or the original string if it is null or empty. | Edit this page View Source UrlEncode(string) Encodes a string for safe use in a URL, using UTF-8 encoding. Declaration public static string UrlEncode(this string str) Parameters Type Name Description string str The string to encode. Returns Type Description string The URL-encoded string, or the original string if it is null or empty."
  },
  "api/Innovt.Core.Utilities.TypeUtil.html": {
    "href": "api/Innovt.Core.Utilities.TypeUtil.html",
    "title": "Class TypeUtil | Innovt Platform",
    "keywords": "Class TypeUtil Inheritance object TypeUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Utilities Assembly: Innovt.Core.dll Syntax public static class TypeUtil Methods | Edit this page View Source AddPrimitiveType(Type) Adds a new type to the list of recognized primitive types. Declaration public static void AddPrimitiveType(Type type) Parameters Type Name Description Type type The type to add. | Edit this page View Source IsCollection(Type) Checks if a given type is a collection (array or IEnumerable). Declaration public static bool IsCollection(Type type) Parameters Type Name Description Type type The type to check. Returns Type Description bool True if the type is a collection; otherwise, false. | Edit this page View Source IsDictionary(Type) Checks if a given type is a dictionary. Declaration public static bool IsDictionary(Type type) Parameters Type Name Description Type type The type to check. Returns Type Description bool True if the type is a dictionary; otherwise, false. | Edit this page View Source IsNumericList(IList) Returns true if the type is a numeric type. Declaration public static bool IsNumericList(IList list) Parameters Type Name Description IList list Returns Type Description bool | Edit this page View Source IsPrimitive(Type) Checks if a given type is a primitive DynamoDB type. Declaration public static bool IsPrimitive(Type type) Parameters Type Name Description Type type The type to check. Returns Type Description bool True if the type is primitive; otherwise, false."
  },
  "api/Innovt.Core.Utilities.html": {
    "href": "api/Innovt.Core.Utilities.html",
    "title": "Namespace Innovt.Core.Utilities | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Utilities Classes AsyncHelper Reference https://cpratt.co/async-tips-tricks/ Check Provides static methods for checking arguments and values. ConstantClass Represents a base class for constants with a string value. Cryptography Provides methods for cryptographic operations, including hashing and encryption. Extensions Provides extension methods for various data types and operations. PasswordHelper Provides utility methods for handling password hashing and validation. ReflectionTypeUtil StopWatchHelper A helper class for measuring and logging the execution time of an action using a stopwatch. StringExtensions Provides a collection of extension methods for string manipulation and validation. TypeUtil"
  },
  "api/Innovt.Core.Validation.Extensions.html": {
    "href": "api/Innovt.Core.Validation.Extensions.html",
    "title": "Class Extensions | Innovt Platform",
    "keywords": "Class Extensions A static class containing extension methods for validating objects that implement the IValidatableObject interface. Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Core.Validation Assembly: Innovt.Core.dll Syntax public static class Extensions Methods | Edit this page View Source EnsureIsValid(ICommand, ValidationContext) Ensures that a command object is valid by treating it as an IValidatableObject; otherwise, throws a BusinessException with validation errors. Declaration public static void EnsureIsValid(this ICommand command, ValidationContext context = null) Parameters Type Name Description ICommand command The command to validate. ValidationContext context An optional ValidationContext to specify validation context. | Edit this page View Source EnsureIsValid(ICommand, string) Ensures that a command object is valid by treating it as an IValidatableObject; otherwise, throws a BusinessException with validation errors. Declaration public static void EnsureIsValid(this ICommand command, string contextName) Parameters Type Name Description ICommand command The command to validate. string contextName The name of the validation context. | Edit this page View Source EnsureIsValid(IValidatableObject, ValidationContext) Ensures that an object implementing the IValidatableObject interface is valid; otherwise, throws a BusinessException with validation errors. Declaration public static void EnsureIsValid(this IValidatableObject obj, ValidationContext context = null) Parameters Type Name Description IValidatableObject obj The object to validate. ValidationContext context An optional ValidationContext to specify validation context. | Edit this page View Source IsValid(IValidatableObject, ValidationContext) Checks whether an object implementing the IValidatableObject interface is valid. Declaration public static bool IsValid(this IValidatableObject obj, ValidationContext context = null) Parameters Type Name Description IValidatableObject obj The object to validate. ValidationContext context An optional ValidationContext to specify validation context. Returns Type Description bool True if the object is valid; otherwise, false. | Edit this page View Source Validate(IEnumerable<IValidatableObject>, ValidationContext) Validates a collection of objects implementing the IValidatableObject interface and returns a collection of ValidationResult objects. Declaration public static IEnumerable<ValidationResult> Validate(this IEnumerable<IValidatableObject> array, ValidationContext context = null) Parameters Type Name Description IEnumerable<IValidatableObject> array The collection of objects to validate. ValidationContext context An optional ValidationContext to specify validation context. Returns Type Description IEnumerable<ValidationResult> A collection of ValidationResult objects containing validation errors."
  },
  "api/Innovt.Core.Validation.html": {
    "href": "api/Innovt.Core.Validation.html",
    "title": "Namespace Innovt.Core.Validation | Innovt Platform",
    "keywords": "Namespace Innovt.Core.Validation Classes Extensions A static class containing extension methods for validating objects that implement the IValidatableObject interface."
  },
  "api/Innovt.Cqrs.Commands.Decorators.CommandAsyncValidationDecorator-1.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.CommandAsyncValidationDecorator-1.html",
    "title": "Class CommandAsyncValidationDecorator<TCommand> | Innovt Platform",
    "keywords": "Class CommandAsyncValidationDecorator<TCommand> Decorates an asynchronous command handler to include validation before handling the command. Inheritance object CommandAsyncValidationDecorator<TCommand> Implements IAsyncCommandHandler<TCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Commands.Decorators Assembly: Innovt.Cqrs.dll Syntax public sealed class CommandAsyncValidationDecorator<TCommand> : IAsyncCommandHandler<TCommand> where TCommand : ICommand Type Parameters Name Description TCommand The type of command to be handled. Constructors | Edit this page View Source CommandAsyncValidationDecorator(IAsyncCommandHandler<TCommand>) Initializes a new instance of the CommandAsyncValidationDecorator<TCommand> class. Declaration public CommandAsyncValidationDecorator(IAsyncCommandHandler<TCommand> commandHandler) Parameters Type Name Description IAsyncCommandHandler<TCommand> commandHandler The asynchronous command handler to be decorated. Exceptions Type Condition ArgumentNullException Thrown when commandHandler is null. Methods | Edit this page View Source Handle(TCommand, CancellationToken) Handles the specified command asynchronously after ensuring its validity. Declaration public Task Handle(TCommand command, CancellationToken cancellationToken = default) Parameters Type Name Description TCommand command The command to be handled. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous handling of the command. Exceptions Type Condition ArgumentNullException Thrown when command is null. Implements IAsyncCommandHandler<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Commands.Decorators.CommandValidationDecorator-1.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.CommandValidationDecorator-1.html",
    "title": "Class CommandValidationDecorator<TCommand> | Innovt Platform",
    "keywords": "Class CommandValidationDecorator<TCommand> Decorates a command handler to include validation before handling the command. Inheritance object CommandValidationDecorator<TCommand> Implements ICommandHandler<TCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Commands.Decorators Assembly: Innovt.Cqrs.dll Syntax public sealed class CommandValidationDecorator<TCommand> : ICommandHandler<TCommand> where TCommand : ICommand Type Parameters Name Description TCommand The type of command to be handled. Constructors | Edit this page View Source CommandValidationDecorator(ICommandHandler<TCommand>) Initializes a new instance of the CommandValidationDecorator<TCommand> class. Declaration public CommandValidationDecorator(ICommandHandler<TCommand> commandHandler) Parameters Type Name Description ICommandHandler<TCommand> commandHandler The command handler to be decorated. Exceptions Type Condition ArgumentNullException Thrown when commandHandler is null. Methods | Edit this page View Source Handle(TCommand) Handles the specified command after ensuring its validity. Declaration public void Handle(TCommand command) Parameters Type Name Description TCommand command The command to be handled. Exceptions Type Condition ArgumentNullException Thrown when command is null. Implements ICommandHandler<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Commands.Decorators.DatabaseAsyncRetryDecorator-1.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.DatabaseAsyncRetryDecorator-1.html",
    "title": "Class DatabaseAsyncRetryDecorator<TCommand> | Innovt Platform",
    "keywords": "Class DatabaseAsyncRetryDecorator<TCommand> Decorates an asynchronous command handler to include retry logic in case of failures. Inheritance object BaseDatabaseRetryDecorator DatabaseAsyncRetryDecorator<TCommand> Implements IAsyncCommandHandler<TCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Commands.Decorators Assembly: Innovt.Cqrs.dll Syntax public sealed class DatabaseAsyncRetryDecorator<TCommand> : BaseDatabaseRetryDecorator, IAsyncCommandHandler<TCommand> where TCommand : ICommand Type Parameters Name Description TCommand The type of command to be handled. Constructors | Edit this page View Source DatabaseAsyncRetryDecorator(IAsyncCommandHandler<TCommand>, ILogger, int) Initializes a new instance of the DatabaseAsyncRetryDecorator<TCommand> class. Declaration public DatabaseAsyncRetryDecorator(IAsyncCommandHandler<TCommand> commandHandler, ILogger logger, int retryCount = 3) Parameters Type Name Description IAsyncCommandHandler<TCommand> commandHandler The asynchronous command handler to be decorated. ILogger logger The logger for capturing retry attempts. int retryCount The number of retry attempts (default is 3). Exceptions Type Condition ArgumentNullException Thrown when commandHandler or logger is null. Methods | Edit this page View Source Handle(TCommand, CancellationToken) Handles the specified command asynchronously with retry logic in case of failures. Declaration public Task Handle(TCommand command, CancellationToken cancellationToken = default) Parameters Type Name Description TCommand command The command to be handled. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous handling of the command. Implements IAsyncCommandHandler<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Commands.Decorators.DatabaseRetryDecorator-1.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.DatabaseRetryDecorator-1.html",
    "title": "Class DatabaseRetryDecorator<TCommand> | Innovt Platform",
    "keywords": "Class DatabaseRetryDecorator<TCommand> Decorates a command handler to include retry logic in case of failures. Inheritance object BaseDatabaseRetryDecorator DatabaseRetryDecorator<TCommand> Implements ICommandHandler<TCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Commands.Decorators Assembly: Innovt.Cqrs.dll Syntax public sealed class DatabaseRetryDecorator<TCommand> : BaseDatabaseRetryDecorator, ICommandHandler<TCommand> where TCommand : ICommand Type Parameters Name Description TCommand The type of command to be handled. Constructors | Edit this page View Source DatabaseRetryDecorator(ICommandHandler<TCommand>, ILogger, int) Initializes a new instance of the DatabaseRetryDecorator<TCommand> class. Declaration public DatabaseRetryDecorator(ICommandHandler<TCommand> commandHandler, ILogger logger, int retryCount = 3) Parameters Type Name Description ICommandHandler<TCommand> commandHandler The command handler to be decorated. ILogger logger The logger for capturing retry attempts. int retryCount The number of retry attempts (default is 3). Exceptions Type Condition ArgumentNullException Thrown when commandHandler or logger is null. Methods | Edit this page View Source Handle(TCommand) Handles the specified command with retry logic in case of failures. Declaration public void Handle(TCommand command) Parameters Type Name Description TCommand command The command to be handled. Implements ICommandHandler<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Commands.Decorators.html": {
    "href": "api/Innovt.Cqrs.Commands.Decorators.html",
    "title": "Namespace Innovt.Cqrs.Commands.Decorators | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Commands.Decorators Classes CommandAsyncValidationDecorator<TCommand> Decorates an asynchronous command handler to include validation before handling the command. CommandValidationDecorator<TCommand> Decorates a command handler to include validation before handling the command. DatabaseAsyncRetryDecorator<TCommand> Decorates an asynchronous command handler to include retry logic in case of failures. DatabaseRetryDecorator<TCommand> Decorates a command handler to include retry logic in case of failures."
  },
  "api/Innovt.Cqrs.Commands.IAsyncCommandHandler-1.html": {
    "href": "api/Innovt.Cqrs.Commands.IAsyncCommandHandler-1.html",
    "title": "Interface IAsyncCommandHandler<T> | Innovt Platform",
    "keywords": "Interface IAsyncCommandHandler<T> Defines an asynchronous command handler for a specific type of command. Namespace: Innovt.Cqrs.Commands Assembly: Innovt.Cqrs.dll Syntax public interface IAsyncCommandHandler<in T> where T : ICommand Type Parameters Name Description T The type of command to be handled. Methods | Edit this page View Source Handle(T, CancellationToken) Handles the specified command asynchronously. Declaration Task Handle(T command, CancellationToken cancellationToken = default) Parameters Type Name Description T command The command to be handled. CancellationToken cancellationToken The cancellation token. Returns Type Description Task A task representing the asynchronous handling of the command. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Commands.IAsyncCommandHandler-2.html": {
    "href": "api/Innovt.Cqrs.Commands.IAsyncCommandHandler-2.html",
    "title": "Interface IAsyncCommandHandler<T, TResult> | Innovt Platform",
    "keywords": "Interface IAsyncCommandHandler<T, TResult> Defines an asynchronous command handler for a specific type of command with a result. Namespace: Innovt.Cqrs.Commands Assembly: Innovt.Cqrs.dll Syntax public interface IAsyncCommandHandler<in T, TResult> where T : ICommand Type Parameters Name Description T The type of command to be handled. TResult The type of result expected from handling the command. Methods | Edit this page View Source Handle(T, CancellationToken) Handles the specified command asynchronously and returns a result. Declaration Task<TResult> Handle(T command, CancellationToken cancellationToken = default) Parameters Type Name Description T command The command to be handled. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<TResult> A task representing the asynchronous handling of the command and the result. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Commands.ICommandHandler-1.html": {
    "href": "api/Innovt.Cqrs.Commands.ICommandHandler-1.html",
    "title": "Interface ICommandHandler<T> | Innovt Platform",
    "keywords": "Interface ICommandHandler<T> Defines a synchronous command handler for a specific type of command. Namespace: Innovt.Cqrs.Commands Assembly: Innovt.Cqrs.dll Syntax public interface ICommandHandler<in T> where T : ICommand Type Parameters Name Description T The type of command to be handled. Methods | Edit this page View Source Handle(T) Handles the specified command synchronously. Declaration void Handle(T command) Parameters Type Name Description T command The command to be handled. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Commands.ICommandHandler-2.html": {
    "href": "api/Innovt.Cqrs.Commands.ICommandHandler-2.html",
    "title": "Interface ICommandHandler<T, TResult> | Innovt Platform",
    "keywords": "Interface ICommandHandler<T, TResult> Defines a synchronous command handler for a specific type of command with a result. Namespace: Innovt.Cqrs.Commands Assembly: Innovt.Cqrs.dll Syntax public interface ICommandHandler<in T, out TResult> where T : ICommand Type Parameters Name Description T The type of command to be handled. TResult The type of result expected from handling the command. Methods | Edit this page View Source Handle(T) Handles the specified command synchronously and returns a result. Declaration TResult Handle(T command) Parameters Type Name Description T command The command to be handled. Returns Type Description TResult The result of handling the command. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Commands.html": {
    "href": "api/Innovt.Cqrs.Commands.html",
    "title": "Namespace Innovt.Cqrs.Commands | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Commands Interfaces IAsyncCommandHandler<T> Defines an asynchronous command handler for a specific type of command. IAsyncCommandHandler<T, TResult> Defines an asynchronous command handler for a specific type of command with a result. ICommandHandler<T> Defines a synchronous command handler for a specific type of command. ICommandHandler<T, TResult> Defines a synchronous command handler for a specific type of command with a result."
  },
  "api/Innovt.Cqrs.Decorators.BaseDatabaseRetryDecorator.html": {
    "href": "api/Innovt.Cqrs.Decorators.BaseDatabaseRetryDecorator.html",
    "title": "Class BaseDatabaseRetryDecorator | Innovt Platform",
    "keywords": "Class BaseDatabaseRetryDecorator Provides a base class for implementing retry logic for database operations. Inheritance object BaseDatabaseRetryDecorator DatabaseAsyncRetryDecorator<TCommand> DatabaseRetryDecorator<TCommand> DatabaseAsyncRetryDecorator<TFilter, TResult> DatabaseRetryDecorator<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Decorators Assembly: Innovt.Cqrs.dll Syntax public abstract class BaseDatabaseRetryDecorator Constructors | Edit this page View Source BaseDatabaseRetryDecorator(ILogger, int) Initializes a new instance of the BaseDatabaseRetryDecorator class. Declaration protected BaseDatabaseRetryDecorator(ILogger logger, int retryCount = 3) Parameters Type Name Description ILogger logger The logger for capturing retry attempts. int retryCount The number of retry attempts (default is 3). Exceptions Type Condition ArgumentNullException Thrown when logger is null. Methods | Edit this page View Source CreateAsyncPolicy() Creates an asynchronous retry policy for handling retry attempts. Declaration protected virtual AsyncRetryPolicy CreateAsyncPolicy() Returns Type Description AsyncRetryPolicy An asynchronous retry policy. | Edit this page View Source CreatePolicy() Creates a retry policy for handling retry attempts. Declaration protected virtual RetryPolicy CreatePolicy() Returns Type Description RetryPolicy A retry policy. | Edit this page View Source LogResiliencyRetry() Creates a resiliency log action for retry attempts. Declaration protected Action<Exception, TimeSpan, int, Context> LogResiliencyRetry() Returns Type Description Action<Exception, TimeSpan, int, Context> A log action for retry attempts. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Decorators.html": {
    "href": "api/Innovt.Cqrs.Decorators.html",
    "title": "Namespace Innovt.Cqrs.Decorators | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Decorators Classes BaseDatabaseRetryDecorator Provides a base class for implementing retry logic for database operations."
  },
  "api/Innovt.Cqrs.Queries.Decorators.DatabaseAsyncRetryDecorator-2.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.DatabaseAsyncRetryDecorator-2.html",
    "title": "Class DatabaseAsyncRetryDecorator<TFilter, TResult> | Innovt Platform",
    "keywords": "Class DatabaseAsyncRetryDecorator<TFilter, TResult> Decorates an asynchronous query handler to include retry logic in case of failures. Inheritance object BaseDatabaseRetryDecorator DatabaseAsyncRetryDecorator<TFilter, TResult> Implements IAsyncQueryHandler<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Queries.Decorators Assembly: Innovt.Cqrs.dll Syntax public sealed class DatabaseAsyncRetryDecorator<TFilter, TResult> : BaseDatabaseRetryDecorator, IAsyncQueryHandler<TFilter, TResult> where TFilter : IFilter where TResult : class Type Parameters Name Description TFilter The type of filter for the query. TResult The type of result expected from the query. Constructors | Edit this page View Source DatabaseAsyncRetryDecorator(IAsyncQueryHandler<TFilter, TResult>, ILogger, int) Initializes a new instance of the DatabaseAsyncRetryDecorator<TFilter, TResult> class. Declaration public DatabaseAsyncRetryDecorator(IAsyncQueryHandler<TFilter, TResult> queryHandler, ILogger logger, int retryCount = 3) Parameters Type Name Description IAsyncQueryHandler<TFilter, TResult> queryHandler The asynchronous query handler to be decorated. ILogger logger The logger for capturing retry attempts. int retryCount The number of retry attempts (default is 3). Exceptions Type Condition ArgumentNullException Thrown when queryHandler or logger is null. Methods | Edit this page View Source HandleAsync(TFilter, CancellationToken) Handles the specified query asynchronously with retry logic in case of failures. Declaration public Task<TResult> HandleAsync(TFilter filter, CancellationToken cancellationToken = default) Parameters Type Name Description TFilter filter The filter for the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<TResult> A task representing the asynchronous handling of the query and the result. Implements IAsyncQueryHandler<TFilter, TResult> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Queries.Decorators.DatabaseRetryDecorator-2.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.DatabaseRetryDecorator-2.html",
    "title": "Class DatabaseRetryDecorator<TFilter, TResult> | Innovt Platform",
    "keywords": "Class DatabaseRetryDecorator<TFilter, TResult> Decorates a query handler to include retry logic in case of failures. Inheritance object BaseDatabaseRetryDecorator DatabaseRetryDecorator<TFilter, TResult> Implements IQueryHandler<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Queries.Decorators Assembly: Innovt.Cqrs.dll Syntax public sealed class DatabaseRetryDecorator<TFilter, TResult> : BaseDatabaseRetryDecorator, IQueryHandler<TFilter, TResult> where TFilter : IPagedFilter where TResult : class Type Parameters Name Description TFilter The type of filter for the query. TResult The type of result expected from the query. Constructors | Edit this page View Source DatabaseRetryDecorator(IQueryHandler<TFilter, TResult>, ILogger, int) Initializes a new instance of the DatabaseRetryDecorator<TFilter, TResult> class. Declaration public DatabaseRetryDecorator(IQueryHandler<TFilter, TResult> queryHandler, ILogger logger, int retryCount = 3) Parameters Type Name Description IQueryHandler<TFilter, TResult> queryHandler The query handler to be decorated. ILogger logger The logger for capturing retry attempts. int retryCount The number of retry attempts (default is 3). Exceptions Type Condition ArgumentNullException Thrown when queryHandler or logger is null. Methods | Edit this page View Source Handle(TFilter) Handles the specified query with retry logic in case of failures. Declaration public TResult Handle(TFilter filter) Parameters Type Name Description TFilter filter The filter for the query. Returns Type Description TResult The result of handling the query. Implements IQueryHandler<TFilter, TResult> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Queries.Decorators.QueryAsyncValidationDecorator-2.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.QueryAsyncValidationDecorator-2.html",
    "title": "Class QueryAsyncValidationDecorator<TFilter, TResult> | Innovt Platform",
    "keywords": "Class QueryAsyncValidationDecorator<TFilter, TResult> Decorates an asynchronous query handler to include validation before handling the query. Inheritance object QueryAsyncValidationDecorator<TFilter, TResult> Implements IAsyncQueryHandler<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Queries.Decorators Assembly: Innovt.Cqrs.dll Syntax public sealed class QueryAsyncValidationDecorator<TFilter, TResult> : IAsyncQueryHandler<TFilter, TResult> where TFilter : IFilter where TResult : class Type Parameters Name Description TFilter The type of filter for the query. TResult The type of result expected from the query. Constructors | Edit this page View Source QueryAsyncValidationDecorator(IAsyncQueryHandler<TFilter, TResult>) Initializes a new instance of the QueryAsyncValidationDecorator<TFilter, TResult> class. Declaration public QueryAsyncValidationDecorator(IAsyncQueryHandler<TFilter, TResult> queryHandler) Parameters Type Name Description IAsyncQueryHandler<TFilter, TResult> queryHandler The asynchronous query handler to be decorated. Exceptions Type Condition ArgumentNullException Thrown when queryHandler is null. Methods | Edit this page View Source HandleAsync(TFilter, CancellationToken) Handles the specified query asynchronously after ensuring its validity. Declaration public Task<TResult> HandleAsync(TFilter filter, CancellationToken cancellationToken = default) Parameters Type Name Description TFilter filter The filter for the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<TResult> A task representing the asynchronous handling of the query and the result. Exceptions Type Condition ArgumentNullException Thrown when filter is null. Implements IAsyncQueryHandler<TFilter, TResult> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Queries.Decorators.QueryValidationDecorator-2.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.QueryValidationDecorator-2.html",
    "title": "Class QueryValidationDecorator<TFilter, TResult> | Innovt Platform",
    "keywords": "Class QueryValidationDecorator<TFilter, TResult> Decorates a query handler to include validation before handling the query. Inheritance object QueryValidationDecorator<TFilter, TResult> Implements IQueryHandler<TFilter, TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Cqrs.Queries.Decorators Assembly: Innovt.Cqrs.dll Syntax public sealed class QueryValidationDecorator<TFilter, TResult> : IQueryHandler<TFilter, TResult> where TFilter : IFilter where TResult : class Type Parameters Name Description TFilter The type of filter for the query. TResult The type of result expected from the query. Constructors | Edit this page View Source QueryValidationDecorator(IQueryHandler<TFilter, TResult>) Initializes a new instance of the QueryValidationDecorator<TFilter, TResult> class. Declaration public QueryValidationDecorator(IQueryHandler<TFilter, TResult> queryHandler) Parameters Type Name Description IQueryHandler<TFilter, TResult> queryHandler The query handler to be decorated. Exceptions Type Condition ArgumentNullException Thrown when queryHandler is null. Methods | Edit this page View Source Handle(TFilter) Handles the specified query after ensuring its validity. Declaration public TResult Handle(TFilter filter) Parameters Type Name Description TFilter filter The filter for the query. Returns Type Description TResult The result of handling the query. Exceptions Type Condition ArgumentNullException Thrown when filter is null. Implements IQueryHandler<TFilter, TResult> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Queries.Decorators.html": {
    "href": "api/Innovt.Cqrs.Queries.Decorators.html",
    "title": "Namespace Innovt.Cqrs.Queries.Decorators | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Queries.Decorators Classes DatabaseAsyncRetryDecorator<TFilter, TResult> Decorates an asynchronous query handler to include retry logic in case of failures. DatabaseRetryDecorator<TFilter, TResult> Decorates a query handler to include retry logic in case of failures. QueryAsyncValidationDecorator<TFilter, TResult> Decorates an asynchronous query handler to include validation before handling the query. QueryValidationDecorator<TFilter, TResult> Decorates a query handler to include validation before handling the query."
  },
  "api/Innovt.Cqrs.Queries.IAsyncQueryHandler-2.html": {
    "href": "api/Innovt.Cqrs.Queries.IAsyncQueryHandler-2.html",
    "title": "Interface IAsyncQueryHandler<TFilter, TResult> | Innovt Platform",
    "keywords": "Interface IAsyncQueryHandler<TFilter, TResult> Defines an asynchronous query handler for a specific type of filter and result. Namespace: Innovt.Cqrs.Queries Assembly: Innovt.Cqrs.dll Syntax public interface IAsyncQueryHandler<in TFilter, TResult> where TFilter : IFilter where TResult : class Type Parameters Name Description TFilter The type of filter for the query. TResult The type of result expected from the query. Methods | Edit this page View Source HandleAsync(TFilter, CancellationToken) Handles the specified query asynchronously. Declaration Task<TResult> HandleAsync(TFilter filter, CancellationToken cancellationToken = default) Parameters Type Name Description TFilter filter The filter for the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<TResult> A task representing the asynchronous handling of the query and the result. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Queries.ICountAsyncQueryHandler-1.html": {
    "href": "api/Innovt.Cqrs.Queries.ICountAsyncQueryHandler-1.html",
    "title": "Interface ICountAsyncQueryHandler<T> | Innovt Platform",
    "keywords": "Interface ICountAsyncQueryHandler<T> Defines an asynchronous query handler for counting entities based on a filter. Namespace: Innovt.Cqrs.Queries Assembly: Innovt.Cqrs.dll Syntax public interface ICountAsyncQueryHandler<in T> where T : IFilter Type Parameters Name Description T The type of filter for the query. Methods | Edit this page View Source CountAsync(T, CancellationToken) Counts the entities that match the specified filter asynchronously. Declaration Task<int> CountAsync(T filter, CancellationToken cancellationToken = default) Parameters Type Name Description T filter The filter for the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<int> A task representing the asynchronous counting operation. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Queries.IExistAsyncQueryHandler-1.html": {
    "href": "api/Innovt.Cqrs.Queries.IExistAsyncQueryHandler-1.html",
    "title": "Interface IExistAsyncQueryHandler<T> | Innovt Platform",
    "keywords": "Interface IExistAsyncQueryHandler<T> Defines an asynchronous query handler for checking the existence of entities based on a filter. Namespace: Innovt.Cqrs.Queries Assembly: Innovt.Cqrs.dll Syntax public interface IExistAsyncQueryHandler<in T> where T : IFilter Type Parameters Name Description T The type of filter for the query. Methods | Edit this page View Source ExistAsync(T, CancellationToken) Checks the existence of entities that match the specified filter asynchronously. Declaration Task<bool> ExistAsync(T filter, CancellationToken cancellationToken = default) Parameters Type Name Description T filter The filter for the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<bool> A task representing the asynchronous existence check operation. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Queries.IQueryHandler-2.html": {
    "href": "api/Innovt.Cqrs.Queries.IQueryHandler-2.html",
    "title": "Interface IQueryHandler<TFilter, TResult> | Innovt Platform",
    "keywords": "Interface IQueryHandler<TFilter, TResult> Defines a synchronous query handler for a specific type of filter and result. Namespace: Innovt.Cqrs.Queries Assembly: Innovt.Cqrs.dll Syntax public interface IQueryHandler<in TFilter, out TResult> where TFilter : IFilter where TResult : class Type Parameters Name Description TFilter The type of filter for the query. TResult The type of result expected from the query. Methods | Edit this page View Source Handle(TFilter) Handles the specified query synchronously. Declaration TResult Handle(TFilter filter) Parameters Type Name Description TFilter filter The filter for the query. Returns Type Description TResult The result of handling the query. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Cqrs.Queries.html": {
    "href": "api/Innovt.Cqrs.Queries.html",
    "title": "Namespace Innovt.Cqrs.Queries | Innovt Platform",
    "keywords": "Namespace Innovt.Cqrs.Queries Interfaces IAsyncQueryHandler<TFilter, TResult> Defines an asynchronous query handler for a specific type of filter and result. ICountAsyncQueryHandler<T> Defines an asynchronous query handler for counting entities based on a filter. IExistAsyncQueryHandler<T> Defines an asynchronous query handler for checking the existence of entities based on a filter. IQueryHandler<TFilter, TResult> Defines a synchronous query handler for a specific type of filter and result."
  },
  "api/Innovt.CrossCutting.IOC.Container.html": {
    "href": "api/Innovt.CrossCutting.IOC.Container.html",
    "title": "Class Container | Innovt Platform",
    "keywords": "Class Container Implementation of the IoC container interface. Inheritance object Container Implements IContainer IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.IOC Assembly: Innovt.CrossCutting.IOC.dll Syntax public sealed class Container : IContainer, IDisposable Constructors | Edit this page View Source Container() Initializes a new instance of the Container class with default scan settings. Declaration public Container() | Edit this page View Source Container(IocModule) Initializes a new instance of the Container class using the specified IoC module. Declaration public Container(IocModule iocModule) Parameters Type Name Description IocModule iocModule The IoC module providing services for the container. Exceptions Type Condition ArgumentNullException Thrown when iocModule is null. | Edit this page View Source Container(IServiceCollection) Initializes a new instance of the Container class using the provided services. Declaration public Container(IServiceCollection services) Parameters Type Name Description IServiceCollection services The collection of services for the container. Methods | Edit this page View Source AddModule(IocModule) Adds services from the specified IoC module to the container. Declaration public void AddModule(IocModule iocModule) Parameters Type Name Description IocModule iocModule The IoC module providing services to be added. Exceptions Type Condition ArgumentNullException Thrown when iocModule is null. | Edit this page View Source CheckConfiguration() Checks the configuration of the container. Declaration public void CheckConfiguration() | Edit this page View Source CreateScope() Creates a new service scope within the container. Declaration public IServiceScope CreateScope() Returns Type Description IServiceScope A new service scope. | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source GetService(Type) Gets the service of the specified type from the container. Declaration public object GetService(Type serviceType) Parameters Type Name Description Type serviceType The type of service to get. Returns Type Description object The service object, or null if there is no service of the specified type. | Edit this page View Source Release(object) Releases the specified object from the container. Declaration public void Release(object obj) Parameters Type Name Description object obj The object to be released. | Edit this page View Source Resolve(Type) Resolves an instance of the specified type. Declaration public object Resolve(Type type) Parameters Type Name Description Type type The type to be resolved. Returns Type Description object An instance of the specified type. | Edit this page View Source Resolve<TService>() Resolves an instance of the specified type. Declaration public TService Resolve<TService>() Returns Type Description TService An instance of the specified type. Type Parameters Name Description TService The type to be resolved. | Edit this page View Source Resolve<TService>(string) Resolves an instance of the specified type using the provided instance key. Declaration public TService Resolve<TService>(string instanceKey) Parameters Type Name Description string instanceKey The instance key for resolving the service. Returns Type Description TService An instance of the specified type. Type Parameters Name Description TService The type to be resolved. | Edit this page View Source Resolve<TService>(Type) Resolves an instance of the specified type. Declaration public TService Resolve<TService>(Type type) Parameters Type Name Description Type type The type to be resolved. Returns Type Description TService An instance of the specified type. Type Parameters Name Description TService The type to be resolved. | Edit this page View Source TryToResolve<TService>() Try to resolve a service. If the service is not registered, return null. Declaration public TService TryToResolve<TService>() Returns Type Description TService Type Parameters Name Description TService | Edit this page View Source TryToResolve<TService>(Type) This method will not throw an exception if the service is not registered. Return null instead. Declaration public TService TryToResolve<TService>(Type type) Parameters Type Name Description Type type The type that you want to get an instance Returns Type Description TService Null or an instance of your type Type Parameters Name Description TService Implements IContainer IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.CrossCutting.IOC.ContainerBuilder.html": {
    "href": "api/Innovt.CrossCutting.IOC.ContainerBuilder.html",
    "title": "Class ContainerBuilder | Innovt Platform",
    "keywords": "Class ContainerBuilder Builder for creating an IServiceProvider using Lamar IoC container. Inheritance object ContainerBuilder Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.IOC Assembly: Innovt.CrossCutting.IOC.dll Syntax public class ContainerBuilder : IDisposable Constructors | Edit this page View Source ContainerBuilder(IServiceCollection) Initializes a new instance of the ContainerBuilder class using the provided services. Declaration public ContainerBuilder(IServiceCollection services) Parameters Type Name Description IServiceCollection services The collection of services for the container. Properties | Edit this page View Source GetServiceProvider Gets the configured IServiceProvider. Declaration public IServiceProvider GetServiceProvider { get; } Property Value Type Description IServiceProvider Methods | Edit this page View Source Dispose() Releases the resources used by the ContainerBuilder. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Releases the resources used by the ContainerBuilder. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing True if disposing; otherwise, false. Implements IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.CrossCutting.IOC.ServiceProvider.html": {
    "href": "api/Innovt.CrossCutting.IOC.ServiceProvider.html",
    "title": "Class ServiceProvider | Innovt Platform",
    "keywords": "Class ServiceProvider Implementation of the IServiceProvider and ISupportRequiredService interfaces using Lamar IoC container. Inheritance object ServiceProvider Implements IServiceProvider ISupportRequiredService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.IOC Assembly: Innovt.CrossCutting.IOC.dll Syntax public class ServiceProvider : IServiceProvider, ISupportRequiredService, IDisposable Constructors | Edit this page View Source ServiceProvider(IContainer) Initializes a new instance of the ServiceProvider class using the provided Lamar IoC container. Declaration public ServiceProvider(IContainer container) Parameters Type Name Description IContainer container The Lamar IoC container. Exceptions Type Condition ArgumentNullException Thrown when container is null. Methods | Edit this page View Source Dispose() Releases the resources used by the ServiceProvider. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Releases the resources used by the ServiceProvider. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing True if disposing; otherwise, false. | Edit this page View Source GetRequiredService(Type) Gets the service of the specified type from the Lamar IoC container. Declaration public object GetRequiredService(Type serviceType) Parameters Type Name Description Type serviceType The type of service to get. Returns Type Description object The service object. Exceptions Type Condition InvalidOperationException Thrown when there is no service of the specified type. | Edit this page View Source GetService(Type) Gets the service of the specified type from the Lamar IoC container. Declaration public object GetService(Type serviceType) Parameters Type Name Description Type serviceType The type of service to get. Returns Type Description object The service object, or null if there is no service of the specified type. Implements IServiceProvider ISupportRequiredService IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.CrossCutting.IOC.ServiceProviderFactory.html": {
    "href": "api/Innovt.CrossCutting.IOC.ServiceProviderFactory.html",
    "title": "Class ServiceProviderFactory | Innovt Platform",
    "keywords": "Class ServiceProviderFactory Factory for creating an IServiceProvider using a ContainerBuilder. Inheritance object ServiceProviderFactory Implements IServiceProviderFactory<ContainerBuilder> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.IOC Assembly: Innovt.CrossCutting.IOC.dll Syntax public class ServiceProviderFactory : IServiceProviderFactory<ContainerBuilder> Methods | Edit this page View Source CreateBuilder(IServiceCollection) Creates a new ContainerBuilder using the specified collection of services. Declaration public ContainerBuilder CreateBuilder(IServiceCollection services) Parameters Type Name Description IServiceCollection services The collection of services for the container. Returns Type Description ContainerBuilder A new instance of ContainerBuilder. | Edit this page View Source CreateServiceProvider(ContainerBuilder) Creates an IServiceProvider using the specified ContainerBuilder. Declaration public IServiceProvider CreateServiceProvider(ContainerBuilder containerBuilder) Parameters Type Name Description ContainerBuilder containerBuilder The ContainerBuilder to use for creating the service provider. Returns Type Description IServiceProvider An IServiceProvider based on the provided ContainerBuilder. Exceptions Type Condition ArgumentNullException Thrown when containerBuilder is null. Implements IServiceProviderFactory<TContainerBuilder> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.CrossCutting.IOC.html": {
    "href": "api/Innovt.CrossCutting.IOC.html",
    "title": "Namespace Innovt.CrossCutting.IOC | Innovt Platform",
    "keywords": "Namespace Innovt.CrossCutting.IOC Classes Container Implementation of the IoC container interface. ContainerBuilder Builder for creating an IServiceProvider using Lamar IoC container. ServiceProvider Implementation of the IServiceProvider and ISupportRequiredService interfaces using Lamar IoC container. ServiceProviderFactory Factory for creating an IServiceProvider using a ContainerBuilder."
  },
  "api/Innovt.CrossCutting.Log.Serilog.ActivityEnrich.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.ActivityEnrich.html",
    "title": "Class ActivityEnrich | Innovt Platform",
    "keywords": "Class ActivityEnrich Implementation of Serilog.Core.ILogEventEnricher that enriches log events with activity information. Inheritance object ActivityEnrich Implements ILogEventEnricher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.Log.Serilog Assembly: Innovt.CrossCutting.Log.Serilog.dll Syntax public class ActivityEnrich : ILogEventEnricher Methods | Edit this page View Source Enrich(LogEvent, ILogEventPropertyFactory) Enriches the provided Serilog.Events.LogEvent with activity information. Declaration public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory) Parameters Type Name Description LogEvent logEvent The log event to enrich. ILogEventPropertyFactory propertyFactory The property factory to create log event properties. Exceptions Type Condition ArgumentNullException Thrown when logEvent is null. Implements Serilog.Core.ILogEventEnricher Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.CrossCutting.Log.Serilog.DataDogEnrich.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.DataDogEnrich.html",
    "title": "Class DataDogEnrich | Innovt Platform",
    "keywords": "Class DataDogEnrich Implementation of Serilog.Core.ILogEventEnricher that enriches log events with DataDog tracing information. Inheritance object DataDogEnrich Implements ILogEventEnricher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.Log.Serilog Assembly: Innovt.CrossCutting.Log.Serilog.dll Syntax public class DataDogEnrich : ILogEventEnricher Methods | Edit this page View Source Enrich(LogEvent, ILogEventPropertyFactory) Enriches the provided Serilog.Events.LogEvent with DataDog tracing information. Declaration public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory) Parameters Type Name Description LogEvent logEvent The log event to enrich. ILogEventPropertyFactory propertyFactory The property factory to create log event properties. Exceptions Type Condition ArgumentNullException Thrown when logEvent is null. Implements Serilog.Core.ILogEventEnricher Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.CrossCutting.Log.Serilog.LogLevelEnricher.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.LogLevelEnricher.html",
    "title": "Class LogLevelEnricher | Innovt Platform",
    "keywords": "Class LogLevelEnricher Enriches Serilog log events with log4net log levels. Inheritance object LogLevelEnricher Implements ILogEventEnricher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.Log.Serilog Assembly: Innovt.CrossCutting.Log.Serilog.dll Syntax public class LogLevelEnricher : ILogEventEnricher Methods | Edit this page View Source Enrich(LogEvent, ILogEventPropertyFactory) Enriches a log event with log4net log levels. Declaration public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory) Parameters Type Name Description LogEvent logEvent The log event to enrich. ILogEventPropertyFactory propertyFactory The log event property factory. Implements Serilog.Core.ILogEventEnricher Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.CrossCutting.Log.Serilog.Logger.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.Logger.html",
    "title": "Class Logger | Innovt Platform",
    "keywords": "Class Logger Implementation of ILogger and ILogger using Serilog. Inheritance object Logger Implements ILogger ILogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.Log.Serilog Assembly: Innovt.CrossCutting.Log.Serilog.dll Syntax public class Logger : ILogger, ILogger Constructors | Edit this page View Source Logger() Initializes a new instance of the Logger class using the default output template and Console sink. Declaration public Logger() | Edit this page View Source Logger(ILogEventEnricher, string) Initializes a new instance of the Logger class with a specified log event enricher and console output template. Declaration public Logger(ILogEventEnricher logEventEnricher, string consoleOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\") Parameters Type Name Description ILogEventEnricher logEventEnricher The log event enricher to be applied. string consoleOutputTemplate The console output template for log messages. Exceptions Type Condition ArgumentNullException Thrown when logEventEnricher is null. | Edit this page View Source Logger(ILogEventEnricher[], string) Initializes a new instance of the Logger class with specified log event enrichers and console output template. Declaration public Logger(ILogEventEnricher[] logEventEnricher, string consoleOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\") Parameters Type Name Description ILogEventEnricher[] logEventEnricher The log event enrichers to be applied. string consoleOutputTemplate The console output template for log messages. Exceptions Type Condition ArgumentNullException Thrown when logEventEnricher is null. | Edit this page View Source Logger(LoggerConfiguration, string) Initializes a new instance of the Logger class with a specified configuration and console output template. Declaration public Logger(LoggerConfiguration configuration, string consoleOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\") Parameters Type Name Description LoggerConfiguration configuration The Serilog logger configuration. string consoleOutputTemplate The console output template for log messages. Exceptions Type Condition ArgumentNullException Thrown when configuration is null. | Edit this page View Source Logger(string) Initializes a new instance of the Logger class with a specified console output template. Declaration public Logger(string consoleOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\") Parameters Type Name Description string consoleOutputTemplate The console output template for log messages. Fields | Edit this page View Source DefaultOutputTemplate The default output template for log messages. Declaration public const string DefaultOutputTemplate = \"{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\\n\" Field Value Type Description string Methods | Edit this page View Source BeginScope<TState>(TState) Begins a logical operation scope. Declaration public IDisposable BeginScope<TState>(TState state) Parameters Type Name Description TState state The state object for the scope. Returns Type Description IDisposable An IDisposable that ends the logical operation scope when disposed. Type Parameters Name Description TState The type of the state object. | Edit this page View Source Debug(Exception, string) Writes a debug log message with an exception and a message template. Declaration public void Debug(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. | Edit this page View Source Debug(Exception, string, params object[]) Writes a debug log message with an exception, a message template, and additional property values. Declaration public void Debug(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Debug(string) Writes a debug log message. Declaration public void Debug(string message) Parameters Type Name Description string message The log message. | Edit this page View Source Debug(string, params object[]) Writes a debug log message using a message template and additional property values. Declaration public void Debug(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Error(Exception, string) Writes an error log message with an exception and a message template. Declaration public void Error(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. | Edit this page View Source Error(Exception, string, params object[]) Writes an error log message with an exception, a message template, and additional property values. Declaration public void Error(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Error(string) Writes an error log message. Declaration public void Error(string message) Parameters Type Name Description string message The log message. | Edit this page View Source Error(string, params object[]) Writes an error log message using a message template and additional property values. Declaration public void Error(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Fatal(Exception, string) Writes a fatal log message with an exception and a message template. Declaration public void Fatal(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. | Edit this page View Source Fatal(Exception, string, params object[]) Writes a fatal log message with an exception, a message template, and additional property values. Declaration public void Fatal(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Fatal(string) Writes a fatal log message. Declaration public void Fatal(string message) Parameters Type Name Description string message The log message. | Edit this page View Source Fatal(string, params object[]) Writes a fatal log message using a message template and additional property values. Declaration public void Fatal(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Info(Exception, string) Writes an informational log message with an exception and a message template. Declaration public void Info(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. | Edit this page View Source Info(Exception, string, params object[]) Writes an informational log message with an exception, a message template, and additional property values. Declaration public void Info(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Info(string) Writes an informational log message. Declaration public void Info(string message) Parameters Type Name Description string message The log message. | Edit this page View Source Info(string, params object[]) Writes an informational log message using a message template and additional property values. Declaration public void Info(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source IsEnabled(LogLevel) Checks if logging is enabled for the specified log level. Declaration public bool IsEnabled(LogLevel logLevel) Parameters Type Name Description LogLevel logLevel The log level to check. Returns Type Description bool True if logging is enabled for the specified log level; otherwise, false. | Edit this page View Source Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>) Writes a log message based on the specified log level, event ID, state, exception, and formatter. Declaration public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter) Parameters Type Name Description LogLevel logLevel The log level. EventId eventId The event ID. TState state The state object. Exception exception The exception associated with the log message. Func<TState, Exception, string> formatter A delegate that formats the log message. Type Parameters Name Description TState The type of the state object. | Edit this page View Source Verbose(Exception, string) Writes a verbose log message with an exception and a message template. Declaration public void Verbose(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. | Edit this page View Source Verbose(Exception, string, params object[]) Writes a verbose log message with an exception, a message template, and additional property values. Declaration public void Verbose(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Verbose(string) Writes a verbose log message. Declaration public void Verbose(string message) Parameters Type Name Description string message The log message. | Edit this page View Source Verbose(string, params object[]) Writes a verbose log message using a message template and additional property values. Declaration public void Verbose(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Warning(Exception, string) Writes a warning log message with an exception and a message template. Declaration public void Warning(Exception exception, string messageTemplate) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. | Edit this page View Source Warning(Exception, string, params object[]) Writes a warning log message with an exception, a message template, and additional property values. Declaration public void Warning(Exception exception, string messageTemplate, params object[] propertyValues) Parameters Type Name Description Exception exception The exception to include in the log message. string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. | Edit this page View Source Warning(string) Writes a warning log message. Declaration public void Warning(string message) Parameters Type Name Description string message The log message. | Edit this page View Source Warning(string, params object[]) Writes a warning log message using a message template and additional property values. Declaration public void Warning(string messageTemplate, params object[] propertyValues) Parameters Type Name Description string messageTemplate The message template for the log message. object[] propertyValues Additional property values to include in the log message. Implements ILogger ILogger Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.CrossCutting.Log.Serilog.LoggerEnrichExtensions.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.LoggerEnrichExtensions.html",
    "title": "Class LoggerEnrichExtensions | Innovt Platform",
    "keywords": "Class LoggerEnrichExtensions Provides extension methods to enrich Serilog log events with specific enrichers. Inheritance object LoggerEnrichExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.CrossCutting.Log.Serilog Assembly: Innovt.CrossCutting.Log.Serilog.dll Syntax public static class LoggerEnrichExtensions Methods | Edit this page View Source WithActivityEnrich(LoggerEnrichmentConfiguration) Enriches log events with activity trace and span IDs. Declaration public static LoggerConfiguration WithActivityEnrich(this LoggerEnrichmentConfiguration enrichmentConfiguration) Parameters Type Name Description LoggerEnrichmentConfiguration enrichmentConfiguration The logger enrichment configuration. Returns Type Description LoggerConfiguration The updated logger configuration. | Edit this page View Source WithDataDogEnrich(LoggerEnrichmentConfiguration) Enriches log events with DataDog trace and span IDs. Declaration public static LoggerConfiguration WithDataDogEnrich(this LoggerEnrichmentConfiguration enrichmentConfiguration) Parameters Type Name Description LoggerEnrichmentConfiguration enrichmentConfiguration The logger enrichment configuration. Returns Type Description LoggerConfiguration The updated logger configuration."
  },
  "api/Innovt.CrossCutting.Log.Serilog.html": {
    "href": "api/Innovt.CrossCutting.Log.Serilog.html",
    "title": "Namespace Innovt.CrossCutting.Log.Serilog | Innovt Platform",
    "keywords": "Namespace Innovt.CrossCutting.Log.Serilog Classes ActivityEnrich Implementation of Serilog.Core.ILogEventEnricher that enriches log events with activity information. DataDogEnrich Implementation of Serilog.Core.ILogEventEnricher that enriches log events with DataDog tracing information. LogLevelEnricher Enriches Serilog log events with log4net log levels. Logger Implementation of ILogger and ILogger using Serilog. LoggerEnrichExtensions Provides extension methods to enrich Serilog log events with specific enrichers."
  },
  "api/Innovt.Data.Ado.ConnectionFactory.html": {
    "href": "api/Innovt.Data.Ado.ConnectionFactory.html",
    "title": "Class ConnectionFactory | Innovt Platform",
    "keywords": "Class ConnectionFactory Represents a factory for creating database connections based on a data source. Inheritance object ConnectionFactory Implements IConnectionFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.Ado Assembly: Innovt.Data.Ado.dll Syntax public class ConnectionFactory : IConnectionFactory Methods | Edit this page View Source Create(IDataSource) Creates a new instance of IDbConnection based on the provided data source. Declaration public IDbConnection Create(IDataSource dataSource) Parameters Type Name Description IDataSource dataSource The data source for which a connection will be created. Returns Type Description IDbConnection A new instance of IDbConnection based on the data source. Exceptions Type Condition ArgumentNullException Thrown when dataSource is null. ConnectionStringException Thrown when the connection string is null or empty. Implements IConnectionFactory Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.Ado.IConnectionFactory.html": {
    "href": "api/Innovt.Data.Ado.IConnectionFactory.html",
    "title": "Interface IConnectionFactory | Innovt Platform",
    "keywords": "Interface IConnectionFactory Represents an interface for a factory that creates database connections based on a data source. Namespace: Innovt.Data.Ado Assembly: Innovt.Data.Ado.dll Syntax public interface IConnectionFactory Methods | Edit this page View Source Create(IDataSource) Creates a new instance of IDbConnection based on the provided data source. Declaration IDbConnection Create(IDataSource dataSource) Parameters Type Name Description IDataSource dataSource The data source for which a connection will be created. Returns Type Description IDbConnection A new instance of IDbConnection based on the data source. Exceptions Type Condition ArgumentNullException Thrown when dataSource is null. ConnectionStringException Thrown when the connection string is null or empty. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.Ado.IRepositoryBase.html": {
    "href": "api/Innovt.Data.Ado.IRepositoryBase.html",
    "title": "Interface IRepositoryBase | Innovt Platform",
    "keywords": "Interface IRepositoryBase Represents a base interface for repository operations. Namespace: Innovt.Data.Ado Assembly: Innovt.Data.Ado.dll Syntax public interface IRepositoryBase Methods | Edit this page View Source ExecuteAsync(string, object, IDbTransaction, CancellationToken) Declaration Task<int> ExecuteAsync(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter IDbTransaction dbTransaction CancellationToken cancellationToken Returns Type Description Task<int> | Edit this page View Source ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken) Declaration Task<T> ExecuteScalarAsync<T>(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter IDbTransaction dbTransaction CancellationToken cancellationToken Returns Type Description Task<T> Type Parameters Name Description T | Edit this page View Source QueryAsync<T>(string, object, CancellationToken) Declaration Task<IEnumerable<T>> QueryAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter CancellationToken cancellationToken Returns Type Description Task<IEnumerable<T>> Type Parameters Name Description T | Edit this page View Source QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken) Declaration Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TReturn>(string sql, object filter, Func<TFirst, TSecond, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter Func<TFirst, TSecond, TReturn> func string splitOn CancellationToken cancellationToken Returns Type Description Task<IEnumerable<TReturn>> Type Parameters Name Description TFirst TSecond TReturn | Edit this page View Source QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken) Declaration Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter Func<TFirst, TSecond, TThird, TReturn> func string splitOn CancellationToken cancellationToken Returns Type Description Task<IEnumerable<TReturn>> Type Parameters Name Description TFirst TSecond TThird TReturn | Edit this page View Source QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken) Declaration Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter Func<TFirst, TSecond, TThird, TFourth, TReturn> func string splitOn CancellationToken cancellationToken Returns Type Description Task<IEnumerable<TReturn>> Type Parameters Name Description TFirst TSecond TThird TFourth TReturn | Edit this page View Source QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken) Declaration Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func string splitOn CancellationToken cancellationToken Returns Type Description Task<IEnumerable<TReturn>> Type Parameters Name Description TFirst TSecond TThird TFourth TFifth TReturn | Edit this page View Source QueryCountAsync(string, string, object, CancellationToken) Declaration Task<int> QueryCountAsync(string tableName, string whereClause = null, object filter = null, CancellationToken cancellationToken = default) Parameters Type Name Description string tableName string whereClause object filter CancellationToken cancellationToken Returns Type Description Task<int> | Edit this page View Source QueryFirstOrDefaultAsync<T>(string, object, CancellationToken) Declaration Task<T> QueryFirstOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter CancellationToken cancellationToken Returns Type Description Task<T> Type Parameters Name Description T | Edit this page View Source QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) Declaration Task<T> QueryFirstOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns) Parameters Type Name Description string tableName string whereClause object filter CancellationToken cancellationToken string[] columns Returns Type Description Task<T> Type Parameters Name Description T | Edit this page View Source QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken) Declaration Task<IEnumerable<T>> QueryListPagedAsync<T>(string sql, IPagedFilter filter, CancellationToken cancellationToken = default) Parameters Type Name Description string sql IPagedFilter filter CancellationToken cancellationToken Returns Type Description Task<IEnumerable<T>> Type Parameters Name Description T | Edit this page View Source QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken) Declaration Task<PagedCollection<T>> QueryPagedAsync<T>(string sql, IPagedFilter filter, bool useCount = true, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description string sql IPagedFilter filter bool useCount CancellationToken cancellationToken Returns Type Description Task<PagedCollection<T>> Type Parameters Name Description T | Edit this page View Source QuerySingleOrDefaultAsync<T>(string, object, CancellationToken) Declaration Task<T> QuerySingleOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql object filter CancellationToken cancellationToken Returns Type Description Task<T> Type Parameters Name Description T | Edit this page View Source QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) Declaration Task<T> QuerySingleOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns) Parameters Type Name Description string tableName string whereClause object filter CancellationToken cancellationToken string[] columns Returns Type Description Task<T> Type Parameters Name Description T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.Ado.RepositoryBase.html": {
    "href": "api/Innovt.Data.Ado.RepositoryBase.html",
    "title": "Class RepositoryBase | Innovt Platform",
    "keywords": "Class RepositoryBase Represents a base repository implementation that provides common data access methods. Inheritance object RepositoryBase Implements IRepositoryBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.Ado Assembly: Innovt.Data.Ado.dll Syntax public class RepositoryBase : IRepositoryBase Constructors | Edit this page View Source RepositoryBase(IDataSource) Initializes a new instance of the RepositoryBase class with the specified data source. Declaration public RepositoryBase(IDataSource datasource) Parameters Type Name Description IDataSource datasource | Edit this page View Source RepositoryBase(IDataSource, IConnectionFactory) Initializes a new instance of the RepositoryBase class with the specified data source and connection factory. Declaration public RepositoryBase(IDataSource dataSource, IConnectionFactory connectionFactory) Parameters Type Name Description IDataSource dataSource The data source to use for database operations. IConnectionFactory connectionFactory The connection factory for creating database connections. Methods | Edit this page View Source ExecuteAsync(string, object, IDbTransaction, CancellationToken) Asynchronously executes a SQL command and returns the number of affected rows. Declaration public Task<int> ExecuteAsync(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL command to execute. object filter An optional object that can be used to pass parameters or filters to the SQL command. IDbTransaction dbTransaction An optional database transaction for the command. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<int> A task representing the asynchronous operation. The task will return the number of affected rows by the executed SQL command. Exceptions Type Condition ArgumentNullException Thrown if the 'sql' parameter is null. | Edit this page View Source ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken) Asynchronously executes a SQL command and returns a scalar result of type T. Declaration public Task<T> ExecuteScalarAsync<T>(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL command to execute. object filter An optional object that can be used to pass parameters or filters to the SQL command. IDbTransaction dbTransaction An optional database transaction for the command. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<T> A task representing the asynchronous operation. The task will return the scalar result of type T from the executed SQL command. Type Parameters Name Description T The type of the scalar result. Exceptions Type Condition ArgumentNullException Thrown if the 'sql' parameter is null. | Edit this page View Source QueryAsync<T>(string, object, CancellationToken) Asynchronously executes a SQL query and returns a collection of results of type T. Declaration public Task<IEnumerable<T>> QueryAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL query to execute. object filter An optional object that can be used to pass parameters or filters to the SQL query. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<IEnumerable<T>> A task representing the asynchronous operation. The task will return a collection of results of type T based on the SQL query. Type Parameters Name Description T The type of the result. Exceptions Type Condition ArgumentNullException Thrown if the 'sql' parameter is null. | Edit this page View Source QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken) Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a provided function. Declaration public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TReturn>(string sql, object filter, Func<TFirst, TSecond, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL query to execute. object filter An optional object that can be used to pass parameters or filters to the SQL query. Func<TFirst, TSecond, TReturn> func A function to map the query results to the desired type. string splitOn The column name to split the results on. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<IEnumerable<TReturn>> A task representing the asynchronous operation. The task will return a collection of results of the specified mapped type. Type Parameters Name Description TFirst The type of the first result. TSecond The type of the second result. TReturn The type to map the results to. Exceptions Type Condition ArgumentNullException Thrown if the 'sql' parameter is null. | Edit this page View Source QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken) Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a provided function. Declaration public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL query to execute. object filter An optional object that can be used to pass parameters or filters to the SQL query. Func<TFirst, TSecond, TThird, TReturn> func A function to map the query results to the desired type. string splitOn The column name to split the results on. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<IEnumerable<TReturn>> A task representing the asynchronous operation. The task will return a collection of results of the specified mapped type. Type Parameters Name Description TFirst The type of the first result. TSecond The type of the second result. TThird The type of the third result. TReturn The type to map the results to. Exceptions Type Condition ArgumentNullException Thrown if the 'sql' parameter is null. | Edit this page View Source QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken) Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a provided function. Declaration public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL query to execute. object filter An optional object that can be used to pass parameters or filters to the SQL query. Func<TFirst, TSecond, TThird, TFourth, TReturn> func A function to map the query results to the desired type. string splitOn The column name to split the results on. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<IEnumerable<TReturn>> A task representing the asynchronous operation. The task will return a collection of results of the specified mapped type. Type Parameters Name Description TFirst The type of the first result. TSecond The type of the second result. TThird The type of the third result. TFourth The type of the fourth result. TReturn The type to map the results to. Exceptions Type Condition ArgumentNullException Thrown if the 'sql' parameter is null. | Edit this page View Source QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken) Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a provided function. Declaration public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func, string splitOn, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL query to execute. object filter An optional object that can be used to pass parameters or filters to the SQL query. Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func A function to map the query results to the desired type. string splitOn The column name to split the results on. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<IEnumerable<TReturn>> A task representing the asynchronous operation. The task will return a collection of results of the specified mapped type. Type Parameters Name Description TFirst The type of the first result. TSecond The type of the second result. TThird The type of the third result. TFourth The type of the fourth result. TFifth The type of the fifth result. TReturn The type to map the results to. Exceptions Type Condition ArgumentNullException Thrown if the 'sql' parameter is null. | Edit this page View Source QueryCountAsync(string, string, object, CancellationToken) Asynchronously executes a SQL query to count records in a specified table. Declaration public Task<int> QueryCountAsync(string tableName, string whereClause = null, object filter = null, CancellationToken cancellationToken = default) Parameters Type Name Description string tableName The name of the table to query. string whereClause An optional WHERE clause to filter the count. object filter An optional object that can be used to pass parameters or filters to the SQL query. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<int> A task representing the asynchronous operation. The task will return the count of records based on the provided criteria. Exceptions Type Condition ArgumentNullException Thrown if the 'tableName' parameter is null. | Edit this page View Source QueryFirstOrDefaultAsync<T>(string, object, CancellationToken) Asynchronously retrieves the first result of a query using the provided SQL statement. Declaration public Task<T> QueryFirstOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL statement for the query. object filter Additional filter parameters for the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<T> The first result of the query. Type Parameters Name Description T The type of the result. Exceptions Type Condition ArgumentNullException Thrown when sql is null. | Edit this page View Source QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) Asynchronously retrieves the first result of a query from the specified table based on the provided where clause and optional columns. Declaration public Task<T> QueryFirstOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns) Parameters Type Name Description string tableName The name of the table. string whereClause The WHERE clause for the query. object filter Additional filter parameters for the query. CancellationToken cancellationToken The cancellation token. string[] columns The optional columns to select. Returns Type Description Task<T> The first result of the query. Type Parameters Name Description T The type of the result. Exceptions Type Condition ArgumentNullException Thrown when tableName or whereClause is null. | Edit this page View Source QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken) Executes a paged SQL query asynchronously and returns the results as an IEnumerable. Declaration public Task<IEnumerable<T>> QueryListPagedAsync<T>(string sql, IPagedFilter filter, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL query to execute. IPagedFilter filter The filter for pagination and ordering. CancellationToken cancellationToken A CancellationToken to cancel the asynchronous operation. Defaults to CancellationToken.None. Returns Type Description Task<IEnumerable<T>> An IEnumerable containing the results of the query. Type Parameters Name Description T The type of object to retrieve from the query. Exceptions Type Condition ArgumentNullException Thrown when sql or filter is null. | Edit this page View Source QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken) Executes a paged SQL query asynchronously and returns the results as a PagedCollection. Declaration public Task<PagedCollection<T>> QueryPagedAsync<T>(string sql, IPagedFilter filter, bool useCount = true, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description string sql The SQL query to execute. IPagedFilter filter The filter for pagination and ordering. bool useCount Flag indicating whether to include a total count of records. Defaults to true. CancellationToken cancellationToken A CancellationToken to cancel the asynchronous operation. Defaults to CancellationToken.None. Returns Type Description Task<PagedCollection<T>> A PagedCollection containing the results of the query. Type Parameters Name Description T The type of object to retrieve from the query. Exceptions Type Condition ArgumentNullException Thrown when sql is null. SqlSyntaxException Thrown when the ORDER BY clause is not found in the SQL query. | Edit this page View Source QuerySingleOrDefaultAsync<T>(string, object, CancellationToken) Asynchronously executes a SQL query and returns a single result of type T, or a default value if no result is found. Declaration public Task<T> QuerySingleOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default) Parameters Type Name Description string sql The SQL query to execute. object filter An optional object that can be used to pass parameters or filters to the SQL query. CancellationToken cancellationToken A cancellation token that can be used to cancel the operation. Returns Type Description Task<T> A task representing the asynchronous operation. The task will return the single result of type T if found, or the default value for type T if no result is found. Type Parameters Name Description T The type of the result. Exceptions Type Condition ArgumentNullException Thrown if the 'sql' parameter is null. | Edit this page View Source QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[]) Asynchronously retrieves a single result from the specified table based on the provided where clause and optional columns. Declaration public Task<T> QuerySingleOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns) Parameters Type Name Description string tableName The name of the table. string whereClause The WHERE clause for the query. object filter Additional filter parameters for the query. CancellationToken cancellationToken The cancellation token. string[] columns The optional columns to select. Returns Type Description Task<T> A single result from the query. Type Parameters Name Description T The type of the result. Exceptions Type Condition ArgumentNullException Thrown when tableName or whereClause is null. Implements IRepositoryBase Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.Ado.html": {
    "href": "api/Innovt.Data.Ado.html",
    "title": "Namespace Innovt.Data.Ado | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Ado Classes ConnectionFactory Represents a factory for creating database connections based on a data source. RepositoryBase Represents a base repository implementation that provides common data access methods. Interfaces IConnectionFactory Represents an interface for a factory that creates database connections based on a data source. IRepositoryBase Represents a base interface for repository operations."
  },
  "api/Innovt.Data.DataModels.BaseDataModel-2.html": {
    "href": "api/Innovt.Data.DataModels.BaseDataModel-2.html",
    "title": "Class BaseDataModel<TDomain, TDataModel> | Innovt Platform",
    "keywords": "Class BaseDataModel<TDomain, TDataModel> The base abstract class for data model classes that facilitate communication between domain models and data models. Inheritance object BaseDataModel<TDomain, TDataModel> Implements INotifyPropertyChanged IBaseDataModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.DataModels Assembly: Innovt.Data.dll Syntax public abstract class BaseDataModel<TDomain, TDataModel> : INotifyPropertyChanged, IBaseDataModel where TDomain : class where TDataModel : class Type Parameters Name Description TDomain The type representing the domain model. TDataModel The type representing the data model. Properties | Edit this page View Source EnableTrackingChanges Gets or sets a value indicating whether change tracking is enabled. Declaration public bool EnableTrackingChanges { get; set; } Property Value Type Description bool | Edit this page View Source HasChanges Gets a value indicating whether there are pending changes in the data model. Declaration public bool HasChanges { get; } Property Value Type Description bool Methods | Edit this page View Source OnPropertyChanged(string) Raises the PropertyChanged event and updates the change tracking if enabled. Declaration protected virtual void OnPropertyChanged(string propertyName = null) Parameters Type Name Description string propertyName The name of the property that changed (auto-populated). | Edit this page View Source ParseToDataModel(IList<TDomain>) Converts a list of domain model instances to a list of data model instances. Declaration public virtual List<TDataModel> ParseToDataModel(IList<TDomain> domainModels) Parameters Type Name Description IList<TDomain> domainModels The list of domain model instances to convert. Returns Type Description List<TDataModel> A list of corresponding data model instances. | Edit this page View Source ParseToDataModel(TDomain) Converts a domain model instance to a data model instance. Declaration public abstract TDataModel ParseToDataModel(TDomain domainModel) Parameters Type Name Description TDomain domainModel The domain model instance to convert. Returns Type Description TDataModel The corresponding data model instance. | Edit this page View Source ParseToDomain(IList<TDataModel>) Converts a list of data model instances to a list of domain model instances. Declaration public virtual List<TDomain> ParseToDomain(IList<TDataModel> dataModels) Parameters Type Name Description IList<TDataModel> dataModels The list of data model instances to convert. Returns Type Description List<TDomain> A list of corresponding domain model instances. | Edit this page View Source ParseToDomain(TDataModel) Converts a data model instance to a domain model instance. Declaration public abstract TDomain ParseToDomain(TDataModel dataModel) Parameters Type Name Description TDataModel dataModel The data model instance to convert. Returns Type Description TDomain The corresponding domain model instance. | Edit this page View Source SetProperty<T>(ref T, T, string) Sets the value of a property and raises the PropertyChanged event if the value changes. Declaration protected bool SetProperty<T>(ref T field, T value, string propertyName = null) Parameters Type Name Description T field Reference to the property's backing field. T value The new value to set. string propertyName The name of the property that changed (auto-populated). Returns Type Description bool True if the property value changed; otherwise, false. Type Parameters Name Description T The property type. Events | Edit this page View Source PropertyChanged Event that is raised when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements INotifyPropertyChanged IBaseDataModel Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataModels.DmContext.html": {
    "href": "api/Innovt.Data.DataModels.DmContext.html",
    "title": "Class DmContext | Innovt Platform",
    "keywords": "Class DmContext Represents a context for managing instances of data models and tracking changes. Inheritance object DmContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.DataModels Assembly: Innovt.Data.dll Syntax public class DmContext Methods | Edit this page View Source Attach<T>(T) Attaches a data model entity to the context for change tracking. Declaration public void Attach<T>(T entity) where T : IBaseDataModel Parameters Type Name Description T entity The entity to be attached. Type Parameters Name Description T The type of the entity implementing IBaseDataModel. Exceptions Type Condition ArgumentNullException Thrown when the entity is null. | Edit this page View Source DeAttach<T>(T) Detaches a data model entity from the context and disables change tracking. Declaration public void DeAttach<T>(T entity) where T : IBaseDataModel Parameters Type Name Description T entity The entity to be detached. Type Parameters Name Description T The type of the entity implementing IBaseDataModel. Exceptions Type Condition ArgumentNullException Thrown when the entity is null. | Edit this page View Source Find<T>(T) Finds a data model entity in the context based on its hash code. Declaration public T Find<T>(T entity) where T : IBaseDataModel Parameters Type Name Description T entity The entity to be found. Returns Type Description T The found data model entity or default if not found. Type Parameters Name Description T The type of the entity implementing IBaseDataModel. Exceptions Type Condition ArgumentNullException Thrown when the entity is null. | Edit this page View Source GetAllWithChanges() Retrieves a list of data model entities that have changes. Declaration public List<object> GetAllWithChanges() Returns Type Description List<object> A list of data model entities with pending changes. | Edit this page View Source Instance() Gets the singleton instance of the DMContext. Declaration public static DmContext Instance() Returns Type Description DmContext The singleton instance of the DMContext. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataModels.IBaseDataModel.html": {
    "href": "api/Innovt.Data.DataModels.IBaseDataModel.html",
    "title": "Interface IBaseDataModel | Innovt Platform",
    "keywords": "Interface IBaseDataModel Represents the base interface for data model entities, providing change tracking capabilities. Namespace: Innovt.Data.DataModels Assembly: Innovt.Data.dll Syntax public interface IBaseDataModel Properties | Edit this page View Source EnableTrackingChanges Gets or sets a value indicating whether change tracking is enabled for the data model. Declaration bool EnableTrackingChanges { get; set; } Property Value Type Description bool | Edit this page View Source HasChanges Gets a value indicating whether the data model has pending changes. Declaration bool HasChanges { get; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataModels.html": {
    "href": "api/Innovt.Data.DataModels.html",
    "title": "Namespace Innovt.Data.DataModels | Innovt Platform",
    "keywords": "Namespace Innovt.Data.DataModels Classes BaseDataModel<TDomain, TDataModel> The base abstract class for data model classes that facilitate communication between domain models and data models. DmContext Represents a context for managing instances of data models and tracking changes. Interfaces IBaseDataModel Represents the base interface for data model entities, providing change tracking capabilities."
  },
  "api/Innovt.Data.DataSources.DataSourceBase.html": {
    "href": "api/Innovt.Data.DataSources.DataSourceBase.html",
    "title": "Class DataSourceBase | Innovt Platform",
    "keywords": "Class DataSourceBase The Default DataSource is using ConfigurationManager Inheritance object DataSourceBase DataSourceReader DataSourceWriter DefaultDataSource Implements IDataSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.DataSources Assembly: Innovt.Data.dll Syntax public abstract class DataSourceBase : IDataSource Constructors | Edit this page View Source DataSourceBase(IConfiguration, string, Provider) Initializes a new instance of the DataSourceBase class with configuration settings. Declaration protected DataSourceBase(IConfiguration configuration, string connectionStringName, Provider provider = Provider.MsSql) Parameters Type Name Description IConfiguration configuration The configuration containing connection string settings. string connectionStringName The name of the connection string. Provider provider The provider for the data source (default is MsSql). | Edit this page View Source DataSourceBase(IConfiguration, string, string, Provider) Initializes a new instance of the DataSourceBase class with configuration settings and a custom name. Declaration protected DataSourceBase(IConfiguration configuration, string name, string connectionStringName, Provider provider = Provider.MsSql) Parameters Type Name Description IConfiguration configuration The configuration containing connection string settings. string name The custom name of the data source. string connectionStringName The name of the connection string. Provider provider The provider for the data source (default is MsSql). | Edit this page View Source DataSourceBase(string, string, Provider) Initializes a new instance of the DataSourceBase class with the specified parameters. Declaration protected DataSourceBase(string name, string connectionString, Provider provider = Provider.MsSql) Parameters Type Name Description string name The name of the data source. string connectionString The connection string for the data source. Provider provider The provider for the data source (default is MsSql). Properties | Edit this page View Source Name Gets or sets the name of the data source. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Provider Gets the provider for the data source. Declaration public Provider Provider { get; } Property Value Type Description Provider Methods | Edit this page View Source GetConnectionString() Retrieves the connection string for the data source. Declaration public string GetConnectionString() Returns Type Description string The connection string for the data source. Implements IDataSource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.DataSourceReader.html": {
    "href": "api/Innovt.Data.DataSources.DataSourceReader.html",
    "title": "Class DataSourceReader | Innovt Platform",
    "keywords": "Class DataSourceReader Represents a data source reader that inherits from DataSourceBase and implements IDataSourceReader. Inheritance object DataSourceBase DataSourceReader Implements IDataSourceReader IDataSource Inherited Members DataSourceBase.Name DataSourceBase.Provider DataSourceBase.GetConnectionString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.DataSources Assembly: Innovt.Data.dll Syntax public class DataSourceReader : DataSourceBase, IDataSourceReader, IDataSource Constructors | Edit this page View Source DataSourceReader(IConfiguration, string, Provider) Initializes a new instance of the DataSourceReader class with configuration settings. Declaration public DataSourceReader(IConfiguration configuration, string connectionStringName, Provider provider = Provider.MsSql) Parameters Type Name Description IConfiguration configuration The configuration containing connection string settings. string connectionStringName The name of the connection string. Provider provider The provider for the data source (default is MsSql). | Edit this page View Source DataSourceReader(IConfiguration, string, string, Provider) Initializes a new instance of the DataSourceReader class with configuration settings and a custom name. Declaration public DataSourceReader(IConfiguration configuration, string name, string connectionStringName, Provider provider = Provider.MsSql) Parameters Type Name Description IConfiguration configuration The configuration containing connection string settings. string name The custom name of the data source. string connectionStringName The name of the connection string. Provider provider The provider for the data source (default is MsSql). | Edit this page View Source DataSourceReader(string, string, Provider) Initializes a new instance of the DataSourceReader class with the specified parameters. Declaration public DataSourceReader(string name, string connectionString, Provider provider = Provider.MsSql) Parameters Type Name Description string name The name of the data source. string connectionString The connection string for the data source. Provider provider The provider for the data source (default is MsSql). Implements IDataSourceReader IDataSource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.DataSourceWriter.html": {
    "href": "api/Innovt.Data.DataSources.DataSourceWriter.html",
    "title": "Class DataSourceWriter | Innovt Platform",
    "keywords": "Class DataSourceWriter Represents a data source writer that inherits from DataSourceBase and implements IDataSourceWriter. Inheritance object DataSourceBase DataSourceWriter Implements IDataSourceWriter IDataSource Inherited Members DataSourceBase.Name DataSourceBase.Provider DataSourceBase.GetConnectionString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.DataSources Assembly: Innovt.Data.dll Syntax public class DataSourceWriter : DataSourceBase, IDataSourceWriter, IDataSource Constructors | Edit this page View Source DataSourceWriter(IConfiguration, string, Provider) Initializes a new instance of the DataSourceWriter class with configuration settings. Declaration public DataSourceWriter(IConfiguration configuration, string connectionStringName, Provider provider = Provider.MsSql) Parameters Type Name Description IConfiguration configuration The configuration containing connection string settings. string connectionStringName The name of the connection string. Provider provider The provider for the data source (default is MsSql). | Edit this page View Source DataSourceWriter(IConfiguration, string, string, Provider) Initializes a new instance of the DataSourceWriter class with configuration settings and a custom name. Declaration public DataSourceWriter(IConfiguration configuration, string name, string connectionStringName, Provider provider = Provider.MsSql) Parameters Type Name Description IConfiguration configuration The configuration containing connection string settings. string name The custom name of the data source. string connectionStringName The name of the connection string. Provider provider The provider for the data source (default is MsSql). | Edit this page View Source DataSourceWriter(string, string, Provider) Initializes a new instance of the DataSourceWriter class with the specified parameters. Declaration public DataSourceWriter(string name, string connectionString, Provider provider = Provider.MsSql) Parameters Type Name Description string name The name of the data source. string connectionString The connection string for the data source. Provider provider The provider for the data source (default is MsSql). Implements IDataSourceWriter IDataSource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.DefaultDataSource.html": {
    "href": "api/Innovt.Data.DataSources.DefaultDataSource.html",
    "title": "Class DefaultDataSource | Innovt Platform",
    "keywords": "Class DefaultDataSource Represents a default data source that inherits from DataSourceBase. Inheritance object DataSourceBase DefaultDataSource Implements IDataSource Inherited Members DataSourceBase.Name DataSourceBase.Provider DataSourceBase.GetConnectionString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.DataSources Assembly: Innovt.Data.dll Syntax public class DefaultDataSource : DataSourceBase, IDataSource Constructors | Edit this page View Source DefaultDataSource(IConfiguration, string, Provider) Initializes a new instance of the DefaultDataSource class with configuration settings. Declaration public DefaultDataSource(IConfiguration configuration, string connectionStringName, Provider provider = Provider.MsSql) Parameters Type Name Description IConfiguration configuration The configuration containing connection string settings. string connectionStringName The name of the connection string. Provider provider The provider for the data source (default is MsSql). | Edit this page View Source DefaultDataSource(IConfiguration, string, string, Provider) Initializes a new instance of the DefaultDataSource class with configuration settings and a custom name. Declaration public DefaultDataSource(IConfiguration configuration, string name, string connectionStringName, Provider provider = Provider.MsSql) Parameters Type Name Description IConfiguration configuration The configuration containing connection string settings. string name The custom name of the data source. string connectionStringName The name of the connection string. Provider provider The provider for the data source (default is MsSql). | Edit this page View Source DefaultDataSource(string, string, Provider) Initializes a new instance of the DefaultDataSource class with the specified parameters. Declaration public DefaultDataSource(string name, string connectionString, Provider provider = Provider.MsSql) Parameters Type Name Description string name The name of the data source. string connectionString The connection string for the data source. Provider provider The provider for the data source (default is MsSql). Implements IDataSource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.IDataSource.html": {
    "href": "api/Innovt.Data.DataSources.IDataSource.html",
    "title": "Interface IDataSource | Innovt Platform",
    "keywords": "Interface IDataSource Represents an interface for a data source, providing information about the data source. Namespace: Innovt.Data.DataSources Assembly: Innovt.Data.dll Syntax public interface IDataSource Properties | Edit this page View Source Name Gets or sets the name of the data source. Declaration string Name { get; set; } Property Value Type Description string | Edit this page View Source Provider Gets the provider for the data source. Declaration Provider Provider { get; } Property Value Type Description Provider Methods | Edit this page View Source GetConnectionString() Retrieves the connection string for the data source. Declaration string GetConnectionString() Returns Type Description string The connection string for the data source. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.IDataSourceReader.html": {
    "href": "api/Innovt.Data.DataSources.IDataSourceReader.html",
    "title": "Interface IDataSourceReader | Innovt Platform",
    "keywords": "Interface IDataSourceReader Represents an interface for a data source reader, inheriting from IDataSource. Inherited Members IDataSource.Name IDataSource.Provider IDataSource.GetConnectionString() Namespace: Innovt.Data.DataSources Assembly: Innovt.Data.dll Syntax public interface IDataSourceReader : IDataSource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.IDataSourceWriter.html": {
    "href": "api/Innovt.Data.DataSources.IDataSourceWriter.html",
    "title": "Interface IDataSourceWriter | Innovt Platform",
    "keywords": "Interface IDataSourceWriter Represents an interface for a data source writer, inheriting from IDataSource. Inherited Members IDataSource.Name IDataSource.Provider IDataSource.GetConnectionString() Namespace: Innovt.Data.DataSources Assembly: Innovt.Data.dll Syntax public interface IDataSourceWriter : IDataSource Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.DataSources.html": {
    "href": "api/Innovt.Data.DataSources.html",
    "title": "Namespace Innovt.Data.DataSources | Innovt Platform",
    "keywords": "Namespace Innovt.Data.DataSources Classes DataSourceBase The Default DataSource is using ConfigurationManager DataSourceReader Represents a data source reader that inherits from DataSourceBase and implements IDataSourceReader. DataSourceWriter Represents a data source writer that inherits from DataSourceBase and implements IDataSourceWriter. DefaultDataSource Represents a default data source that inherits from DataSourceBase. Interfaces IDataSource Represents an interface for a data source, providing information about the data source. IDataSourceReader Represents an interface for a data source reader, inheriting from IDataSource. IDataSourceWriter Represents an interface for a data source writer, inheriting from IDataSource."
  },
  "api/Innovt.Data.EFCore.DBContextBase.html": {
    "href": "api/Innovt.Data.EFCore.DBContextBase.html",
    "title": "Class DBContextBase | Innovt Platform",
    "keywords": "Class DBContextBase Abstract base class for Entity Framework DbContext implementing the extended unit of work interface. Inheritance object DbContext DBContextBase DBContext DBContext DBContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore Assembly: Innovt.Data.EFCore.dll Syntax public abstract class DBContextBase : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable Constructors | Edit this page View Source DBContextBase(IDataSource) Initializes a new instance of the DBContextBase class using a data source. Declaration protected DBContextBase(IDataSource dataSource) Parameters Type Name Description IDataSource dataSource The data source to use. Exceptions Type Condition ArgumentNullException Thrown when the data source is null. | Edit this page View Source DBContextBase(IDataSource, ILoggerFactory) Initializes a new instance of the DBContextBase class using a data source and logger factory. Declaration protected DBContextBase(IDataSource dataSource, ILoggerFactory loggerFactory) Parameters Type Name Description IDataSource dataSource The data source to use. ILoggerFactory loggerFactory The logger factory to use. Exceptions Type Condition ArgumentNullException Thrown when the data source or logger factory is null. | Edit this page View Source DBContextBase(DbContextOptions) Initializes a new instance of the DBContextBase class using DbContext options. Declaration protected DBContextBase(DbContextOptions options) Parameters Type Name Description DbContextOptions options The DbContext options. Properties | Edit this page View Source MaxRetryCount Gets or sets the maximum number of retries for a transaction. Declaration public int? MaxRetryCount { get; set; } Property Value Type Description int? | Edit this page View Source MaxRetryDelay Gets or sets the maximum delay between retries for a transaction. Declaration public TimeSpan? MaxRetryDelay { get; set; } Property Value Type Description TimeSpan? Methods | Edit this page View Source AddAsync<T>(IEnumerable<T>, CancellationToken) Asynchronously adds a collection of entities to the DbContext. Declaration public Task AddAsync<T>(IEnumerable<T> entities, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description IEnumerable<T> entities The collection of entities to add. CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task A task representing the asynchronous operation. Type Parameters Name Description T The type of entities to add. | Edit this page View Source AddAsync<T>(T, CancellationToken) Asynchronously adds an entity to the DbContext. Declaration public Task AddAsync<T>(T entity, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description T entity The entity to add. CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task A task representing the asynchronous operation. Type Parameters Name Description T The type of entity to add. | Edit this page View Source Add<T>(IEnumerable<T>) Adds a collection of entities to the DbContext. Declaration public void Add<T>(IEnumerable<T> entities) where T : class Parameters Type Name Description IEnumerable<T> entities The collection of entities to add. Type Parameters Name Description T The type of entities to add. | Edit this page View Source Add<T>(T) Adds an entity to the DbContext. Declaration public void Add<T>(T entity) where T : class Parameters Type Name Description T entity The entity to add. Type Parameters Name Description T The type of entity to add. | Edit this page View Source Attach<T>(T) Attaches the specified entity to the DbContext. Declaration public void Attach<T>(T entity) where T : class Parameters Type Name Description T entity The entity to attach. Type Parameters Name Description T The type of entity to attach. | Edit this page View Source Commit() Commits the changes made in the unit of work to the database. Declaration public int Commit() Returns Type Description int The number of entities written to the database. | Edit this page View Source CommitAsync(CancellationToken) Asynchronously commits the changes made in the unit of work to the database. Declaration public Task<int> CommitAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task<int> The number of entities written to the database. | Edit this page View Source ConfigureProvider(DbContextOptionsBuilder, string) Configures the provider-specific options for the DbContext. Declaration protected abstract void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters Type Name Description DbContextOptionsBuilder optionsBuilder The options builder for configuring DbContext options. string connectionString The connection string for the data source. | Edit this page View Source Detach<T>(T) Detaches an entity from the DbContext. Declaration public void Detach<T>(T entity) where T : class Parameters Type Name Description T entity The entity to detach. Type Parameters Name Description T The type of entity to detach. | Edit this page View Source ExecuteSqlCommand(string, params object[]) Executes a SQL command against the database. Declaration public abstract int ExecuteSqlCommand(string sql, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. object[] parameters The parameters for the SQL command. Returns Type Description int The number of entities affected by the SQL command. | Edit this page View Source ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a SQL command against the database. Declaration public abstract Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. CancellationToken cancellationToken Cancellation token (optional). object[] parameters The parameters for the SQL command. Returns Type Description Task<int> A task representing the asynchronous operation and yielding the number of entities affected by the SQL command. | Edit this page View Source OnConfiguring(DbContextOptionsBuilder) Overrides the configuration of DbContext options. Declaration protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters Type Name Description DbContextOptionsBuilder optionsBuilder The options builder for configuring DbContext options. Overrides DbContext.OnConfiguring(DbContextOptionsBuilder) | Edit this page View Source Queryable<T>() Gets a queryable representation of a specific entity type. Declaration public IQueryable<T> Queryable<T>() where T : class Returns Type Description IQueryable<T> An IQueryable<T> representing the entity type. Type Parameters Name Description T The type of entity. | Edit this page View Source Remove<T>(IEnumerable<T>) Removes a collection of entities from the DbContext. Declaration public void Remove<T>(IEnumerable<T> entities) where T : class Parameters Type Name Description IEnumerable<T> entities The collection of entities to remove. Type Parameters Name Description T The type of entities to remove. | Edit this page View Source Remove<T>(T) Removes an entity from the DbContext. Declaration public void Remove<T>(T entity) where T : class Parameters Type Name Description T entity The entity to remove. Type Parameters Name Description T The type of entity to remove. | Edit this page View Source Rollback() Rolls back the changes made in the unit of work by setting all entries to an unchanged state. Declaration public void Rollback() | Edit this page View Source Update<T>(T) Updates the specified entity in the DbContext. Declaration public void Update<T>(T entity) where T : class Parameters Type Name Description T entity The entity to update. Type Parameters Name Description T The type of entity to update. Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.EfExtensions.html": {
    "href": "api/Innovt.Data.EFCore.EfExtensions.html",
    "title": "Class EfExtensions | Innovt Platform",
    "keywords": "Class EfExtensions Extension methods for Entity Framework IQueryable to facilitate query operations. Inheritance object EfExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore Assembly: Innovt.Data.EFCore.dll Syntax public static class EfExtensions Methods | Edit this page View Source AddConfiguration<TEntity>(ModelBuilder, IEntityTypeConfiguration<TEntity>) Adds an entity type configuration to the ModelBuilder. Declaration public static void AddConfiguration<TEntity>(this ModelBuilder modelBuilder, IEntityTypeConfiguration<TEntity> configuration) where TEntity : class Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to which the configuration is added. IEntityTypeConfiguration<TEntity> configuration The entity type configuration. Type Parameters Name Description TEntity The entity type. | Edit this page View Source AddConfiguration<TEntity>(ModelBuilder, IList<IEntityTypeConfiguration<TEntity>>) Adds a list of entity type configurations to the ModelBuilder. Declaration public static void AddConfiguration<TEntity>(this ModelBuilder modelBuilder, IList<IEntityTypeConfiguration<TEntity>> configurationList) where TEntity : class Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to which the configurations are added. IList<IEntityTypeConfiguration<TEntity>> configurationList The list of entity type configurations. Type Parameters Name Description TEntity The entity type. | Edit this page View Source AddInclude<T>(IQueryable<T>, Include?) Adds navigation properties to include in the query. Declaration public static IQueryable<T> AddInclude<T>(this IQueryable<T> query, Include? includes) where T : class Parameters Type Name Description IQueryable<T> query The IQueryable to which includes are added. Include includes The navigation properties to include. Returns Type Description IQueryable<T> The IQueryable with added includes. Type Parameters Name Description T The type of entity. | Edit this page View Source AddInclude<T>(IQueryable<T>, string?) Adds a navigation property to include in the query using a string. Declaration public static IQueryable<T> AddInclude<T>(this IQueryable<T> query, string? include) where T : class Parameters Type Name Description IQueryable<T> query The IQueryable to which the include is added. string include The navigation property to include. Returns Type Description IQueryable<T> The IQueryable with added include. Type Parameters Name Description T The type of entity. | Edit this page View Source AddInclude<T>(IQueryable<T>, params string[]) Adds navigation properties to include in the query using string-based includes. Declaration public static IQueryable<T> AddInclude<T>(this IQueryable<T> query, params string[] includes) where T : class Parameters Type Name Description IQueryable<T> query The IQueryable to which includes are added. string[] includes Array of navigation properties to include. Returns Type Description IQueryable<T> The IQueryable with added includes. Type Parameters Name Description T The type of entity. | Edit this page View Source ApplyPagination<T>(IQueryable<T>, ISpecification<T>) Applies pagination to the query based on an ISpecification. Declaration public static IQueryable<T> ApplyPagination<T>(this IQueryable<T> query, ISpecification<T> specification) where T : class Parameters Type Name Description IQueryable<T> query The IQueryable to which pagination is applied. ISpecification<T> specification The specification containing pagination details. Returns Type Description IQueryable<T> The IQueryable with applied pagination. Type Parameters Name Description T The type of entity. | Edit this page View Source ApplyPagination<T>(IQueryable<T>, int?, int?) Applies pagination to the query based on page number and page size. Declaration public static IQueryable<T> ApplyPagination<T>(this IQueryable<T> query, int? page, int? pageSize) where T : class Parameters Type Name Description IQueryable<T> query The IQueryable to which pagination is applied. int? page The page number. int? pageSize The page size. Returns Type Description IQueryable<T> The IQueryable with applied pagination. Type Parameters Name Description T The type of entity."
  },
  "api/Innovt.Data.EFCore.Maps.AddressMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.AddressMap.html",
    "title": "Class AddressMap | Innovt Platform",
    "keywords": "Class AddressMap Configuration for mapping the Address entity to the database using Entity Framework Core. Inheritance object AddressMap Implements IEntityTypeConfiguration<Address> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Maps Assembly: Innovt.Data.EFCore.dll Syntax public class AddressMap : IEntityTypeConfiguration<Address> Constructors | Edit this page View Source AddressMap(bool, bool, bool) Initializes a new instance of the AddressMap class. Declaration public AddressMap(bool ignoreCoordinate = false, bool ignoreCity = false, bool ignoreType = false) Parameters Type Name Description bool ignoreCoordinate Flag indicating whether to ignore coordinate mapping. Defaults to false. bool ignoreCity Flag indicating whether to ignore city mapping. Defaults to false. bool ignoreType Flag indicating whether to ignore type mapping. Defaults to false. Methods | Edit this page View Source Configure(EntityTypeBuilder<Address>) Configures the mapping for the Address entity. Declaration public void Configure(EntityTypeBuilder<Address> builder) Parameters Type Name Description EntityTypeBuilder<Address> builder The entity type builder. Exceptions Type Condition ArgumentNullException Thrown when the builder parameter is null. Implements IEntityTypeConfiguration<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Maps.AddressTypeMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.AddressTypeMap.html",
    "title": "Class AddressTypeMap | Innovt Platform",
    "keywords": "Class AddressTypeMap Configuration for mapping the AddressType entity to the database using Entity Framework Core. Inheritance object AddressTypeMap Implements IEntityTypeConfiguration<AddressType> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Maps Assembly: Innovt.Data.EFCore.dll Syntax public class AddressTypeMap : IEntityTypeConfiguration<AddressType> Methods | Edit this page View Source Configure(EntityTypeBuilder<AddressType>) Configures the mapping for the AddressType entity. Declaration public void Configure(EntityTypeBuilder<AddressType> builder) Parameters Type Name Description EntityTypeBuilder<AddressType> builder The entity type builder. Exceptions Type Condition ArgumentNullException Thrown when the builder parameter is null. Implements IEntityTypeConfiguration<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Maps.BaseUserMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.BaseUserMap.html",
    "title": "Class BaseUserMap | Innovt Platform",
    "keywords": "Class BaseUserMap Configuration for mapping the BaseUser entity to the database using Entity Framework Core. Inheritance object BaseUserMap Implements IEntityTypeConfiguration<BaseUser> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Maps Assembly: Innovt.Data.EFCore.dll Syntax public class BaseUserMap : IEntityTypeConfiguration<BaseUser> Methods | Edit this page View Source Configure(EntityTypeBuilder<BaseUser>) Configures the mapping for the BaseUser entity. Declaration public void Configure(EntityTypeBuilder<BaseUser> builder) Parameters Type Name Description EntityTypeBuilder<BaseUser> builder The entity type builder. Exceptions Type Condition ArgumentNullException Thrown when the builder parameter is null. Implements IEntityTypeConfiguration<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Maps.CityMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.CityMap.html",
    "title": "Class CityMap | Innovt Platform",
    "keywords": "Class CityMap Configuration for mapping the City entity to the database using Entity Framework Core. Inheritance object CityMap Implements IEntityTypeConfiguration<City> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Maps Assembly: Innovt.Data.EFCore.dll Syntax public class CityMap : IEntityTypeConfiguration<City> Methods | Edit this page View Source Configure(EntityTypeBuilder<City>) Configures the mapping for the City entity. Declaration public void Configure(EntityTypeBuilder<City> builder) Parameters Type Name Description EntityTypeBuilder<City> builder The entity type builder. Exceptions Type Condition ArgumentNullException Thrown when the builder parameter is null. Implements IEntityTypeConfiguration<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Maps.CountryMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.CountryMap.html",
    "title": "Class CountryMap | Innovt Platform",
    "keywords": "Class CountryMap Configuration for mapping the Country entity to the database using Entity Framework Core. Inheritance object CountryMap Implements IEntityTypeConfiguration<Country> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Maps Assembly: Innovt.Data.EFCore.dll Syntax public class CountryMap : IEntityTypeConfiguration<Country> Constructors | Edit this page View Source CountryMap(bool) Initializes a new instance of the CountryMap class. Declaration public CountryMap(bool ignoreIsoCode = false) Parameters Type Name Description bool ignoreIsoCode Flag indicating whether to ignore ISO code mapping. Defaults to false. Methods | Edit this page View Source Configure(EntityTypeBuilder<Country>) Configures the mapping for the Country entity. Declaration public void Configure(EntityTypeBuilder<Country> builder) Parameters Type Name Description EntityTypeBuilder<Country> builder The entity type builder. Exceptions Type Condition ArgumentNullException Thrown when the builder parameter is null. Implements IEntityTypeConfiguration<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Maps.DocumentMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.DocumentMap.html",
    "title": "Class DocumentMap | Innovt Platform",
    "keywords": "Class DocumentMap Configuration for mapping the Document entity to the database using Entity Framework Core. Inheritance object DocumentMap Implements IEntityTypeConfiguration<Document> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Maps Assembly: Innovt.Data.EFCore.dll Syntax public class DocumentMap : IEntityTypeConfiguration<Document> Constructors | Edit this page View Source DocumentMap(bool) Initializes a new instance of the DocumentMap class. Declaration public DocumentMap(bool ignoreDocumentType = false) Parameters Type Name Description bool ignoreDocumentType Flag indicating whether to ignore document type mapping. Defaults to false. Methods | Edit this page View Source Configure(EntityTypeBuilder<Document>) Configures the mapping for the Document entity. Declaration public void Configure(EntityTypeBuilder<Document> builder) Parameters Type Name Description EntityTypeBuilder<Document> builder The entity type builder. Exceptions Type Condition ArgumentNullException Thrown when the builder parameter is null. Implements IEntityTypeConfiguration<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Maps.DocumentTypeMap.html": {
    "href": "api/Innovt.Data.EFCore.Maps.DocumentTypeMap.html",
    "title": "Class DocumentTypeMap | Innovt Platform",
    "keywords": "Class DocumentTypeMap Configuration for mapping the DocumentType entity to the database using Entity Framework Core. Inheritance object DocumentTypeMap Implements IEntityTypeConfiguration<DocumentType> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Maps Assembly: Innovt.Data.EFCore.dll Syntax public class DocumentTypeMap : IEntityTypeConfiguration<DocumentType> Methods | Edit this page View Source Configure(EntityTypeBuilder<DocumentType>) Configures the mapping for the DocumentType entity. Declaration public void Configure(EntityTypeBuilder<DocumentType> builder) Parameters Type Name Description EntityTypeBuilder<DocumentType> builder The entity type builder. Exceptions Type Condition ArgumentNullException Thrown when the builder parameter is null. Implements IEntityTypeConfiguration<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Maps.html": {
    "href": "api/Innovt.Data.EFCore.Maps.html",
    "title": "Namespace Innovt.Data.EFCore.Maps | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.Maps Classes AddressMap Configuration for mapping the Address entity to the database using Entity Framework Core. AddressTypeMap Configuration for mapping the AddressType entity to the database using Entity Framework Core. BaseUserMap Configuration for mapping the BaseUser entity to the database using Entity Framework Core. CityMap Configuration for mapping the City entity to the database using Entity Framework Core. CountryMap Configuration for mapping the Country entity to the database using Entity Framework Core. DocumentMap Configuration for mapping the Document entity to the database using Entity Framework Core. DocumentTypeMap Configuration for mapping the DocumentType entity to the database using Entity Framework Core."
  },
  "api/Innovt.Data.EFCore.MsSql.DBContext.html": {
    "href": "api/Innovt.Data.EFCore.MsSql.DBContext.html",
    "title": "Class DBContext | Innovt Platform",
    "keywords": "Class DBContext Represents the Entity Framework DbContext for the application. Inheritance object DbContext DBContextBase DBContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Inherited Members DBContextBase.MaxRetryCount DBContextBase.MaxRetryDelay DBContextBase.Commit() DBContextBase.CommitAsync(CancellationToken) DBContextBase.Rollback() DBContextBase.Add<T>(T) DBContextBase.Add<T>(IEnumerable<T>) DBContextBase.AddAsync<T>(T, CancellationToken) DBContextBase.AddAsync<T>(IEnumerable<T>, CancellationToken) DBContextBase.Remove<T>(T) DBContextBase.Remove<T>(IEnumerable<T>) DBContextBase.Update<T>(T) DBContextBase.Attach<T>(T) DBContextBase.Detach<T>(T) DBContextBase.Queryable<T>() DBContextBase.OnConfiguring(DbContextOptionsBuilder) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.MsSql Assembly: Innovt.Data.EFCore.MsSql.dll Syntax public class DBContext : DBContextBase, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable Constructors | Edit this page View Source DBContext(IDataSource) Initializes a new instance of the DBContext class using a data source. Declaration public DBContext(IDataSource dataSource) Parameters Type Name Description IDataSource dataSource The data source to use. | Edit this page View Source DBContext(IDataSource, ILoggerFactory) Initializes a new instance of the DBContext class using a data source and logger factory. Declaration protected DBContext(IDataSource dataSource, ILoggerFactory loggerFactory) Parameters Type Name Description IDataSource dataSource The data source to use. ILoggerFactory loggerFactory The logger factory to use. | Edit this page View Source DBContext(DbContextOptions) Initializes a new instance of the DBContext class using DbContext options. Declaration protected DBContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options The DbContext options. Methods | Edit this page View Source ConfigureProvider(DbContextOptionsBuilder, string) Configures the provider-specific options for the DbContext. Declaration protected override void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters Type Name Description DbContextOptionsBuilder optionsBuilder The options builder for configuring DbContext options. string connectionString The connection string for the data source. Overrides DBContextBase.ConfigureProvider(DbContextOptionsBuilder, string) | Edit this page View Source ExecuteSqlCommand(string, params object[]) Executes a raw SQL command against the database and returns the number of affected entities. Declaration public override int ExecuteSqlCommand(string sql, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. object[] parameters The parameters for the SQL command. Returns Type Description int The number of affected entities. Overrides DBContextBase.ExecuteSqlCommand(string, params object[]) | Edit this page View Source ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a raw SQL command against the database and returns the number of affected entities. Declaration public override Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. CancellationToken cancellationToken Cancellation token (optional). object[] parameters The parameters for the SQL command. Returns Type Description Task<int> A task representing the asynchronous operation and yielding the number of affected entities. Overrides DBContextBase.ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.MsSql.html": {
    "href": "api/Innovt.Data.EFCore.MsSql.html",
    "title": "Namespace Innovt.Data.EFCore.MsSql | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.MsSql Classes DBContext Represents the Entity Framework DbContext for the application."
  },
  "api/Innovt.Data.EFCore.Oracle.DBContext.html": {
    "href": "api/Innovt.Data.EFCore.Oracle.DBContext.html",
    "title": "Class DBContext | Innovt Platform",
    "keywords": "Class DBContext Represents the Entity Framework DbContext for the application. Inheritance object DbContext DBContextBase DBContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Inherited Members DBContextBase.MaxRetryCount DBContextBase.MaxRetryDelay DBContextBase.Commit() DBContextBase.CommitAsync(CancellationToken) DBContextBase.Rollback() DBContextBase.Add<T>(T) DBContextBase.Add<T>(IEnumerable<T>) DBContextBase.AddAsync<T>(T, CancellationToken) DBContextBase.AddAsync<T>(IEnumerable<T>, CancellationToken) DBContextBase.Remove<T>(T) DBContextBase.Remove<T>(IEnumerable<T>) DBContextBase.Update<T>(T) DBContextBase.Attach<T>(T) DBContextBase.Detach<T>(T) DBContextBase.Queryable<T>() DBContextBase.OnConfiguring(DbContextOptionsBuilder) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Oracle Assembly: Innovt.Data.EFCore.Oracle.dll Syntax public class DBContext : DBContextBase, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable Constructors | Edit this page View Source DBContext(IDataSource) Initializes a new instance of the DBContext class using a data source. Declaration public DBContext(IDataSource dataSource) Parameters Type Name Description IDataSource dataSource The data source to use. | Edit this page View Source DBContext(IDataSource, ILoggerFactory) Initializes a new instance of the DBContext class using a data source and logger factory. Declaration protected DBContext(IDataSource dataSource, ILoggerFactory loggerFactory) Parameters Type Name Description IDataSource dataSource The data source to use. ILoggerFactory loggerFactory The logger factory to use. | Edit this page View Source DBContext(DbContextOptions) Initializes a new instance of the DBContext class using DbContext options. Declaration protected DBContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options The DbContext options. Methods | Edit this page View Source ConfigureProvider(DbContextOptionsBuilder, string) Configures the provider-specific options for the DbContext to use Oracle. Declaration protected override void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters Type Name Description DbContextOptionsBuilder optionsBuilder The options builder for configuring DbContext options. string connectionString The connection string for the data source. Overrides DBContextBase.ConfigureProvider(DbContextOptionsBuilder, string) | Edit this page View Source ExecuteSqlCommand(string, params object[]) Executes a raw SQL command against the database and returns the number of affected entities. Declaration public override int ExecuteSqlCommand(string sql, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. object[] parameters The parameters for the SQL command. Returns Type Description int The number of affected entities. Overrides DBContextBase.ExecuteSqlCommand(string, params object[]) | Edit this page View Source ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a raw SQL command against the database and returns the number of affected entities. Declaration public override Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. CancellationToken cancellationToken Cancellation token (optional). object[] parameters The parameters for the SQL command. Returns Type Description Task<int> A task representing the asynchronous operation and yielding the number of affected entities. Overrides DBContextBase.ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Oracle.html": {
    "href": "api/Innovt.Data.EFCore.Oracle.html",
    "title": "Namespace Innovt.Data.EFCore.Oracle | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.Oracle Classes DBContext Represents the Entity Framework DbContext for the application."
  },
  "api/Innovt.Data.EFCore.PostgreSQL.DBContext.html": {
    "href": "api/Innovt.Data.EFCore.PostgreSQL.DBContext.html",
    "title": "Class DBContext | Innovt Platform",
    "keywords": "Class DBContext Represents the Entity Framework DbContext for the application. Inheritance object DbContext DBContextBase DBContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Inherited Members DBContextBase.MaxRetryCount DBContextBase.MaxRetryDelay DBContextBase.Commit() DBContextBase.CommitAsync(CancellationToken) DBContextBase.Rollback() DBContextBase.Add<T>(T) DBContextBase.Add<T>(IEnumerable<T>) DBContextBase.AddAsync<T>(T, CancellationToken) DBContextBase.AddAsync<T>(IEnumerable<T>, CancellationToken) DBContextBase.Remove<T>(T) DBContextBase.Remove<T>(IEnumerable<T>) DBContextBase.Update<T>(T) DBContextBase.Attach<T>(T) DBContextBase.Detach<T>(T) DBContextBase.Queryable<T>() DBContextBase.OnConfiguring(DbContextOptionsBuilder) DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.PostgreSQL Assembly: Innovt.Data.EFCore.PostgreSQL.dll Syntax public class DBContext : DBContextBase, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IAsyncDisposable, IExtendedUnitOfWork, IUnitOfWork, IDisposable Constructors | Edit this page View Source DBContext(IDataSource) Initializes a new instance of the DBContext class using a data source. Declaration public DBContext(IDataSource dataSource) Parameters Type Name Description IDataSource dataSource The data source to use. | Edit this page View Source DBContext(IDataSource, ILoggerFactory) Initializes a new instance of the DBContext class using a data source and logger factory. Declaration protected DBContext(IDataSource dataSource, ILoggerFactory loggerFactory) Parameters Type Name Description IDataSource dataSource The data source to use. ILoggerFactory loggerFactory The logger factory to use. | Edit this page View Source DBContext(DbContextOptions) Initializes a new instance of the DBContext class using DbContext options. Declaration protected DBContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options The DbContext options. Methods | Edit this page View Source ConfigureProvider(DbContextOptionsBuilder, string) Configures the provider-specific options for the DbContext to use Npgsql (PostgreSQL). Declaration protected override void ConfigureProvider(DbContextOptionsBuilder optionsBuilder, string connectionString) Parameters Type Name Description DbContextOptionsBuilder optionsBuilder The options builder for configuring DbContext options. string connectionString The connection string for the data source. Overrides DBContextBase.ConfigureProvider(DbContextOptionsBuilder, string) | Edit this page View Source ExecuteSqlCommand(string, params object[]) Executes a raw SQL command against the database and returns the number of affected entities. Declaration public override int ExecuteSqlCommand(string sql, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. object[] parameters The parameters for the SQL command. Returns Type Description int The number of affected entities. Overrides DBContextBase.ExecuteSqlCommand(string, params object[]) | Edit this page View Source ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a raw SQL command against the database and returns the number of affected entities. Declaration public override Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. CancellationToken cancellationToken Cancellation token (optional). object[] parameters The parameters for the SQL command. Returns Type Description Task<int> A task representing the asynchronous operation and yielding the number of affected entities. Overrides DBContextBase.ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IAsyncDisposable IExtendedUnitOfWork IUnitOfWork IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.PostgreSQL.html": {
    "href": "api/Innovt.Data.EFCore.PostgreSQL.html",
    "title": "Namespace Innovt.Data.EFCore.PostgreSQL | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.PostgreSQL Classes DBContext Represents the Entity Framework DbContext for the application."
  },
  "api/Innovt.Data.EFCore.Repositories.GenericRepository-1.html": {
    "href": "api/Innovt.Data.EFCore.Repositories.GenericRepository-1.html",
    "title": "Class GenericRepository<T> | Innovt Platform",
    "keywords": "Class GenericRepository<T> Generic repository implementation for accessing and managing entities of type T. Inherits from RepositoryBase for shared functionality and extends for specific entity type. Inheritance object RepositoryBase<T> GenericRepository<T> Implements IRepository<T> Inherited Members RepositoryBase<T>.Context RepositoryBase<T>.Add(T) RepositoryBase<T>.Add(IEnumerable<T>) RepositoryBase<T>.AddAsync(IEnumerable<T>) RepositoryBase<T>.AddAsync(T) RepositoryBase<T>.Modify(T) RepositoryBase<T>.Remove(IEnumerable<T>) RepositoryBase<T>.Remove(T) RepositoryBase<T>.GetFirstOrDefault(ISpecification<T>, Include) RepositoryBase<T>.GetFirstOrDefaultAsync(ISpecification<T>, Include, CancellationToken) RepositoryBase<T>.GetSingleOrDefaultAsync(ISpecification<T>, Include, CancellationToken) RepositoryBase<T>.GetSingleOrDefault(ISpecification<T>, Include) RepositoryBase<T>.FindBy(ISpecification<T>, Include) RepositoryBase<T>.FindBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>, bool, Include) RepositoryBase<T>.FindByAsync(ISpecification<T>, Include, CancellationToken) RepositoryBase<T>.FindByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>, bool, Include, CancellationToken) RepositoryBase<T>.FindPaginatedBy(ISpecification<T>, Include) RepositoryBase<T>.FindPaginatedBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>, bool, Include) RepositoryBase<T>.FindPaginatedByAsync(ISpecification<T>, Include, CancellationToken) RepositoryBase<T>.FindPaginatedByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>, bool, Include, CancellationToken) RepositoryBase<T>.CountBy(ISpecification<T>) RepositoryBase<T>.CountBy<TKEntity>(ISpecification<TKEntity>) RepositoryBase<T>.CountByAsync<TKEntity>(ISpecification<TKEntity>, CancellationToken) RepositoryBase<T>.CountByAsync(ISpecification<T>, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Repositories Assembly: Innovt.Data.EFCore.dll Syntax public class GenericRepository<T> : RepositoryBase<T>, IRepository<T> where T : class Type Parameters Name Description T The entity type. Constructors | Edit this page View Source GenericRepository(IExtendedUnitOfWork) Initializes a new instance of the GenericRepository<T> class. Declaration public GenericRepository(IExtendedUnitOfWork context) Parameters Type Name Description IExtendedUnitOfWork context The extended unit of work context. Implements IRepository<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Repositories.RepositoryBase-1.html": {
    "href": "api/Innovt.Data.EFCore.Repositories.RepositoryBase-1.html",
    "title": "Class RepositoryBase<T> | Innovt Platform",
    "keywords": "Class RepositoryBase<T> Base repository providing common functionality for accessing and managing entities of type T. Implements the IRepository interface. Inheritance object RepositoryBase<T> GenericRepository<T> Implements IRepository<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Repositories Assembly: Innovt.Data.EFCore.dll Syntax public class RepositoryBase<T> : IRepository<T> where T : class Type Parameters Name Description T The entity type. Constructors | Edit this page View Source RepositoryBase(IExtendedUnitOfWork) Initializes a new instance of the RepositoryBase<T> class. Declaration protected RepositoryBase(IExtendedUnitOfWork context) Parameters Type Name Description IExtendedUnitOfWork context The extended unit of work context. Exceptions Type Condition ArgumentNullException Thrown when the context parameter is null. Properties | Edit this page View Source Context The extended unit of work context for interacting with the database. Declaration protected IExtendedUnitOfWork Context { get; } Property Value Type Description IExtendedUnitOfWork Methods | Edit this page View Source Add(IEnumerable<T>) Adds multiple entities Declaration public virtual void Add(IEnumerable<T> entities) Parameters Type Name Description IEnumerable<T> entities | Edit this page View Source Add(T) Adds a single entity Declaration public virtual void Add(T entity) Parameters Type Name Description T entity | Edit this page View Source AddAsync(IEnumerable<T>) Asynchronously adds a collection of entities of type T to the repository. Declaration public virtual Task AddAsync(IEnumerable<T> entities) Parameters Type Name Description IEnumerable<T> entities The collection of entities to add. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source AddAsync(T) Asynchronously adds an entity of type T to the repository. Declaration public virtual Task AddAsync(T entity) Parameters Type Name Description T entity The entity to add. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source CountBy(ISpecification<T>) Counts the number of entities that satisfy the specified specification. Declaration public virtual int CountBy(ISpecification<T> specification) Parameters Type Name Description ISpecification<T> specification The specification to filter the entities. Returns Type Description int The total count of entities satisfying the specified criteria. | Edit this page View Source CountByAsync(ISpecification<T>, CancellationToken) Asynchronously counts the number of entities that satisfy the specified specification. Declaration public Task<int> CountByAsync(ISpecification<T> specification, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification The specification to filter the entities. CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task<int> A task that represents the asynchronous operation, yielding the total count of entities satisfying the specified criteria. | Edit this page View Source CountByAsync<TKEntity>(ISpecification<TKEntity>, CancellationToken) Asynchronously counts the number of entities of a specified type that satisfy the specified specification. Declaration public virtual Task<int> CountByAsync<TKEntity>(ISpecification<TKEntity> specification, CancellationToken cancellationToken = default) where TKEntity : class Parameters Type Name Description ISpecification<TKEntity> specification The specification to filter the entities. CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task<int> A task that represents the asynchronous operation, yielding the total count of entities satisfying the specified criteria. Type Parameters Name Description TKEntity The type of the entity to count. | Edit this page View Source CountBy<TKEntity>(ISpecification<TKEntity>) Counts the number of entities of a specified type that satisfy the specified specification. Declaration public virtual int CountBy<TKEntity>(ISpecification<TKEntity> specification) where TKEntity : class Parameters Type Name Description ISpecification<TKEntity> specification The specification to filter the entities. Returns Type Description int The total count of entities satisfying the specified criteria. Type Parameters Name Description TKEntity The type of the entity to count. | Edit this page View Source FindBy(ISpecification<T>, Include?) Finds entities of type T based on the provided specification with optional sorting and pagination. Declaration public virtual IEnumerable<T> FindBy(ISpecification<T> specification, Include? includes = null) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entities. Include includes The related entities to include in the query. Returns Type Description IEnumerable<T> An enumerable of entities matching the specification with optional sorting. | Edit this page View Source FindByAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously finds entities of type T based on the provided specification with optional sorting and pagination. Declaration public virtual Task<IEnumerable<T>> FindByAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entities. Include includes The related entities to include in the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<IEnumerable<T>> A task representing the asynchronous operation and an enumerable of entities matching the specification. | Edit this page View Source FindByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?, CancellationToken) Asynchronously finds entities of type T based on the provided specification with optional sorting and pagination. Declaration public virtual Task<IEnumerable<T>> FindByAsync<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entities. Expression<Func<T, TKey>> orderBy The sorting key selector. bool isOrderByDescending A flag indicating whether the sorting is in descending order. Include includes The related entities to include in the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<IEnumerable<T>> A task representing the asynchronous operation and an enumerable of entities matching the specification with optional sorting. Type Parameters Name Description TKey The type of the sorting key. | Edit this page View Source FindBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?) Finds entities of type T based on the provided specification with optional sorting and pagination. Declaration public virtual IEnumerable<T> FindBy<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entities. Expression<Func<T, TKey>> orderBy The sorting key selector. bool isOrderByDescending A flag indicating whether the sorting is in descending order. Include includes The related entities to include in the query. Returns Type Description IEnumerable<T> An enumerable of entities matching the specification with optional sorting. Type Parameters Name Description TKey The type of the sorting key. | Edit this page View Source FindPaginatedBy(ISpecification<T>, Include?) Finds paginated entities of type T based on the provided specification. Declaration public virtual PagedCollection<T> FindPaginatedBy(ISpecification<T> specification, Include? includes = null) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entities. Include includes The related entities to include in the query. Returns Type Description PagedCollection<T> A paged collection of entities matching the specification. | Edit this page View Source FindPaginatedByAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously retrieves a paginated collection of entities based on the provided specification, with optional included navigation properties. Declaration public virtual Task<PagedCollection<T>> FindPaginatedByAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification The specification to filter the entities. Include includes Navigation properties to include (optional). CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task<PagedCollection<T>> A task that represents the asynchronous operation, yielding a paged collection of entities satisfying the specified criteria. | Edit this page View Source FindPaginatedByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?, CancellationToken) Asynchronously retrieves a paginated collection of entities based on the provided specification, with optional sorting and included navigation properties. Declaration public virtual Task<PagedCollection<T>> FindPaginatedByAsync<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification The specification to filter the entities. Expression<Func<T, TKey>> orderBy Expression to order the results (optional). bool isOrderByDescending Flag to determine descending order for sorting (default: ascending). Include includes Navigation properties to include (optional). CancellationToken cancellationToken Cancellation token (optional). Returns Type Description Task<PagedCollection<T>> A task that represents the asynchronous operation, yielding a paged collection of entities satisfying the specified criteria. Type Parameters Name Description TKey The type of the key used for sorting. | Edit this page View Source FindPaginatedBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?) Retrieves a paginated collection of entities based on the provided specification, with optional sorting and included navigation properties. Declaration public virtual PagedCollection<T> FindPaginatedBy<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null) Parameters Type Name Description ISpecification<T> specification The specification to filter the entities. Expression<Func<T, TKey>> orderBy Expression to order the results (optional). bool isOrderByDescending Flag to determine descending order for sorting (default: ascending). Include includes Navigation properties to include (optional). Returns Type Description PagedCollection<T> A paged collection of entities satisfying the specified criteria. Type Parameters Name Description TKey The type of the key used for sorting. | Edit this page View Source GetFirstOrDefault(ISpecification<T>, Include?) Gets the first or default entity of type T based on the provided specification. Declaration public virtual T? GetFirstOrDefault(ISpecification<T> specification, Include? includes = null) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entity. Include includes The related entities to include in the query. Returns Type Description T The first or default entity matching the specification. | Edit this page View Source GetFirstOrDefaultAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously gets the first or default entity of type T based on the provided specification. Declaration public virtual Task<T?> GetFirstOrDefaultAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entity. Include includes The related entities to include in the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<T> A task representing the asynchronous operation and the first or default entity matching the specification. | Edit this page View Source GetSingleOrDefault(ISpecification<T>, Include?) Gets the single or default entity of type T based on the provided specification. Declaration public virtual T? GetSingleOrDefault(ISpecification<T> specification, Include? includes = null) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entity. Include includes The related entities to include in the query. Returns Type Description T The single or default entity matching the specification. | Edit this page View Source GetSingleOrDefaultAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously gets the single or default entity of type T based on the provided specification. Declaration public virtual Task<T?> GetSingleOrDefaultAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification The specification used to filter the entity. Include includes The related entities to include in the query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<T> A task representing the asynchronous operation and the single or default entity matching the specification. | Edit this page View Source Modify(T) Modifies an entity of type T in the repository. Declaration public virtual void Modify(T entity) Parameters Type Name Description T entity The entity to modify. | Edit this page View Source Remove(IEnumerable<T>) Removes a collection of entities of type T from the repository. Declaration public virtual void Remove(IEnumerable<T> entities) Parameters Type Name Description IEnumerable<T> entities The collection of entities to remove. | Edit this page View Source Remove(T) Removes an entity of type T from the repository. Declaration public virtual void Remove(T entity) Parameters Type Name Description T entity The entity to remove. Implements IRepository<T> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Repositories.RequestTrackingRepository.html": {
    "href": "api/Innovt.Data.EFCore.Repositories.RequestTrackingRepository.html",
    "title": "Class RequestTrackingRepository | Innovt Platform",
    "keywords": "Class RequestTrackingRepository Repository for managing request tracking entities. Inheritance object RequestTrackingRepository Implements IRequestTrackingRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.EFCore.Repositories Assembly: Innovt.Data.EFCore.dll Syntax public class RequestTrackingRepository : IRequestTrackingRepository Constructors | Edit this page View Source RequestTrackingRepository(IExtendedUnitOfWork) Initializes a new instance of the RequestTrackingRepository class. Declaration public RequestTrackingRepository(IExtendedUnitOfWork context) Parameters Type Name Description IExtendedUnitOfWork context The extended unit of work for data access. Exceptions Type Condition ArgumentNullException Thrown when the context is null. Methods | Edit this page View Source AddTracking(RequestTracking) Adds request tracking information to the repository. Declaration public Task AddTracking(RequestTracking tracking) Parameters Type Name Description RequestTracking tracking The request tracking information to be added. Returns Type Description Task A task representing the asynchronous operation. Implements IRequestTrackingRepository Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.EFCore.Repositories.html": {
    "href": "api/Innovt.Data.EFCore.Repositories.html",
    "title": "Namespace Innovt.Data.EFCore.Repositories | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore.Repositories Classes GenericRepository<T> Generic repository implementation for accessing and managing entities of type T. Inherits from RepositoryBase for shared functionality and extends for specific entity type. RepositoryBase<T> Base repository providing common functionality for accessing and managing entities of type T. Implements the IRepository interface. RequestTrackingRepository Repository for managing request tracking entities."
  },
  "api/Innovt.Data.EFCore.html": {
    "href": "api/Innovt.Data.EFCore.html",
    "title": "Namespace Innovt.Data.EFCore | Innovt Platform",
    "keywords": "Namespace Innovt.Data.EFCore Classes DBContextBase Abstract base class for Entity Framework DbContext implementing the extended unit of work interface. EfExtensions Extension methods for Entity Framework IQueryable to facilitate query operations."
  },
  "api/Innovt.Data.Exceptions.ConnectionStringException.html": {
    "href": "api/Innovt.Data.Exceptions.ConnectionStringException.html",
    "title": "Class ConnectionStringException | Innovt Platform",
    "keywords": "Class ConnectionStringException Represents an exception thrown for connection string related errors. Inheritance object Exception BaseException ConfigurationException ConnectionStringException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Data.Exceptions Assembly: Innovt.Data.dll Syntax [Serializable] public class ConnectionStringException : ConfigurationException, ISerializable Constructors | Edit this page View Source ConnectionStringException(string) Initializes a new instance of the ConnectionStringException class with the specified error message. Declaration public ConnectionStringException(string message) Parameters Type Name Description string message The error message that explains the reason for the exception. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.Exceptions.SqlSyntaxException.html": {
    "href": "api/Innovt.Data.Exceptions.SqlSyntaxException.html",
    "title": "Class SqlSyntaxException | Innovt Platform",
    "keywords": "Class SqlSyntaxException Represents an exception thrown for SQL syntax related errors. Inheritance object Exception BaseException SqlSyntaxException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.Data.Exceptions Assembly: Innovt.Data.dll Syntax [Serializable] public class SqlSyntaxException : BaseException, ISerializable Constructors | Edit this page View Source SqlSyntaxException(string) Initializes a new instance of the SqlSyntaxException class with the specified error message. Declaration public SqlSyntaxException(string message) Parameters Type Name Description string message The error message that explains the reason for the exception. Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.Exceptions.html": {
    "href": "api/Innovt.Data.Exceptions.html",
    "title": "Namespace Innovt.Data.Exceptions | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Exceptions Classes ConnectionStringException Represents an exception thrown for connection string related errors. SqlSyntaxException Represents an exception thrown for SQL syntax related errors."
  },
  "api/Innovt.Data.Migration.SecurityMigration.html": {
    "href": "api/Innovt.Data.Migration.SecurityMigration.html",
    "title": "Class SecurityMigration | Innovt Platform",
    "keywords": "Class SecurityMigration Provides methods for security-related database schema migration. Inheritance object SecurityMigration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Data.Migration Assembly: Innovt.Data.Migration.dll Syntax public static class SecurityMigration Methods | Edit this page View Source CreateTablesIfNotExist(string) Creates security-related tables if they do not exist in the database. Declaration public static void CreateTablesIfNotExist(string connectionString) Parameters Type Name Description string connectionString The connection string to the database. Exceptions Type Condition ArgumentNullException Thrown when connectionString is null."
  },
  "api/Innovt.Data.Migration.html": {
    "href": "api/Innovt.Data.Migration.html",
    "title": "Namespace Innovt.Data.Migration | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Migration Classes SecurityMigration Provides methods for security-related database schema migration."
  },
  "api/Innovt.Data.Model.Provider.html": {
    "href": "api/Innovt.Data.Model.Provider.html",
    "title": "Enum Provider | Innovt Platform",
    "keywords": "Enum Provider Enumeration representing different database providers. Namespace: Innovt.Data.Model Assembly: Innovt.Data.dll Syntax public enum Provider Fields Name Description MsSql MySql Oracle PostgreSqL SqLite Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Data.Model.html": {
    "href": "api/Innovt.Data.Model.html",
    "title": "Namespace Innovt.Data.Model | Innovt Platform",
    "keywords": "Namespace Innovt.Data.Model Enums Provider Enumeration representing different database providers."
  },
  "api/Innovt.Domain.Adresses.Address.html": {
    "href": "api/Innovt.Domain.Adresses.Address.html",
    "title": "Class Address | Innovt Platform",
    "keywords": "Class Address Represents an address entity. Inheritance object ValueObject Address Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Adresses Assembly: Innovt.Domain.dll Syntax public class Address : ValueObject Properties | Edit this page View Source City Gets or sets the city associated with the address. Declaration public City City { get; set; } Property Value Type Description City | Edit this page View Source CityId Gets or sets the ID of the associated city. Declaration public int CityId { get; set; } Property Value Type Description int | Edit this page View Source Complement Gets or sets additional details or complement for the address. Declaration public string Complement { get; set; } Property Value Type Description string | Edit this page View Source Coordinate Gets or sets the coordinates of the address. Declaration public Coordinate Coordinate { get; set; } Property Value Type Description Coordinate | Edit this page View Source Description Gets or sets the description of the address. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source IsDeleted Gets or sets a value indicating whether the address is marked as deleted. Declaration public bool IsDeleted { get; set; } Property Value Type Description bool | Edit this page View Source Neighborhood Gets or sets the neighborhood or area of the address. Declaration public string Neighborhood { get; set; } Property Value Type Description string | Edit this page View Source Number Gets or sets the number associated with the address. Declaration public string Number { get; set; } Property Value Type Description string | Edit this page View Source Street Gets or sets the street of the address. Declaration public string Street { get; set; } Property Value Type Description string | Edit this page View Source Type Gets or sets the type of address. Declaration public AddressType Type { get; set; } Property Value Type Description AddressType | Edit this page View Source TypeId Gets or sets the ID of the address type. Declaration public int TypeId { get; set; } Property Value Type Description int | Edit this page View Source ZipCode Gets or sets the ZIP code of the address. Declaration public string ZipCode { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Adresses.AddressType.html": {
    "href": "api/Innovt.Domain.Adresses.AddressType.html",
    "title": "Class AddressType | Innovt Platform",
    "keywords": "Class AddressType Represents the type of an address (e.g., Commercial, Residential, Payment). Inheritance object ValueObject AddressType Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Adresses Assembly: Innovt.Domain.dll Syntax public sealed class AddressType : ValueObject Constructors | Edit this page View Source AddressType(int, string) Initializes a new instance of the AddressType class. Declaration public AddressType(int id, string name) Parameters Type Name Description int id The unique identifier for the address type. string name The name of the address type. Fields | Edit this page View Source Comercial Gets the predefined address type for commercial addresses. Declaration public static readonly AddressType Comercial Field Value Type Description AddressType | Edit this page View Source Pagamento Gets the predefined address type for payment-related addresses. Declaration public static readonly AddressType Pagamento Field Value Type Description AddressType | Edit this page View Source Residential Gets the predefined address type for residential addresses. Declaration public static readonly AddressType Residential Field Value Type Description AddressType Properties | Edit this page View Source Name Gets or sets the name of the address type. Declaration public string Name { get; set; } Property Value Type Description string Methods | Edit this page View Source FindAll() Retrieves a list of all available address types, ordered by name. Declaration public static IList<AddressType> FindAll() Returns Type Description IList<AddressType> A list of address types. | Edit this page View Source GetByPk(int) Retrieves an address type based on its unique identifier. Declaration public static AddressType GetByPk(int id) Parameters Type Name Description int id The unique identifier of the address type. Returns Type Description AddressType An address type. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Adresses.City.html": {
    "href": "api/Innovt.Domain.Adresses.City.html",
    "title": "Class City | Innovt Platform",
    "keywords": "Class City Represents a city entity. Inheritance object ValueObject City Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Adresses Assembly: Innovt.Domain.dll Syntax public class City : ValueObject Properties | Edit this page View Source Name Gets or sets the name of the city. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source State Gets or sets the associated state. Declaration public virtual State State { get; set; } Property Value Type Description State | Edit this page View Source StateId Gets or sets the ID of the associated state. Declaration public int StateId { get; set; } Property Value Type Description int Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Adresses.Coordinate.html": {
    "href": "api/Innovt.Domain.Adresses.Coordinate.html",
    "title": "Class Coordinate | Innovt Platform",
    "keywords": "Class Coordinate Represents a geographical coordinate. Inheritance object Coordinate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Adresses Assembly: Innovt.Domain.dll Syntax public class Coordinate Constructors | Edit this page View Source Coordinate() Initializes a new instance of the Coordinate class. Declaration public Coordinate() | Edit this page View Source Coordinate(long, long) Initializes a new instance of the Coordinate class with latitude and longitude. Declaration public Coordinate(long latitude, long longitude) Parameters Type Name Description long latitude The latitude value. long longitude The longitude value. Properties | Edit this page View Source AddressId Gets or sets the address ID associated with the coordinate. Declaration public int AddressId { get; set; } Property Value Type Description int | Edit this page View Source Latitude Gets or sets the latitude value of the coordinate. Declaration public long Latitude { get; set; } Property Value Type Description long | Edit this page View Source Longitude Gets or sets the longitude value of the coordinate. Declaration public long Longitude { get; set; } Property Value Type Description long Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Adresses.Country.html": {
    "href": "api/Innovt.Domain.Adresses.Country.html",
    "title": "Class Country | Innovt Platform",
    "keywords": "Class Country Represents a country entity. Inheritance object ValueObject Country Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Adresses Assembly: Innovt.Domain.dll Syntax public class Country : ValueObject Fields | Edit this page View Source Brazil Predefined country: Brazil. Declaration public static Country Brazil Field Value Type Description Country Properties | Edit this page View Source Code Gets or sets the country calling code. Declaration public int Code { get; set; } Property Value Type Description int | Edit this page View Source ISOCode Gets or sets the ISO country code. Declaration public string ISOCode { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the country. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Nationality Gets or sets the nationality associated with the country. Declaration public string Nationality { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Adresses.State.html": {
    "href": "api/Innovt.Domain.Adresses.State.html",
    "title": "Class State | Innovt Platform",
    "keywords": "Class State Represents a state entity. Inheritance object ValueObject State Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Adresses Assembly: Innovt.Domain.dll Syntax public class State : ValueObject Properties | Edit this page View Source Acronym Gets or sets the acronym for the state. Declaration public string Acronym { get; set; } Property Value Type Description string | Edit this page View Source Cities Gets or sets the list of cities within the state. Declaration public virtual IList<City> Cities { get; set; } Property Value Type Description IList<City> | Edit this page View Source Country Gets or sets the associated country. Declaration public virtual Country Country { get; set; } Property Value Type Description Country | Edit this page View Source CountryId Gets or sets the country ID associated with the state. Declaration public int CountryId { get; set; } Property Value Type Description int | Edit this page View Source Description Gets or sets the description or name of the state. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source UtcOffset Gets or sets the UTC offset for the state. Declaration public string UtcOffset { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Adresses.html": {
    "href": "api/Innovt.Domain.Adresses.html",
    "title": "Namespace Innovt.Domain.Adresses | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Adresses Classes Address Represents an address entity. AddressType Represents the type of an address (e.g., Commercial, Residential, Payment). City Represents a city entity. Coordinate Represents a geographical coordinate. Country Represents a country entity. State Represents a state entity."
  },
  "api/Innovt.Domain.Banks.AccountType.html": {
    "href": "api/Innovt.Domain.Banks.AccountType.html",
    "title": "Enum AccountType | Innovt Platform",
    "keywords": "Enum AccountType Specifies the type of an account. Namespace: Innovt.Domain.Banks Assembly: Innovt.Domain.dll Syntax public enum AccountType Fields Name Description Checking Represents a checking account type. Savings Represents a savings account type. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Banks.Bank.html": {
    "href": "api/Innovt.Domain.Banks.Bank.html",
    "title": "Class Bank | Innovt Platform",
    "keywords": "Class Bank Represents a bank entity. Inheritance object ValueObject Bank Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Banks Assembly: Innovt.Domain.dll Syntax public class Bank : ValueObject Properties | Edit this page View Source AccountDigit Gets or sets the account digit associated with the account number. Declaration public string AccountDigit { get; set; } Property Value Type Description string | Edit this page View Source AccountNumber Gets or sets the account number associated with the bank. Declaration public string AccountNumber { get; set; } Property Value Type Description string | Edit this page View Source AccountType Gets or sets the account type (e.g., Checking, Savings). Declaration public AccountType AccountType { get; set; } Property Value Type Description AccountType | Edit this page View Source Code Gets or sets the code of the bank. Declaration public string Code { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the bank. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source RoutingNumber Gets or sets the routing number of the bank. Declaration public string RoutingNumber { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Banks.html": {
    "href": "api/Innovt.Domain.Banks.html",
    "title": "Namespace Innovt.Domain.Banks | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Banks Classes Bank Represents a bank entity. Enums AccountType Specifies the type of an account."
  },
  "api/Innovt.Domain.BaseCreditCard.html": {
    "href": "api/Innovt.Domain.BaseCreditCard.html",
    "title": "Class BaseCreditCard | Innovt Platform",
    "keywords": "Class BaseCreditCard Represents a base credit card information. Inheritance object ValueObject BaseCreditCard Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain Assembly: Innovt.Domain.dll Syntax public class BaseCreditCard : ValueObject Constructors | Edit this page View Source BaseCreditCard() Initializes a new instance of the BaseCreditCard class. Declaration public BaseCreditCard() | Edit this page View Source BaseCreditCard(string, string) Initializes a new instance of the BaseCreditCard class with a token and security code. Declaration public BaseCreditCard(string token, string securityCode) Parameters Type Name Description string token The token associated with the credit card. string securityCode The security code of the credit card. | Edit this page View Source BaseCreditCard(string, string, DateTime, string) Initializes a new instance of the BaseCreditCard class with credit card details. Declaration public BaseCreditCard(string number, string holder, DateTime expiration, string securityCode) Parameters Type Name Description string number The credit card number. string holder The cardholder's name. DateTime expiration The expiration date of the credit card. string securityCode The security code of the credit card. Properties | Edit this page View Source Expiration Gets or sets the expiration date of the credit card. Declaration public DateTime Expiration { get; set; } Property Value Type Description DateTime | Edit this page View Source Holder Gets or sets the cardholder's name. Declaration public string Holder { get; set; } Property Value Type Description string | Edit this page View Source MaskedNumber Gets the masked credit card number with only the last four digits visible. Declaration public string MaskedNumber { get; } Property Value Type Description string | Edit this page View Source Number Gets or sets the credit card number. Declaration public string Number { get; set; } Property Value Type Description string | Edit this page View Source SecurityCode Gets or sets the security code of the credit card. Declaration public string SecurityCode { get; set; } Property Value Type Description string | Edit this page View Source Token Gets or sets the token associated with the credit card. Declaration public string Token { get; set; } Property Value Type Description string Methods | Edit this page View Source GetMaskedCreditCard(string) Generates a masked credit card number with only the first six and last four digits visible. Declaration public static string GetMaskedCreditCard(string number) Parameters Type Name Description string number The original credit card number. Returns Type Description string The masked credit card number. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Contacts.Contact.html": {
    "href": "api/Innovt.Domain.Contacts.Contact.html",
    "title": "Class Contact | Innovt Platform",
    "keywords": "Class Contact Represents a contact entity. Inheritance object ValueObject ValueObject<int> Contact Implements IValidatableObject Inherited Members ValueObject<int>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Contacts Assembly: Innovt.Domain.dll Syntax public class Contact : ValueObject<int>, IValidatableObject Properties | Edit this page View Source Description For example Home, Office etc Declaration [Required] public string Description { get; set; } Property Value Type Description string | Edit this page View Source IsDeleted Gets or sets a value indicating whether the contact is deleted. Declaration public bool IsDeleted { get; set; } Property Value Type Description bool | Edit this page View Source Name Gets or sets the name associated with the contact. Declaration [Required] public string Name { get; set; } Property Value Type Description string | Edit this page View Source Type Gets or sets the contact type. Declaration [Required] public ContactType Type { get; set; } Property Value Type Description ContactType | Edit this page View Source Value Gets or sets the contact value (e.g., phone number, email address). Declaration [Required] public string Value { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Validates the contact properties based on the contact type. Declaration public virtual IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection of validation results. Implements IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Contacts.ContactType.html": {
    "href": "api/Innovt.Domain.Contacts.ContactType.html",
    "title": "Class ContactType | Innovt Platform",
    "keywords": "Class ContactType Email, Phone Inheritance object ValueObject ValueObject<int> ContactType Inherited Members ValueObject<int>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Contacts Assembly: Innovt.Domain.dll Syntax public class ContactType : ValueObject<int> Properties | Edit this page View Source Description Gets or sets the description of the contact type. Declaration [Required] public string Description { get; set; } Property Value Type Description string | Edit this page View Source IconUrl Gets or sets the URL to an icon associated with the contact type. Declaration public string IconUrl { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the contact type. Declaration [Required] public string Name { get; set; } Property Value Type Description string | Edit this page View Source RegexValidation Gets or sets the regular expression for validation of contact values. Declaration public string RegexValidation { get; set; } Property Value Type Description string Methods | Edit this page View Source Create(string, string) Creates a new contact type with the given name and description. Declaration public static ContactType Create(string name, string description) Parameters Type Name Description string name The name of the contact type. string description The description of the contact type. Returns Type Description ContactType A new ContactType instance. | Edit this page View Source Create(string, string, string) Creates a new contact type with the given name, description and regex Validation Declaration public static ContactType Create(string name, string description, string regexValidation) Parameters Type Name Description string name The name of the contact type. string description The description of the contact type. string regexValidation An Regex expression to validate the Value Returns Type Description ContactType | Edit this page View Source Validate(string) Validates a contact value based on the regex validation. Declaration public virtual bool Validate(string value) Parameters Type Name Description string value The value to validate. Returns Type Description bool True if the value is valid according to the regex; otherwise, false. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Contacts.Phone.html": {
    "href": "api/Innovt.Domain.Contacts.Phone.html",
    "title": "Class Phone | Innovt Platform",
    "keywords": "Class Phone Represents a phone entity. Inheritance object ValueObject Phone Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Contacts Assembly: Innovt.Domain.dll Syntax public class Phone : ValueObject Properties | Edit this page View Source AreaCode Gets or sets the area code associated with the phone number. Declaration public string AreaCode { get; set; } Property Value Type Description string | Edit this page View Source CountryCode Gets or sets the country code associated with the phone number. Declaration public string CountryCode { get; set; } Property Value Type Description string | Edit this page View Source Extension Gets or sets the phone extension, if applicable. Declaration public string Extension { get; set; } Property Value Type Description string | Edit this page View Source Number Gets or sets the main phone number. Declaration public string Number { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Contacts.html": {
    "href": "api/Innovt.Domain.Contacts.html",
    "title": "Namespace Innovt.Domain.Contacts | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Contacts Classes Contact Represents a contact entity. ContactType Email, Phone Phone Represents a phone entity."
  },
  "api/Innovt.Domain.Core.Events.DomainEvent.html": {
    "href": "api/Innovt.Domain.Core.Events.DomainEvent.html",
    "title": "Class DomainEvent | Innovt Platform",
    "keywords": "Class DomainEvent Represents a domain event in the system. Inheritance object DomainEvent Implements IDataStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Events Assembly: Innovt.Domain.Core.dll Syntax public abstract class DomainEvent : IDataStream Constructors | Edit this page View Source DomainEvent(string, string?) Initializes a new instance of the DomainEvent class with a specified name and partition. The default version here is 1.0.0 Declaration protected DomainEvent(string name, string? partition) Parameters Type Name Description string name The name of the domain event. string partition The partition associated with the event. | Edit this page View Source DomainEvent(string, string, string?) Initializes a new instance of the DomainEvent class with a specified name, version, and partition. Declaration protected DomainEvent(string name, string version, string? partition) Parameters Type Name Description string name The name of the domain event. string version The version of the domain event. string partition The partition associated with the event. Properties | Edit this page View Source ApproximateArrivalTimestamp Gets or sets the approximate arrival timestamp of the domain event. Declaration public DateTime ApproximateArrivalTimestamp { get; set; } Property Value Type Description DateTime | Edit this page View Source CreatedAt Gets or sets the date and time when the domain event was created. Declaration public DateTime CreatedAt { get; set; } Property Value Type Description DateTime | Edit this page View Source EventId Gets or sets the event ID associated with the domain event. Declaration public string? EventId { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the domain event. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Partition Gets or sets the partition associated with the domain event. Declaration public string? Partition { get; set; } Property Value Type Description string | Edit this page View Source PublishedAt Gets or sets the date and time when the domain event was published. Declaration public DateTimeOffset? PublishedAt { get; set; } Property Value Type Description DateTimeOffset? | Edit this page View Source TraceId Gets or sets the trace ID associated with the domain event. Declaration public string? TraceId { get; set; } Property Value Type Description string | Edit this page View Source Version Gets or sets the version of the domain event. Declaration public string Version { get; set; } Property Value Type Description string Methods | Edit this page View Source Empty(string?) Creates an empty domain event with the specified partition. Declaration public static DomainEvent Empty(string? partition) Parameters Type Name Description string partition The partition associated with the event. Returns Type Description DomainEvent An instance of DomainEvent representing an empty domain event. Implements IDataStream Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Events.IEventHandler.html": {
    "href": "api/Innovt.Domain.Core.Events.IEventHandler.html",
    "title": "Interface IEventHandler | Innovt Platform",
    "keywords": "Interface IEventHandler Defines methods for publishing domain events. Namespace: Innovt.Domain.Core.Events Assembly: Innovt.Domain.Core.dll Syntax public interface IEventHandler Methods | Edit this page View Source Publish(DomainEvent, CancellationToken) Publishes a single domain event. Declaration Task Publish(DomainEvent domainEvent, CancellationToken cancellationToken = default) Parameters Type Name Description DomainEvent domainEvent The domain event to be published. CancellationToken cancellationToken The cancellation token to observe. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source Publish(IEnumerable<DomainEvent>, CancellationToken) Publishes a collection of domain events. Declaration Task Publish(IEnumerable<DomainEvent> domainEvents, CancellationToken cancellationToken = default) Parameters Type Name Description IEnumerable<DomainEvent> domainEvents The collection of domain events to be published. CancellationToken cancellationToken The cancellation token to observe. Returns Type Description Task A task representing the asynchronous operation. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Events.html": {
    "href": "api/Innovt.Domain.Core.Events.html",
    "title": "Namespace Innovt.Domain.Core.Events | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Events Classes DomainEvent Represents a domain event in the system. Interfaces IEventHandler Defines methods for publishing domain events."
  },
  "api/Innovt.Domain.Core.Model.DomainModel-1.html": {
    "href": "api/Innovt.Domain.Core.Model.DomainModel-1.html",
    "title": "Class DomainModel<T> | Innovt Platform",
    "keywords": "Class DomainModel<T> Represents a domain model containing a collection of value objects. Inheritance object ValueObject DomainModel<T> Gender Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Model Assembly: Innovt.Domain.Core.dll Syntax public class DomainModel<T> : ValueObject where T : ValueObject Type Parameters Name Description T The type of value object. Methods | Edit this page View Source AddModel(T) Adds a value object to the domain model. Declaration protected void AddModel(T model) Parameters Type Name Description T model The value object to be added. | Edit this page View Source FindAll() Retrieves a list of all value objects in the domain model. Declaration public List<T> FindAll() Returns Type Description List<T> A list of value objects. | Edit this page View Source GetByPk(int) Retrieves a value object by its primary key. Declaration public T GetByPk(int id) Parameters Type Name Description int id The primary key to search for. Returns Type Description T The value object found, or null if not found. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Model.Entity-1.html": {
    "href": "api/Innovt.Domain.Core.Model.Entity-1.html",
    "title": "Class Entity<T> | Innovt Platform",
    "keywords": "Class Entity<T> Represents an abstract base class for entities in the domain model with a specific type for the identifier. Inheritance object Entity Entity<T> Group Role Inherited Members Entity.CreatedAt Entity.UpdatedAt Entity.IsNew() Entity.SetAsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Model Assembly: Innovt.Domain.Core.dll Syntax public abstract class Entity<T> : Entity where T : struct Type Parameters Name Description T The type of the identifier. Properties | Edit this page View Source Id Declaration public T Id { get; set; } Property Value Type Description T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Model.Entity.html": {
    "href": "api/Innovt.Domain.Core.Model.Entity.html",
    "title": "Class Entity | Innovt Platform",
    "keywords": "Class Entity Represents an abstract base class for entities in the domain model. Inheritance object Entity Entity<T> AuthUser BaseUser Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Model Assembly: Innovt.Domain.Core.dll Syntax public abstract class Entity Constructors | Edit this page View Source Entity() Initializes a new instance of the Entity class. Declaration protected Entity() | Edit this page View Source Entity(int) Initializes a new instance of the Entity class with a specific identifier. Declaration protected Entity(int id) Parameters Type Name Description int id The identifier for the entity. Properties | Edit this page View Source CreatedAt Gets or sets the date and time when the entity was created. Declaration public DateTimeOffset CreatedAt { get; set; } Property Value Type Description DateTimeOffset | Edit this page View Source Id Gets or sets the unique identifier for the entity. Declaration public virtual int Id { get; set; } Property Value Type Description int | Edit this page View Source UpdatedAt Gets or sets the date and time when the entity was last updated. Declaration public DateTimeOffset UpdatedAt { get; set; } Property Value Type Description DateTimeOffset Methods | Edit this page View Source AddDomainEvent(DomainEvent) Adds a domain event to the entity. Declaration public Entity AddDomainEvent(DomainEvent domainEvent) Parameters Type Name Description DomainEvent domainEvent The domain event to add. Returns Type Description Entity | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetDomainEvents() Gets the list of unprocessed domain events associated with the entity. Declaration public IReadOnlyList<DomainEvent> GetDomainEvents() Returns Type Description IReadOnlyList<DomainEvent> A read-only list of unprocessed domain events. | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source IsNew() Checks if the entity is new (i.e., not persisted in the database yet). Declaration public bool IsNew() Returns Type Description bool true if the entity is new; otherwise, false. | Edit this page View Source SetAsNew() Declaration public Entity SetAsNew() Returns Type Description Entity Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Model.IAggregateRoot-1.html": {
    "href": "api/Innovt.Domain.Core.Model.IAggregateRoot-1.html",
    "title": "Interface IAggregateRoot<T> | Innovt Platform",
    "keywords": "Interface IAggregateRoot<T> Represents an aggregate root in the domain model with a specific type for the identifier. Namespace: Innovt.Domain.Core.Model Assembly: Innovt.Domain.Core.dll Syntax public interface IAggregateRoot<T> Type Parameters Name Description T The type of the identifier. Properties | Edit this page View Source Id Gets or sets the unique identifier for the aggregate root. Declaration T Id { get; set; } Property Value Type Description T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Model.IAggregateRoot.html": {
    "href": "api/Innovt.Domain.Core.Model.IAggregateRoot.html",
    "title": "Interface IAggregateRoot | Innovt Platform",
    "keywords": "Interface IAggregateRoot Represents an aggregate root in the domain model with an integer identifier. Namespace: Innovt.Domain.Core.Model Assembly: Innovt.Domain.Core.dll Syntax public interface IAggregateRoot Properties | Edit this page View Source Id Gets or sets the unique identifier for the aggregate root. Declaration int Id { get; set; } Property Value Type Description int Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Model.SimpleVo-1.html": {
    "href": "api/Innovt.Domain.Core.Model.SimpleVo-1.html",
    "title": "Class SimpleVo<T> | Innovt Platform",
    "keywords": "Class SimpleVo<T> Represents a simple value object with a generic identifier type. Inheritance object ValueObject ValueObject<T> SimpleVo<T> Inherited Members ValueObject<T>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Model Assembly: Innovt.Domain.Core.dll Syntax public class SimpleVo<T> : ValueObject<T> where T : struct Type Parameters Name Description T The type of the identifier. Constructors | Edit this page View Source SimpleVo() Initializes a new instance of the SimpleVo<T> class. Declaration public SimpleVo() | Edit this page View Source SimpleVo(T, string?) Initializes a new instance of the SimpleVo<T> class with the specified identifier and description. Declaration public SimpleVo(T id, string? description) Parameters Type Name Description T id The identifier. string description The description. Properties | Edit this page View Source Description Gets or sets the description of the value object. Declaration public string? Description { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Model.ValueObject-1.html": {
    "href": "api/Innovt.Domain.Core.Model.ValueObject-1.html",
    "title": "Class ValueObject<T> | Innovt Platform",
    "keywords": "Class ValueObject<T> Represents a base class for value objects with a generic identifier type. Inheritance object ValueObject ValueObject<T> Contact ContactType SimpleVo<T> Permission RequestTracking Inherited Members ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Model Assembly: Innovt.Domain.Core.dll Syntax public abstract class ValueObject<T> : ValueObject where T : struct Type Parameters Name Description T The type of the identifier. Properties | Edit this page View Source Id Gets or sets the identifier for the value object. Declaration public T Id { get; set; } Property Value Type Description T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Model.ValueObject.html": {
    "href": "api/Innovt.Domain.Core.Model.ValueObject.html",
    "title": "Class ValueObject | Innovt Platform",
    "keywords": "Class ValueObject Represents a base class for value objects. Inheritance object ValueObject Address AddressType City Country State Bank BaseCreditCard Phone DomainModel<T> ValueObject<T> Document DocumentType Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Model Assembly: Innovt.Domain.Core.dll Syntax public abstract class ValueObject Properties | Edit this page View Source Id Gets or sets the identifier for the value object. Declaration public virtual int Id { get; set; } Property Value Type Description int Methods | Edit this page View Source Equals(object) Determines whether the current value object is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current value object. Returns Type Description bool true if the objects are considered equal; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current value object. Overrides object.GetHashCode() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Model.html": {
    "href": "api/Innovt.Domain.Core.Model.html",
    "title": "Namespace Innovt.Domain.Core.Model | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Model Classes DomainModel<T> Represents a domain model containing a collection of value objects. Entity Represents an abstract base class for entities in the domain model. Entity<T> Represents an abstract base class for entities in the domain model with a specific type for the identifier. SimpleVo<T> Represents a simple value object with a generic identifier type. ValueObject Represents a base class for value objects. ValueObject<T> Represents a base class for value objects with a generic identifier type. Interfaces IAggregateRoot Represents an aggregate root in the domain model with an integer identifier. IAggregateRoot<T> Represents an aggregate root in the domain model with a specific type for the identifier."
  },
  "api/Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html": {
    "href": "api/Innovt.Domain.Core.Repository.IExtendedUnitOfWork.html",
    "title": "Interface IExtendedUnitOfWork | Innovt Platform",
    "keywords": "Interface IExtendedUnitOfWork Extended Unit of Work Interface To Provide More Features To Unit Of Work When Using Entity Framework Inherited Members IUnitOfWork.Commit() IUnitOfWork.CommitAsync(CancellationToken) IUnitOfWork.Rollback() IDisposable.Dispose() Namespace: Innovt.Domain.Core.Repository Assembly: Innovt.Domain.Core.dll Syntax public interface IExtendedUnitOfWork : IUnitOfWork, IDisposable Methods | Edit this page View Source AddAsync<T>(IEnumerable<T>, CancellationToken) Asynchronously adds multiple entities of type T to the repository. Declaration Task AddAsync<T>(IEnumerable<T> entities, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description IEnumerable<T> entities The entities to add. CancellationToken cancellationToken The optional cancellation token. Returns Type Description Task A task representing the asynchronous operation. Type Parameters Name Description T The type of the entities. | Edit this page View Source AddAsync<T>(T, CancellationToken) Asynchronously adds an entity or a collection of entities. Declaration Task AddAsync<T>(T entity, CancellationToken cancellationToken = default) where T : class Parameters Type Name Description T entity CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T | Edit this page View Source Add<T>(IEnumerable<T>) Add Entities To Unit Of Work Context Declaration void Add<T>(IEnumerable<T> entities) where T : class Parameters Type Name Description IEnumerable<T> entities Type Parameters Name Description T | Edit this page View Source Add<T>(T) Add Entity To Unit Of Work Context Declaration void Add<T>(T entity) where T : class Parameters Type Name Description T entity Type Parameters Name Description T | Edit this page View Source Attach<T>(T) Attaches an entity of type T to the repository. Declaration void Attach<T>(T entity) where T : class Parameters Type Name Description T entity The entity to attach. Type Parameters Name Description T The type of the entity. | Edit this page View Source Detach<T>(T) Detaches an entity of type T from the repository. Declaration void Detach<T>(T entity) where T : class Parameters Type Name Description T entity The entity to detach. Type Parameters Name Description T The type of the entity. | Edit this page View Source ExecuteSqlCommand(string, params object[]) Executes a SQL command. Declaration int ExecuteSqlCommand(string sql, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. object[] parameters The parameters for the SQL command. Returns Type Description int The number of affected rows. | Edit this page View Source ExecuteSqlCommandAsync(string, CancellationToken, params object[]) Asynchronously executes a SQL command. Declaration Task<int> ExecuteSqlCommandAsync(string sql, CancellationToken cancellationToken = default, params object[] parameters) Parameters Type Name Description string sql The SQL command to execute. CancellationToken cancellationToken The optional cancellation token. object[] parameters The parameters for the SQL command. Returns Type Description Task<int> A task representing the asynchronous operation, with the number of affected rows. | Edit this page View Source Queryable<T>() Returns a queryable interface for entities of type T. Declaration IQueryable<T> Queryable<T>() where T : class Returns Type Description IQueryable<T> A queryable interface for the entities. Type Parameters Name Description T The type of the entities. | Edit this page View Source Remove<T>(IEnumerable<T>) Removes multiple entities of type T from the repository. Declaration void Remove<T>(IEnumerable<T> entities) where T : class Parameters Type Name Description IEnumerable<T> entities The entities to remove. Type Parameters Name Description T The type of the entities. | Edit this page View Source Remove<T>(T) Removes an entity of type T from the repository. Declaration void Remove<T>(T entity) where T : class Parameters Type Name Description T entity The entity to remove. Type Parameters Name Description T The type of the entity. | Edit this page View Source Update<T>(T) Updates an entity of type T in the repository. Declaration void Update<T>(T entity) where T : class Parameters Type Name Description T entity The entity to update. Type Parameters Name Description T The type of the entity. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Repository.IRepository-1.html": {
    "href": "api/Innovt.Domain.Core.Repository.IRepository-1.html",
    "title": "Interface IRepository<T> | Innovt Platform",
    "keywords": "Interface IRepository<T> Represents a generic repository for data access operations. Namespace: Innovt.Domain.Core.Repository Assembly: Innovt.Domain.Core.dll Syntax public interface IRepository<T> where T : class Type Parameters Name Description T The entity type. Methods | Edit this page View Source Add(IEnumerable<T>) Adds multiple entities Declaration void Add(IEnumerable<T> entities) Parameters Type Name Description IEnumerable<T> entities | Edit this page View Source Add(T) Adds a single entity Declaration void Add(T entity) Parameters Type Name Description T entity | Edit this page View Source AddAsync(IEnumerable<T>) Asynchronously adds multiple entities Declaration Task AddAsync(IEnumerable<T> entities) Parameters Type Name Description IEnumerable<T> entities Returns Type Description Task | Edit this page View Source AddAsync(T) Asynchronously adds a single entity Declaration Task AddAsync(T entity) Parameters Type Name Description T entity Returns Type Description Task | Edit this page View Source CountBy(ISpecification<T>) Counts entities based on a specificatio Declaration int CountBy(ISpecification<T> specification) Parameters Type Name Description ISpecification<T> specification Returns Type Description int | Edit this page View Source CountByAsync(ISpecification<T>, CancellationToken) Declaration Task<int> CountByAsync(ISpecification<T> specification, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification CancellationToken cancellationToken Returns Type Description Task<int> | Edit this page View Source CountByAsync<TKEntity>(ISpecification<TKEntity>, CancellationToken) Asynchronously counts entities based on a specification for a given entity type Declaration Task<int> CountByAsync<TKEntity>(ISpecification<TKEntity> specification, CancellationToken cancellationToken = default) where TKEntity : class Parameters Type Name Description ISpecification<TKEntity> specification CancellationToken cancellationToken Returns Type Description Task<int> Type Parameters Name Description TKEntity | Edit this page View Source CountBy<TKEntity>(ISpecification<TKEntity>) Declaration int CountBy<TKEntity>(ISpecification<TKEntity> specification) where TKEntity : class Parameters Type Name Description ISpecification<TKEntity> specification Returns Type Description int Type Parameters Name Description TKEntity | Edit this page View Source FindBy(ISpecification<T>, Include?) Finds entities based on a specification and includes related entities Declaration IEnumerable<T> FindBy(ISpecification<T> specification, Include? includes = null) Parameters Type Name Description ISpecification<T> specification Include includes Returns Type Description IEnumerable<T> | Edit this page View Source FindByAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously finds entities based on a specification and includes related entities Declaration Task<IEnumerable<T>> FindByAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification Include includes CancellationToken cancellationToken Returns Type Description Task<IEnumerable<T>> | Edit this page View Source FindByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?, CancellationToken) Asynchronously finds entities based on a specification, with optional ordering, and includes related entities Declaration Task<IEnumerable<T>> FindByAsync<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification Expression<Func<T, TKey>> orderBy bool isOrderByDescending Include includes CancellationToken cancellationToken Returns Type Description Task<IEnumerable<T>> Type Parameters Name Description TKey | Edit this page View Source FindBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?) Finds entities based on a specification, with optional ordering, and includes related entities Declaration IEnumerable<T> FindBy<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null) Parameters Type Name Description ISpecification<T> specification Expression<Func<T, TKey>> orderBy bool isOrderByDescending Include includes Returns Type Description IEnumerable<T> Type Parameters Name Description TKey | Edit this page View Source FindPaginatedBy(ISpecification<T>, Include?) Finds entities based on a specification and returns a paged collection, with optional includes Declaration PagedCollection<T> FindPaginatedBy(ISpecification<T> specification, Include? includes = null) Parameters Type Name Description ISpecification<T> specification Include includes Returns Type Description PagedCollection<T> | Edit this page View Source FindPaginatedByAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously finds entities based on a specification and returns a paged collection, with optional includes Declaration Task<PagedCollection<T>> FindPaginatedByAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification Include includes CancellationToken cancellationToken Returns Type Description Task<PagedCollection<T>> | Edit this page View Source FindPaginatedByAsync<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?, CancellationToken) Asynchronously finds entities based on a specification, with optional ordering, and returns a paged collection, with optional includes Declaration Task<PagedCollection<T>> FindPaginatedByAsync<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification Expression<Func<T, TKey>> orderBy bool isOrderByDescending Include includes CancellationToken cancellationToken Returns Type Description Task<PagedCollection<T>> Type Parameters Name Description TKey | Edit this page View Source FindPaginatedBy<TKey>(ISpecification<T>, Expression<Func<T, TKey>>?, bool, Include?) Finds entities based on a specification, with optional ordering, and returns a paged collection, with optional includes Declaration PagedCollection<T> FindPaginatedBy<TKey>(ISpecification<T> specification, Expression<Func<T, TKey>>? orderBy = null, bool isOrderByDescending = false, Include? includes = null) Parameters Type Name Description ISpecification<T> specification Expression<Func<T, TKey>> orderBy bool isOrderByDescending Include includes Returns Type Description PagedCollection<T> Type Parameters Name Description TKey | Edit this page View Source GetFirstOrDefault(ISpecification<T>, Include?) Gets the first entity based on a specification and includes related entities Declaration T? GetFirstOrDefault(ISpecification<T> specification, Include? includes = null) Parameters Type Name Description ISpecification<T> specification Include includes Returns Type Description T | Edit this page View Source GetFirstOrDefaultAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously gets the first entity based on a specification and includes related entities Declaration Task<T?> GetFirstOrDefaultAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification Include includes CancellationToken cancellationToken Returns Type Description Task<T> | Edit this page View Source GetSingleOrDefault(ISpecification<T>, Include?) Gets a single entity based on a specification and includes related entities Declaration T? GetSingleOrDefault(ISpecification<T> specification, Include? includes = null) Parameters Type Name Description ISpecification<T> specification Include includes Returns Type Description T | Edit this page View Source GetSingleOrDefaultAsync(ISpecification<T>, Include?, CancellationToken) Asynchronously gets a single entity based on a specification and includes related entities Declaration Task<T?> GetSingleOrDefaultAsync(ISpecification<T> specification, Include? includes = null, CancellationToken cancellationToken = default) Parameters Type Name Description ISpecification<T> specification Include includes CancellationToken cancellationToken Returns Type Description Task<T> | Edit this page View Source Modify(T) Modifies an entity Declaration void Modify(T entity) Parameters Type Name Description T entity | Edit this page View Source Remove(IEnumerable<T>) Removes multiple entities Declaration void Remove(IEnumerable<T> entities) Parameters Type Name Description IEnumerable<T> entities | Edit this page View Source Remove(T) Removes a single entity Declaration void Remove(T entity) Parameters Type Name Description T entity Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Repository.IUnitOfWork.html": {
    "href": "api/Innovt.Domain.Core.Repository.IUnitOfWork.html",
    "title": "Interface IUnitOfWork | Innovt Platform",
    "keywords": "Interface IUnitOfWork Represents a unit of work for managing transactions and changes. Inherited Members IDisposable.Dispose() Namespace: Innovt.Domain.Core.Repository Assembly: Innovt.Domain.Core.dll Syntax public interface IUnitOfWork : IDisposable Methods | Edit this page View Source Commit() Commits the changes made within the unit of work. Declaration int Commit() Returns Type Description int The number of affected entries. | Edit this page View Source CommitAsync(CancellationToken) Asynchronously commits the changes made within the unit of work. Declaration Task<int> CommitAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A cancellation token. Returns Type Description Task<int> The number of affected entries. | Edit this page View Source Rollback() Rolls back any changes made within the unit of work. Declaration void Rollback() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Repository.Include.html": {
    "href": "api/Innovt.Domain.Core.Repository.Include.html",
    "title": "Class Include | Innovt Platform",
    "keywords": "Class Include Represents a class for managing entity inclusion paths for Entity Framework queries. Inheritance object Include Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Repository Assembly: Innovt.Domain.Core.dll Syntax public class Include Constructors | Edit this page View Source Include() Initializes a new instance of the Include class. Declaration public Include() | Edit this page View Source Include(params string[]) Initializes a new instance of the Include class with specified include paths. Declaration public Include(params string[] includes) Parameters Type Name Description string[] includes The include paths. Properties | Edit this page View Source Includes Gets the list of include paths. Declaration public List<string> Includes { get; } Property Value Type Description List<string> Methods | Edit this page View Source Add(string) Adds an include path. Declaration public Include Add(string param) Parameters Type Name Description string param The include path to add. Returns Type Description Include The Include instance. | Edit this page View Source Add(params string[]) Adds multiple include paths. Declaration public Include Add(params string[] parameters) Parameters Type Name Description string[] parameters The include paths to add. Returns Type Description Include The Include instance. | Edit this page View Source IsEmpty() Checks if the include list is empty. Declaration public bool IsEmpty() Returns Type Description bool true if the include list is empty; otherwise, false. | Edit this page View Source New(params string[]) Creates a new instance of Include with specified include paths. Declaration public static Include New(params string[] parameters) Parameters Type Name Description string[] parameters The include paths. Returns Type Description Include The new Include instance. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Repository.html": {
    "href": "api/Innovt.Domain.Core.Repository.html",
    "title": "Namespace Innovt.Domain.Core.Repository | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Repository Classes Include Represents a class for managing entity inclusion paths for Entity Framework queries. Interfaces IExtendedUnitOfWork Extended Unit of Work Interface To Provide More Features To Unit Of Work When Using Entity Framework IRepository<T> Represents a generic repository for data access operations. IUnitOfWork Represents a unit of work for managing transactions and changes."
  },
  "api/Innovt.Domain.Core.Specification.AndSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.AndSpecification-1.html",
    "title": "Class AndSpecification<T> | Innovt Platform",
    "keywords": "Class AndSpecification<T> A logic AND Specification Inheritance object Specification<T> CompositeSpecification<T> AndSpecification<T> Implements ISpecification<T> Inherited Members Specification<T>.Page Specification<T>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public sealed class AndSpecification<T> : CompositeSpecification<T>, ISpecification<T> where T : class Type Parameters Name Description T Type of entity that check this specification Constructors | Edit this page View Source AndSpecification(ISpecification<T>, ISpecification<T>) Default constructor for AndSpecification Declaration public AndSpecification(ISpecification<T> leftSide, ISpecification<T> rightSide) Parameters Type Name Description ISpecification<T> leftSide Left side specification ISpecification<T> rightSide Right side specification Properties | Edit this page View Source LeftSideSpecification Left side specification Declaration public override ISpecification<T> LeftSideSpecification { get; } Property Value Type Description ISpecification<T> Overrides CompositeSpecification<T>.LeftSideSpecification | Edit this page View Source RightSideSpecification Right side specification Declaration public override ISpecification<T> RightSideSpecification { get; } Property Value Type Description ISpecification<T> Overrides CompositeSpecification<T>.RightSideSpecification Methods | Edit this page View Source SatisfiedBy() ISpecification<TEntity> Declaration public override Expression<Func<T, bool>> SatisfiedBy() Returns Type Description Expression<Func<T, bool>> ISpecification<TEntity> Overrides Specification<T>.SatisfiedBy() Implements ISpecification<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.ByPkSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.ByPkSpecification-1.html",
    "title": "Class ByPkSpecification<T> | Innovt Platform",
    "keywords": "Class ByPkSpecification<T> Specification to filter entities by their primary key (Id). Inheritance object ByPkSpecification<T> Implements ISpecification<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public class ByPkSpecification<T> : ISpecification<T> where T : Entity Type Parameters Name Description T The type of entity. Constructors | Edit this page View Source ByPkSpecification(int) Initializes a new instance of the ByPkSpecification<T> class. Declaration public ByPkSpecification(int id) Parameters Type Name Description int id The primary key value to filter by. Properties | Edit this page View Source Page Gets or sets the page number for paginated results. Declaration public int? Page { get; set; } Property Value Type Description int? | Edit this page View Source PageSize Gets or sets the page size for paginated results. Declaration public int? PageSize { get; set; } Property Value Type Description int? Methods | Edit this page View Source SatisfiedBy() Constructs an expression to filter entities based on the primary key. Declaration public Expression<Func<T, bool>> SatisfiedBy() Returns Type Description Expression<Func<T, bool>> An expression that satisfies the specification. Implements ISpecification<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.CompositeSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.CompositeSpecification-1.html",
    "title": "Class CompositeSpecification<TEntity> | Innovt Platform",
    "keywords": "Class CompositeSpecification<TEntity> Base class for composite specifications Inheritance object Specification<TEntity> CompositeSpecification<TEntity> AndSpecification<T> OrSpecification<T> Implements ISpecification<TEntity> Inherited Members Specification<TEntity>.Page Specification<TEntity>.PageSize Specification<TEntity>.SatisfiedBy() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public abstract class CompositeSpecification<TEntity> : Specification<TEntity>, ISpecification<TEntity> where TEntity : class Type Parameters Name Description TEntity Properties | Edit this page View Source LeftSideSpecification Left side specification for this composite element Declaration public abstract ISpecification<TEntity> LeftSideSpecification { get; } Property Value Type Description ISpecification<TEntity> | Edit this page View Source RightSideSpecification Right side specification for this composite element Declaration public abstract ISpecification<TEntity> RightSideSpecification { get; } Property Value Type Description ISpecification<TEntity> Implements ISpecification<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.DirectSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.DirectSpecification-1.html",
    "title": "Class DirectSpecification<TEntity> | Innovt Platform",
    "keywords": "Class DirectSpecification<TEntity> A Direct Specification is a simple implementation of specification that acquire this from a lambda expression in constructor Inheritance object Specification<TEntity> DirectSpecification<TEntity> Implements ISpecification<TEntity> Inherited Members Specification<TEntity>.Page Specification<TEntity>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public sealed class DirectSpecification<TEntity> : Specification<TEntity>, ISpecification<TEntity> where TEntity : class Type Parameters Name Description TEntity Constructors | Edit this page View Source DirectSpecification(Expression<Func<TEntity, bool>>) Default constructor for Direct Specification Declaration public DirectSpecification(Expression<Func<TEntity, bool>> matchingCriteria) Parameters Type Name Description Expression<Func<TEntity, bool>> matchingCriteria A Matching Criteria Methods | Edit this page View Source By(Expression<Func<TEntity, bool>>) Creates a direct specification for a given entity type based on provided matching criteria. Declaration public static DirectSpecification<TEntity> By(Expression<Func<TEntity, bool>> matchingCriteria) Parameters Type Name Description Expression<Func<TEntity, bool>> matchingCriteria The expression representing the matching criteria. Returns Type Description DirectSpecification<TEntity> A direct specification based on the provided matching criteria. | Edit this page View Source SatisfiedBy() Declaration public override Expression<Func<TEntity, bool>> SatisfiedBy() Returns Type Description Expression<Func<TEntity, bool>> Overrides Specification<TEntity>.SatisfiedBy() Implements ISpecification<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.ExpressionBuilder.html": {
    "href": "api/Innovt.Domain.Core.Specification.ExpressionBuilder.html",
    "title": "Class ExpressionBuilder | Innovt Platform",
    "keywords": "Class ExpressionBuilder Extension methods for adding AND and OR with parameters rebinder Inheritance object ExpressionBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public static class ExpressionBuilder Methods | Edit this page View Source And<T>(Expression<Func<T, bool>>, Expression<Func<T, bool>>) And operator Declaration public static Expression<Func<T, bool>> And<T>(this Expression<Func<T, bool>> first, Expression<Func<T, bool>> second) Parameters Type Name Description Expression<Func<T, bool>> first Right Expression in AND operation Expression<Func<T, bool>> second Left Expression in And operation Returns Type Description Expression<Func<T, bool>> New AND expression Type Parameters Name Description T Type of params in expression | Edit this page View Source Compose<T>(Expression<T>, Expression<T>, Func<Expression, Expression, Expression>) Compose two expressions and merge all in a new expression Declaration public static Expression<T> Compose<T>(this Expression<T> first, Expression<T> second, Func<Expression, Expression, Expression> merge) Parameters Type Name Description Expression<T> first Expression instance Expression<T> second Expression to merge Func<Expression, Expression, Expression> merge Function to merge Returns Type Description Expression<T> New merged expression Type Parameters Name Description T Type of params in expression | Edit this page View Source Or<T>(Expression<Func<T, bool>>, Expression<Func<T, bool>>) Or operator Declaration public static Expression<Func<T, bool>> Or<T>(this Expression<Func<T, bool>> first, Expression<Func<T, bool>> second) Parameters Type Name Description Expression<Func<T, bool>> first Right expression in OR operation Expression<Func<T, bool>> second Left expression in OR operation Returns Type Description Expression<Func<T, bool>> New Or expressions Type Parameters Name Description T Type of param in expression"
  },
  "api/Innovt.Domain.Core.Specification.ISpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.ISpecification-1.html",
    "title": "Interface ISpecification<TEntity> | Innovt Platform",
    "keywords": "Interface ISpecification<TEntity> Base contract for Specification pattern, for more information about this pattern see http://martinfowler.com/apsupp/spec.pdf or http://en.wikipedia.org/wiki/Specification_pattern. This is really a variant implementation where we have added Linq and lambda expression into this pattern. Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public interface ISpecification<TEntity> where TEntity : class Type Parameters Name Description TEntity Properties | Edit this page View Source Page Declaration int? Page { get; set; } Property Value Type Description int? | Edit this page View Source PageSize Declaration int? PageSize { get; set; } Property Value Type Description int? Methods | Edit this page View Source SatisfiedBy() Check if this specification is satisfied by a specific expression lambda Declaration Expression<Func<TEntity, bool>> SatisfiedBy() Returns Type Description Expression<Func<TEntity, bool>> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.NotSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.NotSpecification-1.html",
    "title": "Class NotSpecification<TEntity> | Innovt Platform",
    "keywords": "Class NotSpecification<TEntity> NotEspecification convert a original specification with NOT logic operator Inheritance object Specification<TEntity> NotSpecification<TEntity> Implements ISpecification<TEntity> Inherited Members Specification<TEntity>.Page Specification<TEntity>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public sealed class NotSpecification<TEntity> : Specification<TEntity>, ISpecification<TEntity> where TEntity : class Type Parameters Name Description TEntity Constructors | Edit this page View Source NotSpecification(ISpecification<TEntity>) Constructor for NotSpecificaiton Declaration public NotSpecification(ISpecification<TEntity> originalSpecification) Parameters Type Name Description ISpecification<TEntity> originalSpecification Original specification | Edit this page View Source NotSpecification(Expression<Func<TEntity, bool>>) Constructor for NotSpecification Declaration public NotSpecification(Expression<Func<TEntity, bool>> originalSpecification) Parameters Type Name Description Expression<Func<TEntity, bool>> originalSpecification Original specificaiton Methods | Edit this page View Source SatisfiedBy() ISpecification<TEntity> Declaration public override Expression<Func<TEntity, bool>> SatisfiedBy() Returns Type Description Expression<Func<TEntity, bool>> ISpecification<TEntity> Overrides Specification<TEntity>.SatisfiedBy() Implements ISpecification<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.OrSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.OrSpecification-1.html",
    "title": "Class OrSpecification<T> | Innovt Platform",
    "keywords": "Class OrSpecification<T> A Logic OR Specification Inheritance object Specification<T> CompositeSpecification<T> OrSpecification<T> Implements ISpecification<T> Inherited Members Specification<T>.Page Specification<T>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public sealed class OrSpecification<T> : CompositeSpecification<T>, ISpecification<T> where T : class Type Parameters Name Description T Type of entity that check this specification Constructors | Edit this page View Source OrSpecification(ISpecification<T>, ISpecification<T>) Default constructor for AndSpecification Declaration public OrSpecification(ISpecification<T> leftSide, ISpecification<T> rightSide) Parameters Type Name Description ISpecification<T> leftSide Left side specification ISpecification<T> rightSide Right side specification Properties | Edit this page View Source LeftSideSpecification Left side specification Declaration public override ISpecification<T> LeftSideSpecification { get; } Property Value Type Description ISpecification<T> Overrides CompositeSpecification<T>.LeftSideSpecification | Edit this page View Source RightSideSpecification Righ side specification Declaration public override ISpecification<T> RightSideSpecification { get; } Property Value Type Description ISpecification<T> Overrides CompositeSpecification<T>.RightSideSpecification Methods | Edit this page View Source SatisfiedBy() ISpecification<TEntity> Declaration public override Expression<Func<T, bool>> SatisfiedBy() Returns Type Description Expression<Func<T, bool>> ISpecification<TEntity> Overrides Specification<T>.SatisfiedBy() Implements ISpecification<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.ParameterRebinder.html": {
    "href": "api/Innovt.Domain.Core.Specification.ParameterRebinder.html",
    "title": "Class ParameterRebinder | Innovt Platform",
    "keywords": "Class ParameterRebinder Helper for rebinder parameters without use Invoke method in expressions ( this methods is not supported in all linq query providers, for example in Linq2Entities is not supported) Inheritance object ExpressionVisitor ParameterRebinder Inherited Members ExpressionVisitor.Visit(ReadOnlyCollection<Expression>) ExpressionVisitor.Visit(Expression) ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, string) ExpressionVisitor.VisitAndConvert<T>(T, string) ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public sealed class ParameterRebinder : ExpressionVisitor Constructors | Edit this page View Source ParameterRebinder(Dictionary<ParameterExpression, ParameterExpression>) Default construcotr Declaration public ParameterRebinder(Dictionary<ParameterExpression, ParameterExpression> map) Parameters Type Name Description Dictionary<ParameterExpression, ParameterExpression> map Map specification Methods | Edit this page View Source ReplaceParameters(Dictionary<ParameterExpression, ParameterExpression>, Expression) Replate parameters in expression with a Map information Declaration public static Expression ReplaceParameters(Dictionary<ParameterExpression, ParameterExpression> map, Expression exp) Parameters Type Name Description Dictionary<ParameterExpression, ParameterExpression> map Map information Expression exp Expression to replace parameters Returns Type Description Expression Expression with parameters replaced | Edit this page View Source VisitParameter(ParameterExpression) Visit pattern method Declaration protected override Expression VisitParameter(ParameterExpression p) Parameters Type Name Description ParameterExpression p A Parameter expression Returns Type Description Expression New visited expression Overrides ExpressionVisitor.VisitParameter(ParameterExpression) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.Specification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.Specification-1.html",
    "title": "Class Specification<TEntity> | Innovt Platform",
    "keywords": "Class Specification<TEntity> Represent a Expression Specification Specification overload operators for create AND,OR or NOT specifications. Additionally overload AND and OR operators with the same sense of ( binary And and binary Or ). C# couldn’t overload the AND and OR operators directly since the framework doesn’t allow such craziness. But with overloading false and true operators this is posible. For explain this behavior please read http://msdn.microsoft.com/en-us/library/aa691312(VS.71).aspx Inheritance object Specification<TEntity> CompositeSpecification<TEntity> DirectSpecification<TEntity> NotSpecification<TEntity> TrueSpecification<TEntity> Implements ISpecification<TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public abstract class Specification<TEntity> : ISpecification<TEntity> where TEntity : class Type Parameters Name Description TEntity Properties | Edit this page View Source Page Declaration public int? Page { get; set; } Property Value Type Description int? | Edit this page View Source PageSize Declaration public int? PageSize { get; set; } Property Value Type Description int? Methods | Edit this page View Source SatisfiedBy() IsSatisFied Specification pattern method, Declaration public abstract Expression<Func<TEntity, bool>> SatisfiedBy() Returns Type Description Expression<Func<TEntity, bool>> Expression that satisfy this specification Operators | Edit this page View Source operator &(Specification<TEntity>, Specification<TEntity>) And operator Declaration public static Specification<TEntity> operator &(Specification<TEntity> leftSideSpecification, Specification<TEntity> rightSideSpecification) Parameters Type Name Description Specification<TEntity> leftSideSpecification left operand in this AND operation Specification<TEntity> rightSideSpecification right operand in this AND operation Returns Type Description Specification<TEntity> New specification | Edit this page View Source operator |(Specification<TEntity>, Specification<TEntity>) Or operator Declaration public static Specification<TEntity> operator |(Specification<TEntity> leftSideSpecification, Specification<TEntity> rightSideSpecification) Parameters Type Name Description Specification<TEntity> leftSideSpecification left operand in this OR operation Specification<TEntity> rightSideSpecification left operand in this OR operation Returns Type Description Specification<TEntity> New specification | Edit this page View Source operator false(Specification<TEntity>) Override operator false, only for support AND OR operators Declaration public static bool operator false(Specification<TEntity> specification) Parameters Type Name Description Specification<TEntity> specification Specification instance Returns Type Description bool See False operator in C# | Edit this page View Source operator !(Specification<TEntity>) Not specification Declaration public static Specification<TEntity> operator !(Specification<TEntity> specification) Parameters Type Name Description Specification<TEntity> specification Specification to negate Returns Type Description Specification<TEntity> New specification | Edit this page View Source operator true(Specification<TEntity>) Override operator True, only for support AND OR operators Declaration public static bool operator true(Specification<TEntity> specification) Parameters Type Name Description Specification<TEntity> specification Specification instance Returns Type Description bool See True operator in C# Implements ISpecification<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.TrueSpecification-1.html": {
    "href": "api/Innovt.Domain.Core.Specification.TrueSpecification-1.html",
    "title": "Class TrueSpecification<TEntity> | Innovt Platform",
    "keywords": "Class TrueSpecification<TEntity> True specification Inheritance object Specification<TEntity> TrueSpecification<TEntity> Implements ISpecification<TEntity> Inherited Members Specification<TEntity>.Page Specification<TEntity>.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Specification Assembly: Innovt.Domain.Core.dll Syntax public sealed class TrueSpecification<TEntity> : Specification<TEntity>, ISpecification<TEntity> where TEntity : class Type Parameters Name Description TEntity Methods | Edit this page View Source SatisfiedBy() Specification<TEntity> Declaration public override Expression<Func<TEntity, bool>> SatisfiedBy() Returns Type Description Expression<Func<TEntity, bool>> Specification<TEntity> Overrides Specification<TEntity>.SatisfiedBy() Implements ISpecification<TEntity> Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Specification.html": {
    "href": "api/Innovt.Domain.Core.Specification.html",
    "title": "Namespace Innovt.Domain.Core.Specification | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Specification Classes AndSpecification<T> A logic AND Specification ByPkSpecification<T> Specification to filter entities by their primary key (Id). CompositeSpecification<TEntity> Base class for composite specifications DirectSpecification<TEntity> A Direct Specification is a simple implementation of specification that acquire this from a lambda expression in constructor ExpressionBuilder Extension methods for adding AND and OR with parameters rebinder NotSpecification<TEntity> NotEspecification convert a original specification with NOT logic operator OrSpecification<T> A Logic OR Specification ParameterRebinder Helper for rebinder parameters without use Invoke method in expressions ( this methods is not supported in all linq query providers, for example in Linq2Entities is not supported) Specification<TEntity> Represent a Expression Specification Specification overload operators for create AND,OR or NOT specifications. Additionally overload AND and OR operators with the same sense of ( binary And and binary Or ). C# couldn’t overload the AND and OR operators directly since the framework doesn’t allow such craziness. But with overloading false and true operators this is posible. For explain this behavior please read http://msdn.microsoft.com/en-us/library/aa691312(VS.71).aspx TrueSpecification<TEntity> True specification Interfaces ISpecification<TEntity> Base contract for Specification pattern, for more information about this pattern see http://martinfowler.com/apsupp/spec.pdf or http://en.wikipedia.org/wiki/Specification_pattern. This is really a variant implementation where we have added Linq and lambda expression into this pattern."
  },
  "api/Innovt.Domain.Core.Streams.DataStream-1.html": {
    "href": "api/Innovt.Domain.Core.Streams.DataStream-1.html",
    "title": "Class DataStream<T> | Innovt Platform",
    "keywords": "Class DataStream<T> Represents a data stream with a specific type of body. Inheritance object DataStream<T> Implements IDataStream<T> IDataStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Core.Streams Assembly: Innovt.Domain.Core.dll Syntax public class DataStream<T> : IDataStream<T>, IDataStream where T : class Type Parameters Name Description T The type of the body. Constructors | Edit this page View Source DataStream() Default constructor for DataStream. Declaration public DataStream() | Edit this page View Source DataStream(string, string?, string?, T) Initializes a new instance of the DataStream class with specified properties. Declaration public DataStream(string version, string? partition, string? traceId, T body) Parameters Type Name Description string version The version of the data stream. string partition The partition identifier of the data stream. string traceId The trace identifier associated with the data stream. T body The body of the data stream. Properties | Edit this page View Source ApproximateArrivalTimestamp Gets or sets the approximate arrival timestamp of the data stream. Declaration public DateTime ApproximateArrivalTimestamp { get; set; } Property Value Type Description DateTime | Edit this page View Source Body Gets or sets the body of the data stream. Declaration public T Body { get; set; } Property Value Type Description T | Edit this page View Source EventId Gets or sets the event identifier associated with the data stream. Declaration public string? EventId { get; set; } Property Value Type Description string | Edit this page View Source Partition Gets or sets the partition identifier of the data stream. Declaration public string? Partition { get; set; } Property Value Type Description string | Edit this page View Source PublishedAt Gets or sets the date and time when the data stream was published. Declaration public DateTimeOffset? PublishedAt { get; set; } Property Value Type Description DateTimeOffset? | Edit this page View Source TraceId Gets or sets the trace identifier associated with the data stream. Declaration public string? TraceId { get; set; } Property Value Type Description string | Edit this page View Source Version Gets or sets the version of the data stream. Declaration public string Version { get; set; } Property Value Type Description string Methods | Edit this page View Source Empty() Creates an empty data stream with no body. Declaration public static IEmptyDataStream Empty() Returns Type Description IEmptyDataStream An instance of an empty data stream. Implements IDataStream<T> IDataStream Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Streams.IDataStream-1.html": {
    "href": "api/Innovt.Domain.Core.Streams.IDataStream-1.html",
    "title": "Interface IDataStream<T> | Innovt Platform",
    "keywords": "Interface IDataStream<T> Represents a data stream with a specific body type. Inherited Members IDataStream.EventId IDataStream.Version IDataStream.Partition IDataStream.PublishedAt IDataStream.TraceId IDataStream.ApproximateArrivalTimestamp Namespace: Innovt.Domain.Core.Streams Assembly: Innovt.Domain.Core.dll Syntax public interface IDataStream<T> : IDataStream where T : class Type Parameters Name Description T The type of the body of the data stream. Properties | Edit this page View Source Body Gets or sets the body of the data stream. Declaration T Body { get; set; } Property Value Type Description T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Streams.IDataStream.html": {
    "href": "api/Innovt.Domain.Core.Streams.IDataStream.html",
    "title": "Interface IDataStream | Innovt Platform",
    "keywords": "Interface IDataStream Represents a data stream without a specific body type. Namespace: Innovt.Domain.Core.Streams Assembly: Innovt.Domain.Core.dll Syntax public interface IDataStream Properties | Edit this page View Source ApproximateArrivalTimestamp Gets or sets the approximate arrival timestamp of the data stream. Declaration DateTime ApproximateArrivalTimestamp { get; set; } Property Value Type Description DateTime | Edit this page View Source EventId Gets or sets the event identifier associated with the data stream. Declaration string? EventId { get; set; } Property Value Type Description string | Edit this page View Source Partition Gets or sets the partition identifier of the data stream. Declaration string? Partition { get; set; } Property Value Type Description string | Edit this page View Source PublishedAt Gets or sets the date and time when the data stream was published. Declaration DateTimeOffset? PublishedAt { get; set; } Property Value Type Description DateTimeOffset? | Edit this page View Source TraceId Gets or sets the trace identifier associated with the data stream. Declaration string? TraceId { get; set; } Property Value Type Description string | Edit this page View Source Version Gets or sets the version of the data stream. Declaration string Version { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Streams.IEmptyDataStream.html": {
    "href": "api/Innovt.Domain.Core.Streams.IEmptyDataStream.html",
    "title": "Interface IEmptyDataStream | Innovt Platform",
    "keywords": "Interface IEmptyDataStream Represents an empty data stream without a specific body type. Inherited Members IDataStream.EventId IDataStream.Version IDataStream.Partition IDataStream.PublishedAt IDataStream.TraceId IDataStream.ApproximateArrivalTimestamp Namespace: Innovt.Domain.Core.Streams Assembly: Innovt.Domain.Core.dll Syntax public interface IEmptyDataStream : IDataStream Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Core.Streams.html": {
    "href": "api/Innovt.Domain.Core.Streams.html",
    "title": "Namespace Innovt.Domain.Core.Streams | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Core.Streams Classes DataStream<T> Represents a data stream with a specific type of body. Interfaces IDataStream Represents a data stream without a specific body type. IDataStream<T> Represents a data stream with a specific body type. IEmptyDataStream Represents an empty data stream without a specific body type."
  },
  "api/Innovt.Domain.Documents.Document.html": {
    "href": "api/Innovt.Domain.Documents.Document.html",
    "title": "Class Document | Innovt Platform",
    "keywords": "Class Document Represents a document entity. Inheritance object ValueObject Document Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Documents Assembly: Innovt.Domain.dll Syntax public class Document : ValueObject Constructors | Edit this page View Source Document() Initializes a new instance of the Document class. Declaration public Document() | Edit this page View Source Document(string, int) Initializes a new instance of the Document class with the specified number and document type. Declaration public Document(string number, int documentTypeId) Parameters Type Name Description string number The document number. int documentTypeId The ID of the associated document type. Properties | Edit this page View Source DocumentType Gets or sets the document type associated with this document. Declaration public DocumentType DocumentType { get; set; } Property Value Type Description DocumentType | Edit this page View Source DocumentTypeId Gets or sets the ID of the document type associated with this document. Declaration public int DocumentTypeId { get; set; } Property Value Type Description int | Edit this page View Source Number Gets or sets the document number. Declaration public string Number { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Documents.DocumentType.html": {
    "href": "api/Innovt.Domain.Documents.DocumentType.html",
    "title": "Class DocumentType | Innovt Platform",
    "keywords": "Class DocumentType Represents a document type entity. Inheritance object ValueObject DocumentType Inherited Members ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Documents Assembly: Innovt.Domain.dll Syntax public class DocumentType : ValueObject Properties | Edit this page View Source Country Gets or sets the country associated with this document type. Declaration public Country Country { get; set; } Property Value Type Description Country | Edit this page View Source CountryId Gets or sets the ID of the country associated with this document type. Declaration public int CountryId { get; set; } Property Value Type Description int | Edit this page View Source Mask Gets or sets the mask for the document type. Declaration public string Mask { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the document type. Declaration public string Name { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Documents.html": {
    "href": "api/Innovt.Domain.Documents.html",
    "title": "Namespace Innovt.Domain.Documents | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Documents Classes Document Represents a document entity. DocumentType Represents a document type entity."
  },
  "api/Innovt.Domain.Security.AuthUser.html": {
    "href": "api/Innovt.Domain.Security.AuthUser.html",
    "title": "Class AuthUser | Innovt Platform",
    "keywords": "Class AuthUser Represents a user in the authentication system. Inheritance object Entity AuthUser Inherited Members Entity.CreatedAt Entity.UpdatedAt Entity.IsNew() Entity.SetAsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Security Assembly: Innovt.Domain.dll Syntax public class AuthUser : Entity Constructors | Edit this page View Source AuthUser() Initializes a new instance of the AuthUser class. Declaration public AuthUser() Properties | Edit this page View Source DomainId Gets or sets the domain ID associated with the user. Declaration public string DomainId { get; set; } Property Value Type Description string | Edit this page View Source Groups Gets or sets the groups associated with the user. Declaration public IList<Group> Groups { get; } Property Value Type Description IList<Group> | Edit this page View Source Id Gets or sets the user ID. Declaration public string Id { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Roles Gets or sets the roles associated with the user. Declaration public IList<Role> Roles { get; } Property Value Type Description IList<Role> Methods | Edit this page View Source AssignGroup(Group) Assigns a group to the user. Declaration public void AssignGroup(Group group) Parameters Type Name Description Group group The group to assign. | Edit this page View Source AssignRole(Role) Assigns a role to the user. Declaration public void AssignRole(Role role) Parameters Type Name Description Role role The role to assign. | Edit this page View Source UnAssignGroup(string) Unassigns a group from the user. Declaration public void UnAssignGroup(string groupName) Parameters Type Name Description string groupName The name of the group. | Edit this page View Source UnAssignRole(string, string) Unassigns a role from the user. Declaration public void UnAssignRole(string scope, string roleName) Parameters Type Name Description string scope The scope of the role. string roleName The name of the role. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Security.BasicAuthCredentials.html": {
    "href": "api/Innovt.Domain.Security.BasicAuthCredentials.html",
    "title": "Class BasicAuthCredentials | Innovt Platform",
    "keywords": "Class BasicAuthCredentials Represents basic authentication credentials consisting of a username and password. Inheritance object BasicAuthCredentials Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Security Assembly: Innovt.Domain.dll Syntax public class BasicAuthCredentials Properties | Edit this page View Source Password Gets or sets the password for basic authentication. Declaration public string Password { get; set; } Property Value Type Description string | Edit this page View Source Username Gets or sets the username for basic authentication. Declaration public string Username { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Security.Group.html": {
    "href": "api/Innovt.Domain.Security.Group.html",
    "title": "Class Group | Innovt Platform",
    "keywords": "Class Group Represents a group entity. Inheritance object Entity Entity<Guid> Group Inherited Members Entity<Guid>.Id Entity.CreatedAt Entity.UpdatedAt Entity.IsNew() Entity.SetAsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Security Assembly: Innovt.Domain.dll Syntax public class Group : Entity<Guid> Constructors | Edit this page View Source Group() Initializes a new instance of the Group class. Declaration public Group() Properties | Edit this page View Source Description Gets or sets the description of the group. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the group. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Roles Gets the list of roles associated with the group. Declaration public IList<Role> Roles { get; } Property Value Type Description IList<Role> Methods | Edit this page View Source AssignRole(Role) Assigns a role to the group. Declaration public void AssignRole(Role role) Parameters Type Name Description Role role The role to assign. | Edit this page View Source UnAssignRole(Role) Unassigns a role from the group. Declaration public void UnAssignRole(Role role) Parameters Type Name Description Role role The role to unassign. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Security.IAuthorizationRepository.html": {
    "href": "api/Innovt.Domain.Security.IAuthorizationRepository.html",
    "title": "Interface IAuthorizationRepository | Innovt Platform",
    "keywords": "Interface IAuthorizationRepository Represents a repository for authorization-related operations. Namespace: Innovt.Domain.Security Assembly: Innovt.Domain.dll Syntax public interface IAuthorizationRepository Methods | Edit this page View Source GetUserByExternalId(string, CancellationToken) Gets a user by their external identifier. Declaration Task<AuthUser> GetUserByExternalId(string externalId, CancellationToken cancellationToken = default) Parameters Type Name Description string externalId The external identifier of the user. CancellationToken cancellationToken A CancellationToken to observe the operation cancellation. Returns Type Description Task<AuthUser> A task that represents the asynchronous operation. The task result contains the AuthUser associated with the external identifier. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Security.Permission.html": {
    "href": "api/Innovt.Domain.Security.Permission.html",
    "title": "Class Permission | Innovt Platform",
    "keywords": "Class Permission Represents a permission entity. Inheritance object ValueObject ValueObject<Guid> Permission Inherited Members ValueObject<Guid>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Security Assembly: Innovt.Domain.dll Syntax public class Permission : ValueObject<Guid> Constructors | Edit this page View Source Permission() Initializes a new instance of the Permission class. Declaration public Permission() Properties | Edit this page View Source Name The custom name that you need to show to your customer. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Resource mean that you want to authorize the full path/domain Controller/* mean that you can authorize all actions Controller/Action mean that you want to authorize only this action Declaration public string Resource { get; set; } Property Value Type Description string | Edit this page View Source Scope Can be the area in your Controller Declaration public string Scope { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Security.Role.html": {
    "href": "api/Innovt.Domain.Security.Role.html",
    "title": "Class Role | Innovt Platform",
    "keywords": "Class Role Define a list of permissions that can be used Inheritance object Entity Entity<Guid> Role Inherited Members Entity<Guid>.Id Entity.CreatedAt Entity.UpdatedAt Entity.IsNew() Entity.SetAsNew() Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Security Assembly: Innovt.Domain.dll Syntax public class Role : Entity<Guid> Constructors | Edit this page View Source Role() Initializes a new instance of the Role class. Declaration public Role() Properties | Edit this page View Source Description Gets or sets the description of the role. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the role. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Permissions Gets or sets the list of permissions associated with the role. Declaration public IList<Permission> Permissions { get; set; } Property Value Type Description IList<Permission> | Edit this page View Source Scope Gets or sets the scope of the role. Declaration public string Scope { get; set; } Property Value Type Description string Methods | Edit this page View Source AssignPermission(Permission) Assigns a permission to the role. Declaration public void AssignPermission(Permission permission) Parameters Type Name Description Permission permission The permission to be assigned. | Edit this page View Source Equals(object) Determines whether the current Role instance is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if the specified object is equal to the current instance; otherwise, false. Overrides Entity.Equals(object?) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides Entity.GetHashCode() | Edit this page View Source RemovePermission(Guid) Removes a permission from the role by its identifier. Declaration public void RemovePermission(Guid permissionId) Parameters Type Name Description Guid permissionId The identifier of the permission to be removed. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Security.html": {
    "href": "api/Innovt.Domain.Security.html",
    "title": "Namespace Innovt.Domain.Security | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Security Classes AuthUser Represents a user in the authentication system. BasicAuthCredentials Represents basic authentication credentials consisting of a username and password. Group Represents a group entity. Permission Represents a permission entity. Role Define a list of permissions that can be used Interfaces IAuthorizationRepository Represents a repository for authorization-related operations."
  },
  "api/Innovt.Domain.Tracking.IRequestTrackingRepository.html": {
    "href": "api/Innovt.Domain.Tracking.IRequestTrackingRepository.html",
    "title": "Interface IRequestTrackingRepository | Innovt Platform",
    "keywords": "Interface IRequestTrackingRepository Interface for a repository responsible for request tracking operations. Namespace: Innovt.Domain.Tracking Assembly: Innovt.Domain.dll Syntax public interface IRequestTrackingRepository Methods | Edit this page View Source AddTracking(RequestTracking) Adds a request tracking record. Declaration Task AddTracking(RequestTracking tracking) Parameters Type Name Description RequestTracking tracking The request tracking object to be added. Returns Type Description Task A task representing the asynchronous operation. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Tracking.RequestTracking.html": {
    "href": "api/Innovt.Domain.Tracking.RequestTracking.html",
    "title": "Class RequestTracking | Innovt Platform",
    "keywords": "Class RequestTracking Represents a request tracking record for monitoring HTTP requests. Inheritance object ValueObject ValueObject<Guid> RequestTracking Inherited Members ValueObject<Guid>.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Tracking Assembly: Innovt.Domain.dll Syntax public class RequestTracking : ValueObject<Guid> Constructors | Edit this page View Source RequestTracking() Initializes a new instance of the RequestTracking class. Declaration public RequestTracking() Properties | Edit this page View Source Action Gets or sets the action associated with the request. Declaration public string Action { get; set; } Property Value Type Description string | Edit this page View Source Area Gets or sets the area associated with the request. Declaration public string Area { get; set; } Property Value Type Description string | Edit this page View Source Controller Gets or sets the controller associated with the request. Declaration public string Controller { get; set; } Property Value Type Description string | Edit this page View Source Host Gets or sets the host associated with the request. Declaration public string Host { get; set; } Property Value Type Description string | Edit this page View Source ResponseStatusCode Gets or sets the HTTP response status code. Declaration public int? ResponseStatusCode { get; set; } Property Value Type Description int? | Edit this page View Source UserId Gets or sets the user ID associated with the request. Declaration public string UserId { get; set; } Property Value Type Description string | Edit this page View Source Verb Gets or sets the HTTP verb used in the request. Declaration public string Verb { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Tracking.html": {
    "href": "api/Innovt.Domain.Tracking.html",
    "title": "Namespace Innovt.Domain.Tracking | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Tracking Classes RequestTracking Represents a request tracking record for monitoring HTTP requests. Interfaces IRequestTrackingRepository Interface for a repository responsible for request tracking operations."
  },
  "api/Innovt.Domain.Users.BaseUser.html": {
    "href": "api/Innovt.Domain.Users.BaseUser.html",
    "title": "Class BaseUser | Innovt Platform",
    "keywords": "Class BaseUser Represents a base user entity. Inheritance object Entity BaseUser Inherited Members Entity.Id Entity.CreatedAt Entity.UpdatedAt Entity.IsNew() Entity.SetAsNew() Entity.GetHashCode() Entity.Equals(object) Entity.AddDomainEvent(DomainEvent) Entity.GetDomainEvents() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Users Assembly: Innovt.Domain.dll Syntax public class BaseUser : Entity Properties | Edit this page View Source Email Gets or sets the email address of the user. Declaration public virtual string Email { get; set; } Property Value Type Description string | Edit this page View Source FirstName Gets or sets the first name of the user. Declaration public virtual string FirstName { get; set; } Property Value Type Description string | Edit this page View Source IsActive Gets or sets a value indicating whether the user is active. Declaration public virtual bool IsActive { get; set; } Property Value Type Description bool | Edit this page View Source LastAccess Gets or sets the last access timestamp for the user. Declaration public DateTimeOffset? LastAccess { get; set; } Property Value Type Description DateTimeOffset? | Edit this page View Source LastName Gets or sets the last name of the user. Declaration public virtual string LastName { get; set; } Property Value Type Description string | Edit this page View Source Name Gets the full name of the user by combining the first and last names. Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source Password Gets or sets the password associated with the user. Declaration public virtual string Password { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Users.Gender.html": {
    "href": "api/Innovt.Domain.Users.Gender.html",
    "title": "Class Gender | Innovt Platform",
    "keywords": "Class Gender Represents a gender domain model. Inheritance object ValueObject DomainModel<Gender> Gender Inherited Members DomainModel<Gender>.AddModel(Gender) DomainModel<Gender>.FindAll() DomainModel<Gender>.GetByPk(int) ValueObject.Id ValueObject.Equals(object) ValueObject.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Domain.Users Assembly: Innovt.Domain.dll Syntax public class Gender : DomainModel<Gender> Constructors | Edit this page View Source Gender() Initializes a new instance of the Gender class. Declaration public Gender() | Edit this page View Source Gender(int, char, string) Initializes a new instance of the Gender class with the specified parameters. Declaration public Gender(int id, char acronym, string description) Parameters Type Name Description int id The unique identifier for the gender. char acronym The acronym representing the gender. string description The description of the gender. Fields | Edit this page View Source Female Declaration public static Gender Female Field Value Type Description Gender | Edit this page View Source Male Declaration public static Gender Male Field Value Type Description Gender Properties | Edit this page View Source Acronym Gets or sets the acronym representing the gender. Declaration public char Acronym { get; set; } Property Value Type Description char | Edit this page View Source Description Gets or sets the description of the gender. Declaration public string Description { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Domain.Users.html": {
    "href": "api/Innovt.Domain.Users.html",
    "title": "Namespace Innovt.Domain.Users | Innovt Platform",
    "keywords": "Namespace Innovt.Domain.Users Classes BaseUser Represents a base user entity. Gender Represents a gender domain model."
  },
  "api/Innovt.Domain.html": {
    "href": "api/Innovt.Domain.html",
    "title": "Namespace Innovt.Domain | Innovt Platform",
    "keywords": "Namespace Innovt.Domain Classes BaseCreditCard Represents a base credit card information."
  },
  "api/Innovt.HttpClient.Core.ApiContext.html": {
    "href": "api/Innovt.HttpClient.Core.ApiContext.html",
    "title": "Class ApiContext | Innovt Platform",
    "keywords": "Class ApiContext Represents the context for interacting with an API. Inheritance object ApiContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.HttpClient.Core Assembly: Innovt.HttpClient.Core.dll Syntax public sealed class ApiContext Constructors | Edit this page View Source ApiContext(IEnvironment) Initializes a new instance of the ApiContext class. Declaration public ApiContext(IEnvironment environment) Parameters Type Name Description IEnvironment environment The environment associated with the API context. Exceptions Type Condition ArgumentNullException Thrown when environment is null. | Edit this page View Source ApiContext(IEnvironment, BasicCredential) Initializes a new instance of the ApiContext class with basic credentials. Declaration public ApiContext(IEnvironment environment, BasicCredential credential) Parameters Type Name Description IEnvironment environment The environment associated with the API context. BasicCredential credential The basic credential. Exceptions Type Condition ArgumentNullException Thrown when environment or credential is null. | Edit this page View Source ApiContext(IEnvironment, string) Initializes a new instance of the ApiContext class with an access token. Declaration public ApiContext(IEnvironment environment, string accessToken) Parameters Type Name Description IEnvironment environment The environment associated with the API context. string accessToken The access token. Exceptions Type Condition ArgumentNullException Thrown when environment or accessToken is null. Properties | Edit this page View Source AccessToken Gets or sets the access token associated with the API context. Declaration public string AccessToken { get; set; } Property Value Type Description string | Edit this page View Source Credential Gets or sets the basic credential associated with the API context. Declaration public BasicCredential Credential { get; set; } Property Value Type Description BasicCredential | Edit this page View Source Environment Gets or sets the environment associated with the API context. Declaration public IEnvironment Environment { get; set; } Property Value Type Description IEnvironment | Edit this page View Source ExpireIn Gets or sets the expiration time in seconds for the access token associated with the API context. Declaration public int ExpireIn { get; set; } Property Value Type Description int | Edit this page View Source TokenType Gets or sets the token type associated with the API context. Declaration public string TokenType { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.HttpClient.Core.ApiException-1.html": {
    "href": "api/Innovt.HttpClient.Core.ApiException-1.html",
    "title": "Class ApiException<T> | Innovt Platform",
    "keywords": "Class ApiException<T> Represents an exception specific to API operations, carrying an error response of type T. Inheritance object Exception ApiException<T> Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Innovt.HttpClient.Core Assembly: Innovt.HttpClient.Core.dll Syntax public class ApiException<T> : Exception, ISerializable Type Parameters Name Description T The type of the error response associated with the exception. Constructors | Edit this page View Source ApiException(T) Initializes a new instance of the ApiException<T> class with the specified error response. Declaration public ApiException(T errorResponse) Parameters Type Name Description T errorResponse The error response associated with the exception. Properties | Edit this page View Source ErrorResponse Gets or sets the error response associated with the API exception. Declaration public T ErrorResponse { get; set; } Property Value Type Description T Implements ISerializable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.HttpClient.Core.Authentication.OAuthClient.html": {
    "href": "api/Innovt.HttpClient.Core.Authentication.OAuthClient.html",
    "title": "Class OAuthClient | Innovt Platform",
    "keywords": "Class OAuthClient Provides methods for authenticating using OAuth client credentials flow. Inheritance object OAuthClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.HttpClient.Core.Authentication Assembly: Innovt.HttpClient.Core.dll Syntax public static class OAuthClient Methods | Edit this page View Source Authenticate(string, string, string, CancellationToken) Authenticates using the OAuth client credentials flow. Declaration public static Task<OAuthResponse> Authenticate(string authUri, string clientId, string clientSecret, CancellationToken cancellationToken = default) Parameters Type Name Description string authUri The OAuth authorization URI. string clientId The client ID for authentication. string clientSecret The client secret for authentication. CancellationToken cancellationToken Cancellation token to cancel the operation. Returns Type Description Task<OAuthResponse> An OAuthResponse containing authentication details. Exceptions Type Condition ArgumentNullException Thrown when clientId or clientSecret is null or empty. HttpRequestException Thrown if the HTTP request to the authentication URI fails."
  },
  "api/Innovt.HttpClient.Core.Authentication.OAuthResponse.html": {
    "href": "api/Innovt.HttpClient.Core.Authentication.OAuthResponse.html",
    "title": "Class OAuthResponse | Innovt Platform",
    "keywords": "Class OAuthResponse Represents the response from an OAuth authentication request. Inheritance object OAuthResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.HttpClient.Core.Authentication Assembly: Innovt.HttpClient.Core.dll Syntax public class OAuthResponse Properties | Edit this page View Source AccessToken Gets or sets the access token obtained from the authentication. Declaration public string AccessToken { get; set; } Property Value Type Description string | Edit this page View Source ExpiresIn Gets or sets the duration in seconds for which the access token is valid. Declaration public int ExpiresIn { get; set; } Property Value Type Description int | Edit this page View Source Scope Gets or sets the scope of the access token. Declaration public string Scope { get; set; } Property Value Type Description string | Edit this page View Source TokenType Gets or sets the token type. Declaration public string TokenType { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.HttpClient.Core.Authentication.html": {
    "href": "api/Innovt.HttpClient.Core.Authentication.html",
    "title": "Namespace Innovt.HttpClient.Core.Authentication | Innovt Platform",
    "keywords": "Namespace Innovt.HttpClient.Core.Authentication Classes OAuthClient Provides methods for authenticating using OAuth client credentials flow. OAuthResponse Represents the response from an OAuth authentication request."
  },
  "api/Innovt.HttpClient.Core.BaseApiClient-1.html": {
    "href": "api/Innovt.HttpClient.Core.BaseApiClient-1.html",
    "title": "Class BaseApiClient<TErrorResponse> | Innovt Platform",
    "keywords": "Class BaseApiClient<TErrorResponse> Abstract base class for API clients, providing common functionality for sending HTTP requests and handling responses. Inheritance object BaseApiClient BaseApiClient<TErrorResponse> Inherited Members BaseApiClient.ApiContext BaseApiClient.Serializer BaseApiClient.CreateHttpClient() BaseApiClient.PostAsync<T>(Uri, string, HttpContent, CancellationToken) BaseApiClient.PostAsync(Uri, string, HttpContent, CancellationToken) BaseApiClient.PutAsync<T>(Uri, string, HttpContent, Dictionary<string, string>, CancellationToken) BaseApiClient.PutAsync<T>(Uri, string, HttpContent, CancellationToken) BaseApiClient.GetAsync<T>(Uri, string, CancellationToken) BaseApiClient.GetStreamAsync(Uri, string, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.HttpClient.Core Assembly: Innovt.HttpClient.Core.dll Syntax public abstract class BaseApiClient<TErrorResponse> : BaseApiClient where TErrorResponse : class Type Parameters Name Description TErrorResponse Type representing the error response in case of non-successful HTTP requests. Constructors | Edit this page View Source BaseApiClient(ApiContext, ISerializer) Initializes a new instance of the BaseApiClient<TErrorResponse> class. Declaration protected BaseApiClient(ApiContext apiContext, ISerializer serializer) Parameters Type Name Description ApiContext apiContext The API context containing necessary information like access token and token type. ISerializer serializer The serializer used to deserialize response data. | Edit this page View Source BaseApiClient(ApiContext, IHttpClientFactory, ISerializer) Initializes a new instance of the BaseApiClient<TErrorResponse> class. Declaration protected BaseApiClient(ApiContext apiContext, IHttpClientFactory httpClientFactory, ISerializer serializer) Parameters Type Name Description ApiContext apiContext The API context containing necessary information like access token and token type. IHttpClientFactory httpClientFactory The factory for creating HTTP clients. ISerializer serializer The serializer used to deserialize response data. Methods | Edit this page View Source ParseResponse<T>(HttpResponseMessage) Parses the HTTP response message and handles success or error based on the status code. Declaration protected override Task<T> ParseResponse<T>(HttpResponseMessage response) Parameters Type Name Description HttpResponseMessage response The HTTP response message to parse. Returns Type Description Task<T> The deserialized success response. Type Parameters Name Description T Type representing the success response. Overrides BaseApiClient.ParseResponse<T>(HttpResponseMessage) | Edit this page View Source ParseStreamResponse(HttpResponseMessage) Parses the HTTP response message and handles success or error based on the status code, returning the response as a stream. Declaration protected override Task<Stream> ParseStreamResponse(HttpResponseMessage response) Parameters Type Name Description HttpResponseMessage response The HTTP response message to parse. Returns Type Description Task<Stream> A stream representing the response data. Overrides BaseApiClient.ParseStreamResponse(HttpResponseMessage) Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.HttpClient.Core.BaseApiClient.html": {
    "href": "api/Innovt.HttpClient.Core.BaseApiClient.html",
    "title": "Class BaseApiClient | Innovt Platform",
    "keywords": "Class BaseApiClient Base abstract class for an API client. Inheritance object BaseApiClient BaseApiClient<TErrorResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.HttpClient.Core Assembly: Innovt.HttpClient.Core.dll Syntax public abstract class BaseApiClient Constructors | Edit this page View Source BaseApiClient(ApiContext, ISerializer) Initializes a new instance of the BaseApiClient class. Declaration protected BaseApiClient(ApiContext apiContext, ISerializer serializer) Parameters Type Name Description ApiContext apiContext The API context associated with this client. ISerializer serializer The serializer used for data serialization and deserialization. | Edit this page View Source BaseApiClient(ApiContext, IHttpClientFactory, ISerializer) This method sends a POST request to the API. Declaration protected BaseApiClient(ApiContext apiContext, IHttpClientFactory httpClientFactory, ISerializer serializer) Parameters Type Name Description ApiContext apiContext IHttpClientFactory httpClientFactory ISerializer serializer Exceptions Type Condition ArgumentNullException Properties | Edit this page View Source ApiContext Gets the API context associated with this client. Declaration protected ApiContext ApiContext { get; } Property Value Type Description ApiContext | Edit this page View Source Serializer Gets the serializer used for serializing and deserializing data. Declaration protected ISerializer Serializer { get; } Property Value Type Description ISerializer Methods | Edit this page View Source CreateHttpClient() Creates a new instance of HttpClient. Declaration protected virtual HttpClient CreateHttpClient() Returns Type Description HttpClient The created HttpClient. | Edit this page View Source GetAsync<T>(Uri, string, CancellationToken) Asynchronously sends an HTTP GET request to the specified URI with optional headers and deserializes the response to a strongly typed object of type T. Declaration protected Task<T> GetAsync<T>(Uri baseUri, string resourceUri, CancellationToken cancellationToken = default) Parameters Type Name Description Uri baseUri The base URI for the request. string resourceUri The resource URI to append to the base URI. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<T> The strongly typed object of type T representing the response data. Type Parameters Name Description T | Edit this page View Source GetStreamAsync(Uri, string, CancellationToken) Asynchronously sends an HTTP GET request to the specified URI with optional headers and returns the response as a stream. Declaration protected Task<Stream> GetStreamAsync(Uri baseUri, string resourceUri, CancellationToken cancellationToken = default) Parameters Type Name Description Uri baseUri The base URI for the request. string resourceUri The resource URI to append to the base URI. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<Stream> A stream representing the response data. | Edit this page View Source ParseResponse<T>(HttpResponseMessage) Parses the HTTP response into a strongly-typed object. Declaration protected virtual Task<T> ParseResponse<T>(HttpResponseMessage response) Parameters Type Name Description HttpResponseMessage response The HTTP response message. Returns Type Description Task<T> The parsed object of type T. Type Parameters Name Description T The type of the object to parse into. | Edit this page View Source ParseStreamResponse(HttpResponseMessage) Parses the HTTP response into a stream. Declaration protected virtual Task<Stream> ParseStreamResponse(HttpResponseMessage response) Parameters Type Name Description HttpResponseMessage response The HTTP response message. Returns Type Description Task<Stream> The response stream. | Edit this page View Source PostAsync(Uri, string, HttpContent, CancellationToken) Asynchronously sends an HTTP POST request to the specified URI with content and optional headers. Declaration protected Task<HttpStatusCode> PostAsync(Uri baseUri, string resourceUri, HttpContent content, CancellationToken cancellationToken = default) Parameters Type Name Description Uri baseUri The base URI for the request. string resourceUri The resource URI to append to the base URI. HttpContent content The HTTP content to send in the request body. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<HttpStatusCode> The HTTP status code of the response. | Edit this page View Source PostAsync<T>(Uri, string, HttpContent, CancellationToken) Asynchronously sends an HTTP POST request to the specified URI with optional headers and content, and deserializes the response to a strongly typed object of type T. Declaration protected Task<T> PostAsync<T>(Uri baseUri, string resourceUri, HttpContent content, CancellationToken cancellationToken = default) Parameters Type Name Description Uri baseUri The base URI for the request. string resourceUri The resource URI to append to the base URI. HttpContent content The HTTP content to send in the request body. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<T> The strongly typed object of type T representing the response data. Type Parameters Name Description T | Edit this page View Source PutAsync<T>(Uri, string, HttpContent, Dictionary<string, string>, CancellationToken) Asynchronously sends an HTTP PUT request to the specified URI with optional headers and content, and deserializes the response to a strongly typed object of type T. Declaration protected Task<T> PutAsync<T>(Uri baseUri, string resourceUri, HttpContent content, Dictionary<string, string> headerValues = null, CancellationToken cancellationToken = default) Parameters Type Name Description Uri baseUri The base URI for the request. string resourceUri The resource URI to append to the base URI. HttpContent content The HTTP content to send in the request body. Dictionary<string, string> headerValues Optional headers to include in the request. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<T> The strongly typed object of type T representing the response data. Type Parameters Name Description T | Edit this page View Source PutAsync<T>(Uri, string, HttpContent, CancellationToken) Asynchronously sends an HTTP PUT request to the specified URI with optional headers and content, and deserializes the response to a strongly typed object of type T. Declaration protected Task<T> PutAsync<T>(Uri baseUri, string resourceUri, HttpContent content, CancellationToken cancellationToken = default) Parameters Type Name Description Uri baseUri The base URI for the request. string resourceUri The resource URI to append to the base URI. HttpContent content The HTTP content to send in the request body. CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task<T> The strongly typed object of type T representing the response data. Type Parameters Name Description T Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.HttpClient.Core.BaseConstants.html": {
    "href": "api/Innovt.HttpClient.Core.BaseConstants.html",
    "title": "Class BaseConstants | Innovt Platform",
    "keywords": "Class BaseConstants Inheritance object BaseConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.HttpClient.Core Assembly: Innovt.HttpClient.Core.dll Syntax public static class BaseConstants Fields | Edit this page View Source AuthorizationHeader Represents the authorization header. Declaration public const string AuthorizationHeader = \"Authorization\" Field Value Type Description string | Edit this page View Source ContentTypeApplicationJson Represents the content type for application/json. Declaration public const string ContentTypeApplicationJson = \"application/json\" Field Value Type Description string | Edit this page View Source ContentTypeHeaderFormUrlEncoded Represents the content type for application/x-www-form-urlencoded. Declaration public const string ContentTypeHeaderFormUrlEncoded = \"application/x-www-form-urlencoded\" Field Value Type Description string"
  },
  "api/Innovt.HttpClient.Core.BasicCredential.html": {
    "href": "api/Innovt.HttpClient.Core.BasicCredential.html",
    "title": "Class BasicCredential | Innovt Platform",
    "keywords": "Class BasicCredential Represents basic credentials for authentication. Inheritance object BasicCredential Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.HttpClient.Core Assembly: Innovt.HttpClient.Core.dll Syntax public class BasicCredential Constructors | Edit this page View Source BasicCredential(string, string) Initializes a new instance of the BasicCredential class with the provided access key ID and access key. Declaration public BasicCredential(string accessKeyId, string accessKey) Parameters Type Name Description string accessKeyId The access key ID. string accessKey The access key. Properties | Edit this page View Source AccessKey Gets or sets the access key. Declaration public string AccessKey { get; set; } Property Value Type Description string | Edit this page View Source AccessKeyId Gets or sets the access key ID. Declaration public string AccessKeyId { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.HttpClient.Core.IEnvironment.html": {
    "href": "api/Innovt.HttpClient.Core.IEnvironment.html",
    "title": "Interface IEnvironment | Innovt Platform",
    "keywords": "Interface IEnvironment Interface representing environment configurations. Namespace: Innovt.HttpClient.Core Assembly: Innovt.HttpClient.Core.dll Syntax public interface IEnvironment Properties | Edit this page View Source QueryUri Gets the URI for queries. Declaration Uri QueryUri { get; } Property Value Type Description Uri | Edit this page View Source TransactionUri Gets the URI for transactions. Declaration Uri TransactionUri { get; } Property Value Type Description Uri Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.HttpClient.Core.html": {
    "href": "api/Innovt.HttpClient.Core.html",
    "title": "Namespace Innovt.HttpClient.Core | Innovt Platform",
    "keywords": "Namespace Innovt.HttpClient.Core Classes ApiContext Represents the context for interacting with an API. ApiException<T> Represents an exception specific to API operations, carrying an error response of type T. BaseApiClient Base abstract class for an API client. BaseApiClient<TErrorResponse> Abstract base class for API clients, providing common functionality for sending HTTP requests and handling responses. BaseConstants BasicCredential Represents basic credentials for authentication. Interfaces IEnvironment Interface representing environment configurations."
  },
  "api/Innovt.Job.Core.JobBase.html": {
    "href": "api/Innovt.Job.Core.JobBase.html",
    "title": "Class JobBase | Innovt Platform",
    "keywords": "Class JobBase Abstract base class for job implementations, providing common functionality for job management. Inheritance object JobBase QuartzJobBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Job.Core Assembly: Innovt.Job.Core.dll Syntax public abstract class JobBase Constructors | Edit this page View Source JobBase(string, ILogger, double) Initializes a new instance of the JobBase class. Declaration protected JobBase(string jobName, ILogger logger, double heartBeatIntervalInMiliSeconds) Parameters Type Name Description string jobName The name of the job. ILogger logger The logger to use for logging. double heartBeatIntervalInMiliSeconds The interval for the heartbeat in milliseconds. Fields | Edit this page View Source Logger Declaration protected readonly ILogger Logger Field Value Type Description ILogger Properties | Edit this page View Source Name Gets or sets the name of the job. Declaration public string Name { get; set; } Property Value Type Description string Methods | Edit this page View Source OnHeartBeat() Event handler for the heartbeat. Declaration protected virtual void OnHeartBeat() | Edit this page View Source OnStart(CancellationToken) Executes when the job is started. Declaration protected abstract Task OnStart(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source OnStop(CancellationToken) Executes when the job is stopped. Declaration protected abstract Task OnStop(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source Start() Starts the job. Declaration public Task Start() Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source Stop() Stops the job. Declaration public Task Stop() Returns Type Description Task A task representing the asynchronous operation. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Job.Core.JobEntry.html": {
    "href": "api/Innovt.Job.Core.JobEntry.html",
    "title": "Class JobEntry | Innovt Platform",
    "keywords": "Class JobEntry Abstract base class for job entry implementations, providing common functionality for setting up and running jobs. Inheritance object JobEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Job.Core Assembly: Innovt.Job.Core.dll Syntax public abstract class JobEntry Constructors | Edit this page View Source JobEntry(string[], string) Initializes a new instance of the JobEntry class. Declaration protected JobEntry(string[] args, string jobName) Parameters Type Name Description string[] args The command-line arguments. string jobName The name of the job. Properties | Edit this page View Source Configuration Gets or sets the configuration. Declaration public IConfiguration Configuration { get; protected set; } Property Value Type Description IConfiguration | Edit this page View Source JobName Gets the name of the job. Declaration public string JobName { get; } Property Value Type Description string Methods | Edit this page View Source CreateIocContainer() Creates the IoC container. Declaration protected abstract IContainer CreateIocContainer() Returns Type Description IContainer The IoC container. | Edit this page View Source CreateJob() Creates the job instance. Declaration protected abstract JobBase CreateJob() Returns Type Description JobBase The job instance. | Edit this page View Source Run() Runs the job. Declaration public void Run() | Edit this page View Source SetupConfiguration() Sets up the configuration using appsettings.json. Declaration protected virtual void SetupConfiguration() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Job.Core.html": {
    "href": "api/Innovt.Job.Core.html",
    "title": "Namespace Innovt.Job.Core | Innovt Platform",
    "keywords": "Namespace Innovt.Job.Core Classes JobBase Abstract base class for job implementations, providing common functionality for job management. JobEntry Abstract base class for job entry implementations, providing common functionality for setting up and running jobs."
  },
  "api/Innovt.Job.Quartz.QuartzJobBase.html": {
    "href": "api/Innovt.Job.Quartz.QuartzJobBase.html",
    "title": "Class QuartzJobBase | Innovt Platform",
    "keywords": "Class QuartzJobBase Abstract base class for Quartz job implementations, providing common functionality for scheduling and executing jobs using Quartz framework. Inheritance object JobBase QuartzJobBase Implements IJob Inherited Members JobBase.Logger JobBase.Name JobBase.OnHeartBeat() JobBase.Start() JobBase.Stop() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Job.Quartz Assembly: Innovt.Job.Quartz.dll Syntax public abstract class QuartzJobBase : JobBase, IJob Constructors | Edit this page View Source QuartzJobBase(string, double, ILogger, IScheduler, int) Initializes a new instance of the QuartzJobBase class. Declaration protected QuartzJobBase(string name, double heartBeatInterval, ILogger logger, IScheduler scheduler, int intervalInMinutes) Parameters Type Name Description string name The name of the job. double heartBeatInterval The interval for the heartbeat in milliseconds. ILogger logger The logger to use for logging. IScheduler scheduler The Quartz scheduler instance. int intervalInMinutes The interval in minutes for job execution. Methods | Edit this page View Source Execute(IJobExecutionContext) Executes the Quartz job. Declaration public Task Execute(IJobExecutionContext context) Parameters Type Name Description IJobExecutionContext context The Quartz job execution context. Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source OnExecute() Executes the Quartz job logic. Declaration protected abstract Task OnExecute() Returns Type Description Task A task representing the asynchronous operation. | Edit this page View Source OnStart(CancellationToken) Executes when the job is started. Declaration protected override Task OnStart(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task A task representing the asynchronous operation. Overrides JobBase.OnStart(CancellationToken) | Edit this page View Source OnStop(CancellationToken) Executes when the job is stopped. Declaration protected override Task OnStop(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task A task representing the asynchronous operation. Overrides JobBase.OnStop(CancellationToken) | Edit this page View Source Schedule(CancellationToken) Schedules the Quartz job for execution. Declaration public virtual Task Schedule(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken A cancellation token to cancel the operation. Returns Type Description Task A task representing the asynchronous operation. Implements Quartz.IJob Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Job.Quartz.html": {
    "href": "api/Innovt.Job.Quartz.html",
    "title": "Namespace Innovt.Job.Quartz | Innovt Platform",
    "keywords": "Namespace Innovt.Job.Quartz Classes QuartzJobBase Abstract base class for Quartz job implementations, providing common functionality for scheduling and executing jobs using Quartz framework."
  },
  "api/Innovt.Notification.Core.Builders.DefaultMessageBuilder.html": {
    "href": "api/Innovt.Notification.Core.Builders.DefaultMessageBuilder.html",
    "title": "Class DefaultMessageBuilder | Innovt Platform",
    "keywords": "Class DefaultMessageBuilder Default implementation of the message builder interface. Inheritance object DefaultMessageBuilder Implements IMessageBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Builders Assembly: Innovt.Notification.Core.dll Syntax public class DefaultMessageBuilder : IMessageBuilder Constructors | Edit this page View Source DefaultMessageBuilder(ITemplateParser) Default constructor using a template parser(optional) Declaration public DefaultMessageBuilder(ITemplateParser parser = null) Parameters Type Name Description ITemplateParser parser Methods | Edit this page View Source Build(NotificationTemplate, NotificationRequest) This method will build the message and parse the result of each content Declaration public NotificationMessage Build(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters Type Name Description NotificationTemplate notificationTemplate NotificationRequest request Returns Type Description NotificationMessage | Edit this page View Source BuildBccTo(NotificationTemplate, NotificationRequest) Builds the Bcc recipient list for the notification message. Declaration protected virtual List<NotificationMessageContact> BuildBccTo(NotificationTemplate template, NotificationRequest request) Parameters Type Name Description NotificationTemplate template NotificationRequest request Returns Type Description List<NotificationMessageContact> | Edit this page View Source BuildBody(NotificationTemplate, NotificationRequest) Builds the body for the notification message. Declaration protected virtual NotificationMessageBody BuildBody(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters Type Name Description NotificationTemplate notificationTemplate NotificationRequest request Returns Type Description NotificationMessageBody | Edit this page View Source BuildCcTo(NotificationTemplate, NotificationRequest) Builds the Cc recipient list for the notification message. Declaration protected virtual List<NotificationMessageContact> BuildCcTo(NotificationTemplate template, NotificationRequest request) Parameters Type Name Description NotificationTemplate template NotificationRequest request Returns Type Description List<NotificationMessageContact> | Edit this page View Source BuildFrom(NotificationTemplate, NotificationRequest) Builds the sender for the notification message. Declaration protected virtual NotificationMessageContact BuildFrom(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters Type Name Description NotificationTemplate notificationTemplate NotificationRequest request Returns Type Description NotificationMessageContact | Edit this page View Source BuildReplyTo(NotificationTemplate, NotificationRequest) Builds the Reply-To recipient list for the notification message. Declaration protected virtual List<NotificationMessageContact> BuildReplyTo(NotificationTemplate template, NotificationRequest request) Parameters Type Name Description NotificationTemplate template NotificationRequest request Returns Type Description List<NotificationMessageContact> | Edit this page View Source BuildSubject(NotificationTemplate, NotificationRequest) Builds the subject for the notification message. Declaration protected virtual NotificationMessageSubject BuildSubject(NotificationTemplate template, NotificationRequest request) Parameters Type Name Description NotificationTemplate template NotificationRequest request Returns Type Description NotificationMessageSubject | Edit this page View Source BuildTo(NotificationTemplate, NotificationRequest) Builds the recipient list for the notification message. Declaration protected virtual List<NotificationMessageContact> BuildTo(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters Type Name Description NotificationTemplate notificationTemplate NotificationRequest request Returns Type Description List<NotificationMessageContact> | Edit this page View Source ParseMessage(NotificationMessage, object) Parses the notification message content using the provided payload. Declaration protected virtual void ParseMessage(NotificationMessage notificationMessage, object payLoad) Parameters Type Name Description NotificationMessage notificationMessage object payLoad Implements IMessageBuilder Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Builders.DefaultMessageBuilderFactory.html": {
    "href": "api/Innovt.Notification.Core.Builders.DefaultMessageBuilderFactory.html",
    "title": "Class DefaultMessageBuilderFactory | Innovt Platform",
    "keywords": "Class DefaultMessageBuilderFactory Default implementation of the message builder factory interface. Inheritance object DefaultMessageBuilderFactory Implements IMessageBuilderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Builders Assembly: Innovt.Notification.Core.dll Syntax public class DefaultMessageBuilderFactory : IMessageBuilderFactory Constructors | Edit this page View Source DefaultMessageBuilderFactory(ITemplateParser) Initializes a new instance of the DefaultMessageBuilderFactory class. Declaration public DefaultMessageBuilderFactory(ITemplateParser templateParser) Parameters Type Name Description ITemplateParser templateParser The template parser. Methods | Edit this page View Source Create(string) You can use your IOC Container to do It based in Names Declaration public IMessageBuilder Create(string builderName) Parameters Type Name Description string builderName Returns Type Description IMessageBuilder Implements IMessageBuilderFactory Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Builders.IMessageBuilder.html": {
    "href": "api/Innovt.Notification.Core.Builders.IMessageBuilder.html",
    "title": "Interface IMessageBuilder | Innovt Platform",
    "keywords": "Interface IMessageBuilder Interface for message builders. Namespace: Innovt.Notification.Core.Builders Assembly: Innovt.Notification.Core.dll Syntax public interface IMessageBuilder Methods | Edit this page View Source Build(NotificationTemplate, NotificationRequest) Builds a notification message based on the provided notification template and request. Declaration NotificationMessage Build(NotificationTemplate notificationTemplate, NotificationRequest request) Parameters Type Name Description NotificationTemplate notificationTemplate The notification template. NotificationRequest request The notification request. Returns Type Description NotificationMessage The built notification message. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Builders.IMessageBuilderFactory.html": {
    "href": "api/Innovt.Notification.Core.Builders.IMessageBuilderFactory.html",
    "title": "Interface IMessageBuilderFactory | Innovt Platform",
    "keywords": "Interface IMessageBuilderFactory Interface for message builder factories. Namespace: Innovt.Notification.Core.Builders Assembly: Innovt.Notification.Core.dll Syntax public interface IMessageBuilderFactory Methods | Edit this page View Source Create(string) Creates an instance of a message builder based on the provided builder name. Declaration IMessageBuilder Create(string builderName) Parameters Type Name Description string builderName The name of the builder. Returns Type Description IMessageBuilder The message builder instance. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Builders.MessageBuilderAB.html": {
    "href": "api/Innovt.Notification.Core.Builders.MessageBuilderAB.html",
    "title": "Class MessageBuilderAB | Innovt Platform",
    "keywords": "Class MessageBuilderAB Abstract base class for message builders. Inheritance object MessageBuilderAB Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Builders Assembly: Innovt.Notification.Core.dll Syntax public abstract class MessageBuilderAB Constructors | Edit this page View Source MessageBuilderAB(ITemplateParser) Initializes a new instance of the MessageBuilderAB class. Declaration protected MessageBuilderAB(ITemplateParser parser) Parameters Type Name Description ITemplateParser parser The template parser. Methods | Edit this page View Source Build(NotificationTemplate, NotificationRequest) Builds a notification message based on the provided notification template and request. Declaration public virtual NotificationMessage Build(NotificationTemplate template, NotificationRequest request) Parameters Type Name Description NotificationTemplate template The notification template. NotificationRequest request The notification request. Returns Type Description NotificationMessage The built notification message. | Edit this page View Source ParseMessage(NotificationMessage, object) Parses the notification message content using the provided payload. Declaration protected virtual void ParseMessage(NotificationMessage message, object payLoad) Parameters Type Name Description NotificationMessage message object payLoad Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Builders.html": {
    "href": "api/Innovt.Notification.Core.Builders.html",
    "title": "Namespace Innovt.Notification.Core.Builders | Innovt Platform",
    "keywords": "Namespace Innovt.Notification.Core.Builders Classes DefaultMessageBuilder Default implementation of the message builder interface. DefaultMessageBuilderFactory Default implementation of the message builder factory interface. MessageBuilderAB Abstract base class for message builders. Interfaces IMessageBuilder Interface for message builders. IMessageBuilderFactory Interface for message builder factories."
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessage.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessage.html",
    "title": "Class NotificationMessage | Innovt Platform",
    "keywords": "Class NotificationMessage Represents a notification message. Inheritance object NotificationMessage Implements IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Domain Assembly: Innovt.Notification.Core.dll Syntax public class NotificationMessage : IValidatableObject Constructors | Edit this page View Source NotificationMessage(NotificationMessageType) Initializes a new instance of the NotificationMessage class with the specified type. Declaration public NotificationMessage(NotificationMessageType type) Parameters Type Name Description NotificationMessageType type The type of the notification message. | Edit this page View Source NotificationMessage(NotificationMessageType, string, string, string) Initializes a new instance of the NotificationMessage class with the specified type, from address, from name, and subject. Declaration public NotificationMessage(NotificationMessageType type, string fromAddress, string fromName, string subject) Parameters Type Name Description NotificationMessageType type The type of the notification message. string fromAddress The \"From\" address. string fromName The \"From\" name. string subject The subject of the notification. Properties | Edit this page View Source BccTo Gets or sets the list of \"Bcc\" contact information for the notification message. Declaration public IList<NotificationMessageContact> BccTo { get; } Property Value Type Description IList<NotificationMessageContact> | Edit this page View Source Body Gets or sets the body of the notification message. Declaration public NotificationMessageBody Body { get; set; } Property Value Type Description NotificationMessageBody | Edit this page View Source CcTo Gets or sets the list of \"Cc\" contact information for the notification message. Declaration public IList<NotificationMessageContact> CcTo { get; } Property Value Type Description IList<NotificationMessageContact> | Edit this page View Source From Gets or sets the \"From\" contact information for the notification message. Declaration public NotificationMessageContact From { get; } Property Value Type Description NotificationMessageContact | Edit this page View Source ReplyToAddresses Gets or sets the list of \"Reply-To\" contact information for the notification message. Declaration public IList<NotificationMessageContact> ReplyToAddresses { get; } Property Value Type Description IList<NotificationMessageContact> | Edit this page View Source Subject Gets or sets the subject of the notification message. Declaration public NotificationMessageSubject Subject { get; set; } Property Value Type Description NotificationMessageSubject | Edit this page View Source To Gets or sets the list of \"To\" contact information for the notification message. Declaration public IList<NotificationMessageContact> To { get; } Property Value Type Description IList<NotificationMessageContact> | Edit this page View Source Type Gets or sets the type of the notification message. Declaration public NotificationMessageType Type { get; set; } Property Value Type Description NotificationMessageType Methods | Edit this page View Source AddBccTo(string, string) Adds \"Bcc\" contact information to the notification message. Declaration public virtual NotificationMessage AddBccTo(string address, string name = null) Parameters Type Name Description string address string name Returns Type Description NotificationMessage | Edit this page View Source AddCcTo(string, string) Adds \"Cc\" contact information to the notification message. Declaration public virtual NotificationMessage AddCcTo(string address, string name = null) Parameters Type Name Description string address string name Returns Type Description NotificationMessage | Edit this page View Source AddFrom(string, string) Adds the \"From\" contact information to the notification message. Declaration public NotificationMessage AddFrom(string address, string name = null) Parameters Type Name Description string address string name Returns Type Description NotificationMessage | Edit this page View Source AddReplyTo(string, string) Adds \"Reply-To\" contact information to the notification message. Declaration public virtual NotificationMessage AddReplyTo(string address, string name = null) Parameters Type Name Description string address string name Returns Type Description NotificationMessage | Edit this page View Source AddSubject(string, string) Adds the subject to the notification message. Declaration public NotificationMessage AddSubject(string subject, string charset = null) Parameters Type Name Description string subject string charset Returns Type Description NotificationMessage | Edit this page View Source AddTo(string, string) Adds \"To\" contact information to the notification message. Declaration public NotificationMessage AddTo(string address, string name = null) Parameters Type Name Description string address string name Returns Type Description NotificationMessage | Edit this page View Source Validate(ValidationContext) Determines whether the specified object is valid. Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection that holds failed-validation information. Implements IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageBody.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageBody.html",
    "title": "Class NotificationMessageBody | Innovt Platform",
    "keywords": "Class NotificationMessageBody Represents the body of a notification message. Inheritance object NotificationMessageContent NotificationMessageBody Inherited Members NotificationMessageContent.Charset NotificationMessageContent.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Domain Assembly: Innovt.Notification.Core.dll Syntax public class NotificationMessageBody : NotificationMessageContent Properties | Edit this page View Source IsHtml Gets or sets a value indicating whether the content is in HTML format. Declaration public bool IsHtml { get; set; } Property Value Type Description bool Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageContact.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageContact.html",
    "title": "Class NotificationMessageContact | Innovt Platform",
    "keywords": "Class NotificationMessageContact Represents a contact for a notification message. Inheritance object NotificationMessageContact Implements IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Domain Assembly: Innovt.Notification.Core.dll Syntax public class NotificationMessageContact : IValidatableObject Constructors | Edit this page View Source NotificationMessageContact() Initializes a new instance of the NotificationMessageContact class. Declaration public NotificationMessageContact() | Edit this page View Source NotificationMessageContact(string, string) Initializes a new instance of the NotificationMessageContact class with the specified name and address. Declaration public NotificationMessageContact(string name, string address) Parameters Type Name Description string name The name of the contact. string address The address of the contact. Properties | Edit this page View Source Address Gets or sets the address of the contact. Declaration public string Address { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the contact. Declaration public string Name { get; set; } Property Value Type Description string Methods | Edit this page View Source Validate(ValidationContext) Determines whether the specified object is valid. Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection that holds failed-validation information. Implements IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageContent.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageContent.html",
    "title": "Class NotificationMessageContent | Innovt Platform",
    "keywords": "Class NotificationMessageContent Represents the content of a notification message. Inheritance object NotificationMessageContent NotificationMessageBody NotificationMessageSubject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Domain Assembly: Innovt.Notification.Core.dll Syntax public class NotificationMessageContent Properties | Edit this page View Source Charset Gets or sets the character set of the content. Declaration public string Charset { get; set; } Property Value Type Description string | Edit this page View Source Content Gets or sets the content. Declaration public string Content { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageSubject.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageSubject.html",
    "title": "Class NotificationMessageSubject | Innovt Platform",
    "keywords": "Class NotificationMessageSubject Represents the subject of a notification message. Inheritance object NotificationMessageContent NotificationMessageSubject Inherited Members NotificationMessageContent.Charset NotificationMessageContent.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Domain Assembly: Innovt.Notification.Core.dll Syntax public class NotificationMessageSubject : NotificationMessageContent Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.NotificationMessageType.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationMessageType.html",
    "title": "Enum NotificationMessageType | Innovt Platform",
    "keywords": "Enum NotificationMessageType Enum representing the type of a notification message. Namespace: Innovt.Notification.Core.Domain Assembly: Innovt.Notification.Core.dll Syntax public enum NotificationMessageType Fields Name Description Custom Custom notification type. Email Email notification type. Push Push notification type. Sms SMS notification type. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.NotificationRequest.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationRequest.html",
    "title": "Class NotificationRequest | Innovt Platform",
    "keywords": "Class NotificationRequest Represents a notification request. Inheritance object NotificationRequest Implements IValidatableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Domain Assembly: Innovt.Notification.Core.dll Syntax public class NotificationRequest : IValidatableObject Constructors | Edit this page View Source NotificationRequest() Initializes a new instance of the NotificationRequest class. Declaration public NotificationRequest() Properties | Edit this page View Source PayLoad Gets or sets the payload associated with the notification request. Declaration public object PayLoad { get; set; } Property Value Type Description object | Edit this page View Source TemplateId Gets or sets the template ID. Declaration public string TemplateId { get; set; } Property Value Type Description string | Edit this page View Source To Gets or sets the list of \"To\" contacts for the notification request. Declaration public List<NotificationMessageContact> To { get; set; } Property Value Type Description List<NotificationMessageContact> Methods | Edit this page View Source Validate(ValidationContext) Determines whether the specified object is valid. Declaration public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description ValidationContext validationContext The validation context. Returns Type Description IEnumerable<ValidationResult> A collection that holds failed-validation information. Implements IValidatableObject Extension Methods Extensions.EnsureIsValid(IValidatableObject, ValidationContext) Extensions.IsValid(IValidatableObject, ValidationContext) Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.NotificationTemplate.html": {
    "href": "api/Innovt.Notification.Core.Domain.NotificationTemplate.html",
    "title": "Class NotificationTemplate | Innovt Platform",
    "keywords": "Class NotificationTemplate Inheritance object NotificationTemplate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.Notification.Core.Domain Assembly: Innovt.Notification.Core.dll Syntax public class NotificationTemplate Properties | Edit this page View Source Body Gets or sets the body of the notification template. Declaration public string Body { get; set; } Property Value Type Description string | Edit this page View Source Builder Gets or sets the builder associated with the notification template. Declaration public string Builder { get; set; } Property Value Type Description string | Edit this page View Source Charset Gets or sets the character set of the notification template. Declaration public string Charset { get; set; } Property Value Type Description string | Edit this page View Source FromAddress Gets or sets the \"From\" address of the notification template. Declaration public string FromAddress { get; set; } Property Value Type Description string | Edit this page View Source FromName Gets or sets the \"From\" name of the notification template. Declaration public string FromName { get; set; } Property Value Type Description string | Edit this page View Source Id Gets or sets the ID of the notification template. Declaration public string Id { get; set; } Property Value Type Description string | Edit this page View Source Subject Gets or sets the subject of the notification template. Declaration public string Subject { get; set; } Property Value Type Description string | Edit this page View Source TemplateUrl Gets or sets the URL of the notification template. Declaration public string TemplateUrl { get; set; } Property Value Type Description string | Edit this page View Source Type Gets or sets the type of the notification template. Declaration public NotificationMessageType Type { get; set; } Property Value Type Description NotificationMessageType Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Domain.html": {
    "href": "api/Innovt.Notification.Core.Domain.html",
    "title": "Namespace Innovt.Notification.Core.Domain | Innovt Platform",
    "keywords": "Namespace Innovt.Notification.Core.Domain Classes NotificationMessage Represents a notification message. NotificationMessageBody Represents the body of a notification message. NotificationMessageContact Represents a contact for a notification message. NotificationMessageContent Represents the content of a notification message. NotificationMessageSubject Represents the subject of a notification message. NotificationRequest Represents a notification request. NotificationTemplate Enums NotificationMessageType Enum representing the type of a notification message."
  },
  "api/Innovt.Notification.Core.INotificationHandleFactory.html": {
    "href": "api/Innovt.Notification.Core.INotificationHandleFactory.html",
    "title": "Interface INotificationHandleFactory | Innovt Platform",
    "keywords": "Interface INotificationHandleFactory Interface for a notification handler factory. Namespace: Innovt.Notification.Core Assembly: Innovt.Notification.Core.dll Syntax public interface INotificationHandleFactory Methods | Edit this page View Source Create(NotificationMessageType) Creates a notification handler based on the specified notification message type. Declaration INotificationHandler Create(NotificationMessageType notificationMessageType) Parameters Type Name Description NotificationMessageType notificationMessageType The notification message type. Returns Type Description INotificationHandler An instance of the notification handler. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.INotificationHandler.html": {
    "href": "api/Innovt.Notification.Core.INotificationHandler.html",
    "title": "Interface INotificationHandler | Innovt Platform",
    "keywords": "Interface INotificationHandler Interface for a notification handler. Namespace: Innovt.Notification.Core Assembly: Innovt.Notification.Core.dll Syntax public interface INotificationHandler Methods | Edit this page View Source SendAsync(NotificationMessage, CancellationToken) Sends a notification message asynchronously. Declaration Task<dynamic> SendAsync(NotificationMessage message, CancellationToken cancellationToken = default) Parameters Type Name Description NotificationMessage message The notification message to send. CancellationToken cancellationToken The cancellation token. Returns Type Description Task<dynamic> A task representing the asynchronous operation and returning a dynamic result. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Template.ITemplateParser.html": {
    "href": "api/Innovt.Notification.Core.Template.ITemplateParser.html",
    "title": "Interface ITemplateParser | Innovt Platform",
    "keywords": "Interface ITemplateParser Interface for a template parser. Namespace: Innovt.Notification.Core.Template Assembly: Innovt.Notification.Core.dll Syntax public interface ITemplateParser Methods | Edit this page View Source Render(string, object) Renders the specified content using the provided view. Declaration string Render(string content, object view) Parameters Type Name Description string content The content to render. object view The view used for rendering. Returns Type Description string The rendered content. Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.Notification.Core.Template.html": {
    "href": "api/Innovt.Notification.Core.Template.html",
    "title": "Namespace Innovt.Notification.Core.Template | Innovt Platform",
    "keywords": "Namespace Innovt.Notification.Core.Template Interfaces ITemplateParser Interface for a template parser."
  },
  "api/Innovt.Notification.Core.html": {
    "href": "api/Innovt.Notification.Core.html",
    "title": "Namespace Innovt.Notification.Core | Innovt Platform",
    "keywords": "Namespace Innovt.Notification.Core Interfaces INotificationHandleFactory Interface for a notification handler factory. INotificationHandler Interface for a notification handler."
  },
  "api/Innovt.OpenTelemetry.LoggerActivityExporter.html": {
    "href": "api/Innovt.OpenTelemetry.LoggerActivityExporter.html",
    "title": "Class LoggerActivityExporter | Innovt Platform",
    "keywords": "Class LoggerActivityExporter This is a simple exporter that logs telemetry to the console. Inheritance object BaseExporter<Activity> LoggerActivityExporter Implements IDisposable Inherited Members BaseExporter<Activity>.ForceFlush(int) BaseExporter<Activity>.Shutdown(int) BaseExporter<Activity>.Dispose() BaseExporter<Activity>.OnForceFlush(int) BaseExporter<Activity>.OnShutdown(int) BaseExporter<Activity>.Dispose(bool) BaseExporter<Activity>.ParentProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.OpenTelemetry Assembly: Innovt.OpenTelemetry.dll Syntax public class LoggerActivityExporter : BaseExporter<Activity>, IDisposable Constructors | Edit this page View Source LoggerActivityExporter(IServiceCollection) Initializes a new instance of the LoggerActivityExporter class. Declaration public LoggerActivityExporter(IServiceCollection serviceCollection) Parameters Type Name Description IServiceCollection serviceCollection Exceptions Type Condition ArgumentNullException Methods | Edit this page View Source Export(in Batch<Activity>) Exports a batch of telemetry data. Declaration public override ExportResult Export(in Batch<Activity> batch) Parameters Type Name Description Batch<Activity> batch Returns Type Description ExportResult Overrides BaseExporter<Activity>.Export(in Batch<Activity>) Implements IDisposable Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Innovt.OpenTelemetry.LoggerActivityExporterExtensions.html": {
    "href": "api/Innovt.OpenTelemetry.LoggerActivityExporterExtensions.html",
    "title": "Class LoggerActivityExporterExtensions | Innovt Platform",
    "keywords": "Class LoggerActivityExporterExtensions This is a simple exporter that logs telemetry to the console. Inheritance object LoggerActivityExporterExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.OpenTelemetry Assembly: Innovt.OpenTelemetry.dll Syntax public static class LoggerActivityExporterExtensions Methods | Edit this page View Source AddLoggerExporter(TracerProviderBuilder, IServiceCollection) Adds a simple activity exporter that logs telemetry to the console. Declaration public static TracerProviderBuilder AddLoggerExporter(this TracerProviderBuilder builder, IServiceCollection serviceCollection) Parameters Type Name Description TracerProviderBuilder builder IServiceCollection serviceCollection Returns Type Description TracerProviderBuilder Exceptions Type Condition ArgumentNullException"
  },
  "api/Innovt.OpenTelemetry.TracerBuilderExtensions.html": {
    "href": "api/Innovt.OpenTelemetry.TracerBuilderExtensions.html",
    "title": "Class TracerBuilderExtensions | Innovt Platform",
    "keywords": "Class TracerBuilderExtensions This is a simple exporter that logs telemetry to the console. Inheritance object TracerBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Innovt.OpenTelemetry Assembly: Innovt.OpenTelemetry.dll Syntax public static class TracerBuilderExtensions Methods | Edit this page View Source AddInnovtInstrumentation(TracerProviderBuilder) Adds a simple activity exporter that logs telemetry to the console. Declaration public static TracerProviderBuilder AddInnovtInstrumentation(this TracerProviderBuilder builder) Parameters Type Name Description TracerProviderBuilder builder Returns Type Description TracerProviderBuilder Exceptions Type Condition ArgumentNullException"
  },
  "api/Innovt.OpenTelemetry.html": {
    "href": "api/Innovt.OpenTelemetry.html",
    "title": "Namespace Innovt.OpenTelemetry | Innovt Platform",
    "keywords": "Namespace Innovt.OpenTelemetry Classes LoggerActivityExporter This is a simple exporter that logs telemetry to the console. LoggerActivityExporterExtensions This is a simple exporter that logs telemetry to the console. TracerBuilderExtensions This is a simple exporter that logs telemetry to the console."
  },
  "api/Lambda.Sample.Function.html": {
    "href": "api/Lambda.Sample.Function.html",
    "title": "Class Function | Innovt Platform",
    "keywords": "Class Function Inheritance object BaseEventProcessor EventProcessor<SQSEvent, BatchFailureResponse> SqsEventProcessor<SampleEvent> Function Inherited Members SqsEventProcessor<SampleEvent>.ReportBatchFailures SqsEventProcessor<SampleEvent>.Handle(SQSEvent, ILambdaContext) EventProcessor<SQSEvent, BatchFailureResponse>.Process(SQSEvent, ILambdaContext) EventProcessor<SQSEvent, BatchFailureResponse>.Handle(SQSEvent, ILambdaContext) BaseEventProcessor.EventProcessorActivitySource BaseEventProcessor.Logger BaseEventProcessor.Context BaseEventProcessor.Configuration BaseEventProcessor.InitializeLogger(IContainer) BaseEventProcessor.SetupIoc() BaseEventProcessor.StartBaseActivity(string) BaseEventProcessor.SetupConfiguration() BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lambda.Sample Assembly: Lambda.Sample.dll Syntax public class Function : SqsEventProcessor<SampleEvent> Methods | Edit this page View Source ProcessMessage(QueueMessage<SampleEvent>) Handles the processing of an individual SQS message. Declaration protected override Task ProcessMessage(QueueMessage<SampleEvent> message) Parameters Type Name Description QueueMessage<SampleEvent> message The QueueMessage object containing information about the SQS message. Returns Type Description Task A Task representing the asynchronous processing operation. Overrides SqsEventProcessor<SampleEvent>.ProcessMessage(QueueMessage<SampleEvent>) | Edit this page View Source SetupIocContainer() Sets up the Inversion of Control (IOC) container for managing dependencies. Declaration protected override IContainer SetupIocContainer() Returns Type Description IContainer The configured IOC container. Overrides BaseEventProcessor.SetupIocContainer() Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Lambda.Sample.SampleEvent.html": {
    "href": "api/Lambda.Sample.SampleEvent.html",
    "title": "Class SampleEvent | Innovt Platform",
    "keywords": "Class SampleEvent Inheritance object SampleEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Lambda.Sample Assembly: Lambda.Sample.dll Syntax public class SampleEvent Properties | Edit this page View Source Name Declaration public string Name { get; set; } Property Value Type Description string Extension Methods Extensions.IsNull(object) Extensions.ToStringOrDefault(object) SimpleMapper.MapTo<T1>(object)"
  },
  "api/Lambda.Sample.html": {
    "href": "api/Lambda.Sample.html",
    "title": "Namespace Lambda.Sample | Innovt Platform",
    "keywords": "Namespace Lambda.Sample Classes Function SampleEvent"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Innovt Platform",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Innovt Platform",
    "keywords": "Introduction The Innovt.AspNetCore framework is designed to streamline the development of ASP.NET Core applications by providing essential tools and configurations. It includes classes like ApiStartupBase, which helps set up API projects with ease, and utility classes such as Constants for maintaining reusable values across applications. The framework is focused on simplifying common tasks in API configuration and offering a structured approach for handling application startup and dependency injection."
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Innovt Platform",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}