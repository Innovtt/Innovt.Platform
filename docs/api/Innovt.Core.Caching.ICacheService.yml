### YamlMime:ManagedReference
items:
- uid: Innovt.Core.Caching.ICacheService
  commentId: T:Innovt.Core.Caching.ICacheService
  id: ICacheService
  parent: Innovt.Core.Caching
  children:
  - Innovt.Core.Caching.ICacheService.GetValueOrCreate``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.TimeSpan,System.Threading.CancellationToken)
  - Innovt.Core.Caching.ICacheService.GetValue``1(System.String)
  - Innovt.Core.Caching.ICacheService.GetValue``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  - Innovt.Core.Caching.ICacheService.Remove(System.String)
  - Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
  langs:
  - csharp
  - vb
  name: ICacheService
  nameWithType: ICacheService
  fullName: Innovt.Core.Caching.ICacheService
  type: Interface
  source:
    remote:
      path: src/Innovt.Core/Caching/ICacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ICacheService
    path: ../src/Innovt.Core/Caching/ICacheService.cs
    startLine: 18
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Represents a caching service interface for storing and retrieving data.
  remarks: >-
    This interface defines methods for retrieving and caching data, as well as removing cached data.

    Implement this interface to create a caching service for your application.
  example: []
  syntax:
    content: 'public interface ICacheService : IDisposable'
    content.vb: Public Interface ICacheService Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Core.Caching.ICacheService.GetValue``1(System.String)
  commentId: M:Innovt.Core.Caching.ICacheService.GetValue``1(System.String)
  id: GetValue``1(System.String)
  parent: Innovt.Core.Caching.ICacheService
  langs:
  - csharp
  - vb
  name: GetValue<T>(string)
  nameWithType: ICacheService.GetValue<T>(string)
  fullName: Innovt.Core.Caching.ICacheService.GetValue<T>(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/ICacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetValue
    path: ../src/Innovt.Core/Caching/ICacheService.cs
    startLine: 26
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Gets the cached value associated with the specified key.
  example: []
  syntax:
    content: T GetValue<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: The unique identifier for the cached item.
    typeParameters:
    - id: T
      description: The type of the cached value.
    return:
      type: '{T}'
      description: The cached value if found; otherwise, the default value for the type.
    content.vb: Function GetValue(Of T)(key As String) As T
  overload: Innovt.Core.Caching.ICacheService.GetValue*
  nameWithType.vb: ICacheService.GetValue(Of T)(String)
  fullName.vb: Innovt.Core.Caching.ICacheService.GetValue(Of T)(String)
  name.vb: GetValue(Of T)(String)
- uid: Innovt.Core.Caching.ICacheService.GetValue``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  commentId: M:Innovt.Core.Caching.ICacheService.GetValue``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  id: GetValue``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  parent: Innovt.Core.Caching.ICacheService
  langs:
  - csharp
  - vb
  name: GetValue<T>(string, Func<CancellationToken, Task<T>>, CancellationToken)
  nameWithType: ICacheService.GetValue<T>(string, Func<CancellationToken, Task<T>>, CancellationToken)
  fullName: Innovt.Core.Caching.ICacheService.GetValue<T>(string, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<T>>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/ICacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetValue
    path: ../src/Innovt.Core/Caching/ICacheService.cs
    startLine: 28
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  syntax:
    content: Task<T> GetValue<T>(string key, Func<CancellationToken, Task<T>> factory, CancellationToken cancellationToken)
    parameters:
    - id: key
      type: System.String
    - id: factory
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{T}}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function GetValue(Of T)(key As String, factory As Func(Of CancellationToken, Task(Of T)), cancellationToken As CancellationToken) As Task(Of T)
  overload: Innovt.Core.Caching.ICacheService.GetValue*
  nameWithType.vb: ICacheService.GetValue(Of T)(String, Func(Of CancellationToken, Task(Of T)), CancellationToken)
  fullName.vb: Innovt.Core.Caching.ICacheService.GetValue(Of T)(String, System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of T)), System.Threading.CancellationToken)
  name.vb: GetValue(Of T)(String, Func(Of CancellationToken, Task(Of T)), CancellationToken)
- uid: Innovt.Core.Caching.ICacheService.GetValueOrCreate``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:Innovt.Core.Caching.ICacheService.GetValueOrCreate``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.TimeSpan,System.Threading.CancellationToken)
  id: GetValueOrCreate``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.TimeSpan,System.Threading.CancellationToken)
  parent: Innovt.Core.Caching.ICacheService
  langs:
  - csharp
  - vb
  name: GetValueOrCreate<T>(string, Func<CancellationToken, Task<T>>, TimeSpan, CancellationToken)
  nameWithType: ICacheService.GetValueOrCreate<T>(string, Func<CancellationToken, Task<T>>, TimeSpan, CancellationToken)
  fullName: Innovt.Core.Caching.ICacheService.GetValueOrCreate<T>(string, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<T>>, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/ICacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetValueOrCreate
    path: ../src/Innovt.Core/Caching/ICacheService.cs
    startLine: 55
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Asynchronously retrieves a cached value associated with the specified key, or creates and caches it if not found.
  example: []
  syntax:
    content: Task<T> GetValueOrCreate<T>(string key, Func<CancellationToken, Task<T>> factory, TimeSpan expiration, CancellationToken cancellationToken)
    parameters:
    - id: key
      type: System.String
      description: The unique identifier for the cached item.
    - id: factory
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{T}}}
      description: A factory function to create the value if not found.
    - id: expiration
      type: System.TimeSpan
      description: The time duration for which the value should be cached.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    typeParameters:
    - id: T
      description: The type of the cached value.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The cached value if found, or a newly created value from the factory function if not found.
    content.vb: Function GetValueOrCreate(Of T)(key As String, factory As Func(Of CancellationToken, Task(Of T)), expiration As TimeSpan, cancellationToken As CancellationToken) As Task(Of T)
  overload: Innovt.Core.Caching.ICacheService.GetValueOrCreate*
  nameWithType.vb: ICacheService.GetValueOrCreate(Of T)(String, Func(Of CancellationToken, Task(Of T)), TimeSpan, CancellationToken)
  fullName.vb: Innovt.Core.Caching.ICacheService.GetValueOrCreate(Of T)(String, System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of T)), System.TimeSpan, System.Threading.CancellationToken)
  name.vb: GetValueOrCreate(Of T)(String, Func(Of CancellationToken, Task(Of T)), TimeSpan, CancellationToken)
- uid: Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
  commentId: M:Innovt.Core.Caching.ICacheService.SetValue``1(System.String,``0,System.TimeSpan)
  id: SetValue``1(System.String,``0,System.TimeSpan)
  parent: Innovt.Core.Caching.ICacheService
  langs:
  - csharp
  - vb
  name: SetValue<T>(string, T, TimeSpan)
  nameWithType: ICacheService.SetValue<T>(string, T, TimeSpan)
  fullName: Innovt.Core.Caching.ICacheService.SetValue<T>(string, T, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/ICacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SetValue
    path: ../src/Innovt.Core/Caching/ICacheService.cs
    startLine: 80
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Sets a value in the cache with the specified key and expiration duration.
  example: []
  syntax:
    content: void SetValue<T>(string key, T entity, TimeSpan expiration)
    parameters:
    - id: key
      type: System.String
      description: The unique identifier for the cached item.
    - id: entity
      type: '{T}'
      description: The value to be cached.
    - id: expiration
      type: System.TimeSpan
      description: The time duration for which the value should be cached.
    typeParameters:
    - id: T
      description: The type of the value to be cached.
    content.vb: Sub SetValue(Of T)(key As String, entity As T, expiration As TimeSpan)
  overload: Innovt.Core.Caching.ICacheService.SetValue*
  nameWithType.vb: ICacheService.SetValue(Of T)(String, T, TimeSpan)
  fullName.vb: Innovt.Core.Caching.ICacheService.SetValue(Of T)(String, T, System.TimeSpan)
  name.vb: SetValue(Of T)(String, T, TimeSpan)
- uid: Innovt.Core.Caching.ICacheService.Remove(System.String)
  commentId: M:Innovt.Core.Caching.ICacheService.Remove(System.String)
  id: Remove(System.String)
  parent: Innovt.Core.Caching.ICacheService
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: ICacheService.Remove(string)
  fullName: Innovt.Core.Caching.ICacheService.Remove(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Caching/ICacheService.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Remove
    path: ../src/Innovt.Core/Caching/ICacheService.cs
    startLine: 86
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Caching
  summary: Removes a cached value associated with the specified key.
  example: []
  syntax:
    content: void Remove(string key)
    parameters:
    - id: key
      type: System.String
      description: The unique identifier for the cached item to be removed.
    content.vb: Sub Remove(key As String)
  overload: Innovt.Core.Caching.ICacheService.Remove*
  nameWithType.vb: ICacheService.Remove(String)
  fullName.vb: Innovt.Core.Caching.ICacheService.Remove(String)
  name.vb: Remove(String)
references:
- uid: Innovt.Core.Caching
  commentId: N:Innovt.Core.Caching
  href: Innovt.html
  name: Innovt.Core.Caching
  nameWithType: Innovt.Core.Caching
  fullName: Innovt.Core.Caching
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Caching
    name: Caching
    href: Innovt.Core.Caching.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Caching
    name: Caching
    href: Innovt.Core.Caching.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Core.Caching.ICacheService.GetValue*
  commentId: Overload:Innovt.Core.Caching.ICacheService.GetValue
  href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_GetValue__1_System_String_
  name: GetValue
  nameWithType: ICacheService.GetValue
  fullName: Innovt.Core.Caching.ICacheService.GetValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<CancellationToken, Task<T>>
  nameWithType: Func<CancellationToken, Task<T>>
  fullName: System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<T>>
  nameWithType.vb: Func(Of CancellationToken, Task(Of T))
  fullName.vb: System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of T))
  name.vb: Func(Of CancellationToken, Task(Of T))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Core.Caching.ICacheService.GetValueOrCreate*
  commentId: Overload:Innovt.Core.Caching.ICacheService.GetValueOrCreate
  href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_GetValueOrCreate__1_System_String_System_Func_System_Threading_CancellationToken_System_Threading_Tasks_Task___0___System_TimeSpan_System_Threading_CancellationToken_
  name: GetValueOrCreate
  nameWithType: ICacheService.GetValueOrCreate
  fullName: Innovt.Core.Caching.ICacheService.GetValueOrCreate
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Innovt.Core.Caching.ICacheService.SetValue*
  commentId: Overload:Innovt.Core.Caching.ICacheService.SetValue
  href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_SetValue__1_System_String___0_System_TimeSpan_
  name: SetValue
  nameWithType: ICacheService.SetValue
  fullName: Innovt.Core.Caching.ICacheService.SetValue
- uid: Innovt.Core.Caching.ICacheService.Remove*
  commentId: Overload:Innovt.Core.Caching.ICacheService.Remove
  href: Innovt.Core.Caching.ICacheService.html#Innovt_Core_Caching_ICacheService_Remove_System_String_
  name: Remove
  nameWithType: ICacheService.Remove
  fullName: Innovt.Core.Caching.ICacheService.Remove
