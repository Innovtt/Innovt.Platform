### YamlMime:ManagedReference
items:
- uid: Innovt.Core.Utilities.PasswordHelper
  commentId: T:Innovt.Core.Utilities.PasswordHelper
  id: PasswordHelper
  parent: Innovt.Core.Utilities
  children:
  - Innovt.Core.Utilities.PasswordHelper.GeneratePassword(System.Int32)
  - Innovt.Core.Utilities.PasswordHelper.HashPassword(System.String)
  - Innovt.Core.Utilities.PasswordHelper.HashPassword(System.String,System.String)
  - Innovt.Core.Utilities.PasswordHelper.IsValid(System.String,System.String,System.String)
  - Innovt.Core.Utilities.PasswordHelper.RandomSalt
  langs:
  - csharp
  - vb
  name: PasswordHelper
  nameWithType: PasswordHelper
  fullName: Innovt.Core.Utilities.PasswordHelper
  type: Class
  source:
    remote:
      path: src/Innovt.Core/Utilities/PasswordHelper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: PasswordHelper
    path: ../src/Innovt.Core/Utilities/PasswordHelper.cs
    startLine: 13
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Provides utility methods for handling password hashing and validation.
  example: []
  syntax:
    content: public static class PasswordHelper
    content.vb: Public Module PasswordHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Innovt.Core.Utilities.PasswordHelper.IsValid(System.String,System.String,System.String)
  commentId: M:Innovt.Core.Utilities.PasswordHelper.IsValid(System.String,System.String,System.String)
  id: IsValid(System.String,System.String,System.String)
  parent: Innovt.Core.Utilities.PasswordHelper
  langs:
  - csharp
  - vb
  name: IsValid(string, string, string)
  nameWithType: PasswordHelper.IsValid(string, string, string)
  fullName: Innovt.Core.Utilities.PasswordHelper.IsValid(string, string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/PasswordHelper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsValid
    path: ../src/Innovt.Core/Utilities/PasswordHelper.cs
    startLine: 27
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Checks if a decoded password matches its hashed representation using the provided salt.
  example: []
  syntax:
    content: public static bool IsValid(string decodedPassword, string hashedPassword, string salt)
    parameters:
    - id: decodedPassword
      type: System.String
      description: The plain text password to validate.
    - id: hashedPassword
      type: System.String
      description: The hashed password to compare against.
    - id: salt
      type: System.String
      description: The salt used for hashing the password.
    return:
      type: System.Boolean
      description: True if the decoded password matches the hashed password; otherwise, false.
    content.vb: Public Shared Function IsValid(decodedPassword As String, hashedPassword As String, salt As String) As Boolean
  overload: Innovt.Core.Utilities.PasswordHelper.IsValid*
  nameWithType.vb: PasswordHelper.IsValid(String, String, String)
  fullName.vb: Innovt.Core.Utilities.PasswordHelper.IsValid(String, String, String)
  name.vb: IsValid(String, String, String)
- uid: Innovt.Core.Utilities.PasswordHelper.RandomSalt
  commentId: M:Innovt.Core.Utilities.PasswordHelper.RandomSalt
  id: RandomSalt
  parent: Innovt.Core.Utilities.PasswordHelper
  langs:
  - csharp
  - vb
  name: RandomSalt()
  nameWithType: PasswordHelper.RandomSalt()
  fullName: Innovt.Core.Utilities.PasswordHelper.RandomSalt()
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/PasswordHelper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: RandomSalt
    path: ../src/Innovt.Core/Utilities/PasswordHelper.cs
    startLine: 53
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Generates a random salt and returns it as a Base64-encoded string.
  example: []
  syntax:
    content: public static string RandomSalt()
    return:
      type: System.String
      description: A Base64-encoded salt.
    content.vb: Public Shared Function RandomSalt() As String
  overload: Innovt.Core.Utilities.PasswordHelper.RandomSalt*
- uid: Innovt.Core.Utilities.PasswordHelper.HashPassword(System.String,System.String)
  commentId: M:Innovt.Core.Utilities.PasswordHelper.HashPassword(System.String,System.String)
  id: HashPassword(System.String,System.String)
  parent: Innovt.Core.Utilities.PasswordHelper
  langs:
  - csharp
  - vb
  name: HashPassword(string, string)
  nameWithType: PasswordHelper.HashPassword(string, string)
  fullName: Innovt.Core.Utilities.PasswordHelper.HashPassword(string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/PasswordHelper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: HashPassword
    path: ../src/Innovt.Core/Utilities/PasswordHelper.cs
    startLine: 64
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Hashes a plain text password using the provided salt.
  example: []
  syntax:
    content: public static string HashPassword(string plainPassword, string salt)
    parameters:
    - id: plainPassword
      type: System.String
      description: The plain text password to hash.
    - id: salt
      type: System.String
      description: The salt used for hashing the password.
    return:
      type: System.String
      description: The hashed password as a string.
    content.vb: Public Shared Function HashPassword(plainPassword As String, salt As String) As String
  overload: Innovt.Core.Utilities.PasswordHelper.HashPassword*
  nameWithType.vb: PasswordHelper.HashPassword(String, String)
  fullName.vb: Innovt.Core.Utilities.PasswordHelper.HashPassword(String, String)
  name.vb: HashPassword(String, String)
- uid: Innovt.Core.Utilities.PasswordHelper.HashPassword(System.String)
  commentId: M:Innovt.Core.Utilities.PasswordHelper.HashPassword(System.String)
  id: HashPassword(System.String)
  parent: Innovt.Core.Utilities.PasswordHelper
  langs:
  - csharp
  - vb
  name: HashPassword(string)
  nameWithType: PasswordHelper.HashPassword(string)
  fullName: Innovt.Core.Utilities.PasswordHelper.HashPassword(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/PasswordHelper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: HashPassword
    path: ../src/Innovt.Core/Utilities/PasswordHelper.cs
    startLine: 77
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Hashes a plain text password using a randomly generated salt and returns both the hashed password and the salt.
  example: []
  syntax:
    content: public static (string password, string salt) HashPassword(string plainPassword)
    parameters:
    - id: plainPassword
      type: System.String
      description: The plain text password to hash.
    return:
      type: System.ValueTuple{System.String,System.String}
      description: A tuple containing the hashed password and the salt used.
    content.vb: Public Shared Function HashPassword(plainPassword As String) As (password As String, salt As String)
  overload: Innovt.Core.Utilities.PasswordHelper.HashPassword*
  nameWithType.vb: PasswordHelper.HashPassword(String)
  fullName.vb: Innovt.Core.Utilities.PasswordHelper.HashPassword(String)
  name.vb: HashPassword(String)
- uid: Innovt.Core.Utilities.PasswordHelper.GeneratePassword(System.Int32)
  commentId: M:Innovt.Core.Utilities.PasswordHelper.GeneratePassword(System.Int32)
  id: GeneratePassword(System.Int32)
  parent: Innovt.Core.Utilities.PasswordHelper
  langs:
  - csharp
  - vb
  name: GeneratePassword(int)
  nameWithType: PasswordHelper.GeneratePassword(int)
  fullName: Innovt.Core.Utilities.PasswordHelper.GeneratePassword(int)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/PasswordHelper.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GeneratePassword
    path: ../src/Innovt.Core/Utilities/PasswordHelper.cs
    startLine: 97
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Generates a random password of specified length using cryptographic randomness to ensure security.
  example: []
  syntax:
    content: public static string GeneratePassword(int passwordLength)
    parameters:
    - id: passwordLength
      type: System.Int32
      description: >-
        (int): The desired length of the generated password. If the specified length is less than

        6, the method defaults to a minimum length of 6 to ensure a reasonable level of security.
    return:
      type: System.String
      description: (string) A randomly generated password consisting of characters chosen from a predefined set.
    content.vb: Public Shared Function GeneratePassword(passwordLength As Integer) As String
  overload: Innovt.Core.Utilities.PasswordHelper.GeneratePassword*
  nameWithType.vb: PasswordHelper.GeneratePassword(Integer)
  fullName.vb: Innovt.Core.Utilities.PasswordHelper.GeneratePassword(Integer)
  name.vb: GeneratePassword(Integer)
references:
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.PasswordHelper.IsValid*
  commentId: Overload:Innovt.Core.Utilities.PasswordHelper.IsValid
  href: Innovt.Core.Utilities.PasswordHelper.html#Innovt_Core_Utilities_PasswordHelper_IsValid_System_String_System_String_System_String_
  name: IsValid
  nameWithType: PasswordHelper.IsValid
  fullName: Innovt.Core.Utilities.PasswordHelper.IsValid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Core.Utilities.PasswordHelper.RandomSalt*
  commentId: Overload:Innovt.Core.Utilities.PasswordHelper.RandomSalt
  href: Innovt.Core.Utilities.PasswordHelper.html#Innovt_Core_Utilities_PasswordHelper_RandomSalt
  name: RandomSalt
  nameWithType: PasswordHelper.RandomSalt
  fullName: Innovt.Core.Utilities.PasswordHelper.RandomSalt
- uid: Innovt.Core.Utilities.PasswordHelper.HashPassword*
  commentId: Overload:Innovt.Core.Utilities.PasswordHelper.HashPassword
  href: Innovt.Core.Utilities.PasswordHelper.html#Innovt_Core_Utilities_PasswordHelper_HashPassword_System_String_System_String_
  name: HashPassword
  nameWithType: PasswordHelper.HashPassword
  fullName: Innovt.Core.Utilities.PasswordHelper.HashPassword
- uid: System.ValueTuple{System.String,System.String}
  commentId: T:System.ValueTuple{System.String,System.String}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: (string bucket, string fileKey)
  nameWithType: (string bucket, string fileKey)
  fullName: (string bucket, string fileKey)
  nameWithType.vb: (bucket As String, fileKey As String)
  fullName.vb: (bucket As String, fileKey As String)
  name.vb: (bucket As String, fileKey As String)
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.bucket
    name: bucket
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.bucket
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.fileKey
    name: fileKey
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.filekey
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.String}.bucket
    name: bucket
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.bucket
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.fileKey
    name: fileKey
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.filekey
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Innovt.Core.Utilities.PasswordHelper.GeneratePassword*
  commentId: Overload:Innovt.Core.Utilities.PasswordHelper.GeneratePassword
  href: Innovt.Core.Utilities.PasswordHelper.html#Innovt_Core_Utilities_PasswordHelper_GeneratePassword_System_Int32_
  name: GeneratePassword
  nameWithType: PasswordHelper.GeneratePassword
  fullName: Innovt.Core.Utilities.PasswordHelper.GeneratePassword
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
