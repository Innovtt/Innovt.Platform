### YamlMime:ManagedReference
items:
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  id: Extensions
  parent: Innovt.Core.Utilities
  children:
  - Innovt.Core.Utilities.Extensions.ConvertToStringArray(System.Int32)
  - Innovt.Core.Utilities.Extensions.CopyTo(System.IO.Stream,System.IO.Stream)
  - Innovt.Core.Utilities.Extensions.ExtractCoordinates(System.String,System.Char)
  - Innovt.Core.Utilities.Extensions.FormatToCurrency(System.Decimal)
  - Innovt.Core.Utilities.Extensions.FormatToExtensionDateTime(System.DateTimeOffset)
  - Innovt.Core.Utilities.Extensions.FormatToPeriod(System.DateTime,System.DateTime,System.Globalization.CultureInfo)
  - Innovt.Core.Utilities.Extensions.FormatToPeriod(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo)
  - Innovt.Core.Utilities.Extensions.FormatToSimpleDateTime(System.DateTimeOffset)
  - Innovt.Core.Utilities.Extensions.FromByteArray``1(System.Byte[])
  - Innovt.Core.Utilities.Extensions.FromUnixTimestamp(System.Double)
  - Innovt.Core.Utilities.Extensions.GetMimeType(System.String)
  - Innovt.Core.Utilities.Extensions.IsGuidEmpty(System.Guid)
  - Innovt.Core.Utilities.Extensions.IsGuidNUllOrEmpty(System.Nullable{System.Guid})
  - Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Double)
  - Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Int32)
  - Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Int64)
  - Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Nullable{System.Int32})
  - Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  - Innovt.Core.Utilities.Extensions.IsPrimitiveType(System.Type)
  - Innovt.Core.Utilities.Extensions.LastDayOfMonth(System.DateTimeOffset)
  - Innovt.Core.Utilities.Extensions.MaskCreditCard(System.String)
  - Innovt.Core.Utilities.Extensions.MillisecondToDateTime(System.Double)
  - Innovt.Core.Utilities.Extensions.OnlyDate(System.DateTimeOffset)
  - Innovt.Core.Utilities.Extensions.StartOfWeek(System.DateTimeOffset,System.DayOfWeek)
  - Innovt.Core.Utilities.Extensions.ToBase64(System.IO.Stream)
  - Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone(System.DateTime)
  - Innovt.Core.Utilities.Extensions.ToDataUriBase64(System.IO.Stream,System.String)
  - Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  - Innovt.Core.Utilities.Extensions.ToTimeZone(System.DateTime,System.TimeSpan,System.TimeSpan)
  - Innovt.Core.Utilities.Extensions.ToTimeZone(System.DateTimeOffset,System.TimeSpan)
  - Innovt.Core.Utilities.Extensions.ToUnixTimestamp(System.DateTime)
  - Innovt.Core.Utilities.Extensions.ToUnixTimestamp(System.DateTimeOffset)
  - Innovt.Core.Utilities.Extensions.ToYesNo(System.Boolean)
  - Innovt.Core.Utilities.Extensions.Unzip(System.Byte[])
  - Innovt.Core.Utilities.Extensions.Zip(System.Byte[])
  - Innovt.Core.Utilities.Extensions.Zip(System.String)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
  type: Class
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Extensions
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 18
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Provides extension methods for various data types and operations.
  example: []
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  id: IsNull(System.Object)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsNull
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 28
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the specified object is null.
  example: []
  syntax:
    content: public static bool IsNull(this object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to check for null.
    return:
      type: System.Boolean
      description: True if the object is null; otherwise, false.
    content.vb: Public Shared Function IsNull(obj As Object) As Boolean
  overload: Innovt.Core.Utilities.Extensions.IsNull*
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  id: ToStringOrDefault(System.Object)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToStringOrDefault
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 38
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts the specified object to a string or returns an empty string if the object is null.
  example: []
  syntax:
    content: public static string ToStringOrDefault(this object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to convert to a string.
    return:
      type: System.String
      description: The string representation of the object or an empty string if the object is null.
    content.vb: Public Shared Function ToStringOrDefault(obj As Object) As String
  overload: Innovt.Core.Utilities.Extensions.ToStringOrDefault*
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
- uid: Innovt.Core.Utilities.Extensions.IsGuidEmpty(System.Guid)
  commentId: M:Innovt.Core.Utilities.Extensions.IsGuidEmpty(System.Guid)
  id: IsGuidEmpty(System.Guid)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: IsGuidEmpty(Guid)
  nameWithType: Extensions.IsGuidEmpty(Guid)
  fullName: Innovt.Core.Utilities.Extensions.IsGuidEmpty(System.Guid)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsGuidEmpty
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 48
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the specified Guid is empty.
  example: []
  syntax:
    content: public static bool IsGuidEmpty(this Guid id)
    parameters:
    - id: id
      type: System.Guid
      description: The Guid to check for emptiness.
    return:
      type: System.Boolean
      description: True if the Guid is empty; otherwise, false.
    content.vb: Public Shared Function IsGuidEmpty(id As Guid) As Boolean
  overload: Innovt.Core.Utilities.Extensions.IsGuidEmpty*
- uid: Innovt.Core.Utilities.Extensions.IsGuidNUllOrEmpty(System.Nullable{System.Guid})
  commentId: M:Innovt.Core.Utilities.Extensions.IsGuidNUllOrEmpty(System.Nullable{System.Guid})
  id: IsGuidNUllOrEmpty(System.Nullable{System.Guid})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: IsGuidNUllOrEmpty(Guid?)
  nameWithType: Extensions.IsGuidNUllOrEmpty(Guid?)
  fullName: Innovt.Core.Utilities.Extensions.IsGuidNUllOrEmpty(System.Guid?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsGuidNUllOrEmpty
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 58
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the specified nullable Guid is null or empty.
  example: []
  syntax:
    content: public static bool IsGuidNUllOrEmpty(this Guid? id)
    parameters:
    - id: id
      type: System.Nullable{System.Guid}
      description: The nullable Guid to check for null or emptiness.
    return:
      type: System.Boolean
      description: True if the Guid is null or empty; otherwise, false.
    content.vb: Public Shared Function IsGuidNUllOrEmpty(id As Guid?) As Boolean
  overload: Innovt.Core.Utilities.Extensions.IsGuidNUllOrEmpty*
- uid: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Int32)
  commentId: M:Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Int32)
  id: IsLessThanOrEqualToZero(System.Int32)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: IsLessThanOrEqualToZero(int)
  nameWithType: Extensions.IsLessThanOrEqualToZero(int)
  fullName: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(int)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsLessThanOrEqualToZero
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 68
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the specified integer is less than or equal to zero.
  example: []
  syntax:
    content: public static bool IsLessThanOrEqualToZero(this int id)
    parameters:
    - id: id
      type: System.Int32
      description: The integer to check.
    return:
      type: System.Boolean
      description: True if the integer is less than or equal to zero; otherwise, false.
    content.vb: Public Shared Function IsLessThanOrEqualToZero(id As Integer) As Boolean
  overload: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero*
  nameWithType.vb: Extensions.IsLessThanOrEqualToZero(Integer)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(Integer)
  name.vb: IsLessThanOrEqualToZero(Integer)
- uid: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Nullable{System.Int32})
  commentId: M:Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Nullable{System.Int32})
  id: IsLessThanOrEqualToZero(System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: IsLessThanOrEqualToZero(int?)
  nameWithType: Extensions.IsLessThanOrEqualToZero(int?)
  fullName: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(int?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsLessThanOrEqualToZero
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 78
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the specified nullable integer is null or less than or equal to zero.
  example: []
  syntax:
    content: public static bool IsLessThanOrEqualToZero(this int? id)
    parameters:
    - id: id
      type: System.Nullable{System.Int32}
      description: The nullable integer to check.
    return:
      type: System.Boolean
      description: True if the integer is null or less than or equal to zero; otherwise, false.
    content.vb: Public Shared Function IsLessThanOrEqualToZero(id As Integer?) As Boolean
  overload: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero*
  nameWithType.vb: Extensions.IsLessThanOrEqualToZero(Integer?)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(Integer?)
  name.vb: IsLessThanOrEqualToZero(Integer?)
- uid: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Int64)
  commentId: M:Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Int64)
  id: IsLessThanOrEqualToZero(System.Int64)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: IsLessThanOrEqualToZero(long)
  nameWithType: Extensions.IsLessThanOrEqualToZero(long)
  fullName: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(long)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsLessThanOrEqualToZero
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 88
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the specified long integer is less than or equal to zero.
  example: []
  syntax:
    content: public static bool IsLessThanOrEqualToZero(this long id)
    parameters:
    - id: id
      type: System.Int64
      description: The long integer to check.
    return:
      type: System.Boolean
      description: True if the long integer is less than or equal to zero; otherwise, false.
    content.vb: Public Shared Function IsLessThanOrEqualToZero(id As Long) As Boolean
  overload: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero*
  nameWithType.vb: Extensions.IsLessThanOrEqualToZero(Long)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(Long)
  name.vb: IsLessThanOrEqualToZero(Long)
- uid: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Double)
  commentId: M:Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(System.Double)
  id: IsLessThanOrEqualToZero(System.Double)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: IsLessThanOrEqualToZero(double)
  nameWithType: Extensions.IsLessThanOrEqualToZero(double)
  fullName: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(double)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsLessThanOrEqualToZero
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 98
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the specified double is less than or equal to zero.
  example: []
  syntax:
    content: public static bool IsLessThanOrEqualToZero(this double id)
    parameters:
    - id: id
      type: System.Double
      description: The double to check.
    return:
      type: System.Boolean
      description: True if the double is less than or equal to zero; otherwise, false.
    content.vb: Public Shared Function IsLessThanOrEqualToZero(id As Double) As Boolean
  overload: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero*
  nameWithType.vb: Extensions.IsLessThanOrEqualToZero(Double)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero(Double)
  name.vb: IsLessThanOrEqualToZero(Double)
- uid: Innovt.Core.Utilities.Extensions.IsPrimitiveType(System.Type)
  commentId: M:Innovt.Core.Utilities.Extensions.IsPrimitiveType(System.Type)
  id: IsPrimitiveType(System.Type)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: IsPrimitiveType(Type)
  nameWithType: Extensions.IsPrimitiveType(Type)
  fullName: Innovt.Core.Utilities.Extensions.IsPrimitiveType(System.Type)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsPrimitiveType
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 109
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the specified type is a primitive data type.
  example: []
  syntax:
    content: public static bool IsPrimitiveType(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: The Type to check.
    return:
      type: System.Boolean
      description: True if the type is a primitive data type; otherwise, false.
    content.vb: Public Shared Function IsPrimitiveType(type As Type) As Boolean
  overload: Innovt.Core.Utilities.Extensions.IsPrimitiveType*
- uid: Innovt.Core.Utilities.Extensions.ExtractCoordinates(System.String,System.Char)
  commentId: M:Innovt.Core.Utilities.Extensions.ExtractCoordinates(System.String,System.Char)
  id: ExtractCoordinates(System.String,System.Char)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ExtractCoordinates(string, char)
  nameWithType: Extensions.ExtractCoordinates(string, char)
  fullName: Innovt.Core.Utilities.Extensions.ExtractCoordinates(string, char)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExtractCoordinates
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 135
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Extracts latitude and longitude coordinates from a string.
  example: []
  syntax:
    content: public static (long Latitude, long Longitude) ExtractCoordinates(this string str, char splittedBy = ';')
    parameters:
    - id: str
      type: System.String
      description: The string containing coordinates.
    - id: splittedBy
      type: System.Char
      description: The character used to split latitude and longitude values.
    return:
      type: System.ValueTuple{System.Int64,System.Int64}
      description: A tuple containing latitude and longitude values.
    content.vb: Public Shared Function ExtractCoordinates(str As String, splittedBy As Char = ";"c) As (Latitude As Long, Longitude As Long)
  overload: Innovt.Core.Utilities.Extensions.ExtractCoordinates*
  nameWithType.vb: Extensions.ExtractCoordinates(String, Char)
  fullName.vb: Innovt.Core.Utilities.Extensions.ExtractCoordinates(String, Char)
  name.vb: ExtractCoordinates(String, Char)
- uid: Innovt.Core.Utilities.Extensions.MillisecondToDateTime(System.Double)
  commentId: M:Innovt.Core.Utilities.Extensions.MillisecondToDateTime(System.Double)
  id: MillisecondToDateTime(System.Double)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: MillisecondToDateTime(double)
  nameWithType: Extensions.MillisecondToDateTime(double)
  fullName: Innovt.Core.Utilities.Extensions.MillisecondToDateTime(double)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MillisecondToDateTime
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 173
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a double value representing milliseconds since the Unix epoch to a DateTimeOffset.
  example: []
  syntax:
    content: public static DateTimeOffset? MillisecondToDateTime(this double fromSeconds)
    parameters:
    - id: fromSeconds
      type: System.Double
      description: The double value representing milliseconds since the Unix epoch.
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A DateTimeOffset representing the converted date and time.
    content.vb: Public Shared Function MillisecondToDateTime(fromSeconds As Double) As DateTimeOffset?
  overload: Innovt.Core.Utilities.Extensions.MillisecondToDateTime*
  nameWithType.vb: Extensions.MillisecondToDateTime(Double)
  fullName.vb: Innovt.Core.Utilities.Extensions.MillisecondToDateTime(Double)
  name.vb: MillisecondToDateTime(Double)
- uid: Innovt.Core.Utilities.Extensions.FormatToCurrency(System.Decimal)
  commentId: M:Innovt.Core.Utilities.Extensions.FormatToCurrency(System.Decimal)
  id: FormatToCurrency(System.Decimal)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: FormatToCurrency(decimal)
  nameWithType: Extensions.FormatToCurrency(decimal)
  fullName: Innovt.Core.Utilities.Extensions.FormatToCurrency(decimal)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatToCurrency
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 185
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a decimal value as currency.
  example: []
  syntax:
    content: public static string FormatToCurrency(this decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: The decimal value to format.
    return:
      type: System.String
      description: A string representation of the decimal value in currency format.
    content.vb: Public Shared Function FormatToCurrency(value As Decimal) As String
  overload: Innovt.Core.Utilities.Extensions.FormatToCurrency*
  nameWithType.vb: Extensions.FormatToCurrency(Decimal)
  fullName.vb: Innovt.Core.Utilities.Extensions.FormatToCurrency(Decimal)
  name.vb: FormatToCurrency(Decimal)
- uid: Innovt.Core.Utilities.Extensions.LastDayOfMonth(System.DateTimeOffset)
  commentId: M:Innovt.Core.Utilities.Extensions.LastDayOfMonth(System.DateTimeOffset)
  id: LastDayOfMonth(System.DateTimeOffset)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: LastDayOfMonth(DateTimeOffset)
  nameWithType: Extensions.LastDayOfMonth(DateTimeOffset)
  fullName: Innovt.Core.Utilities.Extensions.LastDayOfMonth(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: LastDayOfMonth
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 195
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Returns the last day of the month for a given DateTimeOffset.
  example: []
  syntax:
    content: public static DateTimeOffset LastDayOfMonth(this DateTimeOffset date)
    parameters:
    - id: date
      type: System.DateTimeOffset
      description: The DateTimeOffset for which to find the last day of the month.
    return:
      type: System.DateTimeOffset
      description: The DateTimeOffset representing the last day of the month.
    content.vb: Public Shared Function LastDayOfMonth([date] As DateTimeOffset) As DateTimeOffset
  overload: Innovt.Core.Utilities.Extensions.LastDayOfMonth*
- uid: Innovt.Core.Utilities.Extensions.FormatToExtensionDateTime(System.DateTimeOffset)
  commentId: M:Innovt.Core.Utilities.Extensions.FormatToExtensionDateTime(System.DateTimeOffset)
  id: FormatToExtensionDateTime(System.DateTimeOffset)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: FormatToExtensionDateTime(DateTimeOffset)
  nameWithType: Extensions.FormatToExtensionDateTime(DateTimeOffset)
  fullName: Innovt.Core.Utilities.Extensions.FormatToExtensionDateTime(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatToExtensionDateTime
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 207
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a DateTimeOffset as a human-readable date and time string.
  example: []
  syntax:
    content: public static string FormatToExtensionDateTime(this DateTimeOffset value)
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: The DateTimeOffset to format.
    return:
      type: System.String
      description: A string representation of the DateTimeOffset in a custom format.
    content.vb: Public Shared Function FormatToExtensionDateTime(value As DateTimeOffset) As String
  overload: Innovt.Core.Utilities.Extensions.FormatToExtensionDateTime*
- uid: Innovt.Core.Utilities.Extensions.FormatToSimpleDateTime(System.DateTimeOffset)
  commentId: M:Innovt.Core.Utilities.Extensions.FormatToSimpleDateTime(System.DateTimeOffset)
  id: FormatToSimpleDateTime(System.DateTimeOffset)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: FormatToSimpleDateTime(DateTimeOffset)
  nameWithType: Extensions.FormatToSimpleDateTime(DateTimeOffset)
  fullName: Innovt.Core.Utilities.Extensions.FormatToSimpleDateTime(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatToSimpleDateTime
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 229
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a DateTimeOffset as a simple date and time string.
  example: []
  syntax:
    content: public static string FormatToSimpleDateTime(this DateTimeOffset value)
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: The DateTimeOffset to format.
    return:
      type: System.String
      description: A string representation of the DateTimeOffset in a simple format.
    content.vb: Public Shared Function FormatToSimpleDateTime(value As DateTimeOffset) As String
  overload: Innovt.Core.Utilities.Extensions.FormatToSimpleDateTime*
- uid: Innovt.Core.Utilities.Extensions.FormatToPeriod(System.DateTime,System.DateTime,System.Globalization.CultureInfo)
  commentId: M:Innovt.Core.Utilities.Extensions.FormatToPeriod(System.DateTime,System.DateTime,System.Globalization.CultureInfo)
  id: FormatToPeriod(System.DateTime,System.DateTime,System.Globalization.CultureInfo)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: FormatToPeriod(DateTime, DateTime, CultureInfo)
  nameWithType: Extensions.FormatToPeriod(DateTime, DateTime, CultureInfo)
  fullName: Innovt.Core.Utilities.Extensions.FormatToPeriod(System.DateTime, System.DateTime, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatToPeriod
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 245
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a date period between two DateTimes as a string.
  example: []
  syntax:
    content: public static string FormatToPeriod(this DateTime startDate, DateTime endDate, CultureInfo cultureInfo = null)
    parameters:
    - id: startDate
      type: System.DateTime
      description: The start date of the period.
    - id: endDate
      type: System.DateTime
      description: The end date of the period.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: Optional CultureInfo for formatting. Defaults to null.
    return:
      type: System.String
      description: A string representing the formatted date period.
    content.vb: Public Shared Function FormatToPeriod(startDate As Date, endDate As Date, cultureInfo As CultureInfo = Nothing) As String
  overload: Innovt.Core.Utilities.Extensions.FormatToPeriod*
  nameWithType.vb: Extensions.FormatToPeriod(Date, Date, CultureInfo)
  fullName.vb: Innovt.Core.Utilities.Extensions.FormatToPeriod(Date, Date, System.Globalization.CultureInfo)
  name.vb: FormatToPeriod(Date, Date, CultureInfo)
- uid: Innovt.Core.Utilities.Extensions.FromUnixTimestamp(System.Double)
  commentId: M:Innovt.Core.Utilities.Extensions.FromUnixTimestamp(System.Double)
  id: FromUnixTimestamp(System.Double)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: FromUnixTimestamp(double)
  nameWithType: Extensions.FromUnixTimestamp(double)
  fullName: Innovt.Core.Utilities.Extensions.FromUnixTimestamp(double)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FromUnixTimestamp
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 255
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a Unix timestamp (seconds since the Unix epoch) to a DateTime.
  example: []
  syntax:
    content: public static DateTime FromUnixTimestamp(this double unixTimestamp)
    parameters:
    - id: unixTimestamp
      type: System.Double
      description: The Unix timestamp to convert.
    return:
      type: System.DateTime
      description: A DateTime representing the converted date and time.
    content.vb: Public Shared Function FromUnixTimestamp(unixTimestamp As Double) As Date
  overload: Innovt.Core.Utilities.Extensions.FromUnixTimestamp*
  nameWithType.vb: Extensions.FromUnixTimestamp(Double)
  fullName.vb: Innovt.Core.Utilities.Extensions.FromUnixTimestamp(Double)
  name.vb: FromUnixTimestamp(Double)
- uid: Innovt.Core.Utilities.Extensions.ToUnixTimestamp(System.DateTime)
  commentId: M:Innovt.Core.Utilities.Extensions.ToUnixTimestamp(System.DateTime)
  id: ToUnixTimestamp(System.DateTime)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToUnixTimestamp(DateTime)
  nameWithType: Extensions.ToUnixTimestamp(DateTime)
  fullName: Innovt.Core.Utilities.Extensions.ToUnixTimestamp(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToUnixTimestamp
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 268
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a DateTime to a Unix timestamp (seconds since the Unix epoch).
  example: []
  syntax:
    content: public static double ToUnixTimestamp(this DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: The DateTime to convert.
    return:
      type: System.Double
      description: A double representing the Unix timestamp.
    content.vb: Public Shared Function ToUnixTimestamp(dateTime As Date) As Double
  overload: Innovt.Core.Utilities.Extensions.ToUnixTimestamp*
  nameWithType.vb: Extensions.ToUnixTimestamp(Date)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToUnixTimestamp(Date)
  name.vb: ToUnixTimestamp(Date)
- uid: Innovt.Core.Utilities.Extensions.ToUnixTimestamp(System.DateTimeOffset)
  commentId: M:Innovt.Core.Utilities.Extensions.ToUnixTimestamp(System.DateTimeOffset)
  id: ToUnixTimestamp(System.DateTimeOffset)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToUnixTimestamp(DateTimeOffset)
  nameWithType: Extensions.ToUnixTimestamp(DateTimeOffset)
  fullName: Innovt.Core.Utilities.Extensions.ToUnixTimestamp(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToUnixTimestamp
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 278
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a DateTimeOffset to a Unix timestamp (seconds since the Unix epoch).
  example: []
  syntax:
    content: public static double ToUnixTimestamp(this DateTimeOffset dateTime)
    parameters:
    - id: dateTime
      type: System.DateTimeOffset
      description: The DateTimeOffset to convert.
    return:
      type: System.Double
      description: A double representing the Unix timestamp.
    content.vb: Public Shared Function ToUnixTimestamp(dateTime As DateTimeOffset) As Double
  overload: Innovt.Core.Utilities.Extensions.ToUnixTimestamp*
- uid: Innovt.Core.Utilities.Extensions.FormatToPeriod(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo)
  commentId: M:Innovt.Core.Utilities.Extensions.FormatToPeriod(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo)
  id: FormatToPeriod(System.DateTimeOffset,System.DateTimeOffset,System.Globalization.CultureInfo)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: FormatToPeriod(DateTimeOffset, DateTimeOffset, CultureInfo)
  nameWithType: Extensions.FormatToPeriod(DateTimeOffset, DateTimeOffset, CultureInfo)
  fullName: Innovt.Core.Utilities.Extensions.FormatToPeriod(System.DateTimeOffset, System.DateTimeOffset, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatToPeriod
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 290
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a date period between two DateTimeOffset instances as a string, considering culture information.
  example: []
  syntax:
    content: public static string FormatToPeriod(this DateTimeOffset startDate, DateTimeOffset endDate, CultureInfo cultureInfo = null)
    parameters:
    - id: startDate
      type: System.DateTimeOffset
      description: The start date of the period.
    - id: endDate
      type: System.DateTimeOffset
      description: The end date of the period.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: Optional CultureInfo for formatting. Defaults to null.
    return:
      type: System.String
      description: A string representing the formatted date period.
    content.vb: Public Shared Function FormatToPeriod(startDate As DateTimeOffset, endDate As DateTimeOffset, cultureInfo As CultureInfo = Nothing) As String
  overload: Innovt.Core.Utilities.Extensions.FormatToPeriod*
- uid: Innovt.Core.Utilities.Extensions.ToTimeZone(System.DateTime,System.TimeSpan,System.TimeSpan)
  commentId: M:Innovt.Core.Utilities.Extensions.ToTimeZone(System.DateTime,System.TimeSpan,System.TimeSpan)
  id: ToTimeZone(System.DateTime,System.TimeSpan,System.TimeSpan)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToTimeZone(DateTime, TimeSpan, TimeSpan)
  nameWithType: Extensions.ToTimeZone(DateTime, TimeSpan, TimeSpan)
  fullName: Innovt.Core.Utilities.Extensions.ToTimeZone(System.DateTime, System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToTimeZone
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 350
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts one timezone to another using the offset difference.
  example: []
  syntax:
    content: public static DateTime ToTimeZone(this DateTime sourceDateTime, TimeSpan sourceOffset, TimeSpan targetOffset)
    parameters:
    - id: sourceDateTime
      type: System.DateTime
      description: The datetime without timezone
    - id: sourceOffset
      type: System.TimeSpan
      description: The offset from the source
    - id: targetOffset
      type: System.TimeSpan
      description: The final offset.
    return:
      type: System.DateTime
      description: A DateTime with the difference.
    content.vb: Public Shared Function ToTimeZone(sourceDateTime As Date, sourceOffset As TimeSpan, targetOffset As TimeSpan) As Date
  overload: Innovt.Core.Utilities.Extensions.ToTimeZone*
  nameWithType.vb: Extensions.ToTimeZone(Date, TimeSpan, TimeSpan)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToTimeZone(Date, System.TimeSpan, System.TimeSpan)
  name.vb: ToTimeZone(Date, TimeSpan, TimeSpan)
- uid: Innovt.Core.Utilities.Extensions.ToTimeZone(System.DateTimeOffset,System.TimeSpan)
  commentId: M:Innovt.Core.Utilities.Extensions.ToTimeZone(System.DateTimeOffset,System.TimeSpan)
  id: ToTimeZone(System.DateTimeOffset,System.TimeSpan)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToTimeZone(DateTimeOffset, TimeSpan)
  nameWithType: Extensions.ToTimeZone(DateTimeOffset, TimeSpan)
  fullName: Innovt.Core.Utilities.Extensions.ToTimeZone(System.DateTimeOffset, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToTimeZone
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 364
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts one timezone to another using the offset difference.
  example: []
  syntax:
    content: public static DateTime ToTimeZone(this DateTimeOffset sourceDateTime, TimeSpan targetOffset)
    parameters:
    - id: sourceDateTime
      type: System.DateTimeOffset
      description: The datetime without timezone
    - id: targetOffset
      type: System.TimeSpan
      description: The final offset.
    return:
      type: System.DateTime
      description: A DateTime with the difference.
    content.vb: Public Shared Function ToTimeZone(sourceDateTime As DateTimeOffset, targetOffset As TimeSpan) As Date
  overload: Innovt.Core.Utilities.Extensions.ToTimeZone*
- uid: Innovt.Core.Utilities.Extensions.ToYesNo(System.Boolean)
  commentId: M:Innovt.Core.Utilities.Extensions.ToYesNo(System.Boolean)
  id: ToYesNo(System.Boolean)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToYesNo(bool)
  nameWithType: Extensions.ToYesNo(bool)
  fullName: Innovt.Core.Utilities.Extensions.ToYesNo(bool)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToYesNo
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 374
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a boolean value to a "Sim" (Yes) or "Não" (No) string representation.
  example: []
  syntax:
    content: public static string ToYesNo(this bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: The boolean value to convert.
    return:
      type: System.String
      description: "\"Sim\" if the value is true; otherwise, \"Não\"."
    content.vb: Public Shared Function ToYesNo(value As Boolean) As String
  overload: Innovt.Core.Utilities.Extensions.ToYesNo*
  nameWithType.vb: Extensions.ToYesNo(Boolean)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToYesNo(Boolean)
  name.vb: ToYesNo(Boolean)
- uid: Innovt.Core.Utilities.Extensions.ConvertToStringArray(System.Int32)
  commentId: M:Innovt.Core.Utilities.Extensions.ConvertToStringArray(System.Int32)
  id: ConvertToStringArray(System.Int32)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ConvertToStringArray(int)
  nameWithType: Extensions.ConvertToStringArray(int)
  fullName: Innovt.Core.Utilities.Extensions.ConvertToStringArray(int)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConvertToStringArray
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 384
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts an integer value to a string array containing numbers from 0 to the specified value.
  example: []
  syntax:
    content: public static string[] ConvertToStringArray(this int value)
    parameters:
    - id: value
      type: System.Int32
      description: The integer value specifying the upper bound of the array.
    return:
      type: System.String[]
      description: An array of strings containing numbers from 0 to the specified value.
    content.vb: Public Shared Function ConvertToStringArray(value As Integer) As String()
  overload: Innovt.Core.Utilities.Extensions.ConvertToStringArray*
  nameWithType.vb: Extensions.ConvertToStringArray(Integer)
  fullName.vb: Innovt.Core.Utilities.Extensions.ConvertToStringArray(Integer)
  name.vb: ConvertToStringArray(Integer)
- uid: Innovt.Core.Utilities.Extensions.StartOfWeek(System.DateTimeOffset,System.DayOfWeek)
  commentId: M:Innovt.Core.Utilities.Extensions.StartOfWeek(System.DateTimeOffset,System.DayOfWeek)
  id: StartOfWeek(System.DateTimeOffset,System.DayOfWeek)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: StartOfWeek(DateTimeOffset, DayOfWeek)
  nameWithType: Extensions.StartOfWeek(DateTimeOffset, DayOfWeek)
  fullName: Innovt.Core.Utilities.Extensions.StartOfWeek(System.DateTimeOffset, System.DayOfWeek)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: StartOfWeek
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 399
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Calculates the start of the week for a given DateTimeOffset based on the specified DayOfWeek.
  example: []
  syntax:
    content: public static DateTimeOffset StartOfWeek(this DateTimeOffset dt, DayOfWeek startOfWeek)
    parameters:
    - id: dt
      type: System.DateTimeOffset
      description: The DateTimeOffset for which to find the start of the week.
    - id: startOfWeek
      type: System.DayOfWeek
      description: The DayOfWeek that defines the start of the week.
    return:
      type: System.DateTimeOffset
      description: The DateTimeOffset representing the start of the week.
    content.vb: Public Shared Function StartOfWeek(dt As DateTimeOffset, startOfWeek As DayOfWeek) As DateTimeOffset
  overload: Innovt.Core.Utilities.Extensions.StartOfWeek*
- uid: Innovt.Core.Utilities.Extensions.OnlyDate(System.DateTimeOffset)
  commentId: M:Innovt.Core.Utilities.Extensions.OnlyDate(System.DateTimeOffset)
  id: OnlyDate(System.DateTimeOffset)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: OnlyDate(DateTimeOffset)
  nameWithType: Extensions.OnlyDate(DateTimeOffset)
  fullName: Innovt.Core.Utilities.Extensions.OnlyDate(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: OnlyDate
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 413
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: >-
    Returns a DateTimeOffset with the same date as the input DateTimeOffset but with the time set to midnight

    (00:00:00).
  example: []
  syntax:
    content: public static DateTimeOffset OnlyDate(this DateTimeOffset now)
    parameters:
    - id: now
      type: System.DateTimeOffset
      description: The input DateTimeOffset.
    return:
      type: System.DateTimeOffset
      description: A DateTimeOffset with the same date and midnight time.
    content.vb: Public Shared Function OnlyDate(now As DateTimeOffset) As DateTimeOffset
  overload: Innovt.Core.Utilities.Extensions.OnlyDate*
- uid: Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone(System.DateTime)
  commentId: M:Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone(System.DateTime)
  id: ToBrazilianTimeZone(System.DateTime)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToBrazilianTimeZone(DateTime)
  nameWithType: Extensions.ToBrazilianTimeZone(DateTime)
  fullName: Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToBrazilianTimeZone
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 423
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a DateTime to the Brazilian time zone (UTC-3).
  example: []
  syntax:
    content: public static DateTime ToBrazilianTimeZone(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
      description: The DateTime to convert.
    return:
      type: System.DateTime
      description: The DateTime converted to the Brazilian time zone.
    content.vb: Public Shared Function ToBrazilianTimeZone([date] As Date) As Date
  overload: Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone*
  nameWithType.vb: Extensions.ToBrazilianTimeZone(Date)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone(Date)
  name.vb: ToBrazilianTimeZone(Date)
- uid: Innovt.Core.Utilities.Extensions.MaskCreditCard(System.String)
  commentId: M:Innovt.Core.Utilities.Extensions.MaskCreditCard(System.String)
  id: MaskCreditCard(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: MaskCreditCard(string)
  nameWithType: Extensions.MaskCreditCard(string)
  fullName: Innovt.Core.Utilities.Extensions.MaskCreditCard(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MaskCreditCard
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 435
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Masks the credit card number by replacing the middle digits with asterisks.
  example: []
  syntax:
    content: public static string MaskCreditCard(this string number)
    parameters:
    - id: number
      type: System.String
      description: The credit card number to mask.
    return:
      type: System.String
      description: The masked credit card number.
    content.vb: Public Shared Function MaskCreditCard(number As String) As String
  overload: Innovt.Core.Utilities.Extensions.MaskCreditCard*
  nameWithType.vb: Extensions.MaskCreditCard(String)
  fullName.vb: Innovt.Core.Utilities.Extensions.MaskCreditCard(String)
  name.vb: MaskCreditCard(String)
- uid: Innovt.Core.Utilities.Extensions.FromByteArray``1(System.Byte[])
  commentId: M:Innovt.Core.Utilities.Extensions.FromByteArray``1(System.Byte[])
  id: FromByteArray``1(System.Byte[])
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: FromByteArray<T>(byte[])
  nameWithType: Extensions.FromByteArray<T>(byte[])
  fullName: Innovt.Core.Utilities.Extensions.FromByteArray<T>(byte[])
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FromByteArray
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 461
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Deserializes a byte array into an object of the specified type.
  example: []
  syntax:
    content: public static T FromByteArray<T>(this byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: The byte array containing serialized data.
    typeParameters:
    - id: T
      description: The type of object to deserialize into.
    return:
      type: '{T}'
      description: The deserialized object of type T.
    content.vb: Public Shared Function FromByteArray(Of T)(data As Byte()) As T
  overload: Innovt.Core.Utilities.Extensions.FromByteArray*
  nameWithType.vb: Extensions.FromByteArray(Of T)(Byte())
  fullName.vb: Innovt.Core.Utilities.Extensions.FromByteArray(Of T)(Byte())
  name.vb: FromByteArray(Of T)(Byte())
- uid: Innovt.Core.Utilities.Extensions.ToDataUriBase64(System.IO.Stream,System.String)
  commentId: M:Innovt.Core.Utilities.Extensions.ToDataUriBase64(System.IO.Stream,System.String)
  id: ToDataUriBase64(System.IO.Stream,System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToDataUriBase64(Stream, string)
  nameWithType: Extensions.ToDataUriBase64(Stream, string)
  fullName: Innovt.Core.Utilities.Extensions.ToDataUriBase64(System.IO.Stream, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDataUriBase64
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 478
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a uri base 64 pattern
  example: []
  syntax:
    content: public static string ToDataUriBase64(this Stream stream, string mimeType)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The Stream file.
    - id: mimeType
      type: System.String
      description: The stream mimeType
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ToDataUriBase64(stream As Stream, mimeType As String) As String
  overload: Innovt.Core.Utilities.Extensions.ToDataUriBase64*
  nameWithType.vb: Extensions.ToDataUriBase64(Stream, String)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToDataUriBase64(System.IO.Stream, String)
  name.vb: ToDataUriBase64(Stream, String)
- uid: Innovt.Core.Utilities.Extensions.ToBase64(System.IO.Stream)
  commentId: M:Innovt.Core.Utilities.Extensions.ToBase64(System.IO.Stream)
  id: ToBase64(System.IO.Stream)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: ToBase64(Stream)
  nameWithType: Extensions.ToBase64(Stream)
  fullName: Innovt.Core.Utilities.Extensions.ToBase64(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToBase64
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 493
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a stream to a base 64 string
  example: []
  syntax:
    content: public static string ToBase64(this Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ToBase64(stream As Stream) As String
  overload: Innovt.Core.Utilities.Extensions.ToBase64*
- uid: Innovt.Core.Utilities.Extensions.GetMimeType(System.String)
  commentId: M:Innovt.Core.Utilities.Extensions.GetMimeType(System.String)
  id: GetMimeType(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: GetMimeType(string)
  nameWithType: Extensions.GetMimeType(string)
  fullName: Innovt.Core.Utilities.Extensions.GetMimeType(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetMimeType
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 508
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Returns a mimetype based on the file extension
  example: []
  syntax:
    content: public static string GetMimeType(this string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetMimeType(fileName As String) As String
  overload: Innovt.Core.Utilities.Extensions.GetMimeType*
  nameWithType.vb: Extensions.GetMimeType(String)
  fullName.vb: Innovt.Core.Utilities.Extensions.GetMimeType(String)
  name.vb: GetMimeType(String)
- uid: Innovt.Core.Utilities.Extensions.CopyTo(System.IO.Stream,System.IO.Stream)
  commentId: M:Innovt.Core.Utilities.Extensions.CopyTo(System.IO.Stream,System.IO.Stream)
  id: CopyTo(System.IO.Stream,System.IO.Stream)
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: CopyTo(Stream, Stream)
  nameWithType: Extensions.CopyTo(Stream, Stream)
  fullName: Innovt.Core.Utilities.Extensions.CopyTo(System.IO.Stream, System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CopyTo
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 529
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Copies data from one stream to another.
  example: []
  syntax:
    content: public static void CopyTo(Stream src, Stream dest)
    parameters:
    - id: src
      type: System.IO.Stream
      description: The source stream to copy from.
    - id: dest
      type: System.IO.Stream
      description: The destination stream to copy to.
    content.vb: Public Shared Sub CopyTo(src As Stream, dest As Stream)
  overload: Innovt.Core.Utilities.Extensions.CopyTo*
- uid: Innovt.Core.Utilities.Extensions.Zip(System.String)
  commentId: M:Innovt.Core.Utilities.Extensions.Zip(System.String)
  id: Zip(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: Zip(string)
  nameWithType: Extensions.Zip(string)
  fullName: Innovt.Core.Utilities.Extensions.Zip(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Zip
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 543
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compresses a string into a byte array using GZip compression.
  example: []
  syntax:
    content: public static byte[] Zip(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to compress.
    return:
      type: System.Byte[]
      description: The compressed byte array.
    content.vb: Public Shared Function Zip(str As String) As Byte()
  overload: Innovt.Core.Utilities.Extensions.Zip*
  nameWithType.vb: Extensions.Zip(String)
  fullName.vb: Innovt.Core.Utilities.Extensions.Zip(String)
  name.vb: Zip(String)
- uid: Innovt.Core.Utilities.Extensions.Zip(System.Byte[])
  commentId: M:Innovt.Core.Utilities.Extensions.Zip(System.Byte[])
  id: Zip(System.Byte[])
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: Zip(byte[])
  nameWithType: Extensions.Zip(byte[])
  fullName: Innovt.Core.Utilities.Extensions.Zip(byte[])
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Zip
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 553
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Compresses a byte array using GZip compression.
  example: []
  syntax:
    content: public static byte[] Zip(this byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: The byte array to compress.
    return:
      type: System.Byte[]
      description: The compressed byte array.
    content.vb: Public Shared Function Zip(bytes As Byte()) As Byte()
  overload: Innovt.Core.Utilities.Extensions.Zip*
  nameWithType.vb: Extensions.Zip(Byte())
  fullName.vb: Innovt.Core.Utilities.Extensions.Zip(Byte())
  name.vb: Zip(Byte())
- uid: Innovt.Core.Utilities.Extensions.Unzip(System.Byte[])
  commentId: M:Innovt.Core.Utilities.Extensions.Unzip(System.Byte[])
  id: Unzip(System.Byte[])
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.Extensions
  langs:
  - csharp
  - vb
  name: Unzip(byte[])
  nameWithType: Extensions.Unzip(byte[])
  fullName: Innovt.Core.Utilities.Extensions.Unzip(byte[])
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/Extensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Unzip
    path: ../src/Innovt.Core/Utilities/Extensions.cs
    startLine: 570
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Decompresses a compressed byte array using GZip compression into a string.
  example: []
  syntax:
    content: public static string Unzip(this byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: The compressed byte array to decompress.
    return:
      type: System.String
      description: The decompressed string.
    content.vb: Public Shared Function Unzip(bytes As Byte()) As String
  overload: Innovt.Core.Utilities.Extensions.Unzip*
  nameWithType.vb: Extensions.Unzip(Byte())
  fullName.vb: Innovt.Core.Utilities.Extensions.Unzip(Byte())
  name.vb: Unzip(Byte())
references:
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull*
  commentId: Overload:Innovt.Core.Utilities.Extensions.IsNull
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull
  nameWithType: Extensions.IsNull
  fullName: Innovt.Core.Utilities.Extensions.IsNull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ToStringOrDefault
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault
  nameWithType: Extensions.ToStringOrDefault
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Core.Utilities.Extensions.IsGuidEmpty*
  commentId: Overload:Innovt.Core.Utilities.Extensions.IsGuidEmpty
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsGuidEmpty_System_Guid_
  name: IsGuidEmpty
  nameWithType: Extensions.IsGuidEmpty
  fullName: Innovt.Core.Utilities.Extensions.IsGuidEmpty
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Innovt.Core.Utilities.Extensions.IsGuidNUllOrEmpty*
  commentId: Overload:Innovt.Core.Utilities.Extensions.IsGuidNUllOrEmpty
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsGuidNUllOrEmpty_System_Nullable_System_Guid__
  name: IsGuidNUllOrEmpty
  nameWithType: Extensions.IsGuidNUllOrEmpty
  fullName: Innovt.Core.Utilities.Extensions.IsGuidNUllOrEmpty
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero*
  commentId: Overload:Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsLessThanOrEqualToZero_System_Int32_
  name: IsLessThanOrEqualToZero
  nameWithType: Extensions.IsLessThanOrEqualToZero
  fullName: Innovt.Core.Utilities.Extensions.IsLessThanOrEqualToZero
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Innovt.Core.Utilities.Extensions.IsPrimitiveType*
  commentId: Overload:Innovt.Core.Utilities.Extensions.IsPrimitiveType
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsPrimitiveType_System_Type_
  name: IsPrimitiveType
  nameWithType: Extensions.IsPrimitiveType
  fullName: Innovt.Core.Utilities.Extensions.IsPrimitiveType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Innovt.Core.Utilities.Extensions.ExtractCoordinates*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ExtractCoordinates
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ExtractCoordinates_System_String_System_Char_
  name: ExtractCoordinates
  nameWithType: Extensions.ExtractCoordinates
  fullName: Innovt.Core.Utilities.Extensions.ExtractCoordinates
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.ValueTuple{System.Int64,System.Int64}
  commentId: T:System.ValueTuple{System.Int64,System.Int64}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: (long Latitude, long Longitude)
  nameWithType: (long Latitude, long Longitude)
  fullName: (long Latitude, long Longitude)
  nameWithType.vb: (Latitude As Long, Longitude As Long)
  fullName.vb: (Latitude As Long, Longitude As Long)
  name.vb: (Latitude As Long, Longitude As Long)
  spec.csharp:
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Int64}.Latitude
    name: Latitude
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.int64-.latitude
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Int64}.Longitude
    name: Longitude
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.int64-.longitude
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int64,System.Int64}.Latitude
    name: Latitude
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.int64-.latitude
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int64,System.Int64}.Longitude
    name: Longitude
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int64,system.int64-.longitude
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Innovt.Core.Utilities.Extensions.MillisecondToDateTime*
  commentId: Overload:Innovt.Core.Utilities.Extensions.MillisecondToDateTime
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_MillisecondToDateTime_System_Double_
  name: MillisecondToDateTime
  nameWithType: Extensions.MillisecondToDateTime
  fullName: Innovt.Core.Utilities.Extensions.MillisecondToDateTime
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset?
  nameWithType: DateTimeOffset?
  fullName: System.DateTimeOffset?
  spec.csharp:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
  spec.vb:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
- uid: Innovt.Core.Utilities.Extensions.FormatToCurrency*
  commentId: Overload:Innovt.Core.Utilities.Extensions.FormatToCurrency
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_FormatToCurrency_System_Decimal_
  name: FormatToCurrency
  nameWithType: Extensions.FormatToCurrency
  fullName: Innovt.Core.Utilities.Extensions.FormatToCurrency
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: Innovt.Core.Utilities.Extensions.LastDayOfMonth*
  commentId: Overload:Innovt.Core.Utilities.Extensions.LastDayOfMonth
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_LastDayOfMonth_System_DateTimeOffset_
  name: LastDayOfMonth
  nameWithType: Extensions.LastDayOfMonth
  fullName: Innovt.Core.Utilities.Extensions.LastDayOfMonth
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Innovt.Core.Utilities.Extensions.FormatToExtensionDateTime*
  commentId: Overload:Innovt.Core.Utilities.Extensions.FormatToExtensionDateTime
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_FormatToExtensionDateTime_System_DateTimeOffset_
  name: FormatToExtensionDateTime
  nameWithType: Extensions.FormatToExtensionDateTime
  fullName: Innovt.Core.Utilities.Extensions.FormatToExtensionDateTime
- uid: Innovt.Core.Utilities.Extensions.FormatToSimpleDateTime*
  commentId: Overload:Innovt.Core.Utilities.Extensions.FormatToSimpleDateTime
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_FormatToSimpleDateTime_System_DateTimeOffset_
  name: FormatToSimpleDateTime
  nameWithType: Extensions.FormatToSimpleDateTime
  fullName: Innovt.Core.Utilities.Extensions.FormatToSimpleDateTime
- uid: Innovt.Core.Utilities.Extensions.FormatToPeriod*
  commentId: Overload:Innovt.Core.Utilities.Extensions.FormatToPeriod
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_FormatToPeriod_System_DateTime_System_DateTime_System_Globalization_CultureInfo_
  name: FormatToPeriod
  nameWithType: Extensions.FormatToPeriod
  fullName: Innovt.Core.Utilities.Extensions.FormatToPeriod
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: Innovt.Core.Utilities.Extensions.FromUnixTimestamp*
  commentId: Overload:Innovt.Core.Utilities.Extensions.FromUnixTimestamp
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_FromUnixTimestamp_System_Double_
  name: FromUnixTimestamp
  nameWithType: Extensions.FromUnixTimestamp
  fullName: Innovt.Core.Utilities.Extensions.FromUnixTimestamp
- uid: Innovt.Core.Utilities.Extensions.ToUnixTimestamp*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ToUnixTimestamp
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToUnixTimestamp_System_DateTime_
  name: ToUnixTimestamp
  nameWithType: Extensions.ToUnixTimestamp
  fullName: Innovt.Core.Utilities.Extensions.ToUnixTimestamp
- uid: Innovt.Core.Utilities.Extensions.ToTimeZone*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ToTimeZone
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToTimeZone_System_DateTime_System_TimeSpan_System_TimeSpan_
  name: ToTimeZone
  nameWithType: Extensions.ToTimeZone
  fullName: Innovt.Core.Utilities.Extensions.ToTimeZone
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Innovt.Core.Utilities.Extensions.ToYesNo*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ToYesNo
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToYesNo_System_Boolean_
  name: ToYesNo
  nameWithType: Extensions.ToYesNo
  fullName: Innovt.Core.Utilities.Extensions.ToYesNo
- uid: Innovt.Core.Utilities.Extensions.ConvertToStringArray*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ConvertToStringArray
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ConvertToStringArray_System_Int32_
  name: ConvertToStringArray
  nameWithType: Extensions.ConvertToStringArray
  fullName: Innovt.Core.Utilities.Extensions.ConvertToStringArray
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Innovt.Core.Utilities.Extensions.StartOfWeek*
  commentId: Overload:Innovt.Core.Utilities.Extensions.StartOfWeek
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_StartOfWeek_System_DateTimeOffset_System_DayOfWeek_
  name: StartOfWeek
  nameWithType: Extensions.StartOfWeek
  fullName: Innovt.Core.Utilities.Extensions.StartOfWeek
- uid: System.DayOfWeek
  commentId: T:System.DayOfWeek
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: Innovt.Core.Utilities.Extensions.OnlyDate*
  commentId: Overload:Innovt.Core.Utilities.Extensions.OnlyDate
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_OnlyDate_System_DateTimeOffset_
  name: OnlyDate
  nameWithType: Extensions.OnlyDate
  fullName: Innovt.Core.Utilities.Extensions.OnlyDate
- uid: Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToBrazilianTimeZone_System_DateTime_
  name: ToBrazilianTimeZone
  nameWithType: Extensions.ToBrazilianTimeZone
  fullName: Innovt.Core.Utilities.Extensions.ToBrazilianTimeZone
- uid: Innovt.Core.Utilities.Extensions.MaskCreditCard*
  commentId: Overload:Innovt.Core.Utilities.Extensions.MaskCreditCard
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_MaskCreditCard_System_String_
  name: MaskCreditCard
  nameWithType: Extensions.MaskCreditCard
  fullName: Innovt.Core.Utilities.Extensions.MaskCreditCard
- uid: Innovt.Core.Utilities.Extensions.FromByteArray*
  commentId: Overload:Innovt.Core.Utilities.Extensions.FromByteArray
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_FromByteArray__1_System_Byte___
  name: FromByteArray
  nameWithType: Extensions.FromByteArray
  fullName: Innovt.Core.Utilities.Extensions.FromByteArray
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Core.Utilities.Extensions.ToDataUriBase64*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ToDataUriBase64
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToDataUriBase64_System_IO_Stream_System_String_
  name: ToDataUriBase64
  nameWithType: Extensions.ToDataUriBase64
  fullName: Innovt.Core.Utilities.Extensions.ToDataUriBase64
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Innovt.Core.Utilities.Extensions.ToBase64*
  commentId: Overload:Innovt.Core.Utilities.Extensions.ToBase64
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToBase64_System_IO_Stream_
  name: ToBase64
  nameWithType: Extensions.ToBase64
  fullName: Innovt.Core.Utilities.Extensions.ToBase64
- uid: Innovt.Core.Utilities.Extensions.GetMimeType*
  commentId: Overload:Innovt.Core.Utilities.Extensions.GetMimeType
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_GetMimeType_System_String_
  name: GetMimeType
  nameWithType: Extensions.GetMimeType
  fullName: Innovt.Core.Utilities.Extensions.GetMimeType
- uid: Innovt.Core.Utilities.Extensions.CopyTo*
  commentId: Overload:Innovt.Core.Utilities.Extensions.CopyTo
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_CopyTo_System_IO_Stream_System_IO_Stream_
  name: CopyTo
  nameWithType: Extensions.CopyTo
  fullName: Innovt.Core.Utilities.Extensions.CopyTo
- uid: Innovt.Core.Utilities.Extensions.Zip*
  commentId: Overload:Innovt.Core.Utilities.Extensions.Zip
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_Zip_System_String_
  name: Zip
  nameWithType: Extensions.Zip
  fullName: Innovt.Core.Utilities.Extensions.Zip
- uid: Innovt.Core.Utilities.Extensions.Unzip*
  commentId: Overload:Innovt.Core.Utilities.Extensions.Unzip
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_Unzip_System_Byte___
  name: Unzip
  nameWithType: Extensions.Unzip
  fullName: Innovt.Core.Utilities.Extensions.Unzip
