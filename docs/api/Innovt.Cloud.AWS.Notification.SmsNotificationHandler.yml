### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  commentId: T:Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  id: SmsNotificationHandler
  parent: Innovt.Cloud.AWS.Notification
  children:
  - Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  - Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  - Innovt.Cloud.AWS.Notification.SmsNotificationHandler.DisposeServices
  - Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SmsNotificationHandler
  nameWithType: SmsNotificationHandler
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  type: Class
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SmsNotificationHandler
    path: ../src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
    startLine: 20
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: SMS notification handler using Amazon Simple Notification Service (SNS).
  example: []
  syntax:
    content: 'public class SmsNotificationHandler : AwsBaseService, IDisposable, INotificationHandler'
    content.vb: Public Class SmsNotificationHandler Inherits AwsBaseService Implements IDisposable, INotificationHandler
  inheritance:
  - System.Object
  - Innovt.Cloud.AWS.AwsBaseService
  implements:
  - System.IDisposable
  - Innovt.Notification.Core.INotificationHandler
  inheritedMembers:
  - Innovt.Cloud.AWS.AwsBaseService.Configuration
  - Innovt.Cloud.AWS.AwsBaseService.Logger
  - Innovt.Cloud.AWS.AwsBaseService.Dispose
  - Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  - Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  - Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  - Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  - Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  - Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  commentId: M:Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)'
  parent: Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  langs:
  - csharp
  - vb
  name: SmsNotificationHandler(ILogger, IAwsConfiguration)
  nameWithType: SmsNotificationHandler.SmsNotificationHandler(ILogger, IAwsConfiguration)
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SmsNotificationHandler(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
    startLine: 29
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.Notification.SmsNotificationHandler" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public SmsNotificationHandler(ILogger logger, IAwsConfiguration configuration)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger.
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
      description: The AWS configuration.
    content.vb: Public Sub New(logger As ILogger, configuration As IAwsConfiguration)
  overload: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor*
  nameWithType.vb: SmsNotificationHandler.New(ILogger, IAwsConfiguration)
  fullName.vb: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  name.vb: New(ILogger, IAwsConfiguration)
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  commentId: M:Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)'
  parent: Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  langs:
  - csharp
  - vb
  name: SmsNotificationHandler(ILogger, IAwsConfiguration, string)
  nameWithType: SmsNotificationHandler.SmsNotificationHandler(ILogger, IAwsConfiguration, string)
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SmsNotificationHandler(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
    startLine: 39
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.Notification.SmsNotificationHandler" data-throw-if-not-resolved="false"></xref> class with a specific AWS region.
  example: []
  syntax:
    content: public SmsNotificationHandler(ILogger logger, IAwsConfiguration configuration, string region)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger.
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
      description: The AWS configuration.
    - id: region
      type: System.String
      description: The AWS region.
    content.vb: Public Sub New(logger As ILogger, configuration As IAwsConfiguration, region As String)
  overload: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor*
  nameWithType.vb: SmsNotificationHandler.New(ILogger, IAwsConfiguration, String)
  fullName.vb: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, String)
  name.vb: New(ILogger, IAwsConfiguration, String)
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
  id: SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  langs:
  - csharp
  - vb
  name: SendAsync(NotificationMessage, CancellationToken)
  nameWithType: SmsNotificationHandler.SendAsync(NotificationMessage, CancellationToken)
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SendAsync
    path: ../src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
    startLine: 64
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: Sends an SMS notification asynchronously.
  example: []
  syntax:
    content: public Task<dynamic> SendAsync(NotificationMessage message, CancellationToken cancellationToken = default)
    parameters:
    - id: message
      type: Innovt.Notification.Core.Domain.NotificationMessage
      description: The notification message.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: A dynamic result representing the delivery status of the SMS.
    content.vb: Public Function SendAsync(message As NotificationMessage, cancellationToken As CancellationToken = Nothing) As Task(Of Object)
  overload: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SendAsync*
  implements:
  - Innovt.Notification.Core.INotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.DisposeServices
  commentId: M:Innovt.Cloud.AWS.Notification.SmsNotificationHandler.DisposeServices
  id: DisposeServices
  parent: Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  langs:
  - csharp
  - vb
  name: DisposeServices()
  nameWithType: SmsNotificationHandler.DisposeServices()
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.DisposeServices()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DisposeServices
    path: ../src/Innovt.Cloud.AWS.Notification/SmsNotificationHandler.cs
    startLine: 95
  assemblies:
  - Innovt.Cloud.AWS.Notification
  namespace: Innovt.Cloud.AWS.Notification
  summary: Disposes the resources used by the SMS notification handler.
  example: []
  syntax:
    content: protected override void DisposeServices()
    content.vb: Protected Overrides Sub DisposeServices()
  overridden: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  overload: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.DisposeServices*
references:
- uid: Innovt.Cloud.AWS.Notification
  commentId: N:Innovt.Cloud.AWS.Notification
  href: Innovt.html
  name: Innovt.Cloud.AWS.Notification
  nameWithType: Innovt.Cloud.AWS.Notification
  fullName: Innovt.Cloud.AWS.Notification
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Notification
    name: Notification
    href: Innovt.Cloud.AWS.Notification.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Notification
    name: Notification
    href: Innovt.Cloud.AWS.Notification.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Innovt.Cloud.AWS.AwsBaseService
  commentId: T:Innovt.Cloud.AWS.AwsBaseService
  parent: Innovt.Cloud.AWS
  href: Innovt.Cloud.AWS.AwsBaseService.html
  name: AwsBaseService
  nameWithType: AwsBaseService
  fullName: Innovt.Cloud.AWS.AwsBaseService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Innovt.Notification.Core.INotificationHandler
  commentId: T:Innovt.Notification.Core.INotificationHandler
  parent: Innovt.Notification.Core
  href: Innovt.Notification.Core.INotificationHandler.html
  name: INotificationHandler
  nameWithType: INotificationHandler
  fullName: Innovt.Notification.Core.INotificationHandler
- uid: Innovt.Cloud.AWS.AwsBaseService.Configuration
  commentId: F:Innovt.Cloud.AWS.AwsBaseService.Configuration
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Configuration
  name: Configuration
  nameWithType: AwsBaseService.Configuration
  fullName: Innovt.Cloud.AWS.AwsBaseService.Configuration
- uid: Innovt.Cloud.AWS.AwsBaseService.Logger
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.Logger
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Logger
  name: Logger
  nameWithType: AwsBaseService.Logger
  fullName: Innovt.Cloud.AWS.AwsBaseService.Logger
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Dispose
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  name: Dispose()
  nameWithType: AwsBaseService.Dispose()
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  name: GetServiceRegionEndPoint()
  nameWithType: AwsBaseService.GetServiceRegionEndPoint()
  fullName: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
    name: GetServiceRegionEndPoint
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
    name: GetServiceRegionEndPoint
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  name: CreateService<T>()
  nameWithType: AwsBaseService.CreateService<T>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateService<T>()
  nameWithType.vb: AwsBaseService.CreateService(Of T)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateService(Of T)()
  name.vb: CreateService(Of T)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
    name: CreateService
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
    name: CreateService
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  name: CreateDefaultRetryAsyncPolicy()
  nameWithType: AwsBaseService.CreateDefaultRetryAsyncPolicy()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
    name: CreateDefaultRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
    name: CreateDefaultRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  name: CreateDefaultRetryPolicy()
  nameWithType: AwsBaseService.CreateDefaultRetryPolicy()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
    name: CreateDefaultRetryPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
    name: CreateDefaultRetryPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  name: CreateRetryAsyncPolicy<T>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T)()
  name.vb: CreateRetryAsyncPolicy(Of T)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  name: CreateRetryAsyncPolicy<T, T1>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  name: CreateRetryAsyncPolicy<T, T1, T2>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  name: CreateRetryAsyncPolicy<T, T1, T2, T3>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  name: CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  name: CreateCircuitBreaker<T, T1>()
  nameWithType: AwsBaseService.CreateCircuitBreaker<T, T1>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker<T, T1>()
  nameWithType.vb: AwsBaseService.CreateCircuitBreaker(Of T, T1)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker(Of T, T1)()
  name.vb: CreateCircuitBreaker(Of T, T1)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
    name: CreateCircuitBreaker
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
    name: CreateCircuitBreaker
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  parent: Innovt.Cloud.AWS.AwsBaseService
  isExternal: true
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  name: Dispose(bool)
  nameWithType: AwsBaseService.Dispose(bool)
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose(bool)
  nameWithType.vb: AwsBaseService.Dispose(Boolean)
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Cloud.AWS
  commentId: N:Innovt.Cloud.AWS
  href: Innovt.html
  name: Innovt.Cloud.AWS
  nameWithType: Innovt.Cloud.AWS
  fullName: Innovt.Cloud.AWS
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
- uid: Innovt.Notification.Core
  commentId: N:Innovt.Notification.Core
  href: Innovt.html
  name: Innovt.Notification.Core
  nameWithType: Innovt.Notification.Core
  fullName: Innovt.Notification.Core
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Notification
    name: Notification
    href: Innovt.Notification.html
  - name: .
  - uid: Innovt.Notification.Core
    name: Core
    href: Innovt.Notification.Core.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Notification
    name: Notification
    href: Innovt.Notification.html
  - name: .
  - uid: Innovt.Notification.Core
    name: Core
    href: Innovt.Notification.Core.html
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  commentId: T:Innovt.Cloud.AWS.Notification.SmsNotificationHandler
  href: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.html
  name: SmsNotificationHandler
  nameWithType: SmsNotificationHandler
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor*
  commentId: Overload:Innovt.Cloud.AWS.Notification.SmsNotificationHandler.#ctor
  href: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.html#Innovt_Cloud_AWS_Notification_SmsNotificationHandler__ctor_Innovt_Core_CrossCutting_Log_ILogger_Innovt_Cloud_AWS_Configuration_IAwsConfiguration_
  name: SmsNotificationHandler
  nameWithType: SmsNotificationHandler.SmsNotificationHandler
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SmsNotificationHandler
  nameWithType.vb: SmsNotificationHandler.New
  fullName.vb: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.New
  name.vb: New
- uid: Innovt.Core.CrossCutting.Log.ILogger
  commentId: T:Innovt.Core.CrossCutting.Log.ILogger
  parent: Innovt.Core.CrossCutting.Log
  href: Innovt.Core.CrossCutting.Log.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Innovt.Core.CrossCutting.Log.ILogger
- uid: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
  commentId: T:Innovt.Cloud.AWS.Configuration.IAwsConfiguration
  parent: Innovt.Cloud.AWS.Configuration
  href: Innovt.Cloud.AWS.Configuration.IAwsConfiguration.html
  name: IAwsConfiguration
  nameWithType: IAwsConfiguration
  fullName: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
- uid: Innovt.Core.CrossCutting.Log
  commentId: N:Innovt.Core.CrossCutting.Log
  href: Innovt.html
  name: Innovt.Core.CrossCutting.Log
  nameWithType: Innovt.Core.CrossCutting.Log
  fullName: Innovt.Core.CrossCutting.Log
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
- uid: Innovt.Cloud.AWS.Configuration
  commentId: N:Innovt.Cloud.AWS.Configuration
  href: Innovt.html
  name: Innovt.Cloud.AWS.Configuration
  nameWithType: Innovt.Cloud.AWS.Configuration
  fullName: Innovt.Cloud.AWS.Configuration
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Configuration
    name: Configuration
    href: Innovt.Cloud.AWS.Configuration.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Configuration
    name: Configuration
    href: Innovt.Cloud.AWS.Configuration.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SendAsync*
  commentId: Overload:Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SendAsync
  href: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.html#Innovt_Cloud_AWS_Notification_SmsNotificationHandler_SendAsync_Innovt_Notification_Core_Domain_NotificationMessage_System_Threading_CancellationToken_
  name: SendAsync
  nameWithType: SmsNotificationHandler.SendAsync
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.SendAsync
- uid: Innovt.Notification.Core.INotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
  commentId: M:Innovt.Notification.Core.INotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
  parent: Innovt.Notification.Core.INotificationHandler
  isExternal: true
  href: Innovt.Notification.Core.INotificationHandler.html#Innovt_Notification_Core_INotificationHandler_SendAsync_Innovt_Notification_Core_Domain_NotificationMessage_System_Threading_CancellationToken_
  name: SendAsync(NotificationMessage, CancellationToken)
  nameWithType: INotificationHandler.SendAsync(NotificationMessage, CancellationToken)
  fullName: Innovt.Notification.Core.INotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innovt.Notification.Core.INotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
    name: SendAsync
    href: Innovt.Notification.Core.INotificationHandler.html#Innovt_Notification_Core_INotificationHandler_SendAsync_Innovt_Notification_Core_Domain_NotificationMessage_System_Threading_CancellationToken_
  - name: (
  - uid: Innovt.Notification.Core.Domain.NotificationMessage
    name: NotificationMessage
    href: Innovt.Notification.Core.Domain.NotificationMessage.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Notification.Core.INotificationHandler.SendAsync(Innovt.Notification.Core.Domain.NotificationMessage,System.Threading.CancellationToken)
    name: SendAsync
    href: Innovt.Notification.Core.INotificationHandler.html#Innovt_Notification_Core_INotificationHandler_SendAsync_Innovt_Notification_Core_Domain_NotificationMessage_System_Threading_CancellationToken_
  - name: (
  - uid: Innovt.Notification.Core.Domain.NotificationMessage
    name: NotificationMessage
    href: Innovt.Notification.Core.Domain.NotificationMessage.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Notification.Core.Domain.NotificationMessage
  commentId: T:Innovt.Notification.Core.Domain.NotificationMessage
  parent: Innovt.Notification.Core.Domain
  href: Innovt.Notification.Core.Domain.NotificationMessage.html
  name: NotificationMessage
  nameWithType: NotificationMessage
  fullName: Innovt.Notification.Core.Domain.NotificationMessage
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<dynamic>
  nameWithType: Task<dynamic>
  fullName: System.Threading.Tasks.Task<dynamic>
  nameWithType.vb: Task(Of Object)
  fullName.vb: System.Threading.Tasks.Task(Of Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: dynamic
    name: dynamic
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: Object
  - name: )
- uid: Innovt.Notification.Core.Domain
  commentId: N:Innovt.Notification.Core.Domain
  href: Innovt.html
  name: Innovt.Notification.Core.Domain
  nameWithType: Innovt.Notification.Core.Domain
  fullName: Innovt.Notification.Core.Domain
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Notification
    name: Notification
    href: Innovt.Notification.html
  - name: .
  - uid: Innovt.Notification.Core
    name: Core
    href: Innovt.Notification.Core.html
  - name: .
  - uid: Innovt.Notification.Core.Domain
    name: Domain
    href: Innovt.Notification.Core.Domain.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Notification
    name: Notification
    href: Innovt.Notification.html
  - name: .
  - uid: Innovt.Notification.Core
    name: Core
    href: Innovt.Notification.Core.html
  - name: .
  - uid: Innovt.Notification.Core.Domain
    name: Domain
    href: Innovt.Notification.Core.Domain.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  name: DisposeServices()
  nameWithType: AwsBaseService.DisposeServices()
  fullName: Innovt.Cloud.AWS.AwsBaseService.DisposeServices()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
    name: DisposeServices
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
    name: DisposeServices
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.DisposeServices*
  commentId: Overload:Innovt.Cloud.AWS.Notification.SmsNotificationHandler.DisposeServices
  href: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.html#Innovt_Cloud_AWS_Notification_SmsNotificationHandler_DisposeServices
  name: DisposeServices
  nameWithType: SmsNotificationHandler.DisposeServices
  fullName: Innovt.Cloud.AWS.Notification.SmsNotificationHandler.DisposeServices
