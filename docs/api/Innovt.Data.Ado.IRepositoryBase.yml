### YamlMime:ManagedReference
items:
- uid: Innovt.Data.Ado.IRepositoryBase
  commentId: T:Innovt.Data.Ado.IRepositoryBase
  id: IRepositoryBase
  parent: Innovt.Data.Ado
  children:
  - Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  - Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  langs:
  - csharp
  - vb
  name: IRepositoryBase
  nameWithType: IRepositoryBase
  fullName: Innovt.Data.Ado.IRepositoryBase
  type: Interface
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IRepositoryBase
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 17
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Represents a base interface for repository operations.
  example: []
  syntax:
    content: public interface IRepositoryBase
    content.vb: Public Interface IRepositoryBase
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  id: QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  nameWithType: IRepositoryBase.QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync<T>(string, string, object, System.Threading.CancellationToken, params string[])
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryFirstOrDefaultAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 19
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<T> QueryFirstOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns)
    parameters:
    - id: tableName
      type: System.String
    - id: whereClause
      type: System.String
    - id: filter
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: columns
      type: System.String[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function QueryFirstOrDefaultAsync(Of T)(tableName As String, whereClause As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing, ParamArray columns As String()) As Task(Of T)
  overload: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync*
  nameWithType.vb: IRepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, String, Object, System.Threading.CancellationToken, ParamArray String())
  name.vb: QueryFirstOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
- uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryFirstOrDefaultAsync<T>(string, object, CancellationToken)
  nameWithType: IRepositoryBase.QueryFirstOrDefaultAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync<T>(string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryFirstOrDefaultAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 22
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<T> QueryFirstOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function QueryFirstOrDefaultAsync(Of T)(sql As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync*
  nameWithType.vb: IRepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QueryFirstOrDefaultAsync(Of T)(String, Object, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QuerySingleOrDefaultAsync<T>(string, object, CancellationToken)
  nameWithType: IRepositoryBase.QuerySingleOrDefaultAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync<T>(string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QuerySingleOrDefaultAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 25
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<T> QuerySingleOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function QuerySingleOrDefaultAsync(Of T)(sql As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync*
  nameWithType.vb: IRepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QuerySingleOrDefaultAsync(Of T)(String, Object, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  id: QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  nameWithType: IRepositoryBase.QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  fullName: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync<T>(string, string, object, System.Threading.CancellationToken, params string[])
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QuerySingleOrDefaultAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 28
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<T> QuerySingleOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns)
    parameters:
    - id: tableName
      type: System.String
    - id: whereClause
      type: System.String
    - id: filter
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: columns
      type: System.String[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function QuerySingleOrDefaultAsync(Of T)(tableName As String, whereClause As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing, ParamArray columns As String()) As Task(Of T)
  overload: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync*
  nameWithType.vb: IRepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, String, Object, System.Threading.CancellationToken, ParamArray String())
  name.vb: QuerySingleOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
- uid: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  id: QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryCountAsync(string, string, object, CancellationToken)
  nameWithType: IRepositoryBase.QueryCountAsync(string, string, object, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(string, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryCountAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 31
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<int> QueryCountAsync(string tableName, string whereClause = null, object filter = null, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
    - id: whereClause
      type: System.String
    - id: filter
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function QueryCountAsync(tableName As String, whereClause As String = Nothing, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync*
  nameWithType.vb: IRepositoryBase.QueryCountAsync(String, String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(String, String, Object, System.Threading.CancellationToken)
  name.vb: QueryCountAsync(String, String, Object, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(string, object, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<T>(string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 34
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<IEnumerable<T>> QueryAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
    content.vb: Function QueryAsync(Of T)(sql As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of T))
  overload: Innovt.Data.Ado.IRepositoryBase.QueryAsync*
  nameWithType.vb: IRepositoryBase.QueryAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of T)(String, Object, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  id: QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, System.Func<TFirst, TSecond, TReturn>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 37
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TReturn>(string sql, object filter, Func<TFirst, TSecond, TReturn> func, string splitOn, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: func
      type: System.Func{{TFirst},{TSecond},{TReturn}}
    - id: splitOn
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TFirst
    - id: TSecond
    - id: TReturn
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
    content.vb: Function QueryAsync(Of TFirst, TSecond, TReturn)(sql As String, filter As Object, func As Func(Of TFirst, TSecond, TReturn), splitOn As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TReturn))
  overload: Innovt.Data.Ado.IRepositoryBase.QueryAsync*
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, Func(Of TFirst, TSecond, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, Func(Of TFirst, TSecond, TReturn), String, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  id: QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TReturn>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 41
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TReturn> func, string splitOn, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: func
      type: System.Func{{TFirst},{TSecond},{TThird},{TReturn}}
    - id: splitOn
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TFirst
    - id: TSecond
    - id: TThird
    - id: TReturn
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
    content.vb: Function QueryAsync(Of TFirst, TSecond, TThird, TReturn)(sql As String, filter As Object, func As Func(Of TFirst, TSecond, TThird, TReturn), splitOn As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TReturn))
  overload: Innovt.Data.Ado.IRepositoryBase.QueryAsync*
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TReturn), String, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  id: QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 44
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TReturn> func, string splitOn, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: func
      type: System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TReturn}}
    - id: splitOn
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TFirst
    - id: TSecond
    - id: TThird
    - id: TFourth
    - id: TReturn
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
    content.vb: Function QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(sql As String, filter As Object, func As Func(Of TFirst, TSecond, TThird, TFourth, TReturn), splitOn As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TReturn))
  overload: Innovt.Data.Ado.IRepositoryBase.QueryAsync*
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  id: QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 48
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func, string splitOn, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: func
      type: System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TFifth},{TReturn}}
    - id: splitOn
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: TFirst
    - id: TSecond
    - id: TThird
    - id: TFourth
    - id: TFifth
    - id: TReturn
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
    content.vb: Function QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(sql As String, filter As Object, func As Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), splitOn As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TReturn))
  overload: Innovt.Data.Ado.IRepositoryBase.QueryAsync*
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  id: QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken)
  nameWithType: IRepositoryBase.QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync<T>(string, Innovt.Core.Cqrs.Queries.IPagedFilter, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryPagedAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 53
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: 'Task<PagedCollection<T>> QueryPagedAsync<T>(string sql, IPagedFilter filter, bool useCount = true, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: Innovt.Core.Cqrs.Queries.IPagedFilter
    - id: useCount
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{{T}}}
    content.vb: Function QueryPagedAsync(Of T As Class)(sql As String, filter As IPagedFilter, useCount As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of PagedCollection(Of T))
  overload: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync*
  nameWithType.vb: IRepositoryBase.QueryPagedAsync(Of T)(String, IPagedFilter, Boolean, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync(Of T)(String, Innovt.Core.Cqrs.Queries.IPagedFilter, Boolean, System.Threading.CancellationToken)
  name.vb: QueryPagedAsync(Of T)(String, IPagedFilter, Boolean, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  id: QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken)
  nameWithType: IRepositoryBase.QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync<T>(string, Innovt.Core.Cqrs.Queries.IPagedFilter, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryListPagedAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 56
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<IEnumerable<T>> QueryListPagedAsync<T>(string sql, IPagedFilter filter, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: Innovt.Core.Cqrs.Queries.IPagedFilter
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
    content.vb: Function QueryListPagedAsync(Of T)(sql As String, filter As IPagedFilter, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of T))
  overload: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync*
  nameWithType.vb: IRepositoryBase.QueryListPagedAsync(Of T)(String, IPagedFilter, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync(Of T)(String, Innovt.Core.Cqrs.Queries.IPagedFilter, System.Threading.CancellationToken)
  name.vb: QueryListPagedAsync(Of T)(String, IPagedFilter, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  id: ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken)
  nameWithType: IRepositoryBase.ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync<T>(string, object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteScalarAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 67
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<T> ExecuteScalarAsync<T>(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: dbTransaction
      type: System.Data.IDbTransaction
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function ExecuteScalarAsync(Of T)(sql As String, filter As Object = Nothing, dbTransaction As IDbTransaction = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync*
  nameWithType.vb: IRepositoryBase.ExecuteScalarAsync(Of T)(String, Object, IDbTransaction, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync(Of T)(String, Object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(String, Object, IDbTransaction, CancellationToken)
- uid: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  id: ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  langs:
  - csharp
  - vb
  name: ExecuteAsync(string, object, IDbTransaction, CancellationToken)
  nameWithType: IRepositoryBase.ExecuteAsync(string, object, IDbTransaction, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(string, object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/IRepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteAsync
    path: ../src/Innovt.Data.Ado/IRepositoryBase.cs
    startLine: 70
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  syntax:
    content: Task<int> ExecuteAsync(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
    - id: filter
      type: System.Object
    - id: dbTransaction
      type: System.Data.IDbTransaction
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function ExecuteAsync(sql As String, filter As Object = Nothing, dbTransaction As IDbTransaction = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync*
  nameWithType.vb: IRepositoryBase.ExecuteAsync(String, Object, IDbTransaction, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(String, Object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(String, Object, IDbTransaction, CancellationToken)
references:
- uid: Innovt.Data.Ado
  commentId: N:Innovt.Data.Ado
  href: Innovt.html
  name: Innovt.Data.Ado
  nameWithType: Innovt.Data.Ado
  fullName: Innovt.Data.Ado
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.Ado
    name: Ado
    href: Innovt.Data.Ado.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.Ado
    name: Ado
    href: Innovt.Data.Ado.html
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync*
  commentId: Overload:Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryFirstOrDefaultAsync__1_System_String_System_String_System_Object_System_Threading_CancellationToken_System_String___
  name: QueryFirstOrDefaultAsync
  nameWithType: IRepositoryBase.QueryFirstOrDefaultAsync
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync*
  commentId: Overload:Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QuerySingleOrDefaultAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: QuerySingleOrDefaultAsync
  nameWithType: IRepositoryBase.QuerySingleOrDefaultAsync
  fullName: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync
- uid: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync*
  commentId: Overload:Innovt.Data.Ado.IRepositoryBase.QueryCountAsync
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryCountAsync_System_String_System_String_System_Object_System_Threading_CancellationToken_
  name: QueryCountAsync
  nameWithType: IRepositoryBase.QueryCountAsync
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync*
  commentId: Overload:Innovt.Data.Ado.IRepositoryBase.QueryAsync
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: QueryAsync
  nameWithType: IRepositoryBase.QueryAsync
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Func{{TFirst},{TSecond},{TReturn}}
  commentId: T:System.Func{``0,``1,``2}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<TFirst, TSecond, TReturn>
  nameWithType: Func<TFirst, TSecond, TReturn>
  fullName: System.Func<TFirst, TSecond, TReturn>
  nameWithType.vb: Func(Of TFirst, TSecond, TReturn)
  fullName.vb: System.Func(Of TFirst, TSecond, TReturn)
  name.vb: Func(Of TFirst, TSecond, TReturn)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{``2}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<TReturn>>
  nameWithType: Task<IEnumerable<TReturn>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TReturn>>
  nameWithType.vb: Task(Of IEnumerable(Of TReturn))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TReturn))
  name.vb: Task(Of IEnumerable(Of TReturn))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TReturn
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TReturn
  - name: )
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{{TFirst},{TSecond},{TThird},{TReturn}}
  commentId: T:System.Func{``0,``1,``2,``3}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<TFirst, TSecond, TThird, TReturn>
  nameWithType: Func<TFirst, TSecond, TThird, TReturn>
  fullName: System.Func<TFirst, TSecond, TThird, TReturn>
  nameWithType.vb: Func(Of TFirst, TSecond, TThird, TReturn)
  fullName.vb: System.Func(Of TFirst, TSecond, TThird, TReturn)
  name.vb: Func(Of TFirst, TSecond, TThird, TReturn)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TReturn}}
  commentId: T:System.Func{``0,``1,``2,``3,``4}
  parent: System
  definition: System.Func`5
  href: https://learn.microsoft.com/dotnet/api/system.func-5
  name: Func<TFirst, TSecond, TThird, TFourth, TReturn>
  nameWithType: Func<TFirst, TSecond, TThird, TFourth, TReturn>
  fullName: System.Func<TFirst, TSecond, TThird, TFourth, TReturn>
  nameWithType.vb: Func(Of TFirst, TSecond, TThird, TFourth, TReturn)
  fullName.vb: System.Func(Of TFirst, TSecond, TThird, TFourth, TReturn)
  name.vb: Func(Of TFirst, TSecond, TThird, TFourth, TReturn)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
- uid: System.Func`5
  commentId: T:System.Func`5
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-5
  name: Func<T1, T2, T3, T4, TResult>
  nameWithType: Func<T1, T2, T3, T4, TResult>
  fullName: System.Func<T1, T2, T3, T4, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, T4, TResult)
  name.vb: Func(Of T1, T2, T3, T4, TResult)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TFifth},{TReturn}}
  commentId: T:System.Func{``0,``1,``2,``3,``4,``5}
  parent: System
  definition: System.Func`6
  href: https://learn.microsoft.com/dotnet/api/system.func-6
  name: Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>
  nameWithType: Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>
  fullName: System.Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>
  nameWithType.vb: Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)
  fullName.vb: System.Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)
  name.vb: Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)
  spec.csharp:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
- uid: System.Func`6
  commentId: T:System.Func`6
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-6
  name: Func<T1, T2, T3, T4, T5, TResult>
  nameWithType: Func<T1, T2, T3, T4, T5, TResult>
  fullName: System.Func<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, T4, T5, TResult)
  name.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  spec.csharp:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync*
  commentId: Overload:Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Boolean_System_Threading_CancellationToken_
  name: QueryPagedAsync
  nameWithType: IRepositoryBase.QueryPagedAsync
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync
- uid: Innovt.Core.Cqrs.Queries.IPagedFilter
  commentId: T:Innovt.Core.Cqrs.Queries.IPagedFilter
  parent: Innovt.Core.Cqrs.Queries
  href: Innovt.Core.Cqrs.Queries.IPagedFilter.html
  name: IPagedFilter
  nameWithType: IPagedFilter
  fullName: Innovt.Core.Cqrs.Queries.IPagedFilter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{{T}}}
  commentId: T:System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PagedCollection<T>>
  nameWithType: Task<PagedCollection<T>>
  fullName: System.Threading.Tasks.Task<Innovt.Core.Collections.PagedCollection<T>>
  nameWithType.vb: Task(Of PagedCollection(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Core.Collections.PagedCollection(Of T))
  name.vb: Task(Of PagedCollection(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Core.Collections.PagedCollection`1
    name: PagedCollection
    href: Innovt.Core.Collections.PagedCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Core.Collections.PagedCollection`1
    name: PagedCollection
    href: Innovt.Core.Collections.PagedCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innovt.Core.Cqrs.Queries
  commentId: N:Innovt.Core.Cqrs.Queries
  href: Innovt.html
  name: Innovt.Core.Cqrs.Queries
  nameWithType: Innovt.Core.Cqrs.Queries
  fullName: Innovt.Core.Cqrs.Queries
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Cqrs
    name: Cqrs
    href: Innovt.Core.Cqrs.html
  - name: .
  - uid: Innovt.Core.Cqrs.Queries
    name: Queries
    href: Innovt.Core.Cqrs.Queries.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Cqrs
    name: Cqrs
    href: Innovt.Core.Cqrs.html
  - name: .
  - uid: Innovt.Core.Cqrs.Queries
    name: Queries
    href: Innovt.Core.Cqrs.Queries.html
- uid: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync*
  commentId: Overload:Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryListPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Threading_CancellationToken_
  name: QueryListPagedAsync
  nameWithType: IRepositoryBase.QueryListPagedAsync
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync
- uid: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync*
  commentId: Overload:Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_ExecuteScalarAsync__1_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  name: ExecuteScalarAsync
  nameWithType: IRepositoryBase.ExecuteScalarAsync
  fullName: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync
- uid: System.Data.IDbTransaction
  commentId: T:System.Data.IDbTransaction
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idbtransaction
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
- uid: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync*
  commentId: Overload:Innovt.Data.Ado.IRepositoryBase.ExecuteAsync
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_ExecuteAsync_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  name: ExecuteAsync
  nameWithType: IRepositoryBase.ExecuteAsync
  fullName: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync
