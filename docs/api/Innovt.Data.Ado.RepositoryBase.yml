### YamlMime:ManagedReference
items:
- uid: Innovt.Data.Ado.RepositoryBase
  commentId: T:Innovt.Data.Ado.RepositoryBase
  id: RepositoryBase
  parent: Innovt.Data.Ado
  children:
  - Innovt.Data.Ado.RepositoryBase.#ctor(Innovt.Data.DataSources.IDataSource)
  - Innovt.Data.Ado.RepositoryBase.#ctor(Innovt.Data.DataSources.IDataSource,Innovt.Data.Ado.IConnectionFactory)
  - Innovt.Data.Ado.RepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  - Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  langs:
  - csharp
  - vb
  name: RepositoryBase
  nameWithType: RepositoryBase
  fullName: Innovt.Data.Ado.RepositoryBase
  type: Class
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: RepositoryBase
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 21
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Represents a base repository implementation that provides common data access methods.
  example: []
  syntax:
    content: 'public class RepositoryBase : IRepositoryBase'
    content.vb: Public Class RepositoryBase Implements IRepositoryBase
  inheritance:
  - System.Object
  derivedClasses:
  - Innovt.Data.Ado.Tests.UserRepository
  implements:
  - Innovt.Data.Ado.IRepositoryBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Data.Ado.RepositoryBase.#ctor(Innovt.Data.DataSources.IDataSource)
  commentId: M:Innovt.Data.Ado.RepositoryBase.#ctor(Innovt.Data.DataSources.IDataSource)
  id: '#ctor(Innovt.Data.DataSources.IDataSource)'
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: RepositoryBase(IDataSource)
  nameWithType: RepositoryBase.RepositoryBase(IDataSource)
  fullName: Innovt.Data.Ado.RepositoryBase.RepositoryBase(Innovt.Data.DataSources.IDataSource)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 30
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Initializes a new instance of the <xref href="Innovt.Data.Ado.RepositoryBase" data-throw-if-not-resolved="false"></xref> class with the specified data source.
  example: []
  syntax:
    content: public RepositoryBase(IDataSource datasource)
    parameters:
    - id: datasource
      type: Innovt.Data.DataSources.IDataSource
    content.vb: Public Sub New(datasource As IDataSource)
  overload: Innovt.Data.Ado.RepositoryBase.#ctor*
  nameWithType.vb: RepositoryBase.New(IDataSource)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.New(Innovt.Data.DataSources.IDataSource)
  name.vb: New(IDataSource)
- uid: Innovt.Data.Ado.RepositoryBase.#ctor(Innovt.Data.DataSources.IDataSource,Innovt.Data.Ado.IConnectionFactory)
  commentId: M:Innovt.Data.Ado.RepositoryBase.#ctor(Innovt.Data.DataSources.IDataSource,Innovt.Data.Ado.IConnectionFactory)
  id: '#ctor(Innovt.Data.DataSources.IDataSource,Innovt.Data.Ado.IConnectionFactory)'
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: RepositoryBase(IDataSource, IConnectionFactory)
  nameWithType: RepositoryBase.RepositoryBase(IDataSource, IConnectionFactory)
  fullName: Innovt.Data.Ado.RepositoryBase.RepositoryBase(Innovt.Data.DataSources.IDataSource, Innovt.Data.Ado.IConnectionFactory)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 40
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: >-
    Initializes a new instance of the <xref href="Innovt.Data.Ado.RepositoryBase" data-throw-if-not-resolved="false"></xref> class with the specified data source and connection

    factory.
  example: []
  syntax:
    content: public RepositoryBase(IDataSource dataSource, IConnectionFactory connectionFactory)
    parameters:
    - id: dataSource
      type: Innovt.Data.DataSources.IDataSource
      description: The data source to use for database operations.
    - id: connectionFactory
      type: Innovt.Data.Ado.IConnectionFactory
      description: The connection factory for creating database connections.
    content.vb: Public Sub New(dataSource As IDataSource, connectionFactory As IConnectionFactory)
  overload: Innovt.Data.Ado.RepositoryBase.#ctor*
  nameWithType.vb: RepositoryBase.New(IDataSource, IConnectionFactory)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.New(Innovt.Data.DataSources.IDataSource, Innovt.Data.Ado.IConnectionFactory)
  name.vb: New(IDataSource, IConnectionFactory)
- uid: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  id: QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  nameWithType: RepositoryBase.QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  fullName: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync<T>(string, string, object, System.Threading.CancellationToken, params string[])
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryFirstOrDefaultAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 61
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: >-
    Asynchronously retrieves the first result of a query from the specified table based on the provided where clause

    and optional columns.
  example: []
  syntax:
    content: public Task<T> QueryFirstOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table.
    - id: whereClause
      type: System.String
      description: The WHERE clause for the query.
    - id: filter
      type: System.Object
      description: Additional filter parameters for the query.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    - id: columns
      type: System.String[]
      description: The optional columns to select.
    typeParameters:
    - id: T
      description: The type of the result.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The first result of the query.
    content.vb: Public Function QueryFirstOrDefaultAsync(Of T)(tableName As String, whereClause As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing, ParamArray columns As String()) As Task(Of T)
  overload: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: >-
      Thrown when <code class="paramref">tableName</code> or <code class="paramref">whereClause</code> is

      null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  nameWithType.vb: RepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, String, Object, System.Threading.CancellationToken, ParamArray String())
  name.vb: QueryFirstOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
- uid: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryFirstOrDefaultAsync<T>(string, object, CancellationToken)
  nameWithType: RepositoryBase.QueryFirstOrDefaultAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync<T>(string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryFirstOrDefaultAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 80
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Asynchronously retrieves the first result of a query using the provided SQL statement.
  example: []
  syntax:
    content: public Task<T> QueryFirstOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL statement for the query.
    - id: filter
      type: System.Object
      description: Additional filter parameters for the query.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of the result.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The first result of the query.
    content.vb: Public Function QueryFirstOrDefaultAsync(Of T)(sql As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">sql</code> is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QueryFirstOrDefaultAsync(Of T)(String, Object, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QuerySingleOrDefaultAsync<T>(string, object, CancellationToken)
  nameWithType: RepositoryBase.QuerySingleOrDefaultAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync<T>(string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QuerySingleOrDefaultAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 101
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: >-
    Asynchronously executes a SQL query and returns a single result of type T, or a default value if no result is

    found.
  example: []
  syntax:
    content: public Task<T> QuerySingleOrDefaultAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL query to execute.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL query.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: T
      description: The type of the result.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: >-
        A task representing the asynchronous operation. The task will return the single result of type T if found,

        or the default value for type T if no result is found.
    content.vb: Public Function QuerySingleOrDefaultAsync(Of T)(sql As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'sql' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QuerySingleOrDefaultAsync(Of T)(String, Object, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  commentId: M:Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  id: QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  nameWithType: RepositoryBase.QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  fullName: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync<T>(string, string, object, System.Threading.CancellationToken, params string[])
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QuerySingleOrDefaultAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 124
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: >-
    Asynchronously retrieves a single result from the specified table based on the provided where clause and optional

    columns.
  example: []
  syntax:
    content: public Task<T> QuerySingleOrDefaultAsync<T>(string tableName, string whereClause, object filter = null, CancellationToken cancellationToken = default, params string[] columns)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table.
    - id: whereClause
      type: System.String
      description: The WHERE clause for the query.
    - id: filter
      type: System.Object
      description: Additional filter parameters for the query.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    - id: columns
      type: System.String[]
      description: The optional columns to select.
    typeParameters:
    - id: T
      description: The type of the result.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A single result from the query.
    content.vb: Public Function QuerySingleOrDefaultAsync(Of T)(tableName As String, whereClause As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing, ParamArray columns As String()) As Task(Of T)
  overload: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: >-
      Thrown when <code class="paramref">tableName</code> or <code class="paramref">whereClause</code> is

      null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  nameWithType.vb: RepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, String, Object, System.Threading.CancellationToken, ParamArray String())
  name.vb: QuerySingleOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
- uid: Innovt.Data.Ado.RepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  id: QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryCountAsync(string, string, object, CancellationToken)
  nameWithType: RepositoryBase.QueryCountAsync(string, string, object, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryCountAsync(string, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryCountAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 144
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Asynchronously executes a SQL query to count records in a specified table.
  example: []
  syntax:
    content: public Task<int> QueryCountAsync(string tableName, string whereClause = null, object filter = null, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the table to query.
    - id: whereClause
      type: System.String
      description: An optional WHERE clause to filter the count.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL query.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: >-
        A task representing the asynchronous operation. The task will return the count of records based on the provided

        criteria.
    content.vb: Public Function QueryCountAsync(tableName As String, whereClause As String = Nothing, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: Innovt.Data.Ado.RepositoryBase.QueryCountAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'tableName' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryCountAsync(String, String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryCountAsync(String, String, Object, System.Threading.CancellationToken)
  name.vb: QueryCountAsync(String, String, Object, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(string, object, CancellationToken)
  nameWithType: RepositoryBase.QueryAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryAsync<T>(string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 165
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Asynchronously executes a SQL query and returns a collection of results of type T.
  example: []
  syntax:
    content: public Task<IEnumerable<T>> QueryAsync<T>(string sql, object filter = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL query to execute.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL query.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: T
      description: The type of the result.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
      description: >-
        A task representing the asynchronous operation. The task will return a collection of results of type T based on the

        SQL query.
    content.vb: Public Function QueryAsync(Of T)(sql As String, filter As Object = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of T))
  overload: Innovt.Data.Ado.RepositoryBase.QueryAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'sql' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of T)(String, Object, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  id: QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken)
  nameWithType: RepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, System.Func<TFirst, TSecond, TReturn>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 190
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: >-
    Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a

    provided function.
  example: []
  syntax:
    content: public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TReturn>(string sql, object filter, Func<TFirst, TSecond, TReturn> func, string splitOn, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL query to execute.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL query.
    - id: func
      type: System.Func{{TFirst},{TSecond},{TReturn}}
      description: A function to map the query results to the desired type.
    - id: splitOn
      type: System.String
      description: The column name to split the results on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: TFirst
      description: The type of the first result.
    - id: TSecond
      description: The type of the second result.
    - id: TReturn
      description: The type to map the results to.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
      description: >-
        A task representing the asynchronous operation. The task will return a collection of results of the specified

        mapped type.
    content.vb: Public Function QueryAsync(Of TFirst, TSecond, TReturn)(sql As String, filter As Object, func As Func(Of TFirst, TSecond, TReturn), splitOn As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TReturn))
  overload: Innovt.Data.Ado.RepositoryBase.QueryAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'sql' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{{TFirst},{TSecond},{TReturn}},System.String,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, Func(Of TFirst, TSecond, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, Func(Of TFirst, TSecond, TReturn), String, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  id: QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken)
  nameWithType: RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TReturn>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 216
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: >-
    Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a

    provided function.
  example: []
  syntax:
    content: public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TReturn> func, string splitOn, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL query to execute.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL query.
    - id: func
      type: System.Func{{TFirst},{TSecond},{TThird},{TReturn}}
      description: A function to map the query results to the desired type.
    - id: splitOn
      type: System.String
      description: The column name to split the results on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: TFirst
      description: The type of the first result.
    - id: TSecond
      description: The type of the second result.
    - id: TThird
      description: The type of the third result.
    - id: TReturn
      description: The type to map the results to.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
      description: >-
        A task representing the asynchronous operation. The task will return a collection of results of the specified

        mapped type.
    content.vb: Public Function QueryAsync(Of TFirst, TSecond, TThird, TReturn)(sql As String, filter As Object, func As Func(Of TFirst, TSecond, TThird, TReturn), splitOn As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TReturn))
  overload: Innovt.Data.Ado.RepositoryBase.QueryAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'sql' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{{TFirst},{TSecond},{TThird},{TReturn}},System.String,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TReturn), String, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  id: QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken)
  nameWithType: RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 243
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: >-
    Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a

    provided function.
  example: []
  syntax:
    content: public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TReturn> func, string splitOn, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL query to execute.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL query.
    - id: func
      type: System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TReturn}}
      description: A function to map the query results to the desired type.
    - id: splitOn
      type: System.String
      description: The column name to split the results on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: TFirst
      description: The type of the first result.
    - id: TSecond
      description: The type of the second result.
    - id: TThird
      description: The type of the third result.
    - id: TFourth
      description: The type of the fourth result.
    - id: TReturn
      description: The type to map the results to.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
      description: >-
        A task representing the asynchronous operation. The task will return a collection of results of the specified

        mapped type.
    content.vb: Public Function QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(sql As String, filter As Object, func As Func(Of TFirst, TSecond, TThird, TFourth, TReturn), splitOn As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TReturn))
  overload: Innovt.Data.Ado.RepositoryBase.QueryAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'sql' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TReturn}},System.String,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  id: QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken)
  nameWithType: RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 272
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: >-
    Asynchronously executes a SQL query and returns a collection of results by mapping to a custom type using a

    provided function.
  example: []
  syntax:
    content: public Task<IEnumerable<TReturn>> QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string sql, object filter, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn> func, string splitOn, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL query to execute.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL query.
    - id: func
      type: System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TFifth},{TReturn}}
      description: A function to map the query results to the desired type.
    - id: splitOn
      type: System.String
      description: The column name to split the results on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: TFirst
      description: The type of the first result.
    - id: TSecond
      description: The type of the second result.
    - id: TThird
      description: The type of the third result.
    - id: TFourth
      description: The type of the fourth result.
    - id: TFifth
      description: The type of the fifth result.
    - id: TReturn
      description: The type to map the results to.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
      description: >-
        A task representing the asynchronous operation. The task will return a collection of results of the specified

        mapped type.
    content.vb: Public Function QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(sql As String, filter As Object, func As Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), splitOn As String, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TReturn))
  overload: Innovt.Data.Ado.RepositoryBase.QueryAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'sql' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TFifth},{TReturn}},System.String,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  id: ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken)
  nameWithType: RepositoryBase.ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync<T>(string, object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteScalarAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 295
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Asynchronously executes a SQL command and returns a scalar result of type T.
  example: []
  syntax:
    content: public Task<T> ExecuteScalarAsync<T>(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL command to execute.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL command.
    - id: dbTransaction
      type: System.Data.IDbTransaction
      description: An optional database transaction for the command.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: T
      description: The type of the scalar result.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: >-
        A task representing the asynchronous operation. The task will return the scalar result of type T from the executed

        SQL command.
    content.vb: Public Function ExecuteScalarAsync(Of T)(sql As String, filter As Object = Nothing, dbTransaction As IDbTransaction = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'sql' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.ExecuteScalarAsync(Of T)(String, Object, IDbTransaction, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync(Of T)(String, Object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(String, Object, IDbTransaction, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  id: ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: ExecuteAsync(string, object, IDbTransaction, CancellationToken)
  nameWithType: RepositoryBase.ExecuteAsync(string, object, IDbTransaction, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.ExecuteAsync(string, object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 316
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Asynchronously executes a SQL command and returns the number of affected rows.
  example: []
  syntax:
    content: public Task<int> ExecuteAsync(string sql, object filter = null, IDbTransaction dbTransaction = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL command to execute.
    - id: filter
      type: System.Object
      description: An optional object that can be used to pass parameters or filters to the SQL command.
    - id: dbTransaction
      type: System.Data.IDbTransaction
      description: An optional database transaction for the command.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: >-
        A task representing the asynchronous operation. The task will return the number of affected rows by the executed

        SQL command.
    content.vb: Public Function ExecuteAsync(sql As String, filter As Object = Nothing, dbTransaction As IDbTransaction = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: Innovt.Data.Ado.RepositoryBase.ExecuteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the 'sql' parameter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.ExecuteAsync(String, Object, IDbTransaction, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.ExecuteAsync(String, Object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(String, Object, IDbTransaction, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  id: QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken)
  nameWithType: RepositoryBase.QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryPagedAsync<T>(string, Innovt.Core.Cqrs.Queries.IPagedFilter, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryPagedAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 338
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Executes a paged SQL query asynchronously and returns the results as a PagedCollection.
  example: []
  syntax:
    content: 'public Task<PagedCollection<T>> QueryPagedAsync<T>(string sql, IPagedFilter filter, bool useCount = true, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: sql
      type: System.String
      description: The SQL query to execute.
    - id: filter
      type: Innovt.Core.Cqrs.Queries.IPagedFilter
      description: The filter for pagination and ordering.
    - id: useCount
      type: System.Boolean
      description: Flag indicating whether to include a total count of records. Defaults to true.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: >-
        A CancellationToken to cancel the asynchronous operation. Defaults to

        CancellationToken.None.
    typeParameters:
    - id: T
      description: The type of object to retrieve from the query.
    return:
      type: System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{{T}}}
      description: A PagedCollection containing the results of the query.
    content.vb: Public Function QueryPagedAsync(Of T As Class)(sql As String, filter As IPagedFilter, useCount As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of PagedCollection(Of T))
  overload: Innovt.Data.Ado.RepositoryBase.QueryPagedAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when sql is null.
  - type: Innovt.Data.Exceptions.SqlSyntaxException
    commentId: T:Innovt.Data.Exceptions.SqlSyntaxException
    description: Thrown when the ORDER BY clause is not found in the SQL query.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryPagedAsync(Of T)(String, IPagedFilter, Boolean, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryPagedAsync(Of T)(String, Innovt.Core.Cqrs.Queries.IPagedFilter, Boolean, System.Threading.CancellationToken)
  name.vb: QueryPagedAsync(Of T)(String, IPagedFilter, Boolean, CancellationToken)
- uid: Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  id: QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.RepositoryBase
  langs:
  - csharp
  - vb
  name: QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken)
  nameWithType: RepositoryBase.QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken)
  fullName: Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync<T>(string, Innovt.Core.Cqrs.Queries.IPagedFilter, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Data.Ado/RepositoryBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryListPagedAsync
    path: ../src/Innovt.Data.Ado/RepositoryBase.cs
    startLine: 406
  assemblies:
  - Innovt.Data.Ado
  namespace: Innovt.Data.Ado
  summary: Executes a paged SQL query asynchronously and returns the results as an IEnumerable.
  example: []
  syntax:
    content: public Task<IEnumerable<T>> QueryListPagedAsync<T>(string sql, IPagedFilter filter, CancellationToken cancellationToken = default)
    parameters:
    - id: sql
      type: System.String
      description: The SQL query to execute.
    - id: filter
      type: Innovt.Core.Cqrs.Queries.IPagedFilter
      description: The filter for pagination and ordering.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: >-
        A CancellationToken to cancel the asynchronous operation. Defaults to

        CancellationToken.None.
    typeParameters:
    - id: T
      description: The type of object to retrieve from the query.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
      description: An IEnumerable containing the results of the query.
    content.vb: Public Function QueryListPagedAsync(Of T)(sql As String, filter As IPagedFilter, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of T))
  overload: Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when sql or filter is null.
  implements:
  - Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  nameWithType.vb: RepositoryBase.QueryListPagedAsync(Of T)(String, IPagedFilter, CancellationToken)
  fullName.vb: Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync(Of T)(String, Innovt.Core.Cqrs.Queries.IPagedFilter, System.Threading.CancellationToken)
  name.vb: QueryListPagedAsync(Of T)(String, IPagedFilter, CancellationToken)
references:
- uid: Innovt.Data.Ado
  commentId: N:Innovt.Data.Ado
  href: Innovt.html
  name: Innovt.Data.Ado
  nameWithType: Innovt.Data.Ado
  fullName: Innovt.Data.Ado
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.Ado
    name: Ado
    href: Innovt.Data.Ado.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.Ado
    name: Ado
    href: Innovt.Data.Ado.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Innovt.Data.Ado.IRepositoryBase
  commentId: T:Innovt.Data.Ado.IRepositoryBase
  parent: Innovt.Data.Ado
  href: Innovt.Data.Ado.IRepositoryBase.html
  name: IRepositoryBase
  nameWithType: IRepositoryBase
  fullName: Innovt.Data.Ado.IRepositoryBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Data.Ado.RepositoryBase
  commentId: T:Innovt.Data.Ado.RepositoryBase
  parent: Innovt.Data.Ado
  href: Innovt.Data.Ado.RepositoryBase.html
  name: RepositoryBase
  nameWithType: RepositoryBase
  fullName: Innovt.Data.Ado.RepositoryBase
- uid: Innovt.Data.Ado.RepositoryBase.#ctor*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.#ctor
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase__ctor_Innovt_Data_DataSources_IDataSource_
  name: RepositoryBase
  nameWithType: RepositoryBase.RepositoryBase
  fullName: Innovt.Data.Ado.RepositoryBase.RepositoryBase
  nameWithType.vb: RepositoryBase.New
  fullName.vb: Innovt.Data.Ado.RepositoryBase.New
  name.vb: New
- uid: Innovt.Data.DataSources.IDataSource
  commentId: T:Innovt.Data.DataSources.IDataSource
  parent: Innovt.Data.DataSources
  href: Innovt.Data.DataSources.IDataSource.html
  name: IDataSource
  nameWithType: IDataSource
  fullName: Innovt.Data.DataSources.IDataSource
- uid: Innovt.Data.DataSources
  commentId: N:Innovt.Data.DataSources
  href: Innovt.html
  name: Innovt.Data.DataSources
  nameWithType: Innovt.Data.DataSources
  fullName: Innovt.Data.DataSources
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.DataSources
    name: DataSources
    href: Innovt.Data.DataSources.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.DataSources
    name: DataSources
    href: Innovt.Data.DataSources.html
- uid: Innovt.Data.Ado.IConnectionFactory
  commentId: T:Innovt.Data.Ado.IConnectionFactory
  parent: Innovt.Data.Ado
  href: Innovt.Data.Ado.IConnectionFactory.html
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Innovt.Data.Ado.IConnectionFactory
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase_QueryFirstOrDefaultAsync__1_System_String_System_String_System_Object_System_Threading_CancellationToken_System_String___
  name: QueryFirstOrDefaultAsync
  nameWithType: RepositoryBase.QueryFirstOrDefaultAsync
  fullName: Innovt.Data.Ado.RepositoryBase.QueryFirstOrDefaultAsync
- uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryFirstOrDefaultAsync__1_System_String_System_String_System_Object_System_Threading_CancellationToken_System_String___
  name: QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  nameWithType: IRepositoryBase.QueryFirstOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync<T>(string, string, object, System.Threading.CancellationToken, params string[])
  nameWithType.vb: IRepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, String, Object, System.Threading.CancellationToken, ParamArray String())
  name.vb: QueryFirstOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
    name: QueryFirstOrDefaultAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryFirstOrDefaultAsync__1_System_String_System_String_System_Object_System_Threading_CancellationToken_System_String___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
    name: QueryFirstOrDefaultAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryFirstOrDefaultAsync__1_System_String_System_String_System_Object_System_Threading_CancellationToken_System_String___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryFirstOrDefaultAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: QueryFirstOrDefaultAsync<T>(string, object, CancellationToken)
  nameWithType: IRepositoryBase.QueryFirstOrDefaultAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync<T>(string, object, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QueryFirstOrDefaultAsync(Of T)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: QueryFirstOrDefaultAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryFirstOrDefaultAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryFirstOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: QueryFirstOrDefaultAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryFirstOrDefaultAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase_QuerySingleOrDefaultAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: QuerySingleOrDefaultAsync
  nameWithType: RepositoryBase.QuerySingleOrDefaultAsync
  fullName: Innovt.Data.Ado.RepositoryBase.QuerySingleOrDefaultAsync
- uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QuerySingleOrDefaultAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: QuerySingleOrDefaultAsync<T>(string, object, CancellationToken)
  nameWithType: IRepositoryBase.QuerySingleOrDefaultAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync<T>(string, object, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QuerySingleOrDefaultAsync(Of T)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: QuerySingleOrDefaultAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QuerySingleOrDefaultAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: QuerySingleOrDefaultAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QuerySingleOrDefaultAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QuerySingleOrDefaultAsync__1_System_String_System_String_System_Object_System_Threading_CancellationToken_System_String___
  name: QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  nameWithType: IRepositoryBase.QuerySingleOrDefaultAsync<T>(string, string, object, CancellationToken, params string[])
  fullName: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync<T>(string, string, object, System.Threading.CancellationToken, params string[])
  nameWithType.vb: IRepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync(Of T)(String, String, Object, System.Threading.CancellationToken, ParamArray String())
  name.vb: QuerySingleOrDefaultAsync(Of T)(String, String, Object, CancellationToken, ParamArray String())
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
    name: QuerySingleOrDefaultAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QuerySingleOrDefaultAsync__1_System_String_System_String_System_Object_System_Threading_CancellationToken_System_String___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QuerySingleOrDefaultAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken,System.String[])
    name: QuerySingleOrDefaultAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QuerySingleOrDefaultAsync__1_System_String_System_String_System_Object_System_Threading_CancellationToken_System_String___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: Innovt.Data.Ado.RepositoryBase.QueryCountAsync*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.QueryCountAsync
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase_QueryCountAsync_System_String_System_String_System_Object_System_Threading_CancellationToken_
  name: QueryCountAsync
  nameWithType: RepositoryBase.QueryCountAsync
  fullName: Innovt.Data.Ado.RepositoryBase.QueryCountAsync
- uid: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryCountAsync_System_String_System_String_System_Object_System_Threading_CancellationToken_
  name: QueryCountAsync(string, string, object, CancellationToken)
  nameWithType: IRepositoryBase.QueryCountAsync(string, string, object, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(string, string, object, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryCountAsync(String, String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(String, String, Object, System.Threading.CancellationToken)
  name.vb: QueryCountAsync(String, String, Object, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
    name: QueryCountAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryCountAsync_System_String_System_String_System_Object_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryCountAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
    name: QueryCountAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryCountAsync_System_String_System_String_System_Object_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Innovt.Data.Ado.RepositoryBase.QueryAsync*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.QueryAsync
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase_QueryAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: QueryAsync
  nameWithType: RepositoryBase.QueryAsync
  fullName: Innovt.Data.Ado.RepositoryBase.QueryAsync
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: QueryAsync<T>(string, object, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<T>(string, object, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<T>(string, object, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of T)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{{TFirst},{TSecond},{TReturn}},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  definition: Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__3_System_String_System_Object_System_Func___0___1___2__System_String_System_Threading_CancellationToken_
  name: QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, System.Func<TFirst, TSecond, TReturn>, string, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, Func(Of TFirst, TSecond, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, Func(Of TFirst, TSecond, TReturn), String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__3_System_String_System_Object_System_Func___0___1___2__System_String_System_Threading_CancellationToken_
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__3_System_String_System_Object_System_Func___0___1___2__System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func{{TFirst},{TSecond},{TReturn}}
  commentId: T:System.Func{``0,``1,``2}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<TFirst, TSecond, TReturn>
  nameWithType: Func<TFirst, TSecond, TReturn>
  fullName: System.Func<TFirst, TSecond, TReturn>
  nameWithType.vb: Func(Of TFirst, TSecond, TReturn)
  fullName.vb: System.Func(Of TFirst, TSecond, TReturn)
  name.vb: Func(Of TFirst, TSecond, TReturn)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TReturn}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{``2}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<TReturn>>
  nameWithType: Task<IEnumerable<TReturn>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TReturn>>
  nameWithType.vb: Task(Of IEnumerable(Of TReturn))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TReturn))
  name.vb: Task(Of IEnumerable(Of TReturn))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TReturn
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TReturn
  - name: )
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__3_System_String_System_Object_System_Func___0___1___2__System_String_System_Threading_CancellationToken_
  name: QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, Func<TFirst, TSecond, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TReturn>(string, object, System.Func<TFirst, TSecond, TReturn>, string, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, Func(Of TFirst, TSecond, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TReturn)(String, Object, Func(Of TFirst, TSecond, TReturn), String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__3_System_String_System_Object_System_Func___0___1___2__System_String_System_Threading_CancellationToken_
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``3(System.String,System.Object,System.Func{``0,``1,``2},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__3_System_String_System_Object_System_Func___0___1___2__System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{{TFirst},{TSecond},{TThird},{TReturn}},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  definition: Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__4_System_String_System_Object_System_Func___0___1___2___3__System_String_System_Threading_CancellationToken_
  name: QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TReturn>, string, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TReturn), String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__4_System_String_System_Object_System_Func___0___1___2___3__System_String_System_Threading_CancellationToken_
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__4_System_String_System_Object_System_Func___0___1___2___3__System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func{{TFirst},{TSecond},{TThird},{TReturn}}
  commentId: T:System.Func{``0,``1,``2,``3}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<TFirst, TSecond, TThird, TReturn>
  nameWithType: Func<TFirst, TSecond, TThird, TReturn>
  fullName: System.Func<TFirst, TSecond, TThird, TReturn>
  nameWithType.vb: Func(Of TFirst, TSecond, TThird, TReturn)
  fullName.vb: System.Func(Of TFirst, TSecond, TThird, TReturn)
  name.vb: Func(Of TFirst, TSecond, TThird, TReturn)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__4_System_String_System_Object_System_Func___0___1___2___3__System_String_System_Threading_CancellationToken_
  name: QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, Func<TFirst, TSecond, TThird, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TReturn>, string, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TReturn), String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__4_System_String_System_Object_System_Func___0___1___2___3__System_String_System_Threading_CancellationToken_
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``4(System.String,System.Object,System.Func{``0,``1,``2,``3},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__4_System_String_System_Object_System_Func___0___1___2___3__System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TReturn}},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  definition: Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__5_System_String_System_Object_System_Func___0___1___2___3___4__System_String_System_Threading_CancellationToken_
  name: QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__5_System_String_System_Object_System_Func___0___1___2___3___4__System_String_System_Threading_CancellationToken_
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__5_System_String_System_Object_System_Func___0___1___2___3___4__System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TReturn}}
  commentId: T:System.Func{``0,``1,``2,``3,``4}
  parent: System
  definition: System.Func`5
  href: https://learn.microsoft.com/dotnet/api/system.func-5
  name: Func<TFirst, TSecond, TThird, TFourth, TReturn>
  nameWithType: Func<TFirst, TSecond, TThird, TFourth, TReturn>
  fullName: System.Func<TFirst, TSecond, TThird, TFourth, TReturn>
  nameWithType.vb: Func(Of TFirst, TSecond, TThird, TFourth, TReturn)
  fullName.vb: System.Func(Of TFirst, TSecond, TThird, TFourth, TReturn)
  name.vb: Func(Of TFirst, TSecond, TThird, TFourth, TReturn)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__5_System_String_System_Object_System_Func___0___1___2___3___4__System_String_System_Threading_CancellationToken_
  name: QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TFourth, TReturn>, string, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TFourth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TReturn), String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__5_System_String_System_Object_System_Func___0___1___2___3___4__System_String_System_Threading_CancellationToken_
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``5(System.String,System.Object,System.Func{``0,``1,``2,``3,``4},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__5_System_String_System_Object_System_Func___0___1___2___3___4__System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func`5
  commentId: T:System.Func`5
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-5
  name: Func<T1, T2, T3, T4, TResult>
  nameWithType: Func<T1, T2, T3, T4, TResult>
  fullName: System.Func<T1, T2, T3, T4, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, T4, TResult)
  name.vb: Func(Of T1, T2, T3, T4, TResult)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-5
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TFifth},{TReturn}},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  definition: Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__6_System_String_System_Object_System_Func___0___1___2___3___4___5__System_String_System_Threading_CancellationToken_
  name: QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__6_System_String_System_Object_System_Func___0___1___2___3___4___5__System_String_System_Threading_CancellationToken_
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__6_System_String_System_Object_System_Func___0___1___2___3___4___5__System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func{{TFirst},{TSecond},{TThird},{TFourth},{TFifth},{TReturn}}
  commentId: T:System.Func{``0,``1,``2,``3,``4,``5}
  parent: System
  definition: System.Func`6
  href: https://learn.microsoft.com/dotnet/api/system.func-6
  name: Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>
  nameWithType: Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>
  fullName: System.Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>
  nameWithType.vb: Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)
  fullName.vb: System.Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)
  name.vb: Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)
  spec.csharp:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
- uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__6_System_String_System_Object_System_Func___0___1___2___3___4___5__System_String_System_Threading_CancellationToken_
  name: QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken)
  nameWithType: IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryAsync<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>(string, object, System.Func<TFirst, TSecond, TThird, TFourth, TFifth, TReturn>, string, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, System.Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn)(String, Object, Func(Of TFirst, TSecond, TThird, TFourth, TFifth, TReturn), String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__6_System_String_System_Object_System_Func___0___1___2___3___4___5__System_String_System_Threading_CancellationToken_
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryAsync``6(System.String,System.Object,System.Func{``0,``1,``2,``3,``4,``5},System.String,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryAsync__6_System_String_System_Object_System_Func___0___1___2___3___4___5__System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - name: TThird
  - name: ','
  - name: " "
  - name: TFourth
  - name: ','
  - name: " "
  - name: TFifth
  - name: ','
  - name: " "
  - name: TReturn
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Func`6
  commentId: T:System.Func`6
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-6
  name: Func<T1, T2, T3, T4, T5, TResult>
  nameWithType: Func<T1, T2, T3, T4, T5, TResult>
  fullName: System.Func<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, T4, T5, TResult)
  name.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  spec.csharp:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-6
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase_ExecuteScalarAsync__1_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  name: ExecuteScalarAsync
  nameWithType: RepositoryBase.ExecuteScalarAsync
  fullName: Innovt.Data.Ado.RepositoryBase.ExecuteScalarAsync
- uid: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_ExecuteScalarAsync__1_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  name: ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken)
  nameWithType: IRepositoryBase.ExecuteScalarAsync<T>(string, object, IDbTransaction, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync<T>(string, object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.ExecuteScalarAsync(Of T)(String, Object, IDbTransaction, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync(Of T)(String, Object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(String, Object, IDbTransaction, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
    name: ExecuteScalarAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_ExecuteScalarAsync__1_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Data.IDbTransaction
    name: IDbTransaction
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idbtransaction
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.ExecuteScalarAsync``1(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
    name: ExecuteScalarAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_ExecuteScalarAsync__1_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Data.IDbTransaction
    name: IDbTransaction
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idbtransaction
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Data.IDbTransaction
  commentId: T:System.Data.IDbTransaction
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idbtransaction
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
- uid: Innovt.Data.Ado.RepositoryBase.ExecuteAsync*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.ExecuteAsync
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase_ExecuteAsync_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  name: ExecuteAsync
  nameWithType: RepositoryBase.ExecuteAsync
  fullName: Innovt.Data.Ado.RepositoryBase.ExecuteAsync
- uid: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_ExecuteAsync_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  name: ExecuteAsync(string, object, IDbTransaction, CancellationToken)
  nameWithType: IRepositoryBase.ExecuteAsync(string, object, IDbTransaction, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(string, object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.ExecuteAsync(String, Object, IDbTransaction, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(String, Object, System.Data.IDbTransaction, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(String, Object, IDbTransaction, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
    name: ExecuteAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_ExecuteAsync_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Data.IDbTransaction
    name: IDbTransaction
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idbtransaction
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.ExecuteAsync(System.String,System.Object,System.Data.IDbTransaction,System.Threading.CancellationToken)
    name: ExecuteAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_ExecuteAsync_System_String_System_Object_System_Data_IDbTransaction_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Data.IDbTransaction
    name: IDbTransaction
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idbtransaction
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Data.Exceptions.SqlSyntaxException
  commentId: T:Innovt.Data.Exceptions.SqlSyntaxException
  href: Innovt.Data.Exceptions.SqlSyntaxException.html
  name: SqlSyntaxException
  nameWithType: SqlSyntaxException
  fullName: Innovt.Data.Exceptions.SqlSyntaxException
- uid: Innovt.Data.Ado.RepositoryBase.QueryPagedAsync*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.QueryPagedAsync
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase_QueryPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Boolean_System_Threading_CancellationToken_
  name: QueryPagedAsync
  nameWithType: RepositoryBase.QueryPagedAsync
  fullName: Innovt.Data.Ado.RepositoryBase.QueryPagedAsync
- uid: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Boolean_System_Threading_CancellationToken_
  name: QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken)
  nameWithType: IRepositoryBase.QueryPagedAsync<T>(string, IPagedFilter, bool, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync<T>(string, Innovt.Core.Cqrs.Queries.IPagedFilter, bool, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryPagedAsync(Of T)(String, IPagedFilter, Boolean, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync(Of T)(String, Innovt.Core.Cqrs.Queries.IPagedFilter, Boolean, System.Threading.CancellationToken)
  name.vb: QueryPagedAsync(Of T)(String, IPagedFilter, Boolean, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
    name: QueryPagedAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Boolean_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Innovt.Core.Cqrs.Queries.IPagedFilter
    name: IPagedFilter
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Boolean,System.Threading.CancellationToken)
    name: QueryPagedAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Innovt.Core.Cqrs.Queries.IPagedFilter
    name: IPagedFilter
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Core.Cqrs.Queries.IPagedFilter
  commentId: T:Innovt.Core.Cqrs.Queries.IPagedFilter
  parent: Innovt.Core.Cqrs.Queries
  href: Innovt.Core.Cqrs.Queries.IPagedFilter.html
  name: IPagedFilter
  nameWithType: IPagedFilter
  fullName: Innovt.Core.Cqrs.Queries.IPagedFilter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{{T}}}
  commentId: T:System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PagedCollection<T>>
  nameWithType: Task<PagedCollection<T>>
  fullName: System.Threading.Tasks.Task<Innovt.Core.Collections.PagedCollection<T>>
  nameWithType.vb: Task(Of PagedCollection(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Core.Collections.PagedCollection(Of T))
  name.vb: Task(Of PagedCollection(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Core.Collections.PagedCollection`1
    name: PagedCollection
    href: Innovt.Core.Collections.PagedCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Core.Collections.PagedCollection`1
    name: PagedCollection
    href: Innovt.Core.Collections.PagedCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innovt.Core.Cqrs.Queries
  commentId: N:Innovt.Core.Cqrs.Queries
  href: Innovt.html
  name: Innovt.Core.Cqrs.Queries
  nameWithType: Innovt.Core.Cqrs.Queries
  fullName: Innovt.Core.Cqrs.Queries
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Cqrs
    name: Cqrs
    href: Innovt.Core.Cqrs.html
  - name: .
  - uid: Innovt.Core.Cqrs.Queries
    name: Queries
    href: Innovt.Core.Cqrs.Queries.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Cqrs
    name: Cqrs
    href: Innovt.Core.Cqrs.html
  - name: .
  - uid: Innovt.Core.Cqrs.Queries
    name: Queries
    href: Innovt.Core.Cqrs.Queries.html
- uid: Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync*
  commentId: Overload:Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync
  href: Innovt.Data.Ado.RepositoryBase.html#Innovt_Data_Ado_RepositoryBase_QueryListPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Threading_CancellationToken_
  name: QueryListPagedAsync
  nameWithType: RepositoryBase.QueryListPagedAsync
  fullName: Innovt.Data.Ado.RepositoryBase.QueryListPagedAsync
- uid: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  commentId: M:Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
  parent: Innovt.Data.Ado.IRepositoryBase
  isExternal: true
  href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryListPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Threading_CancellationToken_
  name: QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken)
  nameWithType: IRepositoryBase.QueryListPagedAsync<T>(string, IPagedFilter, CancellationToken)
  fullName: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync<T>(string, Innovt.Core.Cqrs.Queries.IPagedFilter, System.Threading.CancellationToken)
  nameWithType.vb: IRepositoryBase.QueryListPagedAsync(Of T)(String, IPagedFilter, CancellationToken)
  fullName.vb: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync(Of T)(String, Innovt.Core.Cqrs.Queries.IPagedFilter, System.Threading.CancellationToken)
  name.vb: QueryListPagedAsync(Of T)(String, IPagedFilter, CancellationToken)
  spec.csharp:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
    name: QueryListPagedAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryListPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Innovt.Core.Cqrs.Queries.IPagedFilter
    name: IPagedFilter
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Data.Ado.IRepositoryBase.QueryListPagedAsync``1(System.String,Innovt.Core.Cqrs.Queries.IPagedFilter,System.Threading.CancellationToken)
    name: QueryListPagedAsync
    href: Innovt.Data.Ado.IRepositoryBase.html#Innovt_Data_Ado_IRepositoryBase_QueryListPagedAsync__1_System_String_Innovt_Core_Cqrs_Queries_IPagedFilter_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Innovt.Core.Cqrs.Queries.IPagedFilter
    name: IPagedFilter
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
