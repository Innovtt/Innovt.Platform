### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.Dynamo.Repository
  commentId: T:Innovt.Cloud.AWS.Dynamo.Repository
  id: Repository
  parent: Innovt.Cloud.AWS.Dynamo
  children:
  - Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  - Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,Innovt.Cloud.AWS.Dynamo.DynamoContext)
  - Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  - Innovt.Cloud.AWS.Dynamo.Repository.AddAsync``1(``0,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.CreateDefaultRetryAsyncPolicy
  - Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem``1(``0)
  - Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync``1(``0,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.DisposeServices
  - Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync``1(System.Object,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate},System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync``1(Amazon.DynamoDBv2.Model.UpdateItemRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync``1(``0,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: Repository
  fullName: Innovt.Cloud.AWS.Dynamo.Repository
  type: Class
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Repository
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 32
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Base repository class for interacting with AWS DynamoDB tables.
  example: []
  syntax:
    content: 'public abstract class Repository : AwsBaseService, ITableRepository, IDisposable'
    content.vb: Public MustInherit Class Repository Inherits AwsBaseService Implements ITableRepository, IDisposable
  inheritance:
  - System.Object
  - Innovt.Cloud.AWS.AwsBaseService
  implements:
  - Innovt.Cloud.Table.ITableRepository
  - System.IDisposable
  inheritedMembers:
  - Innovt.Cloud.AWS.AwsBaseService.Configuration
  - Innovt.Cloud.AWS.AwsBaseService.Logger
  - Innovt.Cloud.AWS.AwsBaseService.Dispose
  - Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  - Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  - Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  - Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  - Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
  id: ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken)
  nameWithType: Repository.ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync<T>(Innovt.Cloud.Table.ExecuteSqlStatementRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExecuteStatementAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 61
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Executes a SQL statement asynchronously and returns the response containing items of type T.
  example: []
  syntax:
    content: 'public Task<ExecuteSqlStatementResponse<T>> ExecuteStatementAsync<T>(ExecuteSqlStatementRequest sqlStatementRequest, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: sqlStatementRequest
      type: Innovt.Cloud.Table.ExecuteSqlStatementRequest
      description: The SQL statement request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to be returned.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.Table.ExecuteSqlStatementResponse{{T}}}
      description: The response containing items of type T.
    content.vb: Public Function ExecuteStatementAsync(Of T As Class)(sqlStatementRequest As ExecuteSqlStatementRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ExecuteSqlStatementResponse(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the SQL statement request is null.
  implements:
  - Innovt.Cloud.Table.ITableRepository.ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
  nameWithType.vb: Repository.ExecuteStatementAsync(Of T)(ExecuteSqlStatementRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync(Of T)(Innovt.Cloud.Table.ExecuteSqlStatementRequest, System.Threading.CancellationToken)
  name.vb: ExecuteStatementAsync(Of T)(ExecuteSqlStatementRequest, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
  id: BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: BatchGetItem<T>(BatchGetItemRequest, CancellationToken)
  nameWithType: Repository.BatchGetItem<T>(BatchGetItemRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem<T>(Innovt.Cloud.Table.BatchGetItemRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: BatchGetItem
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 96
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Gets a batch of items from the DynamoDB table based on the specified batch get item request.
  example: []
  syntax:
    content: 'public Task<List<T>> BatchGetItem<T>(BatchGetItemRequest batchGetItemRequest, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: batchGetItemRequest
      type: Innovt.Cloud.Table.BatchGetItemRequest
      description: The batch get item request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to get.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
      description: The list of items retrieved.
    content.vb: Public Function BatchGetItem(Of T As Class)(batchGetItemRequest As BatchGetItemRequest, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the batch get item request is null.
  implements:
  - Innovt.Cloud.Table.ITableRepository.BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
  nameWithType.vb: Repository.BatchGetItem(Of T)(BatchGetItemRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem(Of T)(Innovt.Cloud.Table.BatchGetItemRequest, System.Threading.CancellationToken)
  name.vb: BatchGetItem(Of T)(BatchGetItemRequest, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem``1(``0)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem``1(``0)
  id: CreateTransactionWriteItem``1(``0)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: CreateTransactionWriteItem<T>(T)
  nameWithType: Repository.CreateTransactionWriteItem<T>(T)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem<T>(T)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateTransactionWriteItem
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 121
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Create a transaction write item based on the instance.
  example: []
  syntax:
    content: 'public TransactionWriteItem CreateTransactionWriteItem<T>(T instance) where T : class'
    parameters:
    - id: instance
      type: '{T}'
      description: A mapped instance with context.
    typeParameters:
    - id: T
      description: A typed mapped entity
    return:
      type: Innovt.Cloud.Table.TransactionWriteItem
      description: A incomplete transaction write item with properties mapped.
    content.vb: Public Function CreateTransactionWriteItem(Of T As Class)(instance As T) As TransactionWriteItem
  overload: Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem*
  implements:
  - Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1({T})
  nameWithType.vb: Repository.CreateTransactionWriteItem(Of T)(T)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem(Of T)(T)
  name.vb: CreateTransactionWriteItem(Of T)(T)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.CreateDefaultRetryAsyncPolicy
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.CreateDefaultRetryAsyncPolicy
  id: CreateDefaultRetryAsyncPolicy
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: CreateDefaultRetryAsyncPolicy()
  nameWithType: Repository.CreateDefaultRetryAsyncPolicy()
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.CreateDefaultRetryAsyncPolicy()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CreateDefaultRetryAsyncPolicy
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 294
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Creates the default asynchronous retry policy for handling exceptions during operations.
  example: []
  syntax:
    content: protected override AsyncRetryPolicy CreateDefaultRetryAsyncPolicy()
    return:
      type: Polly.Retry.AsyncRetryPolicy
      description: The asynchronous retry policy instance.
    content.vb: Protected Overrides Function CreateDefaultRetryAsyncPolicy() As AsyncRetryPolicy
  overridden: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  overload: Innovt.Cloud.AWS.Dynamo.Repository.CreateDefaultRetryAsyncPolicy*
- uid: Innovt.Cloud.AWS.Dynamo.Repository.DisposeServices
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.DisposeServices
  id: DisposeServices
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: DisposeServices()
  nameWithType: Repository.DisposeServices()
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.DisposeServices()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DisposeServices
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 303
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Disposes the DynamoDB context and AmazonDynamoDBClient resources.
  example: []
  syntax:
    content: protected override void DisposeServices()
    content.vb: Protected Overrides Sub DisposeServices()
  overridden: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  overload: Innovt.Cloud.AWS.Dynamo.Repository.DisposeServices*
- uid: Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)'
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: Repository(ILogger, IAwsConfiguration)
  nameWithType: Repository.Repository(ILogger, IAwsConfiguration)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.Repository(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 315
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.Dynamo.Repository" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected Repository(ILogger logger, IAwsConfiguration configuration)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger.
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
      description: AWS configuration.
    content.vb: Protected Sub New(logger As ILogger, configuration As IAwsConfiguration)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.#ctor*
  nameWithType.vb: Repository.New(ILogger, IAwsConfiguration)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  name.vb: New(ILogger, IAwsConfiguration)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,Innovt.Cloud.AWS.Dynamo.DynamoContext)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,Innovt.Cloud.AWS.Dynamo.DynamoContext)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,Innovt.Cloud.AWS.Dynamo.DynamoContext)'
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: Repository(ILogger, IAwsConfiguration, DynamoContext)
  nameWithType: Repository.Repository(ILogger, IAwsConfiguration, DynamoContext)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.Repository(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, Innovt.Cloud.AWS.Dynamo.DynamoContext)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 326
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.Dynamo.Repository" data-throw-if-not-resolved="false"></xref> class using a context map.
  example: []
  syntax:
    content: protected Repository(ILogger logger, IAwsConfiguration configuration, DynamoContext context)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: ''
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
      description: ''
    - id: context
      type: Innovt.Cloud.AWS.Dynamo.DynamoContext
      description: ''
    content.vb: Protected Sub New(logger As ILogger, configuration As IAwsConfiguration, context As DynamoContext)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  nameWithType.vb: Repository.New(ILogger, IAwsConfiguration, DynamoContext)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, Innovt.Cloud.AWS.Dynamo.DynamoContext)
  name.vb: New(ILogger, IAwsConfiguration, DynamoContext)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)'
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: Repository(ILogger, IAwsConfiguration, string)
  nameWithType: Repository.Repository(ILogger, IAwsConfiguration, string)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.Repository(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 338
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.Dynamo.Repository" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected Repository(ILogger logger, IAwsConfiguration configuration, string region)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger.
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
      description: AWS configuration.
    - id: region
      type: System.String
      description: The AWS region.
    content.vb: Protected Sub New(logger As ILogger, configuration As IAwsConfiguration, region As String)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.#ctor*
  nameWithType.vb: Repository.New(ILogger, IAwsConfiguration, String)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, String)
  name.vb: New(ILogger, IAwsConfiguration, String)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.AddAsync``1(``0,System.Threading.CancellationToken)
  id: AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: AddAsync<T>(T, CancellationToken)
  nameWithType: Repository.AddAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.AddAsync<T>(T, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 348
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Asynchronously adds a single item to the repository.
  example: []
  syntax:
    content: 'public Task AddAsync<T>(T message, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: message
      type: '{T}'
      description: The item to add.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of item to add.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous add operation.
    content.vb: Public Function AddAsync(Of T As Class)(message As T, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Dynamo.Repository.AddAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.AddAsync``1({T},System.Threading.CancellationToken)
  nameWithType.vb: Repository.AddAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.AddAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(T, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  id: AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: AddListAsync<T>(ICollection<T>, CancellationToken)
  nameWithType: Repository.AddListAsync<T>(ICollection<T>, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync<T>(System.Collections.Generic.ICollection<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddListAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 378
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Adds a list of items to the DynamoDB table.
  example: []
  syntax:
    content: 'public Task AddListAsync<T>(ICollection<T> messages, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: messages
      type: System.Collections.Generic.ICollection{{T}}
      description: The list of items to add.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to add.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddListAsync(Of T As Class)(messages As ICollection(Of T), cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the messages parameter is null.
  implements:
  - Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{{T}},System.Threading.CancellationToken)
  nameWithType.vb: Repository.AddListAsync(Of T)(ICollection(Of T), CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync(Of T)(System.Collections.Generic.ICollection(Of T), System.Threading.CancellationToken)
  name.vb: AddListAsync(Of T)(ICollection(Of T), CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
  id: TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken)
  nameWithType: Repository.TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: TransactWriteItemsAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 408
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Writes a batch of transactional write items to the DynamoDB table.
  example: []
  syntax:
    content: public Task TransactWriteItemsAsync(TransactionWriteRequest request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: Innovt.Cloud.Table.TransactionWriteRequest
      description: The transaction write request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task
      description: Task representing the asynchronous operation.
    content.vb: Public Function TransactWriteItemsAsync(request As TransactionWriteRequest, cancellationToken As CancellationToken) As Task
  overload: Innovt.Cloud.AWS.Dynamo.Repository.TransactWriteItemsAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the request is null.
  - type: Innovt.Core.Exceptions.BusinessException
    commentId: T:Innovt.Core.Exceptions.BusinessException
    description: Thrown when the number of transactItems is invalid.
  implements:
  - Innovt.Cloud.Table.ITableRepository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
  id: BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: BatchWriteItem(BatchWriteItemRequest, CancellationToken)
  nameWithType: Repository.BatchWriteItem(BatchWriteItemRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: BatchWriteItem
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 438
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Writes a batch of items to the DynamoDB table based on the specified batch write item request.
  example: []
  syntax:
    content: public Task<BatchWriteItemResponse> BatchWriteItem(BatchWriteItemRequest batchWriteItemRequest, CancellationToken cancellationToken = default)
    parameters:
    - id: batchWriteItemRequest
      type: Innovt.Cloud.Table.BatchWriteItemRequest
      description: The batch write item request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.Table.BatchWriteItemResponse}
      description: The response indicating the result of the batch write operation.
    content.vb: Public Function BatchWriteItem(batchWriteItemRequest As BatchWriteItemRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BatchWriteItemResponse)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.BatchWriteItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the batch write item request is null.
  implements:
  - Innovt.Cloud.Table.ITableRepository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync``1(``0,System.Threading.CancellationToken)
  id: DeleteAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: DeleteAsync<T>(T, CancellationToken)
  nameWithType: Repository.DeleteAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync<T>(T, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DeleteAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 477
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Asynchronously deletes an item using its value.
  example: []
  syntax:
    content: 'public Task DeleteAsync<T>(T message, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: message
      type: '{T}'
      description: The item to delete.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of item to delete.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous delete operation.
    content.vb: Public Function DeleteAsync(Of T As Class)(message As T, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.DeleteAsync``1({T},System.Threading.CancellationToken)
  nameWithType.vb: Repository.DeleteAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Of T)(T, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  id: DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: DeleteListAsync<T>(ICollection<T>, CancellationToken)
  nameWithType: Repository.DeleteListAsync<T>(ICollection<T>, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync<T>(System.Collections.Generic.ICollection<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DeleteListAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 490
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Asynchronously a list of item that are from the same type.
  example: []
  syntax:
    content: 'public Task DeleteListAsync<T>(ICollection<T> messages, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: messages
      type: System.Collections.Generic.ICollection{{T}}
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function DeleteListAsync(Of T As Class)(messages As ICollection(Of T), cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{{T}},System.Threading.CancellationToken)
  nameWithType.vb: Repository.DeleteListAsync(Of T)(ICollection(Of T), CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync(Of T)(System.Collections.Generic.ICollection(Of T), System.Threading.CancellationToken)
  name.vb: DeleteListAsync(Of T)(ICollection(Of T), CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  id: DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: DeleteAsync<T>(object, string, CancellationToken)
  nameWithType: Repository.DeleteAsync<T>(object, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync<T>(object, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DeleteAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 521
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Asynchronously deletes an item using its identifier and optional range key.
  example: []
  syntax:
    content: 'public Task DeleteAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: id
      type: System.Object
      description: The identifier of the item.
    - id: rangeKey
      type: System.String
      description: The range key for the item (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of item to delete.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous delete operation.
    content.vb: Public Function DeleteAsync(Of T As Class)(id As Object, rangeKey As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  nameWithType.vb: Repository.DeleteAsync(Of T)(Object, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync(Of T)(Object, String, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Of T)(Object, String, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync``1(``0,System.Threading.CancellationToken)
  id: UpdateAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: UpdateAsync<T>(T, CancellationToken)
  nameWithType: Repository.UpdateAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync<T>(T, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UpdateAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 552
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: >-
    This method will perform an update operation on the table. The operation is based on the primary key and type is

    PUT.
  example: []
  syntax:
    content: 'public Task<T> UpdateAsync<T>(T instance, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: instance
      type: '{T}'
      description: The instance that you want to update
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token.
    typeParameters:
    - id: T
      description: The instance updated.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: ''
    content.vb: Public Function UpdateAsync(Of T As Class)(instance As T, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  implements:
  - Innovt.Cloud.Table.ITableRepository.UpdateAsync``1({T},System.Threading.CancellationToken)
  nameWithType.vb: Repository.UpdateAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: UpdateAsync(Of T)(T, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate},System.Threading.CancellationToken)
  id: UpdateAsync(System.String,System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue},System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate},System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: UpdateAsync(string, Dictionary<string, AttributeValue>, Dictionary<string, AttributeValueUpdate>, CancellationToken)
  nameWithType: Repository.UpdateAsync(string, Dictionary<string, AttributeValue>, Dictionary<string, AttributeValueUpdate>, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync(string, System.Collections.Generic.Dictionary<string, Amazon.DynamoDBv2.Model.AttributeValue>, System.Collections.Generic.Dictionary<string, Amazon.DynamoDBv2.Model.AttributeValueUpdate>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UpdateAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 597
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Updates an item in the DynamoDB table based on the provided parameters.
  example: []
  syntax:
    content: protected Task UpdateAsync(string tableName, Dictionary<string, AttributeValue> key, Dictionary<string, AttributeValueUpdate> attributeUpdates, CancellationToken cancellationToken = default)
    parameters:
    - id: tableName
      type: System.String
      description: The name of the DynamoDB table.
    - id: key
      type: System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue}
      description: The key of the item to update.
    - id: attributeUpdates
      type: System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate}
      description: The attribute updates for the item.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task
      description: Task representing the asynchronous update operation.
    content.vb: Protected Function UpdateAsync(tableName As String, key As Dictionary(Of String, AttributeValue), attributeUpdates As Dictionary(Of String, AttributeValueUpdate), cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when key or attributeUpdates is null.
  nameWithType.vb: Repository.UpdateAsync(String, Dictionary(Of String, AttributeValue), Dictionary(Of String, AttributeValueUpdate), CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync(String, System.Collections.Generic.Dictionary(Of String, Amazon.DynamoDBv2.Model.AttributeValue), System.Collections.Generic.Dictionary(Of String, Amazon.DynamoDBv2.Model.AttributeValueUpdate), System.Threading.CancellationToken)
  name.vb: UpdateAsync(String, Dictionary(Of String, AttributeValue), Dictionary(Of String, AttributeValueUpdate), CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync``1(Amazon.DynamoDBv2.Model.UpdateItemRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync``1(Amazon.DynamoDBv2.Model.UpdateItemRequest,System.Threading.CancellationToken)
  id: UpdateAsync``1(Amazon.DynamoDBv2.Model.UpdateItemRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: UpdateAsync<T>(UpdateItemRequest, CancellationToken)
  nameWithType: Repository.UpdateAsync<T>(UpdateItemRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync<T>(Amazon.DynamoDBv2.Model.UpdateItemRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UpdateAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 624
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Updates an item in the DynamoDB table based on the provided update item request.
  example: []
  syntax:
    content: protected Task<T> UpdateAsync<T>(UpdateItemRequest updateItemRequest, CancellationToken cancellationToken = default)
    parameters:
    - id: updateItemRequest
      type: Amazon.DynamoDBv2.Model.UpdateItemRequest
      description: The update item request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of item to update.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The updated item of type T.
    content.vb: Protected Function UpdateAsync(Of T)(updateItemRequest As UpdateItemRequest, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when updateItemRequest is null.
  nameWithType.vb: Repository.UpdateAsync(Of T)(UpdateItemRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync(Of T)(Amazon.DynamoDBv2.Model.UpdateItemRequest, System.Threading.CancellationToken)
  name.vb: UpdateAsync(Of T)(UpdateItemRequest, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
  id: QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryFirstAsync<T>(object, CancellationToken)
  nameWithType: Repository.QueryFirstAsync<T>(object, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync<T>(object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryFirstAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 651
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Asynchronously queries and retrieves the first item of type T by its identifier.
  example: []
  syntax:
    content: 'public Task<T> QueryFirstAsync<T>(object id, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: id
      type: System.Object
      description: The identifier of the item.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of item to retrieve.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: An item of type T if found; otherwise, null.
    content.vb: Public Function QueryFirstAsync(Of T As Class)(id As Object, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryFirstAsync(Of T)(Object, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync(Of T)(Object, System.Threading.CancellationToken)
  name.vb: QueryFirstAsync(Of T)(Object, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  id: GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: GetByIdAsync<T>(object, string, CancellationToken)
  nameWithType: Repository.GetByIdAsync<T>(object, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync<T>(object, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetByIdAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 671
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Asynchronously retrieves an item by its identifier.
  example: []
  syntax:
    content: 'public Task<T> GetByIdAsync<T>(object id, string rangeKey = null, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: id
      type: System.Object
      description: The identifier of the item.
    - id: rangeKey
      type: System.String
      description: The range key for the item (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    typeParameters:
    - id: T
      description: The type of item to retrieve.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: An item of type T if found; otherwise, null.
    content.vb: Public Function GetByIdAsync(Of T As Class)(id As Object, rangeKey As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  nameWithType.vb: Repository.GetByIdAsync(Of T)(Object, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync(Of T)(Object, String, System.Threading.CancellationToken)
  name.vb: GetByIdAsync(Of T)(Object, String, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync``1(System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync``1(System.Object,System.Threading.CancellationToken)
  id: QueryAsync``1(System.Object,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(object, CancellationToken)
  nameWithType: Repository.QueryAsync<T>(object, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync<T>(object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 701
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Queries the DynamoDB table and returns a list of items with the specified id.
  example: []
  syntax:
    content: 'public Task<IList<T>> QueryAsync<T>(object id, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: id
      type: System.Object
      description: The id to query.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to query.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{{T}}}
      description: A list of items with the specified id.
    content.vb: Public Function QueryAsync(Of T As Class)(id As Object, cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryAsync``1(System.Object,System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryAsync(Of T)(Object, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync(Of T)(Object, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of T)(Object, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  id: QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(QueryRequest, CancellationToken)
  nameWithType: Repository.QueryAsync<T>(QueryRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync<T>(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 725
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Queries the DynamoDB table using a query request and returns a list of items.
  example: []
  syntax:
    content: 'public Task<IList<T>> QueryAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.QueryRequest
      description: The query request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to query.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{{T}}}
      description: A list of items based on the query request.
    content.vb: Public Function QueryAsync(Of T As Class)(request As QueryRequest, cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryAsync(Of T)(QueryRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync(Of T)(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of T)(QueryRequest, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
  id: QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken)
  nameWithType: Repository.QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync<T, TResult1, TResult2>(Innovt.Cloud.Table.QueryRequest, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryMultipleAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 748
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Queries the DynamoDB table using a query request and splits the results into two types based on a key.
  example: []
  syntax:
    content: 'public Task<(IList<TResult1> first, IList<TResult2> second)> QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest request, string splitBy, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.QueryRequest
      description: The query request.
    - id: splitBy
      type: System.String
      description: The key to split the results.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to query.
    - id: TResult1
      description: The first type to split the results into.
    - id: TResult2
      description: The second type to split the results into.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{{TResult1}},System.Collections.Generic.IList{{TResult2}}}}
      description: Tuple containing lists of items split based on the specified key.
    content.vb: Public Function QueryMultipleAsync(Of T As Class, TResult1, TResult2)(request As QueryRequest, splitBy As String, cancellationToken As CancellationToken = Nothing) As Task(Of (first As IList(Of TResult1), second As IList(Of TResult2)))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryMultipleAsync(Of T, TResult1, TResult2)(QueryRequest, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync(Of T, TResult1, TResult2)(Innovt.Cloud.Table.QueryRequest, String, System.Threading.CancellationToken)
  name.vb: QueryMultipleAsync(Of T, TResult1, TResult2)(QueryRequest, String, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  id: QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken)
  nameWithType: Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3>(Innovt.Cloud.Table.QueryRequest, string[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryMultipleAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 772
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Queries the DynamoDB table using a query request and splits the results into three types based on specified keys.
  example: []
  syntax:
    content: 'public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)> QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.QueryRequest
      description: The query request.
    - id: splitBy
      type: System.String[]
      description: The keys to split the results.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to query.
    - id: TResult1
      description: The first type to split the results into.
    - id: TResult2
      description: The second type to split the results into.
    - id: TResult3
      description: The third type to split the results into.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{{TResult1}},System.Collections.Generic.IList{{TResult2}},System.Collections.Generic.IList{{TResult3}}}}
      description: Tuple containing lists of items split based on the specified keys.
    content.vb: Public Function QueryMultipleAsync(Of T As Class, TResult1, TResult2, TResult3)(request As QueryRequest, splitBy As String(), cancellationToken As CancellationToken = Nothing) As Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3)))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3)(QueryRequest, String(), CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3)(Innovt.Cloud.Table.QueryRequest, String(), System.Threading.CancellationToken)
  name.vb: QueryMultipleAsync(Of T, TResult1, TResult2, TResult3)(QueryRequest, String(), CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  id: QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken)
  nameWithType: Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(Innovt.Cloud.Table.QueryRequest, string[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryMultipleAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 799
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Queries the DynamoDB table using a query request and splits the results into four types based on specified keys.
  example: []
  syntax:
    content: 'public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.QueryRequest
      description: The query request.
    - id: splitBy
      type: System.String[]
      description: The keys to split the results.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to query.
    - id: TResult1
      description: The first type to split the results into.
    - id: TResult2
      description: The second type to split the results into.
    - id: TResult3
      description: The third type to split the results into.
    - id: TResult4
      description: The fourth type to split the results into.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{{TResult1}},System.Collections.Generic.IList{{TResult2}},System.Collections.Generic.IList{{TResult3}},System.Collections.Generic.IList{{TResult4}}}}
      description: Tuple containing lists of items split based on the specified keys.
    content.vb: Public Function QueryMultipleAsync(Of T As Class, TResult1, TResult2, TResult3, TResult4)(request As QueryRequest, splitBy As String(), cancellationToken As CancellationToken = Nothing) As Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3), fourth As IList(Of TResult4)))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4)(QueryRequest, String(), CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4)(Innovt.Cloud.Table.QueryRequest, String(), System.Threading.CancellationToken)
  name.vb: QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4)(QueryRequest, String(), CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  id: QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken)
  nameWithType: Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(Innovt.Cloud.Table.QueryRequest, string[], System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryMultipleAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 828
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Queries the DynamoDB table using a query request and splits the results into five types based on specified keys.
  example: []
  syntax:
    content: 'public Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)> QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest request, string[] splitBy, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.QueryRequest
      description: The query request.
    - id: splitBy
      type: System.String[]
      description: The keys to split the results.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to query.
    - id: TResult1
      description: The first type to split the results into.
    - id: TResult2
      description: The second type to split the results into.
    - id: TResult3
      description: The third type to split the results into.
    - id: TResult4
      description: The fourth type to split the results into.
    - id: TResult5
      description: The fifth type to split the results into.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{{TResult1}},System.Collections.Generic.IList{{TResult2}},System.Collections.Generic.IList{{TResult3}},System.Collections.Generic.IList{{TResult4}},System.Collections.Generic.IList{{TResult5}}}}
      description: Tuple containing lists of items split based on the specified keys.
    content.vb: Public Function QueryMultipleAsync(Of T As Class, TResult1, TResult2, TResult3, TResult4, TResult5)(request As QueryRequest, splitBy As String(), cancellationToken As CancellationToken = Nothing) As Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3), fourth As IList(Of TResult4), fifth As IList(Of TResult5)))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4, TResult5)(QueryRequest, String(), CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4, TResult5)(Innovt.Cloud.Table.QueryRequest, String(), System.Threading.CancellationToken)
  name.vb: QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4, TResult5)(QueryRequest, String(), CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  id: QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken)
  nameWithType: Repository.QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync<T>(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryFirstOrDefaultAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 852
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Queries the DynamoDB table and returns the first or default item based on the query request.
  example: []
  syntax:
    content: 'public Task<T> QueryFirstOrDefaultAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.QueryRequest
      description: The query request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of item to query.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The first or default item based on the query request.
    content.vb: Public Function QueryFirstOrDefaultAsync(Of T As Class)(request As QueryRequest, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryFirstOrDefaultAsync(Of T)(QueryRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync(Of T)(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  name.vb: QueryFirstOrDefaultAsync(Of T)(QueryRequest, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  id: QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: QueryPaginatedByAsync<T>(QueryRequest, CancellationToken)
  nameWithType: Repository.QueryPaginatedByAsync<T>(QueryRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync<T>(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: QueryPaginatedByAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 877
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Queries the DynamoDB table using a query request and returns a paginated collection of items.
  example: []
  syntax:
    content: 'public Task<PagedCollection<T>> QueryPaginatedByAsync<T>(QueryRequest request, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.QueryRequest
      description: The query request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to query.
    return:
      type: System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{{T}}}
      description: A paginated collection of items based on the query request.
    content.vb: Public Function QueryPaginatedByAsync(Of T As Class)(request As QueryRequest, cancellationToken As CancellationToken = Nothing) As Task(Of PagedCollection(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  nameWithType.vb: Repository.QueryPaginatedByAsync(Of T)(QueryRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync(Of T)(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  name.vb: QueryPaginatedByAsync(Of T)(QueryRequest, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  id: ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: ScanAsync<T>(ScanRequest, CancellationToken)
  nameWithType: Repository.ScanAsync<T>(ScanRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync<T>(Innovt.Cloud.Table.ScanRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ScanAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 907
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Scans the DynamoDB table based on the specified scan request.
  example: []
  syntax:
    content: 'public Task<IList<T>> ScanAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.ScanRequest
      description: The scan request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to scan.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{{T}}}
      description: The list of scanned items.
    content.vb: Public Function ScanAsync(Of T As Class)(request As ScanRequest, cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync*
  implements:
  - Innovt.Cloud.Table.ITableRepository.ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  nameWithType.vb: Repository.ScanAsync(Of T)(ScanRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync(Of T)(Innovt.Cloud.Table.ScanRequest, System.Threading.CancellationToken)
  name.vb: ScanAsync(Of T)(ScanRequest, CancellationToken)
- uid: Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  id: ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Dynamo.Repository
  langs:
  - csharp
  - vb
  name: ScanPaginatedByAsync<T>(ScanRequest, CancellationToken)
  nameWithType: Repository.ScanPaginatedByAsync<T>(ScanRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync<T>(Innovt.Cloud.Table.ScanRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Dynamo/Repository.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ScanPaginatedByAsync
    path: ../src/Innovt.Cloud.AWS.Dynamo/Repository.cs
    startLine: 928
  assemblies:
  - Innovt.Cloud.AWS.Dynamo
  namespace: Innovt.Cloud.AWS.Dynamo
  summary: Scans the DynamoDB table based on the specified scan request and returns a paginated collection of items.
  example: []
  syntax:
    content: 'public Task<PagedCollection<T>> ScanPaginatedByAsync<T>(ScanRequest request, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: request
      type: Innovt.Cloud.Table.ScanRequest
      description: The scan request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to cancel the operation.
    typeParameters:
    - id: T
      description: The type of items to scan.
    return:
      type: System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{{T}}}
      description: A paginated collection of items based on the scan request.
    content.vb: Public Function ScanPaginatedByAsync(Of T As Class)(request As ScanRequest, cancellationToken As CancellationToken = Nothing) As Task(Of PagedCollection(Of T))
  overload: Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the request is null.
  implements:
  - Innovt.Cloud.Table.ITableRepository.ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  nameWithType.vb: Repository.ScanPaginatedByAsync(Of T)(ScanRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync(Of T)(Innovt.Cloud.Table.ScanRequest, System.Threading.CancellationToken)
  name.vb: ScanPaginatedByAsync(Of T)(ScanRequest, CancellationToken)
references:
- uid: Innovt.Cloud.AWS.Dynamo
  commentId: N:Innovt.Cloud.AWS.Dynamo
  href: Innovt.html
  name: Innovt.Cloud.AWS.Dynamo
  nameWithType: Innovt.Cloud.AWS.Dynamo
  fullName: Innovt.Cloud.AWS.Dynamo
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Dynamo
    name: Dynamo
    href: Innovt.Cloud.AWS.Dynamo.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Dynamo
    name: Dynamo
    href: Innovt.Cloud.AWS.Dynamo.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Innovt.Cloud.AWS.AwsBaseService
  commentId: T:Innovt.Cloud.AWS.AwsBaseService
  parent: Innovt.Cloud.AWS
  href: Innovt.Cloud.AWS.AwsBaseService.html
  name: AwsBaseService
  nameWithType: AwsBaseService
  fullName: Innovt.Cloud.AWS.AwsBaseService
- uid: Innovt.Cloud.Table.ITableRepository
  commentId: T:Innovt.Cloud.Table.ITableRepository
  parent: Innovt.Cloud.Table
  href: Innovt.Cloud.Table.ITableRepository.html
  name: ITableRepository
  nameWithType: ITableRepository
  fullName: Innovt.Cloud.Table.ITableRepository
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Innovt.Cloud.AWS.AwsBaseService.Configuration
  commentId: F:Innovt.Cloud.AWS.AwsBaseService.Configuration
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Configuration
  name: Configuration
  nameWithType: AwsBaseService.Configuration
  fullName: Innovt.Cloud.AWS.AwsBaseService.Configuration
- uid: Innovt.Cloud.AWS.AwsBaseService.Logger
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.Logger
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Logger
  name: Logger
  nameWithType: AwsBaseService.Logger
  fullName: Innovt.Cloud.AWS.AwsBaseService.Logger
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Dispose
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  name: Dispose()
  nameWithType: AwsBaseService.Dispose()
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  name: GetServiceRegionEndPoint()
  nameWithType: AwsBaseService.GetServiceRegionEndPoint()
  fullName: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
    name: GetServiceRegionEndPoint
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
    name: GetServiceRegionEndPoint
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  name: CreateService<T>()
  nameWithType: AwsBaseService.CreateService<T>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateService<T>()
  nameWithType.vb: AwsBaseService.CreateService(Of T)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateService(Of T)()
  name.vb: CreateService(Of T)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
    name: CreateService
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
    name: CreateService
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  name: CreateDefaultRetryPolicy()
  nameWithType: AwsBaseService.CreateDefaultRetryPolicy()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
    name: CreateDefaultRetryPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
    name: CreateDefaultRetryPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  name: CreateRetryAsyncPolicy<T>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T)()
  name.vb: CreateRetryAsyncPolicy(Of T)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  name: CreateRetryAsyncPolicy<T, T1>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  name: CreateRetryAsyncPolicy<T, T1, T2>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  name: CreateRetryAsyncPolicy<T, T1, T2, T3>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  name: CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  name: CreateCircuitBreaker<T, T1>()
  nameWithType: AwsBaseService.CreateCircuitBreaker<T, T1>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker<T, T1>()
  nameWithType.vb: AwsBaseService.CreateCircuitBreaker(Of T, T1)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker(Of T, T1)()
  name.vb: CreateCircuitBreaker(Of T, T1)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
    name: CreateCircuitBreaker
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
    name: CreateCircuitBreaker
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  parent: Innovt.Cloud.AWS.AwsBaseService
  isExternal: true
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  name: Dispose(bool)
  nameWithType: AwsBaseService.Dispose(bool)
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose(bool)
  nameWithType.vb: AwsBaseService.Dispose(Boolean)
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Cloud.AWS
  commentId: N:Innovt.Cloud.AWS
  href: Innovt.html
  name: Innovt.Cloud.AWS
  nameWithType: Innovt.Cloud.AWS
  fullName: Innovt.Cloud.AWS
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
- uid: Innovt.Cloud.Table
  commentId: N:Innovt.Cloud.Table
  href: Innovt.html
  name: Innovt.Cloud.Table
  nameWithType: Innovt.Cloud.Table
  fullName: Innovt.Cloud.Table
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.Table
    name: Table
    href: Innovt.Cloud.Table.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.Table
    name: Table
    href: Innovt.Cloud.Table.html
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_ExecuteStatementAsync__1_Innovt_Cloud_Table_ExecuteSqlStatementRequest_System_Threading_CancellationToken_
  name: ExecuteStatementAsync
  nameWithType: Repository.ExecuteStatementAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.ExecuteStatementAsync
- uid: Innovt.Cloud.Table.ITableRepository.ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ExecuteStatementAsync__1_Innovt_Cloud_Table_ExecuteSqlStatementRequest_System_Threading_CancellationToken_
  name: ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken)
  nameWithType: ITableRepository.ExecuteStatementAsync<T>(ExecuteSqlStatementRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.ExecuteStatementAsync<T>(Innovt.Cloud.Table.ExecuteSqlStatementRequest, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.ExecuteStatementAsync(Of T)(ExecuteSqlStatementRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.ExecuteStatementAsync(Of T)(Innovt.Cloud.Table.ExecuteSqlStatementRequest, System.Threading.CancellationToken)
  name.vb: ExecuteStatementAsync(Of T)(ExecuteSqlStatementRequest, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
    name: ExecuteStatementAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ExecuteStatementAsync__1_Innovt_Cloud_Table_ExecuteSqlStatementRequest_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.ExecuteSqlStatementRequest
    name: ExecuteSqlStatementRequest
    href: Innovt.Cloud.Table.ExecuteSqlStatementRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.ExecuteStatementAsync``1(Innovt.Cloud.Table.ExecuteSqlStatementRequest,System.Threading.CancellationToken)
    name: ExecuteStatementAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ExecuteStatementAsync__1_Innovt_Cloud_Table_ExecuteSqlStatementRequest_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.ExecuteSqlStatementRequest
    name: ExecuteSqlStatementRequest
    href: Innovt.Cloud.Table.ExecuteSqlStatementRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.ExecuteSqlStatementRequest
  commentId: T:Innovt.Cloud.Table.ExecuteSqlStatementRequest
  parent: Innovt.Cloud.Table
  href: Innovt.Cloud.Table.ExecuteSqlStatementRequest.html
  name: ExecuteSqlStatementRequest
  nameWithType: ExecuteSqlStatementRequest
  fullName: Innovt.Cloud.Table.ExecuteSqlStatementRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Innovt.Cloud.Table.ExecuteSqlStatementResponse{{T}}}
  commentId: T:System.Threading.Tasks.Task{Innovt.Cloud.Table.ExecuteSqlStatementResponse{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ExecuteSqlStatementResponse<T>>
  nameWithType: Task<ExecuteSqlStatementResponse<T>>
  fullName: System.Threading.Tasks.Task<Innovt.Cloud.Table.ExecuteSqlStatementResponse<T>>
  nameWithType.vb: Task(Of ExecuteSqlStatementResponse(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Cloud.Table.ExecuteSqlStatementResponse(Of T))
  name.vb: Task(Of ExecuteSqlStatementResponse(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Cloud.Table.ExecuteSqlStatementResponse`1
    name: ExecuteSqlStatementResponse
    href: Innovt.Cloud.Table.ExecuteSqlStatementResponse-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Cloud.Table.ExecuteSqlStatementResponse`1
    name: ExecuteSqlStatementResponse
    href: Innovt.Cloud.Table.ExecuteSqlStatementResponse-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_BatchGetItem__1_Innovt_Cloud_Table_BatchGetItemRequest_System_Threading_CancellationToken_
  name: BatchGetItem
  nameWithType: Repository.BatchGetItem
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.BatchGetItem
- uid: Innovt.Cloud.Table.ITableRepository.BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_BatchGetItem__1_Innovt_Cloud_Table_BatchGetItemRequest_System_Threading_CancellationToken_
  name: BatchGetItem<T>(BatchGetItemRequest, CancellationToken)
  nameWithType: ITableRepository.BatchGetItem<T>(BatchGetItemRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.BatchGetItem<T>(Innovt.Cloud.Table.BatchGetItemRequest, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.BatchGetItem(Of T)(BatchGetItemRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.BatchGetItem(Of T)(Innovt.Cloud.Table.BatchGetItemRequest, System.Threading.CancellationToken)
  name.vb: BatchGetItem(Of T)(BatchGetItemRequest, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
    name: BatchGetItem
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_BatchGetItem__1_Innovt_Cloud_Table_BatchGetItemRequest_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.BatchGetItemRequest
    name: BatchGetItemRequest
    href: Innovt.Cloud.Table.BatchGetItemRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.BatchGetItem``1(Innovt.Cloud.Table.BatchGetItemRequest,System.Threading.CancellationToken)
    name: BatchGetItem
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_BatchGetItem__1_Innovt_Cloud_Table_BatchGetItemRequest_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.BatchGetItemRequest
    name: BatchGetItemRequest
    href: Innovt.Cloud.Table.BatchGetItemRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.BatchGetItemRequest
  commentId: T:Innovt.Cloud.Table.BatchGetItemRequest
  parent: Innovt.Cloud.Table
  href: Innovt.Cloud.Table.BatchGetItemRequest.html
  name: BatchGetItemRequest
  nameWithType: BatchGetItemRequest
  fullName: Innovt.Cloud.Table.BatchGetItemRequest
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<T>>
  nameWithType: Task<List<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<T>>
  nameWithType.vb: Task(Of List(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of T))
  name.vb: Task(Of List(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_CreateTransactionWriteItem__1___0_
  name: CreateTransactionWriteItem
  nameWithType: Repository.CreateTransactionWriteItem
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.CreateTransactionWriteItem
- uid: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1({T})
  commentId: M:Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1(``0)
  parent: Innovt.Cloud.Table.ITableRepository
  definition: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1(``0)
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_CreateTransactionWriteItem__1___0_
  name: CreateTransactionWriteItem<T>(T)
  nameWithType: ITableRepository.CreateTransactionWriteItem<T>(T)
  fullName: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem<T>(T)
  nameWithType.vb: ITableRepository.CreateTransactionWriteItem(Of T)(T)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem(Of T)(T)
  name.vb: CreateTransactionWriteItem(Of T)(T)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1(``0)
    name: CreateTransactionWriteItem
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_CreateTransactionWriteItem__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1(``0)
    name: CreateTransactionWriteItem
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_CreateTransactionWriteItem__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Cloud.Table.TransactionWriteItem
  commentId: T:Innovt.Cloud.Table.TransactionWriteItem
  parent: Innovt.Cloud.Table
  href: Innovt.Cloud.Table.TransactionWriteItem.html
  name: TransactionWriteItem
  nameWithType: TransactionWriteItem
  fullName: Innovt.Cloud.Table.TransactionWriteItem
- uid: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1(``0)
  commentId: M:Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1(``0)
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_CreateTransactionWriteItem__1___0_
  name: CreateTransactionWriteItem<T>(T)
  nameWithType: ITableRepository.CreateTransactionWriteItem<T>(T)
  fullName: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem<T>(T)
  nameWithType.vb: ITableRepository.CreateTransactionWriteItem(Of T)(T)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem(Of T)(T)
  name.vb: CreateTransactionWriteItem(Of T)(T)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1(``0)
    name: CreateTransactionWriteItem
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_CreateTransactionWriteItem__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.CreateTransactionWriteItem``1(``0)
    name: CreateTransactionWriteItem
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_CreateTransactionWriteItem__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  name: CreateDefaultRetryAsyncPolicy()
  nameWithType: AwsBaseService.CreateDefaultRetryAsyncPolicy()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
    name: CreateDefaultRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
    name: CreateDefaultRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.CreateDefaultRetryAsyncPolicy*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.CreateDefaultRetryAsyncPolicy
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_CreateDefaultRetryAsyncPolicy
  name: CreateDefaultRetryAsyncPolicy
  nameWithType: Repository.CreateDefaultRetryAsyncPolicy
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.CreateDefaultRetryAsyncPolicy
- uid: Polly.Retry.AsyncRetryPolicy
  commentId: T:Polly.Retry.AsyncRetryPolicy
  parent: Polly.Retry
  isExternal: true
  href: https://github.com/App-vNext/Polly/blob/077cf388fc5a85a7f6cd0fdcb2b68d17a898019e/src/Polly/Retry/AsyncRetryPolicy.cs
  name: AsyncRetryPolicy
  nameWithType: AsyncRetryPolicy
  fullName: Polly.Retry.AsyncRetryPolicy
- uid: Polly.Retry
  commentId: N:Polly.Retry
  isExternal: true
  name: Polly.Retry
  nameWithType: Polly.Retry
  fullName: Polly.Retry
  spec.csharp:
  - uid: Polly
    name: Polly
    isExternal: true
  - name: .
  - uid: Polly.Retry
    name: Retry
    isExternal: true
  spec.vb:
  - uid: Polly
    name: Polly
    isExternal: true
  - name: .
  - uid: Polly.Retry
    name: Retry
    isExternal: true
- uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  name: DisposeServices()
  nameWithType: AwsBaseService.DisposeServices()
  fullName: Innovt.Cloud.AWS.AwsBaseService.DisposeServices()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
    name: DisposeServices
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
    name: DisposeServices
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.DisposeServices*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.DisposeServices
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_DisposeServices
  name: DisposeServices
  nameWithType: Repository.DisposeServices
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.DisposeServices
- uid: Innovt.Cloud.AWS.Dynamo.Repository
  commentId: T:Innovt.Cloud.AWS.Dynamo.Repository
  href: Innovt.Cloud.AWS.Dynamo.Repository.html
  name: Repository
  nameWithType: Repository
  fullName: Innovt.Cloud.AWS.Dynamo.Repository
- uid: Innovt.Cloud.AWS.Dynamo.Repository.#ctor*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.#ctor
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository__ctor_Innovt_Core_CrossCutting_Log_ILogger_Innovt_Cloud_AWS_Configuration_IAwsConfiguration_
  name: Repository
  nameWithType: Repository.Repository
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.Repository
  nameWithType.vb: Repository.New
  fullName.vb: Innovt.Cloud.AWS.Dynamo.Repository.New
  name.vb: New
- uid: Innovt.Core.CrossCutting.Log.ILogger
  commentId: T:Innovt.Core.CrossCutting.Log.ILogger
  parent: Innovt.Core.CrossCutting.Log
  href: Innovt.Core.CrossCutting.Log.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Innovt.Core.CrossCutting.Log.ILogger
- uid: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
  commentId: T:Innovt.Cloud.AWS.Configuration.IAwsConfiguration
  parent: Innovt.Cloud.AWS.Configuration
  href: Innovt.Cloud.AWS.Configuration.IAwsConfiguration.html
  name: IAwsConfiguration
  nameWithType: IAwsConfiguration
  fullName: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
- uid: Innovt.Core.CrossCutting.Log
  commentId: N:Innovt.Core.CrossCutting.Log
  href: Innovt.html
  name: Innovt.Core.CrossCutting.Log
  nameWithType: Innovt.Core.CrossCutting.Log
  fullName: Innovt.Core.CrossCutting.Log
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
- uid: Innovt.Cloud.AWS.Configuration
  commentId: N:Innovt.Cloud.AWS.Configuration
  href: Innovt.html
  name: Innovt.Cloud.AWS.Configuration
  nameWithType: Innovt.Cloud.AWS.Configuration
  fullName: Innovt.Cloud.AWS.Configuration
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Configuration
    name: Configuration
    href: Innovt.Cloud.AWS.Configuration.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Configuration
    name: Configuration
    href: Innovt.Cloud.AWS.Configuration.html
- uid: Innovt.Cloud.AWS.Dynamo.DynamoContext
  commentId: T:Innovt.Cloud.AWS.Dynamo.DynamoContext
  parent: Innovt.Cloud.AWS.Dynamo
  href: Innovt.Cloud.AWS.Dynamo.DynamoContext.html
  name: DynamoContext
  nameWithType: DynamoContext
  fullName: Innovt.Cloud.AWS.Dynamo.DynamoContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Cloud.AWS.Dynamo.Repository.AddAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.AddAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_AddAsync__1___0_System_Threading_CancellationToken_
  name: AddAsync
  nameWithType: Repository.AddAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.AddAsync
- uid: Innovt.Cloud.Table.ITableRepository.AddAsync``1({T},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  definition: Innovt.Cloud.Table.ITableRepository.AddAsync``1(``0,System.Threading.CancellationToken)
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddAsync__1___0_System_Threading_CancellationToken_
  name: AddAsync<T>(T, CancellationToken)
  nameWithType: ITableRepository.AddAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.AddAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.AddAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.AddAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Innovt.Cloud.Table.ITableRepository.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.AddAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddAsync__1___0_System_Threading_CancellationToken_
  name: AddAsync<T>(T, CancellationToken)
  nameWithType: ITableRepository.AddAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.AddAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.AddAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.AddAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: AddAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_AddListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  name: AddListAsync
  nameWithType: Repository.AddListAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.AddListAsync
- uid: Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{{T}},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  definition: Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  name: AddListAsync<T>(ICollection<T>, CancellationToken)
  nameWithType: ITableRepository.AddListAsync<T>(ICollection<T>, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.AddListAsync<T>(System.Collections.Generic.ICollection<T>, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.AddListAsync(Of T)(ICollection(Of T), CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.AddListAsync(Of T)(System.Collections.Generic.ICollection(Of T), System.Threading.CancellationToken)
  name.vb: AddListAsync(Of T)(ICollection(Of T), CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
    name: AddListAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
    name: AddListAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  name: AddListAsync<T>(ICollection<T>, CancellationToken)
  nameWithType: ITableRepository.AddListAsync<T>(ICollection<T>, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.AddListAsync<T>(System.Collections.Generic.ICollection<T>, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.AddListAsync(Of T)(ICollection(Of T), CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.AddListAsync(Of T)(System.Collections.Generic.ICollection(Of T), System.Threading.CancellationToken)
  name.vb: AddListAsync(Of T)(ICollection(Of T), CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
    name: AddListAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.AddListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
    name: AddListAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_AddListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innovt.Core.Exceptions.BusinessException
  commentId: T:Innovt.Core.Exceptions.BusinessException
  parent: Innovt.Core.Exceptions
  href: Innovt.Core.Exceptions.BusinessException.html
  name: BusinessException
  nameWithType: BusinessException
  fullName: Innovt.Core.Exceptions.BusinessException
- uid: Innovt.Cloud.AWS.Dynamo.Repository.TransactWriteItemsAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.TransactWriteItemsAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_TransactWriteItemsAsync_Innovt_Cloud_Table_TransactionWriteRequest_System_Threading_CancellationToken_
  name: TransactWriteItemsAsync
  nameWithType: Repository.TransactWriteItemsAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.TransactWriteItemsAsync
- uid: Innovt.Cloud.Table.ITableRepository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_TransactWriteItemsAsync_Innovt_Cloud_Table_TransactionWriteRequest_System_Threading_CancellationToken_
  name: TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken)
  nameWithType: ITableRepository.TransactWriteItemsAsync(TransactionWriteRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
    name: TransactWriteItemsAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_TransactWriteItemsAsync_Innovt_Cloud_Table_TransactionWriteRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Innovt.Cloud.Table.TransactionWriteRequest
    name: TransactionWriteRequest
    href: Innovt.Cloud.Table.TransactionWriteRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.TransactWriteItemsAsync(Innovt.Cloud.Table.TransactionWriteRequest,System.Threading.CancellationToken)
    name: TransactWriteItemsAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_TransactWriteItemsAsync_Innovt_Cloud_Table_TransactionWriteRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Innovt.Cloud.Table.TransactionWriteRequest
    name: TransactionWriteRequest
    href: Innovt.Cloud.Table.TransactionWriteRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.TransactionWriteRequest
  commentId: T:Innovt.Cloud.Table.TransactionWriteRequest
  parent: Innovt.Cloud.Table
  href: Innovt.Cloud.Table.TransactionWriteRequest.html
  name: TransactionWriteRequest
  nameWithType: TransactionWriteRequest
  fullName: Innovt.Cloud.Table.TransactionWriteRequest
- uid: Innovt.Core.Exceptions
  commentId: N:Innovt.Core.Exceptions
  href: Innovt.html
  name: Innovt.Core.Exceptions
  nameWithType: Innovt.Core.Exceptions
  fullName: Innovt.Core.Exceptions
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Exceptions
    name: Exceptions
    href: Innovt.Core.Exceptions.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Exceptions
    name: Exceptions
    href: Innovt.Core.Exceptions.html
- uid: Innovt.Cloud.AWS.Dynamo.Repository.BatchWriteItem*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.BatchWriteItem
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_BatchWriteItem_Innovt_Cloud_Table_BatchWriteItemRequest_System_Threading_CancellationToken_
  name: BatchWriteItem
  nameWithType: Repository.BatchWriteItem
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.BatchWriteItem
- uid: Innovt.Cloud.Table.ITableRepository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_BatchWriteItem_Innovt_Cloud_Table_BatchWriteItemRequest_System_Threading_CancellationToken_
  name: BatchWriteItem(BatchWriteItemRequest, CancellationToken)
  nameWithType: ITableRepository.BatchWriteItem(BatchWriteItemRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
    name: BatchWriteItem
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_BatchWriteItem_Innovt_Cloud_Table_BatchWriteItemRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Innovt.Cloud.Table.BatchWriteItemRequest
    name: BatchWriteItemRequest
    href: Innovt.Cloud.Table.BatchWriteItemRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.BatchWriteItem(Innovt.Cloud.Table.BatchWriteItemRequest,System.Threading.CancellationToken)
    name: BatchWriteItem
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_BatchWriteItem_Innovt_Cloud_Table_BatchWriteItemRequest_System_Threading_CancellationToken_
  - name: (
  - uid: Innovt.Cloud.Table.BatchWriteItemRequest
    name: BatchWriteItemRequest
    href: Innovt.Cloud.Table.BatchWriteItemRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.BatchWriteItemRequest
  commentId: T:Innovt.Cloud.Table.BatchWriteItemRequest
  parent: Innovt.Cloud.Table
  href: Innovt.Cloud.Table.BatchWriteItemRequest.html
  name: BatchWriteItemRequest
  nameWithType: BatchWriteItemRequest
  fullName: Innovt.Cloud.Table.BatchWriteItemRequest
- uid: System.Threading.Tasks.Task{Innovt.Cloud.Table.BatchWriteItemResponse}
  commentId: T:System.Threading.Tasks.Task{Innovt.Cloud.Table.BatchWriteItemResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BatchWriteItemResponse>
  nameWithType: Task<BatchWriteItemResponse>
  fullName: System.Threading.Tasks.Task<Innovt.Cloud.Table.BatchWriteItemResponse>
  nameWithType.vb: Task(Of BatchWriteItemResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Cloud.Table.BatchWriteItemResponse)
  name.vb: Task(Of BatchWriteItemResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Cloud.Table.BatchWriteItemResponse
    name: BatchWriteItemResponse
    href: Innovt.Cloud.Table.BatchWriteItemResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Cloud.Table.BatchWriteItemResponse
    name: BatchWriteItemResponse
    href: Innovt.Cloud.Table.BatchWriteItemResponse.html
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_DeleteAsync__1___0_System_Threading_CancellationToken_
  name: DeleteAsync
  nameWithType: Repository.DeleteAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.DeleteAsync
- uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1({T},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  definition: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(``0,System.Threading.CancellationToken)
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1___0_System_Threading_CancellationToken_
  name: DeleteAsync<T>(T, CancellationToken)
  nameWithType: ITableRepository.DeleteAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.DeleteAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.DeleteAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.DeleteAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(``0,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(``0,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1___0_System_Threading_CancellationToken_
  name: DeleteAsync<T>(T, CancellationToken)
  nameWithType: ITableRepository.DeleteAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.DeleteAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.DeleteAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.DeleteAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(``0,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(``0,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_DeleteListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  name: DeleteListAsync
  nameWithType: Repository.DeleteListAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.DeleteListAsync
- uid: Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{{T}},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  definition: Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  name: DeleteListAsync<T>(ICollection<T>, CancellationToken)
  nameWithType: ITableRepository.DeleteListAsync<T>(ICollection<T>, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.DeleteListAsync<T>(System.Collections.Generic.ICollection<T>, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.DeleteListAsync(Of T)(ICollection(Of T), CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.DeleteListAsync(Of T)(System.Collections.Generic.ICollection(Of T), System.Threading.CancellationToken)
  name.vb: DeleteListAsync(Of T)(ICollection(Of T), CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
    name: DeleteListAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
    name: DeleteListAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  name: DeleteListAsync<T>(ICollection<T>, CancellationToken)
  nameWithType: ITableRepository.DeleteListAsync<T>(ICollection<T>, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.DeleteListAsync<T>(System.Collections.Generic.ICollection<T>, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.DeleteListAsync(Of T)(ICollection(Of T), CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.DeleteListAsync(Of T)(System.Collections.Generic.ICollection(Of T), System.Threading.CancellationToken)
  name.vb: DeleteListAsync(Of T)(ICollection(Of T), CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
    name: DeleteListAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteListAsync``1(System.Collections.Generic.ICollection{``0},System.Threading.CancellationToken)
    name: DeleteListAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteListAsync__1_System_Collections_Generic_ICollection___0__System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1_System_Object_System_String_System_Threading_CancellationToken_
  name: DeleteAsync<T>(object, string, CancellationToken)
  nameWithType: ITableRepository.DeleteAsync<T>(object, string, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.DeleteAsync<T>(object, string, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.DeleteAsync(Of T)(Object, String, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.DeleteAsync(Of T)(Object, String, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Of T)(Object, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1_System_Object_System_String_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)
    name: DeleteAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_DeleteAsync__1_System_Object_System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_UpdateAsync__1___0_System_Threading_CancellationToken_
  name: UpdateAsync
  nameWithType: Repository.UpdateAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.UpdateAsync
- uid: Innovt.Cloud.Table.ITableRepository.UpdateAsync``1({T},System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  definition: Innovt.Cloud.Table.ITableRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_UpdateAsync__1___0_System_Threading_CancellationToken_
  name: UpdateAsync<T>(T, CancellationToken)
  nameWithType: ITableRepository.UpdateAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.UpdateAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.UpdateAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.UpdateAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: UpdateAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)
    name: UpdateAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_UpdateAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)
    name: UpdateAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_UpdateAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_UpdateAsync__1___0_System_Threading_CancellationToken_
  name: UpdateAsync<T>(T, CancellationToken)
  nameWithType: ITableRepository.UpdateAsync<T>(T, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.UpdateAsync<T>(T, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.UpdateAsync(Of T)(T, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.UpdateAsync(Of T)(T, System.Threading.CancellationToken)
  name.vb: UpdateAsync(Of T)(T, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)
    name: UpdateAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_UpdateAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)
    name: UpdateAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_UpdateAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, AttributeValue>
  nameWithType: Dictionary<string, AttributeValue>
  fullName: System.Collections.Generic.Dictionary<string, Amazon.DynamoDBv2.Model.AttributeValue>
  nameWithType.vb: Dictionary(Of String, AttributeValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Amazon.DynamoDBv2.Model.AttributeValue)
  name.vb: Dictionary(Of String, AttributeValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Amazon.DynamoDBv2.Model.AttributeValue
    name: AttributeValue
    isExternal: true
    href: https://github.com/aws/aws-sdk-net/blob/a788abb2804fb6dcd6d388500ac88b23e539e280/sdk/src/Services/DynamoDBv2/Generated/Model/AttributeValue.cs
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Amazon.DynamoDBv2.Model.AttributeValue
    name: AttributeValue
    isExternal: true
    href: https://github.com/aws/aws-sdk-net/blob/a788abb2804fb6dcd6d388500ac88b23e539e280/sdk/src/Services/DynamoDBv2/Generated/Model/AttributeValue.cs
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Amazon.DynamoDBv2.Model.AttributeValueUpdate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, AttributeValueUpdate>
  nameWithType: Dictionary<string, AttributeValueUpdate>
  fullName: System.Collections.Generic.Dictionary<string, Amazon.DynamoDBv2.Model.AttributeValueUpdate>
  nameWithType.vb: Dictionary(Of String, AttributeValueUpdate)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Amazon.DynamoDBv2.Model.AttributeValueUpdate)
  name.vb: Dictionary(Of String, AttributeValueUpdate)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Amazon.DynamoDBv2.Model.AttributeValueUpdate
    name: AttributeValueUpdate
    isExternal: true
    href: https://github.com/aws/aws-sdk-net/blob/a788abb2804fb6dcd6d388500ac88b23e539e280/sdk/src/Services/DynamoDBv2/Generated/Model/AttributeValueUpdate.cs
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Amazon.DynamoDBv2.Model.AttributeValueUpdate
    name: AttributeValueUpdate
    isExternal: true
    href: https://github.com/aws/aws-sdk-net/blob/a788abb2804fb6dcd6d388500ac88b23e539e280/sdk/src/Services/DynamoDBv2/Generated/Model/AttributeValueUpdate.cs
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Amazon.DynamoDBv2.Model.UpdateItemRequest
  commentId: T:Amazon.DynamoDBv2.Model.UpdateItemRequest
  parent: Amazon.DynamoDBv2.Model
  isExternal: true
  href: https://github.com/aws/aws-sdk-net/blob/a788abb2804fb6dcd6d388500ac88b23e539e280/sdk/src/Services/DynamoDBv2/Generated/Model/UpdateItemRequest.cs
  name: UpdateItemRequest
  nameWithType: UpdateItemRequest
  fullName: Amazon.DynamoDBv2.Model.UpdateItemRequest
- uid: Amazon.DynamoDBv2.Model
  commentId: N:Amazon.DynamoDBv2.Model
  isExternal: true
  name: Amazon.DynamoDBv2.Model
  nameWithType: Amazon.DynamoDBv2.Model
  fullName: Amazon.DynamoDBv2.Model
  spec.csharp:
  - uid: Amazon
    name: Amazon
    isExternal: true
  - name: .
  - uid: Amazon.DynamoDBv2
    name: DynamoDBv2
    isExternal: true
  - name: .
  - uid: Amazon.DynamoDBv2.Model
    name: Model
    isExternal: true
  spec.vb:
  - uid: Amazon
    name: Amazon
    isExternal: true
  - name: .
  - uid: Amazon.DynamoDBv2
    name: DynamoDBv2
    isExternal: true
  - name: .
  - uid: Amazon.DynamoDBv2.Model
    name: Model
    isExternal: true
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_QueryFirstAsync__1_System_Object_System_Threading_CancellationToken_
  name: QueryFirstAsync
  nameWithType: Repository.QueryFirstAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstAsync
- uid: Innovt.Cloud.Table.ITableRepository.QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryFirstAsync__1_System_Object_System_Threading_CancellationToken_
  name: QueryFirstAsync<T>(object, CancellationToken)
  nameWithType: ITableRepository.QueryFirstAsync<T>(object, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryFirstAsync<T>(object, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryFirstAsync(Of T)(Object, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryFirstAsync(Of T)(Object, System.Threading.CancellationToken)
  name.vb: QueryFirstAsync(Of T)(Object, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
    name: QueryFirstAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryFirstAsync__1_System_Object_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryFirstAsync``1(System.Object,System.Threading.CancellationToken)
    name: QueryFirstAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryFirstAsync__1_System_Object_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_GetByIdAsync__1_System_Object_System_String_System_Threading_CancellationToken_
  name: GetByIdAsync
  nameWithType: Repository.GetByIdAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.GetByIdAsync
- uid: Innovt.Cloud.Table.ITableRepository.GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_GetByIdAsync__1_System_Object_System_String_System_Threading_CancellationToken_
  name: GetByIdAsync<T>(object, string, CancellationToken)
  nameWithType: ITableRepository.GetByIdAsync<T>(object, string, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.GetByIdAsync<T>(object, string, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.GetByIdAsync(Of T)(Object, String, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.GetByIdAsync(Of T)(Object, String, System.Threading.CancellationToken)
  name.vb: GetByIdAsync(Of T)(Object, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
    name: GetByIdAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_GetByIdAsync__1_System_Object_System_String_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.GetByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)
    name: GetByIdAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_GetByIdAsync__1_System_Object_System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_QueryAsync__1_System_Object_System_Threading_CancellationToken_
  name: QueryAsync
  nameWithType: Repository.QueryAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryAsync
- uid: Innovt.Cloud.Table.ITableRepository.QueryAsync``1(System.Object,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryAsync``1(System.Object,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryAsync__1_System_Object_System_Threading_CancellationToken_
  name: QueryAsync<T>(object, CancellationToken)
  nameWithType: ITableRepository.QueryAsync<T>(object, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryAsync<T>(object, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryAsync(Of T)(Object, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryAsync(Of T)(Object, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of T)(Object, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryAsync``1(System.Object,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryAsync__1_System_Object_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryAsync``1(System.Object,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryAsync__1_System_Object_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<T>>
  nameWithType: Task<IList<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<T>>
  nameWithType.vb: Task(Of IList(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of T))
  name.vb: Task(Of IList(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  name: QueryAsync<T>(QueryRequest, CancellationToken)
  nameWithType: ITableRepository.QueryAsync<T>(QueryRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryAsync<T>(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryAsync(Of T)(QueryRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryAsync(Of T)(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  name.vb: QueryAsync(Of T)(QueryRequest, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
    name: QueryAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.QueryRequest
  commentId: T:Innovt.Cloud.Table.QueryRequest
  parent: Innovt.Cloud.Table
  href: Innovt.Cloud.Table.QueryRequest.html
  name: QueryRequest
  nameWithType: QueryRequest
  fullName: Innovt.Cloud.Table.QueryRequest
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_QueryMultipleAsync__3_Innovt_Cloud_Table_QueryRequest_System_String_System_Threading_CancellationToken_
  name: QueryMultipleAsync
  nameWithType: Repository.QueryMultipleAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryMultipleAsync
- uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__3_Innovt_Cloud_Table_QueryRequest_System_String_System_Threading_CancellationToken_
  name: QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken)
  nameWithType: ITableRepository.QueryMultipleAsync<T, TResult1, TResult2>(QueryRequest, string, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync<T, TResult1, TResult2>(Innovt.Cloud.Table.QueryRequest, string, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryMultipleAsync(Of T, TResult1, TResult2)(QueryRequest, String, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync(Of T, TResult1, TResult2)(Innovt.Cloud.Table.QueryRequest, String, System.Threading.CancellationToken)
  name.vb: QueryMultipleAsync(Of T, TResult1, TResult2)(QueryRequest, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
    name: QueryMultipleAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__3_Innovt_Cloud_Table_QueryRequest_System_String_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult1
  - name: ','
  - name: " "
  - name: TResult2
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``3(Innovt.Cloud.Table.QueryRequest,System.String,System.Threading.CancellationToken)
    name: QueryMultipleAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__3_Innovt_Cloud_Table_QueryRequest_System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult1
  - name: ','
  - name: " "
  - name: TResult2
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{{TResult1}},System.Collections.Generic.IList{{TResult2}}}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(IList<TResult1> first, IList<TResult2> second)>
  nameWithType: Task<(IList<TResult1> first, IList<TResult2> second)>
  fullName: System.Threading.Tasks.Task<(System.Collections.Generic.IList<TResult1> first, System.Collections.Generic.IList<TResult2> second)>
  nameWithType.vb: Task(Of (first As IList(Of TResult1), second As IList(Of TResult2)))
  fullName.vb: System.Threading.Tasks.Task(Of (first As System.Collections.Generic.IList(Of TResult1), second As System.Collections.Generic.IList(Of TResult2)))
  name.vb: Task(Of (first As IList(Of TResult1), second As IList(Of TResult2)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult1
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2}}.first
    name: first
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2--.first
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult2
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2}}.second
    name: second
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2--.second
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2}}.first
    name: first
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2--.first
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult1
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2}}.second
    name: second
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2--.second
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult2
  - name: )
  - name: )
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__4_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  name: QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken)
  nameWithType: ITableRepository.QueryMultipleAsync<T, TResult1, TResult2, TResult3>(QueryRequest, string[], CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync<T, TResult1, TResult2, TResult3>(Innovt.Cloud.Table.QueryRequest, string[], System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3)(QueryRequest, String(), CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3)(Innovt.Cloud.Table.QueryRequest, String(), System.Threading.CancellationToken)
  name.vb: QueryMultipleAsync(Of T, TResult1, TResult2, TResult3)(QueryRequest, String(), CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
    name: QueryMultipleAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__4_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult1
  - name: ','
  - name: " "
  - name: TResult2
  - name: ','
  - name: " "
  - name: TResult3
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``4(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
    name: QueryMultipleAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__4_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult1
  - name: ','
  - name: " "
  - name: TResult2
  - name: ','
  - name: " "
  - name: TResult3
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{{TResult1}},System.Collections.Generic.IList{{TResult2}},System.Collections.Generic.IList{{TResult3}}}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)>
  nameWithType: Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third)>
  fullName: System.Threading.Tasks.Task<(System.Collections.Generic.IList<TResult1> first, System.Collections.Generic.IList<TResult2> second, System.Collections.Generic.IList<TResult3> third)>
  nameWithType.vb: Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3)))
  fullName.vb: System.Threading.Tasks.Task(Of (first As System.Collections.Generic.IList(Of TResult1), second As System.Collections.Generic.IList(Of TResult2), third As System.Collections.Generic.IList(Of TResult3)))
  name.vb: Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult1
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3}}.first
    name: first
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3--.first
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult2
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3}}.second
    name: second
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3--.second
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult3
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3}}.third
    name: third
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3--.third
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3}}.first
    name: first
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3--.first
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult1
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3}}.second
    name: second
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3--.second
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult2
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3}}.third
    name: third
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3--.third
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult3
  - name: )
  - name: )
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__5_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  name: QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken)
  nameWithType: ITableRepository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(QueryRequest, string[], CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4>(Innovt.Cloud.Table.QueryRequest, string[], System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4)(QueryRequest, String(), CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4)(Innovt.Cloud.Table.QueryRequest, String(), System.Threading.CancellationToken)
  name.vb: QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4)(QueryRequest, String(), CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
    name: QueryMultipleAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__5_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult1
  - name: ','
  - name: " "
  - name: TResult2
  - name: ','
  - name: " "
  - name: TResult3
  - name: ','
  - name: " "
  - name: TResult4
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``5(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
    name: QueryMultipleAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__5_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult1
  - name: ','
  - name: " "
  - name: TResult2
  - name: ','
  - name: " "
  - name: TResult3
  - name: ','
  - name: " "
  - name: TResult4
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{{TResult1}},System.Collections.Generic.IList{{TResult2}},System.Collections.Generic.IList{{TResult3}},System.Collections.Generic.IList{{TResult4}}}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)>
  nameWithType: Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth)>
  fullName: System.Threading.Tasks.Task<(System.Collections.Generic.IList<TResult1> first, System.Collections.Generic.IList<TResult2> second, System.Collections.Generic.IList<TResult3> third, System.Collections.Generic.IList<TResult4> fourth)>
  nameWithType.vb: Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3), fourth As IList(Of TResult4)))
  fullName.vb: System.Threading.Tasks.Task(Of (first As System.Collections.Generic.IList(Of TResult1), second As System.Collections.Generic.IList(Of TResult2), third As System.Collections.Generic.IList(Of TResult3), fourth As System.Collections.Generic.IList(Of TResult4)))
  name.vb: Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3), fourth As IList(Of TResult4)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult1
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}.first
    name: first
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4--.first
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult2
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}.second
    name: second
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4--.second
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult3
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}.third
    name: third
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4--.third
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult4
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}.fourth
    name: fourth
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4--.fourth
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}.first
    name: first
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4--.first
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult1
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}.second
    name: second
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4--.second
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult2
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}.third
    name: third
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4--.third
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult3
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4}}.fourth
    name: fourth
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4--.fourth
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult4
  - name: )
  - name: )
  - name: )
- uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__6_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  name: QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken)
  nameWithType: ITableRepository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(QueryRequest, string[], CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync<T, TResult1, TResult2, TResult3, TResult4, TResult5>(Innovt.Cloud.Table.QueryRequest, string[], System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4, TResult5)(QueryRequest, String(), CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4, TResult5)(Innovt.Cloud.Table.QueryRequest, String(), System.Threading.CancellationToken)
  name.vb: QueryMultipleAsync(Of T, TResult1, TResult2, TResult3, TResult4, TResult5)(QueryRequest, String(), CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
    name: QueryMultipleAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__6_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult1
  - name: ','
  - name: " "
  - name: TResult2
  - name: ','
  - name: " "
  - name: TResult3
  - name: ','
  - name: " "
  - name: TResult4
  - name: ','
  - name: " "
  - name: TResult5
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryMultipleAsync``6(Innovt.Cloud.Table.QueryRequest,System.String[],System.Threading.CancellationToken)
    name: QueryMultipleAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryMultipleAsync__6_Innovt_Cloud_Table_QueryRequest_System_String___System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult1
  - name: ','
  - name: " "
  - name: TResult2
  - name: ','
  - name: " "
  - name: TResult3
  - name: ','
  - name: " "
  - name: TResult4
  - name: ','
  - name: " "
  - name: TResult5
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{{TResult1}},System.Collections.Generic.IList{{TResult2}},System.Collections.Generic.IList{{TResult3}},System.Collections.Generic.IList{{TResult4}},System.Collections.Generic.IList{{TResult5}}}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)>
  nameWithType: Task<(IList<TResult1> first, IList<TResult2> second, IList<TResult3> third, IList<TResult4> fourth, IList<TResult5> fifth)>
  fullName: System.Threading.Tasks.Task<(System.Collections.Generic.IList<TResult1> first, System.Collections.Generic.IList<TResult2> second, System.Collections.Generic.IList<TResult3> third, System.Collections.Generic.IList<TResult4> fourth, System.Collections.Generic.IList<TResult5> fifth)>
  nameWithType.vb: Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3), fourth As IList(Of TResult4), fifth As IList(Of TResult5)))
  fullName.vb: System.Threading.Tasks.Task(Of (first As System.Collections.Generic.IList(Of TResult1), second As System.Collections.Generic.IList(Of TResult2), third As System.Collections.Generic.IList(Of TResult3), fourth As System.Collections.Generic.IList(Of TResult4), fifth As System.Collections.Generic.IList(Of TResult5)))
  name.vb: Task(Of (first As IList(Of TResult1), second As IList(Of TResult2), third As IList(Of TResult3), fourth As IList(Of TResult4), fifth As IList(Of TResult5)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult1
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.first
    name: first
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.first
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult2
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.second
    name: second
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.second
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult3
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.third
    name: third
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.third
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult4
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.fourth
    name: fourth
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.fourth
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TResult5
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.fifth
    name: fifth
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.fifth
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.first
    name: first
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.first
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult1
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.second
    name: second
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.second
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult2
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.third
    name: third
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.third
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult3
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.fourth
    name: fourth
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.fourth
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult4
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IList{``1},System.Collections.Generic.IList{``2},System.Collections.Generic.IList{``3},System.Collections.Generic.IList{``4},System.Collections.Generic.IList{``5}}.fifth
    name: fifth
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ilist---1-,system.collections.generic.ilist---2-,system.collections.generic.ilist---3-,system.collections.generic.ilist---4-,system.collections.generic.ilist---5--.fifth
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult5
  - name: )
  - name: )
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_QueryFirstOrDefaultAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  name: QueryFirstOrDefaultAsync
  nameWithType: Repository.QueryFirstOrDefaultAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryFirstOrDefaultAsync
- uid: Innovt.Cloud.Table.ITableRepository.QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryFirstOrDefaultAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  name: QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken)
  nameWithType: ITableRepository.QueryFirstOrDefaultAsync<T>(QueryRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryFirstOrDefaultAsync<T>(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryFirstOrDefaultAsync(Of T)(QueryRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryFirstOrDefaultAsync(Of T)(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  name.vb: QueryFirstOrDefaultAsync(Of T)(QueryRequest, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
    name: QueryFirstOrDefaultAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryFirstOrDefaultAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryFirstOrDefaultAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
    name: QueryFirstOrDefaultAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryFirstOrDefaultAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_QueryPaginatedByAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  name: QueryPaginatedByAsync
  nameWithType: Repository.QueryPaginatedByAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.QueryPaginatedByAsync
- uid: Innovt.Cloud.Table.ITableRepository.QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryPaginatedByAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  name: QueryPaginatedByAsync<T>(QueryRequest, CancellationToken)
  nameWithType: ITableRepository.QueryPaginatedByAsync<T>(QueryRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.QueryPaginatedByAsync<T>(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.QueryPaginatedByAsync(Of T)(QueryRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.QueryPaginatedByAsync(Of T)(Innovt.Cloud.Table.QueryRequest, System.Threading.CancellationToken)
  name.vb: QueryPaginatedByAsync(Of T)(QueryRequest, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
    name: QueryPaginatedByAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryPaginatedByAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.QueryPaginatedByAsync``1(Innovt.Cloud.Table.QueryRequest,System.Threading.CancellationToken)
    name: QueryPaginatedByAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_QueryPaginatedByAsync__1_Innovt_Cloud_Table_QueryRequest_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.QueryRequest
    name: QueryRequest
    href: Innovt.Cloud.Table.QueryRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{{T}}}
  commentId: T:System.Threading.Tasks.Task{Innovt.Core.Collections.PagedCollection{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PagedCollection<T>>
  nameWithType: Task<PagedCollection<T>>
  fullName: System.Threading.Tasks.Task<Innovt.Core.Collections.PagedCollection<T>>
  nameWithType.vb: Task(Of PagedCollection(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Core.Collections.PagedCollection(Of T))
  name.vb: Task(Of PagedCollection(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Core.Collections.PagedCollection`1
    name: PagedCollection
    href: Innovt.Core.Collections.PagedCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Core.Collections.PagedCollection`1
    name: PagedCollection
    href: Innovt.Core.Collections.PagedCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_ScanAsync__1_Innovt_Cloud_Table_ScanRequest_System_Threading_CancellationToken_
  name: ScanAsync
  nameWithType: Repository.ScanAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.ScanAsync
- uid: Innovt.Cloud.Table.ITableRepository.ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ScanAsync__1_Innovt_Cloud_Table_ScanRequest_System_Threading_CancellationToken_
  name: ScanAsync<T>(ScanRequest, CancellationToken)
  nameWithType: ITableRepository.ScanAsync<T>(ScanRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.ScanAsync<T>(Innovt.Cloud.Table.ScanRequest, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.ScanAsync(Of T)(ScanRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.ScanAsync(Of T)(Innovt.Cloud.Table.ScanRequest, System.Threading.CancellationToken)
  name.vb: ScanAsync(Of T)(ScanRequest, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
    name: ScanAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ScanAsync__1_Innovt_Cloud_Table_ScanRequest_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.ScanRequest
    name: ScanRequest
    href: Innovt.Cloud.Table.ScanRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.ScanAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
    name: ScanAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ScanAsync__1_Innovt_Cloud_Table_ScanRequest_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.ScanRequest
    name: ScanRequest
    href: Innovt.Cloud.Table.ScanRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.Table.ScanRequest
  commentId: T:Innovt.Cloud.Table.ScanRequest
  parent: Innovt.Cloud.Table
  href: Innovt.Cloud.Table.ScanRequest.html
  name: ScanRequest
  nameWithType: ScanRequest
  fullName: Innovt.Cloud.Table.ScanRequest
- uid: Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync*
  commentId: Overload:Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync
  href: Innovt.Cloud.AWS.Dynamo.Repository.html#Innovt_Cloud_AWS_Dynamo_Repository_ScanPaginatedByAsync__1_Innovt_Cloud_Table_ScanRequest_System_Threading_CancellationToken_
  name: ScanPaginatedByAsync
  nameWithType: Repository.ScanPaginatedByAsync
  fullName: Innovt.Cloud.AWS.Dynamo.Repository.ScanPaginatedByAsync
- uid: Innovt.Cloud.Table.ITableRepository.ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.Table.ITableRepository.ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.Table.ITableRepository
  isExternal: true
  href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ScanPaginatedByAsync__1_Innovt_Cloud_Table_ScanRequest_System_Threading_CancellationToken_
  name: ScanPaginatedByAsync<T>(ScanRequest, CancellationToken)
  nameWithType: ITableRepository.ScanPaginatedByAsync<T>(ScanRequest, CancellationToken)
  fullName: Innovt.Cloud.Table.ITableRepository.ScanPaginatedByAsync<T>(Innovt.Cloud.Table.ScanRequest, System.Threading.CancellationToken)
  nameWithType.vb: ITableRepository.ScanPaginatedByAsync(Of T)(ScanRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.Table.ITableRepository.ScanPaginatedByAsync(Of T)(Innovt.Cloud.Table.ScanRequest, System.Threading.CancellationToken)
  name.vb: ScanPaginatedByAsync(Of T)(ScanRequest, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.Table.ITableRepository.ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
    name: ScanPaginatedByAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ScanPaginatedByAsync__1_Innovt_Cloud_Table_ScanRequest_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Innovt.Cloud.Table.ScanRequest
    name: ScanRequest
    href: Innovt.Cloud.Table.ScanRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.Table.ITableRepository.ScanPaginatedByAsync``1(Innovt.Cloud.Table.ScanRequest,System.Threading.CancellationToken)
    name: ScanPaginatedByAsync
    href: Innovt.Cloud.Table.ITableRepository.html#Innovt_Cloud_Table_ITableRepository_ScanPaginatedByAsync__1_Innovt_Cloud_Table_ScanRequest_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Innovt.Cloud.Table.ScanRequest
    name: ScanRequest
    href: Innovt.Cloud.Table.ScanRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
