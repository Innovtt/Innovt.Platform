### YamlMime:ManagedReference
items:
- uid: Innovt.Data.DataModels.BaseDataModel`2
  commentId: T:Innovt.Data.DataModels.BaseDataModel`2
  id: BaseDataModel`2
  parent: Innovt.Data.DataModels
  children:
  - Innovt.Data.DataModels.BaseDataModel`2.EnableTrackingChanges
  - Innovt.Data.DataModels.BaseDataModel`2.HasChanges
  - Innovt.Data.DataModels.BaseDataModel`2.OnPropertyChanged(System.String)
  - Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel(System.Collections.Generic.IList{`0})
  - Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel(`0)
  - Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain(System.Collections.Generic.IList{`1})
  - Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain(`1)
  - Innovt.Data.DataModels.BaseDataModel`2.PropertyChanged
  - Innovt.Data.DataModels.BaseDataModel`2.SetProperty``1(``0@,``0,System.String)
  langs:
  - csharp
  - vb
  name: BaseDataModel<TDomain, TDataModel>
  nameWithType: BaseDataModel<TDomain, TDataModel>
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>
  type: Class
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: BaseDataModel
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 16
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: The base abstract class for data model classes that facilitate communication between domain models and data models.
  example: []
  syntax:
    content: 'public abstract class BaseDataModel<TDomain, TDataModel> : INotifyPropertyChanged, IBaseDataModel where TDomain : class where TDataModel : class'
    typeParameters:
    - id: TDomain
      description: The type representing the domain model.
    - id: TDataModel
      description: The type representing the data model.
    content.vb: Public MustInherit Class BaseDataModel(Of TDomain As Class, TDataModel As Class) Implements INotifyPropertyChanged, IBaseDataModel
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  - Innovt.Data.DataModels.IBaseDataModel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel)
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel)
  name.vb: BaseDataModel(Of TDomain, TDataModel)
- uid: Innovt.Data.DataModels.BaseDataModel`2.EnableTrackingChanges
  commentId: P:Innovt.Data.DataModels.BaseDataModel`2.EnableTrackingChanges
  id: EnableTrackingChanges
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: EnableTrackingChanges
  nameWithType: BaseDataModel<TDomain, TDataModel>.EnableTrackingChanges
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.EnableTrackingChanges
  type: Property
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: EnableTrackingChanges
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 24
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Gets or sets a value indicating whether change tracking is enabled.
  example: []
  syntax:
    content: public bool EnableTrackingChanges { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableTrackingChanges As Boolean
  overload: Innovt.Data.DataModels.BaseDataModel`2.EnableTrackingChanges*
  implements:
  - Innovt.Data.DataModels.IBaseDataModel.EnableTrackingChanges
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).EnableTrackingChanges
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).EnableTrackingChanges
- uid: Innovt.Data.DataModels.BaseDataModel`2.HasChanges
  commentId: P:Innovt.Data.DataModels.BaseDataModel`2.HasChanges
  id: HasChanges
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: HasChanges
  nameWithType: BaseDataModel<TDomain, TDataModel>.HasChanges
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.HasChanges
  type: Property
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: HasChanges
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 37
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Gets a value indicating whether there are pending changes in the data model.
  example: []
  syntax:
    content: public bool HasChanges { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasChanges As Boolean
  overload: Innovt.Data.DataModels.BaseDataModel`2.HasChanges*
  implements:
  - Innovt.Data.DataModels.IBaseDataModel.HasChanges
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).HasChanges
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).HasChanges
- uid: Innovt.Data.DataModels.BaseDataModel`2.PropertyChanged
  commentId: E:Innovt.Data.DataModels.BaseDataModel`2.PropertyChanged
  id: PropertyChanged
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: BaseDataModel<TDomain, TDataModel>.PropertyChanged
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.PropertyChanged
  type: Event
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: PropertyChanged
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 42
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Event that is raised when a property value changes.
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).PropertyChanged
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).PropertyChanged
- uid: Innovt.Data.DataModels.BaseDataModel`2.OnPropertyChanged(System.String)
  commentId: M:Innovt.Data.DataModels.BaseDataModel`2.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(string)
  nameWithType: BaseDataModel<TDomain, TDataModel>.OnPropertyChanged(string)
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.OnPropertyChanged(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: OnPropertyChanged
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 48
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Raises the PropertyChanged event and updates the change tracking if enabled.
  example: []
  syntax:
    content: protected virtual void OnPropertyChanged(string propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property that changed (auto-populated).
    content.vb: Protected Overridable Sub OnPropertyChanged(propertyName As String = Nothing)
  overload: Innovt.Data.DataModels.BaseDataModel`2.OnPropertyChanged*
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).OnPropertyChanged(String)
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
- uid: Innovt.Data.DataModels.BaseDataModel`2.SetProperty``1(``0@,``0,System.String)
  commentId: M:Innovt.Data.DataModels.BaseDataModel`2.SetProperty``1(``0@,``0,System.String)
  id: SetProperty``1(``0@,``0,System.String)
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: SetProperty<T>(ref T, T, string)
  nameWithType: BaseDataModel<TDomain, TDataModel>.SetProperty<T>(ref T, T, string)
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.SetProperty<T>(ref T, T, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SetProperty
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 63
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Sets the value of a property and raises the PropertyChanged event if the value changes.
  example: []
  syntax:
    content: protected bool SetProperty<T>(ref T field, T value, string propertyName = null)
    parameters:
    - id: field
      type: '{T}'
      description: Reference to the property's backing field.
    - id: value
      type: '{T}'
      description: The new value to set.
    - id: propertyName
      type: System.String
      description: The name of the property that changed (auto-populated).
    typeParameters:
    - id: T
      description: The property type.
    return:
      type: System.Boolean
      description: True if the property value changed; otherwise, false.
    content.vb: Protected Function SetProperty(Of T)(field As T, value As T, propertyName As String = Nothing) As Boolean
  overload: Innovt.Data.DataModels.BaseDataModel`2.SetProperty*
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).SetProperty(Of T)(T, T, String)
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).SetProperty(Of T)(T, T, String)
  name.vb: SetProperty(Of T)(T, T, String)
- uid: Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain(`1)
  commentId: M:Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain(`1)
  id: ParseToDomain(`1)
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: ParseToDomain(TDataModel)
  nameWithType: BaseDataModel<TDomain, TDataModel>.ParseToDomain(TDataModel)
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.ParseToDomain(TDataModel)
  type: Method
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ParseToDomain
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 80
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Converts a data model instance to a domain model instance.
  example: []
  syntax:
    content: public abstract TDomain ParseToDomain(TDataModel dataModel)
    parameters:
    - id: dataModel
      type: '{TDataModel}'
      description: The data model instance to convert.
    return:
      type: '{TDomain}'
      description: The corresponding domain model instance.
    content.vb: Public MustOverride Function ParseToDomain(dataModel As TDataModel) As TDomain
  overload: Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain*
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).ParseToDomain(TDataModel)
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).ParseToDomain(TDataModel)
- uid: Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel(`0)
  commentId: M:Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel(`0)
  id: ParseToDataModel(`0)
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: ParseToDataModel(TDomain)
  nameWithType: BaseDataModel<TDomain, TDataModel>.ParseToDataModel(TDomain)
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.ParseToDataModel(TDomain)
  type: Method
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ParseToDataModel
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 87
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Converts a domain model instance to a data model instance.
  example: []
  syntax:
    content: public abstract TDataModel ParseToDataModel(TDomain domainModel)
    parameters:
    - id: domainModel
      type: '{TDomain}'
      description: The domain model instance to convert.
    return:
      type: '{TDataModel}'
      description: The corresponding data model instance.
    content.vb: Public MustOverride Function ParseToDataModel(domainModel As TDomain) As TDataModel
  overload: Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel*
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).ParseToDataModel(TDomain)
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).ParseToDataModel(TDomain)
- uid: Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain(System.Collections.Generic.IList{`1})
  commentId: M:Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain(System.Collections.Generic.IList{`1})
  id: ParseToDomain(System.Collections.Generic.IList{`1})
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: ParseToDomain(IList<TDataModel>)
  nameWithType: BaseDataModel<TDomain, TDataModel>.ParseToDomain(IList<TDataModel>)
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.ParseToDomain(System.Collections.Generic.IList<TDataModel>)
  type: Method
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ParseToDomain
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 94
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Converts a list of data model instances to a list of domain model instances.
  example: []
  syntax:
    content: public virtual List<TDomain> ParseToDomain(IList<TDataModel> dataModels)
    parameters:
    - id: dataModels
      type: System.Collections.Generic.IList{{TDataModel}}
      description: The list of data model instances to convert.
    return:
      type: System.Collections.Generic.List{{TDomain}}
      description: A list of corresponding domain model instances.
    content.vb: Public Overridable Function ParseToDomain(dataModels As IList(Of TDataModel)) As List(Of TDomain)
  overload: Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain*
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).ParseToDomain(IList(Of TDataModel))
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).ParseToDomain(System.Collections.Generic.IList(Of TDataModel))
  name.vb: ParseToDomain(IList(Of TDataModel))
- uid: Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel(System.Collections.Generic.IList{`0})
  commentId: M:Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel(System.Collections.Generic.IList{`0})
  id: ParseToDataModel(System.Collections.Generic.IList{`0})
  parent: Innovt.Data.DataModels.BaseDataModel`2
  langs:
  - csharp
  - vb
  name: ParseToDataModel(IList<TDomain>)
  nameWithType: BaseDataModel<TDomain, TDataModel>.ParseToDataModel(IList<TDomain>)
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.ParseToDataModel(System.Collections.Generic.IList<TDomain>)
  type: Method
  source:
    remote:
      path: src/Innovt.Data/DataModels/BaseDataModel.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ParseToDataModel
    path: ../src/Innovt.Data/DataModels/BaseDataModel.cs
    startLine: 104
  assemblies:
  - Innovt.Data
  namespace: Innovt.Data.DataModels
  summary: Converts a list of domain model instances to a list of data model instances.
  example: []
  syntax:
    content: public virtual List<TDataModel> ParseToDataModel(IList<TDomain> domainModels)
    parameters:
    - id: domainModels
      type: System.Collections.Generic.IList{{TDomain}}
      description: The list of domain model instances to convert.
    return:
      type: System.Collections.Generic.List{{TDataModel}}
      description: A list of corresponding data model instances.
    content.vb: Public Overridable Function ParseToDataModel(domainModels As IList(Of TDomain)) As List(Of TDataModel)
  overload: Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel*
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).ParseToDataModel(IList(Of TDomain))
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).ParseToDataModel(System.Collections.Generic.IList(Of TDomain))
  name.vb: ParseToDataModel(IList(Of TDomain))
references:
- uid: Innovt.Data.DataModels
  commentId: N:Innovt.Data.DataModels
  href: Innovt.html
  name: Innovt.Data.DataModels
  nameWithType: Innovt.Data.DataModels
  fullName: Innovt.Data.DataModels
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.DataModels
    name: DataModels
    href: Innovt.Data.DataModels.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Data
    name: Data
    href: Innovt.Data.html
  - name: .
  - uid: Innovt.Data.DataModels
    name: DataModels
    href: Innovt.Data.DataModels.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: Innovt.Data.DataModels.IBaseDataModel
  commentId: T:Innovt.Data.DataModels.IBaseDataModel
  parent: Innovt.Data.DataModels
  href: Innovt.Data.DataModels.IBaseDataModel.html
  name: IBaseDataModel
  nameWithType: IBaseDataModel
  fullName: Innovt.Data.DataModels.IBaseDataModel
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Data.DataModels.BaseDataModel`2.EnableTrackingChanges*
  commentId: Overload:Innovt.Data.DataModels.BaseDataModel`2.EnableTrackingChanges
  href: Innovt.Data.DataModels.BaseDataModel-2.html#Innovt_Data_DataModels_BaseDataModel_2_EnableTrackingChanges
  name: EnableTrackingChanges
  nameWithType: BaseDataModel<TDomain, TDataModel>.EnableTrackingChanges
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.EnableTrackingChanges
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).EnableTrackingChanges
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).EnableTrackingChanges
- uid: Innovt.Data.DataModels.IBaseDataModel.EnableTrackingChanges
  commentId: P:Innovt.Data.DataModels.IBaseDataModel.EnableTrackingChanges
  parent: Innovt.Data.DataModels.IBaseDataModel
  href: Innovt.Data.DataModels.IBaseDataModel.html#Innovt_Data_DataModels_IBaseDataModel_EnableTrackingChanges
  name: EnableTrackingChanges
  nameWithType: IBaseDataModel.EnableTrackingChanges
  fullName: Innovt.Data.DataModels.IBaseDataModel.EnableTrackingChanges
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Data.DataModels.BaseDataModel`2.HasChanges*
  commentId: Overload:Innovt.Data.DataModels.BaseDataModel`2.HasChanges
  href: Innovt.Data.DataModels.BaseDataModel-2.html#Innovt_Data_DataModels_BaseDataModel_2_HasChanges
  name: HasChanges
  nameWithType: BaseDataModel<TDomain, TDataModel>.HasChanges
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.HasChanges
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).HasChanges
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).HasChanges
- uid: Innovt.Data.DataModels.IBaseDataModel.HasChanges
  commentId: P:Innovt.Data.DataModels.IBaseDataModel.HasChanges
  parent: Innovt.Data.DataModels.IBaseDataModel
  href: Innovt.Data.DataModels.IBaseDataModel.html#Innovt_Data_DataModels_IBaseDataModel_HasChanges
  name: HasChanges
  nameWithType: IBaseDataModel.HasChanges
  fullName: Innovt.Data.DataModels.IBaseDataModel.HasChanges
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: Innovt.Data.DataModels.BaseDataModel`2.OnPropertyChanged*
  commentId: Overload:Innovt.Data.DataModels.BaseDataModel`2.OnPropertyChanged
  href: Innovt.Data.DataModels.BaseDataModel-2.html#Innovt_Data_DataModels_BaseDataModel_2_OnPropertyChanged_System_String_
  name: OnPropertyChanged
  nameWithType: BaseDataModel<TDomain, TDataModel>.OnPropertyChanged
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.OnPropertyChanged
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).OnPropertyChanged
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).OnPropertyChanged
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Data.DataModels.BaseDataModel`2.SetProperty*
  commentId: Overload:Innovt.Data.DataModels.BaseDataModel`2.SetProperty
  href: Innovt.Data.DataModels.BaseDataModel-2.html#Innovt_Data_DataModels_BaseDataModel_2_SetProperty__1___0____0_System_String_
  name: SetProperty
  nameWithType: BaseDataModel<TDomain, TDataModel>.SetProperty
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.SetProperty
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).SetProperty
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).SetProperty
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain*
  commentId: Overload:Innovt.Data.DataModels.BaseDataModel`2.ParseToDomain
  href: Innovt.Data.DataModels.BaseDataModel-2.html#Innovt_Data_DataModels_BaseDataModel_2_ParseToDomain__1_
  name: ParseToDomain
  nameWithType: BaseDataModel<TDomain, TDataModel>.ParseToDomain
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.ParseToDomain
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).ParseToDomain
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).ParseToDomain
- uid: '{TDataModel}'
  commentId: '!:TDataModel'
  definition: TDataModel
  name: TDataModel
  nameWithType: TDataModel
  fullName: TDataModel
- uid: '{TDomain}'
  commentId: '!:TDomain'
  definition: TDomain
  name: TDomain
  nameWithType: TDomain
  fullName: TDomain
- uid: TDataModel
  name: TDataModel
  nameWithType: TDataModel
  fullName: TDataModel
- uid: TDomain
  name: TDomain
  nameWithType: TDomain
  fullName: TDomain
- uid: Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel*
  commentId: Overload:Innovt.Data.DataModels.BaseDataModel`2.ParseToDataModel
  href: Innovt.Data.DataModels.BaseDataModel-2.html#Innovt_Data_DataModels_BaseDataModel_2_ParseToDataModel__0_
  name: ParseToDataModel
  nameWithType: BaseDataModel<TDomain, TDataModel>.ParseToDataModel
  fullName: Innovt.Data.DataModels.BaseDataModel<TDomain, TDataModel>.ParseToDataModel
  nameWithType.vb: BaseDataModel(Of TDomain, TDataModel).ParseToDataModel
  fullName.vb: Innovt.Data.DataModels.BaseDataModel(Of TDomain, TDataModel).ParseToDataModel
- uid: System.Collections.Generic.IList{{TDataModel}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TDataModel>
  nameWithType: IList<TDataModel>
  fullName: System.Collections.Generic.IList<TDataModel>
  nameWithType.vb: IList(Of TDataModel)
  fullName.vb: System.Collections.Generic.IList(Of TDataModel)
  name.vb: IList(Of TDataModel)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TDataModel
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TDataModel
  - name: )
- uid: System.Collections.Generic.List{{TDomain}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TDomain>
  nameWithType: List<TDomain>
  fullName: System.Collections.Generic.List<TDomain>
  nameWithType.vb: List(Of TDomain)
  fullName.vb: System.Collections.Generic.List(Of TDomain)
  name.vb: List(Of TDomain)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TDomain
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TDomain
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList{{TDomain}}
  commentId: T:System.Collections.Generic.IList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TDomain>
  nameWithType: IList<TDomain>
  fullName: System.Collections.Generic.IList<TDomain>
  nameWithType.vb: IList(Of TDomain)
  fullName.vb: System.Collections.Generic.IList(Of TDomain)
  name.vb: IList(Of TDomain)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TDomain
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TDomain
  - name: )
- uid: System.Collections.Generic.List{{TDataModel}}
  commentId: T:System.Collections.Generic.List{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TDataModel>
  nameWithType: List<TDataModel>
  fullName: System.Collections.Generic.List<TDataModel>
  nameWithType.vb: List(Of TDataModel)
  fullName.vb: System.Collections.Generic.List(Of TDataModel)
  name.vb: List(Of TDataModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TDataModel
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TDataModel
  - name: )
