### YamlMime:ManagedReference
items:
- uid: Innovt.Core.Utilities.StringExtensions
  commentId: T:Innovt.Core.Utilities.StringExtensions
  id: StringExtensions
  parent: Innovt.Core.Utilities
  children:
  - Innovt.Core.Utilities.StringExtensions.ApplyQuotes(System.String)
  - Innovt.Core.Utilities.StringExtensions.ClearMask(System.String)
  - Innovt.Core.Utilities.StringExtensions.FormatCelPhone(System.String)
  - Innovt.Core.Utilities.StringExtensions.FormatCnpj(System.String)
  - Innovt.Core.Utilities.StringExtensions.FormatCoordinate(System.Int64)
  - Innovt.Core.Utilities.StringExtensions.FormatCpf(System.String)
  - Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber(System.String)
  - Innovt.Core.Utilities.StringExtensions.FormatZipCode(System.String)
  - Innovt.Core.Utilities.StringExtensions.FromBase64(System.String,System.Text.Encoding)
  - Innovt.Core.Utilities.StringExtensions.GetValueOrDefault(System.String,System.String)
  - Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter(System.String)
  - Innovt.Core.Utilities.StringExtensions.IsCnpj(System.String)
  - Innovt.Core.Utilities.StringExtensions.IsCpf(System.String)
  - Innovt.Core.Utilities.StringExtensions.IsEmail(System.String)
  - Innovt.Core.Utilities.StringExtensions.IsEmpty(System.Guid)
  - Innovt.Core.Utilities.StringExtensions.IsNotEmpty(System.Guid)
  - Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(System.Nullable{System.Guid})
  - Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(System.String)
  - Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(System.Nullable{System.Guid})
  - Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(System.String)
  - Innovt.Core.Utilities.StringExtensions.IsNumber(System.String)
  - Innovt.Core.Utilities.StringExtensions.MaskEmail(System.String)
  - Innovt.Core.Utilities.StringExtensions.NormalizeText(System.String)
  - Innovt.Core.Utilities.StringExtensions.OnlyNumber(System.String)
  - Innovt.Core.Utilities.StringExtensions.RemoveAccents(System.String)
  - Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter(System.String)
  - Innovt.Core.Utilities.StringExtensions.SmartTrim(System.String)
  - Innovt.Core.Utilities.StringExtensions.ToBase64(System.String,System.Text.Encoding)
  - Innovt.Core.Utilities.StringExtensions.ToBoolean(System.String,System.Boolean)
  - Innovt.Core.Utilities.StringExtensions.ToBoolean(System.String,System.Nullable{System.Boolean})
  - Innovt.Core.Utilities.StringExtensions.ToCamelCase(System.String)
  - Innovt.Core.Utilities.StringExtensions.ToDateTime(System.String,System.DateTime)
  - Innovt.Core.Utilities.StringExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})
  - Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(System.String,System.DateTimeOffset)
  - Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(System.String,System.Nullable{System.DateTimeOffset})
  - Innovt.Core.Utilities.StringExtensions.ToDecimal(System.String,System.Decimal)
  - Innovt.Core.Utilities.StringExtensions.ToDecimal(System.String,System.Nullable{System.Decimal})
  - Innovt.Core.Utilities.StringExtensions.ToDouble(System.String,System.Double)
  - Innovt.Core.Utilities.StringExtensions.ToDouble(System.String,System.Nullable{System.Double})
  - Innovt.Core.Utilities.StringExtensions.ToFloat(System.String,System.Nullable{System.Single})
  - Innovt.Core.Utilities.StringExtensions.ToFloat(System.String,System.Single)
  - Innovt.Core.Utilities.StringExtensions.ToGuid(System.String)
  - Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty(System.String)
  - Innovt.Core.Utilities.StringExtensions.ToInt(System.String,System.Int32)
  - Innovt.Core.Utilities.StringExtensions.ToInt(System.String,System.Nullable{System.Int32})
  - Innovt.Core.Utilities.StringExtensions.ToList(System.String,System.Char)
  - Innovt.Core.Utilities.StringExtensions.ToTitleCase(System.String)
  - Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter(System.String)
  - Innovt.Core.Utilities.StringExtensions.Truncate(System.String,System.Int32)
  - Innovt.Core.Utilities.StringExtensions.UrlDecode(System.String)
  - Innovt.Core.Utilities.StringExtensions.UrlEncode(System.String)
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: Innovt.Core.Utilities.StringExtensions
  type: Class
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: StringExtensions
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 21
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Provides a collection of extension methods for string manipulation and validation.
  example: []
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Innovt.Core.Utilities.StringExtensions.IsEmail(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsEmail(System.String)
  id: IsEmail(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsEmail(string)
  nameWithType: StringExtensions.IsEmail(string)
  fullName: Innovt.Core.Utilities.StringExtensions.IsEmail(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsEmail
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 28
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the string represents a valid email address.
  example: []
  syntax:
    content: public static bool IsEmail(this string value)
    parameters:
    - id: value
      type: System.String
      description: The string to validate as an email address.
    return:
      type: System.Boolean
      description: True if the string is a valid email address; otherwise, false.
    content.vb: Public Shared Function IsEmail(value As String) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsEmail*
  nameWithType.vb: StringExtensions.IsEmail(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.IsEmail(String)
  name.vb: IsEmail(String)
- uid: Innovt.Core.Utilities.StringExtensions.IsNumber(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsNumber(System.String)
  id: IsNumber(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNumber(string)
  nameWithType: StringExtensions.IsNumber(string)
  fullName: Innovt.Core.Utilities.StringExtensions.IsNumber(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsNumber
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 43
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the string consists of numeric characters only.
  example: []
  syntax:
    content: public static bool IsNumber(this string value)
    parameters:
    - id: value
      type: System.String
      description: The string to validate as a number.
    return:
      type: System.Boolean
      description: True if the string consists of numeric characters only; otherwise, false.
    content.vb: Public Shared Function IsNumber(value As String) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsNumber*
  nameWithType.vb: StringExtensions.IsNumber(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.IsNumber(String)
  name.vb: IsNumber(String)
- uid: Innovt.Core.Utilities.StringExtensions.Truncate(System.String,System.Int32)
  commentId: M:Innovt.Core.Utilities.StringExtensions.Truncate(System.String,System.Int32)
  id: Truncate(System.String,System.Int32)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: Truncate(string, int)
  nameWithType: StringExtensions.Truncate(string, int)
  fullName: Innovt.Core.Utilities.StringExtensions.Truncate(string, int)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Truncate
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 57
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Truncates the string to a specified maximum length.
  example: []
  syntax:
    content: public static string Truncate(this string value, int maxLength)
    parameters:
    - id: value
      type: System.String
      description: The string to truncate.
    - id: maxLength
      type: System.Int32
      description: The maximum length of the truncated string.
    return:
      type: System.String
      description: >-
        The truncated string, or the original string if its length is less than or equal to the specified maximum

        length.
    content.vb: Public Shared Function Truncate(value As String, maxLength As Integer) As String
  overload: Innovt.Core.Utilities.StringExtensions.Truncate*
  nameWithType.vb: StringExtensions.Truncate(String, Integer)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.Truncate(String, Integer)
  name.vb: Truncate(String, Integer)
- uid: Innovt.Core.Utilities.StringExtensions.IsCpf(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsCpf(System.String)
  id: IsCpf(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsCpf(string)
  nameWithType: StringExtensions.IsCpf(string)
  fullName: Innovt.Core.Utilities.StringExtensions.IsCpf(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsCpf
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 69
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the string is a valid CPF (Cadastro de Pessoas Físicas) number.
  example: []
  syntax:
    content: public static bool IsCpf(this string value)
    parameters:
    - id: value
      type: System.String
      description: The string to validate as a CPF number.
    return:
      type: System.Boolean
      description: True if the string is a valid CPF number; otherwise, false.
    content.vb: Public Shared Function IsCpf(value As String) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsCpf*
  nameWithType.vb: StringExtensions.IsCpf(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.IsCpf(String)
  name.vb: IsCpf(String)
- uid: Innovt.Core.Utilities.StringExtensions.IsCnpj(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsCnpj(System.String)
  id: IsCnpj(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsCnpj(string)
  nameWithType: StringExtensions.IsCnpj(string)
  fullName: Innovt.Core.Utilities.StringExtensions.IsCnpj(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsCnpj
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 130
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether the string is a valid CNPJ (Cadastro Nacional da Pessoa Jurídica) number.
  example: []
  syntax:
    content: public static bool IsCnpj(this string cnpj)
    parameters:
    - id: cnpj
      type: System.String
      description: The string to validate as a CNPJ number.
    return:
      type: System.Boolean
      description: True if the string is a valid CNPJ number; otherwise, false.
    content.vb: Public Shared Function IsCnpj(cnpj As String) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsCnpj*
  nameWithType.vb: StringExtensions.IsCnpj(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.IsCnpj(String)
  name.vb: IsCnpj(String)
- uid: Innovt.Core.Utilities.StringExtensions.IsNotEmpty(System.Guid)
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsNotEmpty(System.Guid)
  id: IsNotEmpty(System.Guid)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNotEmpty(Guid)
  nameWithType: StringExtensions.IsNotEmpty(Guid)
  fullName: Innovt.Core.Utilities.StringExtensions.IsNotEmpty(System.Guid)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsNotEmpty
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 174
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether a Guid is not empty (contains non-zero values).
  example: []
  syntax:
    content: public static bool IsNotEmpty(this Guid yourGuid)
    parameters:
    - id: yourGuid
      type: System.Guid
      description: The Guid to check.
    return:
      type: System.Boolean
      description: True if the Guid is not empty; otherwise, false.
    content.vb: Public Shared Function IsNotEmpty(yourGuid As Guid) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsNotEmpty*
- uid: Innovt.Core.Utilities.StringExtensions.IsEmpty(System.Guid)
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsEmpty(System.Guid)
  id: IsEmpty(System.Guid)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsEmpty(Guid)
  nameWithType: StringExtensions.IsEmpty(Guid)
  fullName: Innovt.Core.Utilities.StringExtensions.IsEmpty(System.Guid)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsEmpty
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 184
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether a Guid is empty (all zeros).
  example: []
  syntax:
    content: public static bool IsEmpty(this Guid yourGuid)
    parameters:
    - id: yourGuid
      type: System.Guid
      description: The Guid to check.
    return:
      type: System.Boolean
      description: True if the Guid is empty; otherwise, false.
    content.vb: Public Shared Function IsEmpty(yourGuid As Guid) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsEmpty*
- uid: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(System.Nullable{System.Guid})
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(System.Nullable{System.Guid})
  id: IsNotNullOrEmpty(System.Nullable{System.Guid})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNotNullOrEmpty(Guid?)
  nameWithType: StringExtensions.IsNotNullOrEmpty(Guid?)
  fullName: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(System.Guid?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsNotNullOrEmpty
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 194
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether a nullable Guid is not null or empty.
  example: []
  syntax:
    content: public static bool IsNotNullOrEmpty(this Guid? yourGuid)
    parameters:
    - id: yourGuid
      type: System.Nullable{System.Guid}
      description: The nullable Guid to check.
    return:
      type: System.Boolean
      description: True if the nullable Guid is not null or empty; otherwise, false.
    content.vb: Public Shared Function IsNotNullOrEmpty(yourGuid As Guid?) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty*
- uid: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(System.Nullable{System.Guid})
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(System.Nullable{System.Guid})
  id: IsNullOrEmpty(System.Nullable{System.Guid})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNullOrEmpty(Guid?)
  nameWithType: StringExtensions.IsNullOrEmpty(Guid?)
  fullName: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(System.Guid?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsNullOrEmpty
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 204
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether a nullable Guid is null or empty.
  example: []
  syntax:
    content: public static bool IsNullOrEmpty(this Guid? yourGuid)
    parameters:
    - id: yourGuid
      type: System.Nullable{System.Guid}
      description: The nullable Guid to check.
    return:
      type: System.Boolean
      description: True if the nullable Guid is null or empty; otherwise, false.
    content.vb: Public Shared Function IsNullOrEmpty(yourGuid As Guid?) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty*
- uid: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(System.String)
  id: IsNullOrEmpty(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNullOrEmpty(string)
  nameWithType: StringExtensions.IsNullOrEmpty(string)
  fullName: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsNullOrEmpty
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 214
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether a string is null, empty, or consists only of white-space characters.
  example: []
  syntax:
    content: public static bool IsNullOrEmpty(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to check.
    return:
      type: System.Boolean
      description: True if the string is null, empty, or consists only of white-space characters; otherwise, false.
    content.vb: Public Shared Function IsNullOrEmpty(str As String) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty*
  nameWithType.vb: StringExtensions.IsNullOrEmpty(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty(String)
  name.vb: IsNullOrEmpty(String)
- uid: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(System.String)
  id: IsNotNullOrEmpty(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNotNullOrEmpty(string)
  nameWithType: StringExtensions.IsNotNullOrEmpty(string)
  fullName: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsNotNullOrEmpty
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 227
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Determines whether a string is not null, empty, or consists only of white-space characters.
  example: []
  syntax:
    content: public static bool IsNotNullOrEmpty(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to check.
    return:
      type: System.Boolean
      description: >-
        True if the string is not null, not empty, and not consisting only of white-space characters; otherwise,

        false.
    content.vb: Public Shared Function IsNotNullOrEmpty(str As String) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty*
  nameWithType.vb: StringExtensions.IsNotNullOrEmpty(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty(String)
  name.vb: IsNotNullOrEmpty(String)
- uid: Innovt.Core.Utilities.StringExtensions.UrlEncode(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.UrlEncode(System.String)
  id: UrlEncode(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: UrlEncode(string)
  nameWithType: StringExtensions.UrlEncode(string)
  fullName: Innovt.Core.Utilities.StringExtensions.UrlEncode(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UrlEncode
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 237
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Encodes a string for safe use in a URL, using UTF-8 encoding.
  example: []
  syntax:
    content: public static string UrlEncode(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to encode.
    return:
      type: System.String
      description: The URL-encoded string, or the original string if it is null or empty.
    content.vb: Public Shared Function UrlEncode(str As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.UrlEncode*
  nameWithType.vb: StringExtensions.UrlEncode(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.UrlEncode(String)
  name.vb: UrlEncode(String)
- uid: Innovt.Core.Utilities.StringExtensions.UrlDecode(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.UrlDecode(System.String)
  id: UrlDecode(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: UrlDecode(string)
  nameWithType: StringExtensions.UrlDecode(string)
  fullName: Innovt.Core.Utilities.StringExtensions.UrlDecode(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UrlDecode
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 247
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Decodes a URL-encoded string using UTF-8 encoding.
  example: []
  syntax:
    content: public static string UrlDecode(this string str)
    parameters:
    - id: str
      type: System.String
      description: The URL-encoded string to decode.
    return:
      type: System.String
      description: The decoded string, or the original string if it is null or empty.
    content.vb: Public Shared Function UrlDecode(str As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.UrlDecode*
  nameWithType.vb: StringExtensions.UrlDecode(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.UrlDecode(String)
  name.vb: UrlDecode(String)
- uid: Innovt.Core.Utilities.StringExtensions.GetValueOrDefault(System.String,System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.GetValueOrDefault(System.String,System.String)
  id: GetValueOrDefault(System.String,System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: GetValueOrDefault(string, string)
  nameWithType: StringExtensions.GetValueOrDefault(string, string)
  fullName: Innovt.Core.Utilities.StringExtensions.GetValueOrDefault(string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetValueOrDefault
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 261
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Gets the value of a string or a default value if the string is null or empty.
  example: []
  syntax:
    content: public static string GetValueOrDefault(this string str, string defaultValue = null)
    parameters:
    - id: str
      type: System.String
      description: The string to check.
    - id: defaultValue
      type: System.String
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.String
      description: >-
        The original string if it is not null or empty; otherwise, the default value if provided; otherwise, an empty

        string.
    content.vb: Public Shared Function GetValueOrDefault(str As String, defaultValue As String = Nothing) As String
  overload: Innovt.Core.Utilities.StringExtensions.GetValueOrDefault*
  nameWithType.vb: StringExtensions.GetValueOrDefault(String, String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.GetValueOrDefault(String, String)
  name.vb: GetValueOrDefault(String, String)
- uid: Innovt.Core.Utilities.StringExtensions.SmartTrim(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.SmartTrim(System.String)
  id: SmartTrim(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: SmartTrim(string)
  nameWithType: StringExtensions.SmartTrim(string)
  fullName: Innovt.Core.Utilities.StringExtensions.SmartTrim(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SmartTrim
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 274
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Trims leading and trailing white-space characters from a string.
  example: []
  syntax:
    content: public static string SmartTrim(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to trim.
    return:
      type: System.String
      description: The trimmed string or null if the input string is null.
    content.vb: Public Shared Function SmartTrim(str As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.SmartTrim*
  nameWithType.vb: StringExtensions.SmartTrim(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.SmartTrim(String)
  name.vb: SmartTrim(String)
- uid: Innovt.Core.Utilities.StringExtensions.MaskEmail(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.MaskEmail(System.String)
  id: MaskEmail(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: MaskEmail(string)
  nameWithType: StringExtensions.MaskEmail(string)
  fullName: Innovt.Core.Utilities.StringExtensions.MaskEmail(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: MaskEmail
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 284
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Will mask an email using this format mich***@gmail.com
  example: []
  syntax:
    content: public static string MaskEmail(this string email)
    parameters:
    - id: email
      type: System.String
      description: The email that you want to mask
    return:
      type: System.String
      description: mich***@gmail.com
    content.vb: Public Shared Function MaskEmail(email As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.MaskEmail*
  nameWithType.vb: StringExtensions.MaskEmail(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.MaskEmail(String)
  name.vb: MaskEmail(String)
- uid: Innovt.Core.Utilities.StringExtensions.ToList(System.String,System.Char)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToList(System.String,System.Char)
  id: ToList(System.String,System.Char)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToList(string, char)
  nameWithType: StringExtensions.ToList(string, char)
  fullName: Innovt.Core.Utilities.StringExtensions.ToList(string, char)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToList
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 308
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a delimited string into a list of strings using the specified separator character.
  example: []
  syntax:
    content: public static List<string> ToList(this string str, char separator)
    parameters:
    - id: str
      type: System.String
      description: The delimited string to convert.
    - id: separator
      type: System.Char
      description: The character used to separate values in the string.
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of strings containing the individual values from the delimited string.
    content.vb: Public Shared Function ToList(str As String, separator As Char) As List(Of String)
  overload: Innovt.Core.Utilities.StringExtensions.ToList*
  nameWithType.vb: StringExtensions.ToList(String, Char)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToList(String, Char)
  name.vb: ToList(String, Char)
- uid: Innovt.Core.Utilities.StringExtensions.ToCamelCase(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToCamelCase(System.String)
  id: ToCamelCase(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToCamelCase(string)
  nameWithType: StringExtensions.ToCamelCase(string)
  fullName: Innovt.Core.Utilities.StringExtensions.ToCamelCase(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToCamelCase
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 318
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to camel case by applying title case.
  example: []
  syntax:
    content: public static string ToCamelCase(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to camel case.
    return:
      type: System.String
      description: The string in camel case format.
    content.vb: Public Shared Function ToCamelCase(str As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.ToCamelCase*
  nameWithType.vb: StringExtensions.ToCamelCase(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToCamelCase(String)
  name.vb: ToCamelCase(String)
- uid: Innovt.Core.Utilities.StringExtensions.ToTitleCase(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToTitleCase(System.String)
  id: ToTitleCase(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToTitleCase(string)
  nameWithType: StringExtensions.ToTitleCase(string)
  fullName: Innovt.Core.Utilities.StringExtensions.ToTitleCase(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToTitleCase
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 328
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to title case using the current culture's rules.
  example: []
  syntax:
    content: public static string ToTitleCase(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to title case.
    return:
      type: System.String
      description: The string in title case format.
    content.vb: Public Shared Function ToTitleCase(str As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.ToTitleCase*
  nameWithType.vb: StringExtensions.ToTitleCase(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToTitleCase(String)
  name.vb: ToTitleCase(String)
- uid: Innovt.Core.Utilities.StringExtensions.ClearMask(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ClearMask(System.String)
  id: ClearMask(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ClearMask(string)
  nameWithType: StringExtensions.ClearMask(string)
  fullName: Innovt.Core.Utilities.StringExtensions.ClearMask(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ClearMask
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 338
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Removes specified special characters from a string.
  example: []
  syntax:
    content: public static string ClearMask(this string value)
    parameters:
    - id: value
      type: System.String
      description: The string to remove special characters from.
    return:
      type: System.String
      description: The string with specified special characters removed.
    content.vb: Public Shared Function ClearMask(value As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.ClearMask*
  nameWithType.vb: StringExtensions.ClearMask(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ClearMask(String)
  name.vb: ClearMask(String)
- uid: Innovt.Core.Utilities.StringExtensions.OnlyNumber(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.OnlyNumber(System.String)
  id: OnlyNumber(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: OnlyNumber(string)
  nameWithType: StringExtensions.OnlyNumber(string)
  fullName: Innovt.Core.Utilities.StringExtensions.OnlyNumber(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: OnlyNumber
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 357
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Removes all non-numeric characters from a string.
  example: []
  syntax:
    content: public static string OnlyNumber(this string value)
    parameters:
    - id: value
      type: System.String
      description: The string to remove non-numeric characters from.
    return:
      type: System.String
      description: The string containing only numeric characters.
    content.vb: Public Shared Function OnlyNumber(value As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.OnlyNumber*
  nameWithType.vb: StringExtensions.OnlyNumber(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.OnlyNumber(String)
  name.vb: OnlyNumber(String)
- uid: Innovt.Core.Utilities.StringExtensions.NormalizeText(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.NormalizeText(System.String)
  id: NormalizeText(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: NormalizeText(string)
  nameWithType: StringExtensions.NormalizeText(string)
  fullName: Innovt.Core.Utilities.StringExtensions.NormalizeText(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: NormalizeText
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 370
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Normalizes a string by removing accents, special characters, and trimming whitespace.
  example: []
  syntax:
    content: public static string NormalizeText(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to normalize.
    return:
      type: System.String
      description: The normalized string.
    content.vb: Public Shared Function NormalizeText(str As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.NormalizeText*
  nameWithType.vb: StringExtensions.NormalizeText(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.NormalizeText(String)
  name.vb: NormalizeText(String)
- uid: Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter(System.String)
  id: RemoveSpecialCharacter(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: RemoveSpecialCharacter(string)
  nameWithType: StringExtensions.RemoveSpecialCharacter(string)
  fullName: Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: RemoveSpecialCharacter
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 385
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Removes all special characters from a string.
  example: []
  syntax:
    content: public static string RemoveSpecialCharacter(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to remove special characters from.
    return:
      type: System.String
      description: The string with special characters replaced by spaces.
    content.vb: Public Shared Function RemoveSpecialCharacter(str As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter*
  nameWithType.vb: StringExtensions.RemoveSpecialCharacter(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter(String)
  name.vb: RemoveSpecialCharacter(String)
- uid: Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter(System.String)
  id: HasSpecialCharacter(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: HasSpecialCharacter(string)
  nameWithType: StringExtensions.HasSpecialCharacter(string)
  fullName: Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: HasSpecialCharacter
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 397
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Check is a string has special characters
  example: []
  syntax:
    content: public static bool HasSpecialCharacter(this string str)
    parameters:
    - id: str
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function HasSpecialCharacter(str As String) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter*
  nameWithType.vb: StringExtensions.HasSpecialCharacter(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter(String)
  name.vb: HasSpecialCharacter(String)
- uid: Innovt.Core.Utilities.StringExtensions.RemoveAccents(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.RemoveAccents(System.String)
  id: RemoveAccents(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: RemoveAccents(string)
  nameWithType: StringExtensions.RemoveAccents(string)
  fullName: Innovt.Core.Utilities.StringExtensions.RemoveAccents(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: RemoveAccents
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 408
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Removes accents from a string.
  example: []
  syntax:
    content: public static string RemoveAccents(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to remove accents from.
    return:
      type: System.String
      description: The string with accents removed.
    content.vb: Public Shared Function RemoveAccents(str As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.RemoveAccents*
  nameWithType.vb: StringExtensions.RemoveAccents(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.RemoveAccents(String)
  name.vb: RemoveAccents(String)
- uid: Innovt.Core.Utilities.StringExtensions.FormatCpf(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.FormatCpf(System.String)
  id: FormatCpf(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: FormatCpf(string)
  nameWithType: StringExtensions.FormatCpf(string)
  fullName: Innovt.Core.Utilities.StringExtensions.FormatCpf(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatCpf
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 428
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a string as a CPF (Cadastro de Pessoas Físicas) number with a mask (e.g., "000.000.000-00").
  example: []
  syntax:
    content: public static string FormatCpf(this string cpf)
    parameters:
    - id: cpf
      type: System.String
      description: The string to format as a CPF.
    return:
      type: System.String
      description: The formatted CPF string or the original string if it is null or empty.
    content.vb: Public Shared Function FormatCpf(cpf As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.FormatCpf*
  nameWithType.vb: StringExtensions.FormatCpf(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.FormatCpf(String)
  name.vb: FormatCpf(String)
- uid: Innovt.Core.Utilities.StringExtensions.FormatCoordinate(System.Int64)
  commentId: M:Innovt.Core.Utilities.StringExtensions.FormatCoordinate(System.Int64)
  id: FormatCoordinate(System.Int64)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: FormatCoordinate(long)
  nameWithType: StringExtensions.FormatCoordinate(long)
  fullName: Innovt.Core.Utilities.StringExtensions.FormatCoordinate(long)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatCoordinate
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 442
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: You can use this method to forma DD stardand Latitude or Longitude
  example: []
  syntax:
    content: public static string FormatCoordinate(this long value)
    parameters:
    - id: value
      type: System.Int64
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function FormatCoordinate(value As Long) As String
  overload: Innovt.Core.Utilities.StringExtensions.FormatCoordinate*
  nameWithType.vb: StringExtensions.FormatCoordinate(Long)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.FormatCoordinate(Long)
  name.vb: FormatCoordinate(Long)
- uid: Innovt.Core.Utilities.StringExtensions.FormatCelPhone(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.FormatCelPhone(System.String)
  id: FormatCelPhone(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: FormatCelPhone(string)
  nameWithType: StringExtensions.FormatCelPhone(string)
  fullName: Innovt.Core.Utilities.StringExtensions.FormatCelPhone(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatCelPhone
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 456
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a string as a cell phone number with a mask (e.g., "(00)00000-0000").
  example: []
  syntax:
    content: public static string FormatCelPhone(this string celPhone)
    parameters:
    - id: celPhone
      type: System.String
      description: The string to format as a cell phone number.
    return:
      type: System.String
      description: The formatted cell phone number string or the original string if it is null or empty.
    content.vb: Public Shared Function FormatCelPhone(celPhone As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.FormatCelPhone*
  nameWithType.vb: StringExtensions.FormatCelPhone(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.FormatCelPhone(String)
  name.vb: FormatCelPhone(String)
- uid: Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber(System.String)
  id: FormatPhoneNumber(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: FormatPhoneNumber(string)
  nameWithType: StringExtensions.FormatPhoneNumber(string)
  fullName: Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatPhoneNumber
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 466
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a string as a phone number with a mask (e.g., "(00)000-0000").
  example: []
  syntax:
    content: public static string FormatPhoneNumber(this string phoneNumber)
    parameters:
    - id: phoneNumber
      type: System.String
      description: The string to format as a phone number.
    return:
      type: System.String
      description: The formatted phone number string or the original string if it is null or empty.
    content.vb: Public Shared Function FormatPhoneNumber(phoneNumber As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber*
  nameWithType.vb: StringExtensions.FormatPhoneNumber(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber(String)
  name.vb: FormatPhoneNumber(String)
- uid: Innovt.Core.Utilities.StringExtensions.FormatCnpj(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.FormatCnpj(System.String)
  id: FormatCnpj(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: FormatCnpj(string)
  nameWithType: StringExtensions.FormatCnpj(string)
  fullName: Innovt.Core.Utilities.StringExtensions.FormatCnpj(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatCnpj
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 476
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a string as a CNPJ (Cadastro Nacional da Pessoa Jurídica) number with a mask (e.g., "00.000.000/0000-00").
  example: []
  syntax:
    content: public static string FormatCnpj(this string cnpj)
    parameters:
    - id: cnpj
      type: System.String
      description: The string to format as a CNPJ number.
    return:
      type: System.String
      description: The formatted CNPJ string or null if the input is null or empty.
    content.vb: Public Shared Function FormatCnpj(cnpj As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.FormatCnpj*
  nameWithType.vb: StringExtensions.FormatCnpj(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.FormatCnpj(String)
  name.vb: FormatCnpj(String)
- uid: Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter(System.String)
  id: ToUpperFirstLetter(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToUpperFirstLetter(string)
  nameWithType: StringExtensions.ToUpperFirstLetter(string)
  fullName: Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToUpperFirstLetter
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 491
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts the first letter of a string to uppercase.
  example: []
  syntax:
    content: public static string ToUpperFirstLetter(this string value)
    parameters:
    - id: value
      type: System.String
      description: The string to convert.
    return:
      type: System.String
      description: The string with its first letter in uppercase or the original string if it is null or empty.
    content.vb: Public Shared Function ToUpperFirstLetter(value As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter*
  nameWithType.vb: StringExtensions.ToUpperFirstLetter(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter(String)
  name.vb: ToUpperFirstLetter(String)
- uid: Innovt.Core.Utilities.StringExtensions.FormatZipCode(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.FormatZipCode(System.String)
  id: FormatZipCode(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: FormatZipCode(string)
  nameWithType: StringExtensions.FormatZipCode(string)
  fullName: Innovt.Core.Utilities.StringExtensions.FormatZipCode(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FormatZipCode
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 507
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Formats a string as a zip code with a mask (e.g., "00000-000").
  example: []
  syntax:
    content: public static string FormatZipCode(this string cep)
    parameters:
    - id: cep
      type: System.String
      description: The string to format as a zip code.
    return:
      type: System.String
      description: The formatted zip code string or the original string if it is null or empty.
    content.vb: Public Shared Function FormatZipCode(cep As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.FormatZipCode*
  nameWithType.vb: StringExtensions.FormatZipCode(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.FormatZipCode(String)
  name.vb: FormatZipCode(String)
- uid: Innovt.Core.Utilities.StringExtensions.ToBase64(System.String,System.Text.Encoding)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToBase64(System.String,System.Text.Encoding)
  id: ToBase64(System.String,System.Text.Encoding)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToBase64(string, Encoding)
  nameWithType: StringExtensions.ToBase64(string, Encoding)
  fullName: Innovt.Core.Utilities.StringExtensions.ToBase64(string, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToBase64
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 534
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Encode your string to Base64
  example: []
  syntax:
    content: public static string ToBase64(this string toEncode, Encoding encoding = null)
    parameters:
    - id: toEncode
      type: System.String
      description: The String to encode
    - id: encoding
      type: System.Text.Encoding
      description: Optional and will be ASCII if null
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ToBase64(toEncode As String, encoding As Encoding = Nothing) As String
  overload: Innovt.Core.Utilities.StringExtensions.ToBase64*
  nameWithType.vb: StringExtensions.ToBase64(String, Encoding)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToBase64(String, System.Text.Encoding)
  name.vb: ToBase64(String, Encoding)
- uid: Innovt.Core.Utilities.StringExtensions.FromBase64(System.String,System.Text.Encoding)
  commentId: M:Innovt.Core.Utilities.StringExtensions.FromBase64(System.String,System.Text.Encoding)
  id: FromBase64(System.String,System.Text.Encoding)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: FromBase64(string, Encoding)
  nameWithType: StringExtensions.FromBase64(string, Encoding)
  fullName: Innovt.Core.Utilities.StringExtensions.FromBase64(string, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FromBase64
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 552
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Decode  your string from Base64
  example: []
  syntax:
    content: public static string FromBase64(this string toDecode, Encoding encoding = null)
    parameters:
    - id: toDecode
      type: System.String
      description: The string to decode
    - id: encoding
      type: System.Text.Encoding
      description: Optional and will be ASCII if null
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function FromBase64(toDecode As String, encoding As Encoding = Nothing) As String
  overload: Innovt.Core.Utilities.StringExtensions.FromBase64*
  nameWithType.vb: StringExtensions.FromBase64(String, Encoding)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.FromBase64(String, System.Text.Encoding)
  name.vb: FromBase64(String, Encoding)
- uid: Innovt.Core.Utilities.StringExtensions.ApplyQuotes(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ApplyQuotes(System.String)
  id: ApplyQuotes(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ApplyQuotes(string)
  nameWithType: StringExtensions.ApplyQuotes(string)
  fullName: Innovt.Core.Utilities.StringExtensions.ApplyQuotes(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ApplyQuotes
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 569
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Encloses a string in double quotes if it contains spaces.
  example: []
  syntax:
    content: public static string ApplyQuotes(this string value)
    parameters:
    - id: value
      type: System.String
      description: The string to enclose in double quotes.
    return:
      type: System.String
      description: The original string if it does not contain spaces; otherwise, the string enclosed in double quotes.
    content.vb: Public Shared Function ApplyQuotes(value As String) As String
  overload: Innovt.Core.Utilities.StringExtensions.ApplyQuotes*
  nameWithType.vb: StringExtensions.ApplyQuotes(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ApplyQuotes(String)
  name.vb: ApplyQuotes(String)
- uid: Innovt.Core.Utilities.StringExtensions.ToInt(System.String,System.Int32)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToInt(System.String,System.Int32)
  id: ToInt(System.String,System.Int32)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToInt(string, int)
  nameWithType: StringExtensions.ToInt(string, int)
  fullName: Innovt.Core.Utilities.StringExtensions.ToInt(string, int)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToInt
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 586
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to an integer, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static int ToInt(this string str, int defaultValue = 0)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to an integer.
    - id: defaultValue
      type: System.Int32
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Int32
      description: The integer value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToInt(str As String, defaultValue As Integer = 0) As Integer
  overload: Innovt.Core.Utilities.StringExtensions.ToInt*
  nameWithType.vb: StringExtensions.ToInt(String, Integer)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToInt(String, Integer)
  name.vb: ToInt(String, Integer)
- uid: Innovt.Core.Utilities.StringExtensions.ToInt(System.String,System.Nullable{System.Int32})
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToInt(System.String,System.Nullable{System.Int32})
  id: ToInt(System.String,System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToInt(string, int?)
  nameWithType: StringExtensions.ToInt(string, int?)
  fullName: Innovt.Core.Utilities.StringExtensions.ToInt(string, int?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToInt
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 600
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a nullable integer, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static int? ToInt(this string str, int? defaultValue = null)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a nullable integer.
    - id: defaultValue
      type: System.Nullable{System.Int32}
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Nullable{System.Int32}
      description: The nullable integer value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToInt(str As String, defaultValue As Integer? = Nothing) As Integer?
  overload: Innovt.Core.Utilities.StringExtensions.ToInt*
  nameWithType.vb: StringExtensions.ToInt(String, Integer?)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToInt(String, Integer?)
  name.vb: ToInt(String, Integer?)
- uid: Innovt.Core.Utilities.StringExtensions.ToDecimal(System.String,System.Decimal)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToDecimal(System.String,System.Decimal)
  id: ToDecimal(System.String,System.Decimal)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToDecimal(string, decimal)
  nameWithType: StringExtensions.ToDecimal(string, decimal)
  fullName: Innovt.Core.Utilities.StringExtensions.ToDecimal(string, decimal)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDecimal
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 617
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a decimal, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static decimal ToDecimal(this string str, decimal defaultValue = 0)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a decimal.
    - id: defaultValue
      type: System.Decimal
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Decimal
      description: The decimal value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToDecimal(str As String, defaultValue As Decimal = 0) As Decimal
  overload: Innovt.Core.Utilities.StringExtensions.ToDecimal*
  nameWithType.vb: StringExtensions.ToDecimal(String, Decimal)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToDecimal(String, Decimal)
  name.vb: ToDecimal(String, Decimal)
- uid: Innovt.Core.Utilities.StringExtensions.ToDecimal(System.String,System.Nullable{System.Decimal})
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToDecimal(System.String,System.Nullable{System.Decimal})
  id: ToDecimal(System.String,System.Nullable{System.Decimal})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToDecimal(string, decimal?)
  nameWithType: StringExtensions.ToDecimal(string, decimal?)
  fullName: Innovt.Core.Utilities.StringExtensions.ToDecimal(string, decimal?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDecimal
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 631
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a nullable decimal, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static decimal? ToDecimal(this string str, decimal? defaultValue = null)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a nullable decimal.
    - id: defaultValue
      type: System.Nullable{System.Decimal}
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Nullable{System.Decimal}
      description: The nullable decimal value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToDecimal(str As String, defaultValue As Decimal? = Nothing) As Decimal?
  overload: Innovt.Core.Utilities.StringExtensions.ToDecimal*
  nameWithType.vb: StringExtensions.ToDecimal(String, Decimal?)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToDecimal(String, Decimal?)
  name.vb: ToDecimal(String, Decimal?)
- uid: Innovt.Core.Utilities.StringExtensions.ToDouble(System.String,System.Double)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToDouble(System.String,System.Double)
  id: ToDouble(System.String,System.Double)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToDouble(string, double)
  nameWithType: StringExtensions.ToDouble(string, double)
  fullName: Innovt.Core.Utilities.StringExtensions.ToDouble(string, double)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDouble
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 649
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a double, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static double ToDouble(this string str, double defaultValue = 0)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a double.
    - id: defaultValue
      type: System.Double
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Double
      description: The double value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToDouble(str As String, defaultValue As Double = 0) As Double
  overload: Innovt.Core.Utilities.StringExtensions.ToDouble*
  nameWithType.vb: StringExtensions.ToDouble(String, Double)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToDouble(String, Double)
  name.vb: ToDouble(String, Double)
- uid: Innovt.Core.Utilities.StringExtensions.ToDouble(System.String,System.Nullable{System.Double})
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToDouble(System.String,System.Nullable{System.Double})
  id: ToDouble(System.String,System.Nullable{System.Double})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToDouble(string, double?)
  nameWithType: StringExtensions.ToDouble(string, double?)
  fullName: Innovt.Core.Utilities.StringExtensions.ToDouble(string, double?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDouble
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 667
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a nullable double, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static double? ToDouble(this string str, double? defaultValue = null)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a nullable double.
    - id: defaultValue
      type: System.Nullable{System.Double}
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Nullable{System.Double}
      description: The nullable double value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToDouble(str As String, defaultValue As Double? = Nothing) As Double?
  overload: Innovt.Core.Utilities.StringExtensions.ToDouble*
  nameWithType.vb: StringExtensions.ToDouble(String, Double?)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToDouble(String, Double?)
  name.vb: ToDouble(String, Double?)
- uid: Innovt.Core.Utilities.StringExtensions.ToFloat(System.String,System.Single)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToFloat(System.String,System.Single)
  id: ToFloat(System.String,System.Single)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToFloat(string, float)
  nameWithType: StringExtensions.ToFloat(string, float)
  fullName: Innovt.Core.Utilities.StringExtensions.ToFloat(string, float)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToFloat
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 685
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a float, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static float ToFloat(this string str, float defaultValue = 0)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a float.
    - id: defaultValue
      type: System.Single
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Single
      description: The float value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToFloat(str As String, defaultValue As Single = 0) As Single
  overload: Innovt.Core.Utilities.StringExtensions.ToFloat*
  nameWithType.vb: StringExtensions.ToFloat(String, Single)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToFloat(String, Single)
  name.vb: ToFloat(String, Single)
- uid: Innovt.Core.Utilities.StringExtensions.ToFloat(System.String,System.Nullable{System.Single})
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToFloat(System.String,System.Nullable{System.Single})
  id: ToFloat(System.String,System.Nullable{System.Single})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToFloat(string, float?)
  nameWithType: StringExtensions.ToFloat(string, float?)
  fullName: Innovt.Core.Utilities.StringExtensions.ToFloat(string, float?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToFloat
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 702
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a nullable float, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static float? ToFloat(this string str, float? defaultValue = null)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a nullable float.
    - id: defaultValue
      type: System.Nullable{System.Single}
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Nullable{System.Single}
      description: The nullable float value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToFloat(str As String, defaultValue As Single? = Nothing) As Single?
  overload: Innovt.Core.Utilities.StringExtensions.ToFloat*
  nameWithType.vb: StringExtensions.ToFloat(String, Single?)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToFloat(String, Single?)
  name.vb: ToFloat(String, Single?)
- uid: Innovt.Core.Utilities.StringExtensions.ToBoolean(System.String,System.Boolean)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToBoolean(System.String,System.Boolean)
  id: ToBoolean(System.String,System.Boolean)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToBoolean(string, bool)
  nameWithType: StringExtensions.ToBoolean(string, bool)
  fullName: Innovt.Core.Utilities.StringExtensions.ToBoolean(string, bool)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToBoolean
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 719
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a boolean, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static bool ToBoolean(this string str, bool defaultValue = false)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a boolean.
    - id: defaultValue
      type: System.Boolean
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Boolean
      description: The boolean value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToBoolean(str As String, defaultValue As Boolean = False) As Boolean
  overload: Innovt.Core.Utilities.StringExtensions.ToBoolean*
  nameWithType.vb: StringExtensions.ToBoolean(String, Boolean)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToBoolean(String, Boolean)
  name.vb: ToBoolean(String, Boolean)
- uid: Innovt.Core.Utilities.StringExtensions.ToBoolean(System.String,System.Nullable{System.Boolean})
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToBoolean(System.String,System.Nullable{System.Boolean})
  id: ToBoolean(System.String,System.Nullable{System.Boolean})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToBoolean(string, bool?)
  nameWithType: StringExtensions.ToBoolean(string, bool?)
  fullName: Innovt.Core.Utilities.StringExtensions.ToBoolean(string, bool?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToBoolean
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 738
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a boolean value, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static bool? ToBoolean(this string str, bool? defaultValue = null)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a boolean.
    - id: defaultValue
      type: System.Nullable{System.Boolean}
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Nullable{System.Boolean}
      description: The boolean value of the string if it represents a valid boolean; otherwise, the default value.
    content.vb: Public Shared Function ToBoolean(str As String, defaultValue As Boolean? = Nothing) As Boolean?
  overload: Innovt.Core.Utilities.StringExtensions.ToBoolean*
  nameWithType.vb: StringExtensions.ToBoolean(String, Boolean?)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToBoolean(String, Boolean?)
  name.vb: ToBoolean(String, Boolean?)
- uid: Innovt.Core.Utilities.StringExtensions.ToDateTime(System.String,System.DateTime)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToDateTime(System.String,System.DateTime)
  id: ToDateTime(System.String,System.DateTime)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToDateTime(string, DateTime)
  nameWithType: StringExtensions.ToDateTime(string, DateTime)
  fullName: Innovt.Core.Utilities.StringExtensions.ToDateTime(string, System.DateTime)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDateTime
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 755
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a DateTime, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static DateTime ToDateTime(this string str, DateTime defaultValue = default)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a DateTime.
    - id: defaultValue
      type: System.DateTime
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.DateTime
      description: The DateTime value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToDateTime(str As String, defaultValue As Date = Nothing) As Date
  overload: Innovt.Core.Utilities.StringExtensions.ToDateTime*
  nameWithType.vb: StringExtensions.ToDateTime(String, Date)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToDateTime(String, Date)
  name.vb: ToDateTime(String, Date)
- uid: Innovt.Core.Utilities.StringExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToDateTime(System.String,System.Nullable{System.DateTime})
  id: ToDateTime(System.String,System.Nullable{System.DateTime})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToDateTime(string, DateTime?)
  nameWithType: StringExtensions.ToDateTime(string, DateTime?)
  fullName: Innovt.Core.Utilities.StringExtensions.ToDateTime(string, System.DateTime?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDateTime
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 772
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a nullable DateTime, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static DateTime? ToDateTime(this string str, DateTime? defaultValue = null)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a nullable DateTime.
    - id: defaultValue
      type: System.Nullable{System.DateTime}
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Nullable{System.DateTime}
      description: The nullable DateTime value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToDateTime(str As String, defaultValue As Date? = Nothing) As Date?
  overload: Innovt.Core.Utilities.StringExtensions.ToDateTime*
  nameWithType.vb: StringExtensions.ToDateTime(String, Date?)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToDateTime(String, Date?)
  name.vb: ToDateTime(String, Date?)
- uid: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(System.String,System.DateTimeOffset)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(System.String,System.DateTimeOffset)
  id: ToDateTimeOffset(System.String,System.DateTimeOffset)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset(string, DateTimeOffset)
  nameWithType: StringExtensions.ToDateTimeOffset(string, DateTimeOffset)
  fullName: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(string, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDateTimeOffset
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 790
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a DateTimeOffset, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static DateTimeOffset ToDateTimeOffset(this string str, DateTimeOffset defaultValue = default)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a DateTimeOffset.
    - id: defaultValue
      type: System.DateTimeOffset
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.DateTimeOffset
      description: The DateTimeOffset value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToDateTimeOffset(str As String, defaultValue As DateTimeOffset = Nothing) As DateTimeOffset
  overload: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset*
  nameWithType.vb: StringExtensions.ToDateTimeOffset(String, DateTimeOffset)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(String, System.DateTimeOffset)
  name.vb: ToDateTimeOffset(String, DateTimeOffset)
- uid: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(System.String,System.Nullable{System.DateTimeOffset})
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(System.String,System.Nullable{System.DateTimeOffset})
  id: ToDateTimeOffset(System.String,System.Nullable{System.DateTimeOffset})
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset(string, DateTimeOffset?)
  nameWithType: StringExtensions.ToDateTimeOffset(string, DateTimeOffset?)
  fullName: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(string, System.DateTimeOffset?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToDateTimeOffset
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 808
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a nullable DateTimeOffset, using a specified default value if the string is null or empty.
  example: []
  syntax:
    content: public static DateTimeOffset? ToDateTimeOffset(this string str, DateTimeOffset? defaultValue = null)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a nullable DateTimeOffset.
    - id: defaultValue
      type: System.Nullable{System.DateTimeOffset}
      description: The default value to return if the string is null or empty (optional).
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: The nullable DateTimeOffset value of the string, or the default value if the string is null or empty.
    content.vb: Public Shared Function ToDateTimeOffset(str As String, defaultValue As DateTimeOffset? = Nothing) As DateTimeOffset?
  overload: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset*
  nameWithType.vb: StringExtensions.ToDateTimeOffset(String, DateTimeOffset?)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset(String, System.DateTimeOffset?)
  name.vb: ToDateTimeOffset(String, DateTimeOffset?)
- uid: Innovt.Core.Utilities.StringExtensions.ToGuid(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToGuid(System.String)
  id: ToGuid(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToGuid(string)
  nameWithType: StringExtensions.ToGuid(string)
  fullName: Innovt.Core.Utilities.StringExtensions.ToGuid(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToGuid
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 824
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a Guid.
  example: []
  syntax:
    content: public static Guid ToGuid(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a Guid.
    return:
      type: System.Guid
      description: The Guid value of the string.
    content.vb: Public Shared Function ToGuid(str As String) As Guid
  overload: Innovt.Core.Utilities.StringExtensions.ToGuid*
  nameWithType.vb: StringExtensions.ToGuid(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToGuid(String)
  name.vb: ToGuid(String)
- uid: Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty(System.String)
  commentId: M:Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty(System.String)
  id: ToGuidOrEmpty(System.String)
  isExtensionMethod: true
  parent: Innovt.Core.Utilities.StringExtensions
  langs:
  - csharp
  - vb
  name: ToGuidOrEmpty(string)
  nameWithType: StringExtensions.ToGuidOrEmpty(string)
  fullName: Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Utilities/StringExtensions.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ToGuidOrEmpty
    path: ../src/Innovt.Core/Utilities/StringExtensions.cs
    startLine: 834
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Utilities
  summary: Converts a string to a Guid or returns Guid.Empty if the conversion fails.
  example: []
  syntax:
    content: public static Guid? ToGuidOrEmpty(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to a Guid.
    return:
      type: System.Nullable{System.Guid}
      description: The Guid value of the string or Guid.Empty if the conversion fails.
    content.vb: Public Shared Function ToGuidOrEmpty(str As String) As Guid?
  overload: Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty*
  nameWithType.vb: StringExtensions.ToGuidOrEmpty(String)
  fullName.vb: Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty(String)
  name.vb: ToGuidOrEmpty(String)
references:
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.StringExtensions.IsEmail*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.IsEmail
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_IsEmail_System_String_
  name: IsEmail
  nameWithType: StringExtensions.IsEmail
  fullName: Innovt.Core.Utilities.StringExtensions.IsEmail
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Core.Utilities.StringExtensions.IsNumber*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.IsNumber
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_IsNumber_System_String_
  name: IsNumber
  nameWithType: StringExtensions.IsNumber
  fullName: Innovt.Core.Utilities.StringExtensions.IsNumber
- uid: Innovt.Core.Utilities.StringExtensions.Truncate*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.Truncate
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_Truncate_System_String_System_Int32_
  name: Truncate
  nameWithType: StringExtensions.Truncate
  fullName: Innovt.Core.Utilities.StringExtensions.Truncate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Innovt.Core.Utilities.StringExtensions.IsCpf*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.IsCpf
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_IsCpf_System_String_
  name: IsCpf
  nameWithType: StringExtensions.IsCpf
  fullName: Innovt.Core.Utilities.StringExtensions.IsCpf
- uid: Innovt.Core.Utilities.StringExtensions.IsCnpj*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.IsCnpj
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_IsCnpj_System_String_
  name: IsCnpj
  nameWithType: StringExtensions.IsCnpj
  fullName: Innovt.Core.Utilities.StringExtensions.IsCnpj
- uid: Innovt.Core.Utilities.StringExtensions.IsNotEmpty*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.IsNotEmpty
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_IsNotEmpty_System_Guid_
  name: IsNotEmpty
  nameWithType: StringExtensions.IsNotEmpty
  fullName: Innovt.Core.Utilities.StringExtensions.IsNotEmpty
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Innovt.Core.Utilities.StringExtensions.IsEmpty*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.IsEmpty
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_IsEmpty_System_Guid_
  name: IsEmpty
  nameWithType: StringExtensions.IsEmpty
  fullName: Innovt.Core.Utilities.StringExtensions.IsEmpty
- uid: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_IsNotNullOrEmpty_System_Nullable_System_Guid__
  name: IsNotNullOrEmpty
  nameWithType: StringExtensions.IsNotNullOrEmpty
  fullName: Innovt.Core.Utilities.StringExtensions.IsNotNullOrEmpty
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_IsNullOrEmpty_System_Nullable_System_Guid__
  name: IsNullOrEmpty
  nameWithType: StringExtensions.IsNullOrEmpty
  fullName: Innovt.Core.Utilities.StringExtensions.IsNullOrEmpty
- uid: Innovt.Core.Utilities.StringExtensions.UrlEncode*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.UrlEncode
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_UrlEncode_System_String_
  name: UrlEncode
  nameWithType: StringExtensions.UrlEncode
  fullName: Innovt.Core.Utilities.StringExtensions.UrlEncode
- uid: Innovt.Core.Utilities.StringExtensions.UrlDecode*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.UrlDecode
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_UrlDecode_System_String_
  name: UrlDecode
  nameWithType: StringExtensions.UrlDecode
  fullName: Innovt.Core.Utilities.StringExtensions.UrlDecode
- uid: Innovt.Core.Utilities.StringExtensions.GetValueOrDefault*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.GetValueOrDefault
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_GetValueOrDefault_System_String_System_String_
  name: GetValueOrDefault
  nameWithType: StringExtensions.GetValueOrDefault
  fullName: Innovt.Core.Utilities.StringExtensions.GetValueOrDefault
- uid: Innovt.Core.Utilities.StringExtensions.SmartTrim*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.SmartTrim
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_SmartTrim_System_String_
  name: SmartTrim
  nameWithType: StringExtensions.SmartTrim
  fullName: Innovt.Core.Utilities.StringExtensions.SmartTrim
- uid: Innovt.Core.Utilities.StringExtensions.MaskEmail*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.MaskEmail
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_MaskEmail_System_String_
  name: MaskEmail
  nameWithType: StringExtensions.MaskEmail
  fullName: Innovt.Core.Utilities.StringExtensions.MaskEmail
- uid: Innovt.Core.Utilities.StringExtensions.ToList*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToList
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToList_System_String_System_Char_
  name: ToList
  nameWithType: StringExtensions.ToList
  fullName: Innovt.Core.Utilities.StringExtensions.ToList
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innovt.Core.Utilities.StringExtensions.ToCamelCase*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToCamelCase
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToCamelCase_System_String_
  name: ToCamelCase
  nameWithType: StringExtensions.ToCamelCase
  fullName: Innovt.Core.Utilities.StringExtensions.ToCamelCase
- uid: Innovt.Core.Utilities.StringExtensions.ToTitleCase*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToTitleCase
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToTitleCase_System_String_
  name: ToTitleCase
  nameWithType: StringExtensions.ToTitleCase
  fullName: Innovt.Core.Utilities.StringExtensions.ToTitleCase
- uid: Innovt.Core.Utilities.StringExtensions.ClearMask*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ClearMask
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ClearMask_System_String_
  name: ClearMask
  nameWithType: StringExtensions.ClearMask
  fullName: Innovt.Core.Utilities.StringExtensions.ClearMask
- uid: Innovt.Core.Utilities.StringExtensions.OnlyNumber*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.OnlyNumber
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_OnlyNumber_System_String_
  name: OnlyNumber
  nameWithType: StringExtensions.OnlyNumber
  fullName: Innovt.Core.Utilities.StringExtensions.OnlyNumber
- uid: Innovt.Core.Utilities.StringExtensions.NormalizeText*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.NormalizeText
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_NormalizeText_System_String_
  name: NormalizeText
  nameWithType: StringExtensions.NormalizeText
  fullName: Innovt.Core.Utilities.StringExtensions.NormalizeText
- uid: Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_RemoveSpecialCharacter_System_String_
  name: RemoveSpecialCharacter
  nameWithType: StringExtensions.RemoveSpecialCharacter
  fullName: Innovt.Core.Utilities.StringExtensions.RemoveSpecialCharacter
- uid: Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_HasSpecialCharacter_System_String_
  name: HasSpecialCharacter
  nameWithType: StringExtensions.HasSpecialCharacter
  fullName: Innovt.Core.Utilities.StringExtensions.HasSpecialCharacter
- uid: Innovt.Core.Utilities.StringExtensions.RemoveAccents*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.RemoveAccents
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_RemoveAccents_System_String_
  name: RemoveAccents
  nameWithType: StringExtensions.RemoveAccents
  fullName: Innovt.Core.Utilities.StringExtensions.RemoveAccents
- uid: Innovt.Core.Utilities.StringExtensions.FormatCpf*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.FormatCpf
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_FormatCpf_System_String_
  name: FormatCpf
  nameWithType: StringExtensions.FormatCpf
  fullName: Innovt.Core.Utilities.StringExtensions.FormatCpf
- uid: Innovt.Core.Utilities.StringExtensions.FormatCoordinate*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.FormatCoordinate
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_FormatCoordinate_System_Int64_
  name: FormatCoordinate
  nameWithType: StringExtensions.FormatCoordinate
  fullName: Innovt.Core.Utilities.StringExtensions.FormatCoordinate
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Innovt.Core.Utilities.StringExtensions.FormatCelPhone*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.FormatCelPhone
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_FormatCelPhone_System_String_
  name: FormatCelPhone
  nameWithType: StringExtensions.FormatCelPhone
  fullName: Innovt.Core.Utilities.StringExtensions.FormatCelPhone
- uid: Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_FormatPhoneNumber_System_String_
  name: FormatPhoneNumber
  nameWithType: StringExtensions.FormatPhoneNumber
  fullName: Innovt.Core.Utilities.StringExtensions.FormatPhoneNumber
- uid: Innovt.Core.Utilities.StringExtensions.FormatCnpj*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.FormatCnpj
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_FormatCnpj_System_String_
  name: FormatCnpj
  nameWithType: StringExtensions.FormatCnpj
  fullName: Innovt.Core.Utilities.StringExtensions.FormatCnpj
- uid: Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToUpperFirstLetter_System_String_
  name: ToUpperFirstLetter
  nameWithType: StringExtensions.ToUpperFirstLetter
  fullName: Innovt.Core.Utilities.StringExtensions.ToUpperFirstLetter
- uid: Innovt.Core.Utilities.StringExtensions.FormatZipCode*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.FormatZipCode
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_FormatZipCode_System_String_
  name: FormatZipCode
  nameWithType: StringExtensions.FormatZipCode
  fullName: Innovt.Core.Utilities.StringExtensions.FormatZipCode
- uid: Innovt.Core.Utilities.StringExtensions.ToBase64*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToBase64
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToBase64_System_String_System_Text_Encoding_
  name: ToBase64
  nameWithType: StringExtensions.ToBase64
  fullName: Innovt.Core.Utilities.StringExtensions.ToBase64
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: Innovt.Core.Utilities.StringExtensions.FromBase64*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.FromBase64
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_FromBase64_System_String_System_Text_Encoding_
  name: FromBase64
  nameWithType: StringExtensions.FromBase64
  fullName: Innovt.Core.Utilities.StringExtensions.FromBase64
- uid: Innovt.Core.Utilities.StringExtensions.ApplyQuotes*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ApplyQuotes
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ApplyQuotes_System_String_
  name: ApplyQuotes
  nameWithType: StringExtensions.ApplyQuotes
  fullName: Innovt.Core.Utilities.StringExtensions.ApplyQuotes
- uid: Innovt.Core.Utilities.StringExtensions.ToInt*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToInt
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToInt_System_String_System_Int32_
  name: ToInt
  nameWithType: StringExtensions.ToInt
  fullName: Innovt.Core.Utilities.StringExtensions.ToInt
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: Innovt.Core.Utilities.StringExtensions.ToDecimal*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToDecimal
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToDecimal_System_String_System_Decimal_
  name: ToDecimal
  nameWithType: StringExtensions.ToDecimal
  fullName: Innovt.Core.Utilities.StringExtensions.ToDecimal
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal?
  nameWithType: decimal?
  fullName: decimal?
  nameWithType.vb: Decimal?
  fullName.vb: Decimal?
  name.vb: Decimal?
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
- uid: Innovt.Core.Utilities.StringExtensions.ToDouble*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToDouble
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToDouble_System_String_System_Double_
  name: ToDouble
  nameWithType: StringExtensions.ToDouble
  fullName: Innovt.Core.Utilities.StringExtensions.ToDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double?
  nameWithType: double?
  fullName: double?
  nameWithType.vb: Double?
  fullName.vb: Double?
  name.vb: Double?
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
- uid: Innovt.Core.Utilities.StringExtensions.ToFloat*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToFloat
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToFloat_System_String_System_Single_
  name: ToFloat
  nameWithType: StringExtensions.ToFloat
  fullName: Innovt.Core.Utilities.StringExtensions.ToFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: Innovt.Core.Utilities.StringExtensions.ToBoolean*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToBoolean
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToBoolean_System_String_System_Boolean_
  name: ToBoolean
  nameWithType: StringExtensions.ToBoolean
  fullName: Innovt.Core.Utilities.StringExtensions.ToBoolean
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: Innovt.Core.Utilities.StringExtensions.ToDateTime*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToDateTime
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToDateTime_System_String_System_DateTime_
  name: ToDateTime
  nameWithType: StringExtensions.ToDateTime
  fullName: Innovt.Core.Utilities.StringExtensions.ToDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToDateTimeOffset_System_String_System_DateTimeOffset_
  name: ToDateTimeOffset
  nameWithType: StringExtensions.ToDateTimeOffset
  fullName: Innovt.Core.Utilities.StringExtensions.ToDateTimeOffset
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset?
  nameWithType: DateTimeOffset?
  fullName: System.DateTimeOffset?
  spec.csharp:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
  spec.vb:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
- uid: Innovt.Core.Utilities.StringExtensions.ToGuid*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToGuid
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToGuid_System_String_
  name: ToGuid
  nameWithType: StringExtensions.ToGuid
  fullName: Innovt.Core.Utilities.StringExtensions.ToGuid
- uid: Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty*
  commentId: Overload:Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty
  href: Innovt.Core.Utilities.StringExtensions.html#Innovt_Core_Utilities_StringExtensions_ToGuidOrEmpty_System_String_
  name: ToGuidOrEmpty
  nameWithType: StringExtensions.ToGuidOrEmpty
  fullName: Innovt.Core.Utilities.StringExtensions.ToGuidOrEmpty
