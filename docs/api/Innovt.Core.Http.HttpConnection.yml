### YamlMime:ManagedReference
items:
- uid: Innovt.Core.Http.HttpConnection
  commentId: T:Innovt.Core.Http.HttpConnection
  id: HttpConnection
  parent: Innovt.Core.Http
  children:
  - Innovt.Core.Http.HttpConnection.Delete(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  - Innovt.Core.Http.HttpConnection.Get``1(System.Uri,Innovt.Core.Serialization.ISerializer,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  - Innovt.Core.Http.HttpConnection.Head(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  - Innovt.Core.Http.HttpConnection.Post(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  - Innovt.Core.Http.HttpConnection.Post``1(System.Uri,System.String,Innovt.Core.Serialization.ISerializer,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  - Innovt.Core.Http.HttpConnection.Put(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: HttpConnection
  nameWithType: HttpConnection
  fullName: Innovt.Core.Http.HttpConnection
  type: Class
  source:
    remote:
      path: src/Innovt.Core/Http/HttpConnection.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: HttpConnection
    path: ../src/Innovt.Core/Http/HttpConnection.cs
    startLine: 16
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Http
  summary: Provides methods for making HTTP requests and handling responses.
  example: []
  syntax:
    content: public static class HttpConnection
    content.vb: Public Module HttpConnection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Innovt.Core.Http.HttpConnection.Get``1(System.Uri,Innovt.Core.Serialization.ISerializer,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  commentId: M:Innovt.Core.Http.HttpConnection.Get``1(System.Uri,Innovt.Core.Serialization.ISerializer,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  id: Get``1(System.Uri,Innovt.Core.Serialization.ISerializer,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  parent: Innovt.Core.Http.HttpConnection
  langs:
  - csharp
  - vb
  name: Get<T>(Uri, ISerializer, string, NameValueCollection, int?)
  nameWithType: HttpConnection.Get<T>(Uri, ISerializer, string, NameValueCollection, int?)
  fullName: Innovt.Core.Http.HttpConnection.Get<T>(System.Uri, Innovt.Core.Serialization.ISerializer, string, System.Collections.Specialized.NameValueCollection, int?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Http/HttpConnection.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Get
    path: ../src/Innovt.Core/Http/HttpConnection.cs
    startLine: 58
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Http
  summary: >-
    Sends an HTTP GET request to the specified endpoint, deserializes the response to the specified type,

    and returns the deserialized object.
  example: []
  syntax:
    content: 'public static T Get<T>(Uri endpoint, ISerializer serializer, string dataToSend = null, NameValueCollection headerData = null, int? connectionTimeout = null) where T : class'
    parameters:
    - id: endpoint
      type: System.Uri
      description: The URI of the HTTP endpoint.
    - id: serializer
      type: Innovt.Core.Serialization.ISerializer
      description: An instance of the serializer to use for deserialization.
    - id: dataToSend
      type: System.String
      description: Optional data to send with the request.
    - id: headerData
      type: System.Collections.Specialized.NameValueCollection
      description: Optional headers to include in the request.
    - id: connectionTimeout
      type: System.Nullable{System.Int32}
      description: Optional connection timeout in milliseconds.
    typeParameters:
    - id: T
      description: The type to deserialize the response to.
    return:
      type: '{T}'
      description: The deserialized response of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function [Get](Of T As Class)(endpoint As Uri, serializer As ISerializer, dataToSend As String = Nothing, headerData As NameValueCollection = Nothing, connectionTimeout As Integer? = Nothing) As T
  overload: Innovt.Core.Http.HttpConnection.Get*
  exceptions:
  - type: Innovt.Core.Http.HttpException
    commentId: T:Innovt.Core.Http.HttpException
    description: Thrown if the response status code is not OK or Created.
  nameWithType.vb: HttpConnection.Get(Of T)(Uri, ISerializer, String, NameValueCollection, Integer?)
  fullName.vb: Innovt.Core.Http.HttpConnection.Get(Of T)(System.Uri, Innovt.Core.Serialization.ISerializer, String, System.Collections.Specialized.NameValueCollection, Integer?)
  name.vb: Get(Of T)(Uri, ISerializer, String, NameValueCollection, Integer?)
- uid: Innovt.Core.Http.HttpConnection.Put(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  commentId: M:Innovt.Core.Http.HttpConnection.Put(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  id: Put(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  parent: Innovt.Core.Http.HttpConnection
  langs:
  - csharp
  - vb
  name: Put(Uri, string, NameValueCollection, int?)
  nameWithType: HttpConnection.Put(Uri, string, NameValueCollection, int?)
  fullName: Innovt.Core.Http.HttpConnection.Put(System.Uri, string, System.Collections.Specialized.NameValueCollection, int?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Http/HttpConnection.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Put
    path: ../src/Innovt.Core/Http/HttpConnection.cs
    startLine: 82
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Http
  summary: >-
    Sends an HTTP PUT request to the specified endpoint and retrieves detailed information about the request and

    response.
  example: []
  syntax:
    content: public static HttpRequestDetail Put(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null)
    parameters:
    - id: endpoint
      type: System.Uri
      description: The URI of the HTTP endpoint.
    - id: dataToSend
      type: System.String
      description: Optional data to send with the request.
    - id: headerData
      type: System.Collections.Specialized.NameValueCollection
      description: Optional headers to include in the request.
    - id: connectionTimeout
      type: System.Nullable{System.Int32}
      description: Optional connection timeout in milliseconds.
    return:
      type: Innovt.Core.Http.HttpRequestDetail
      description: An <xref href="Innovt.Core.Http.HttpRequestDetail" data-throw-if-not-resolved="false"></xref> object containing request and response details.
    content.vb: Public Shared Function Put(endpoint As Uri, dataToSend As String, headerData As NameValueCollection = Nothing, connectionTimeout As Integer? = Nothing) As HttpRequestDetail
  overload: Innovt.Core.Http.HttpConnection.Put*
  nameWithType.vb: HttpConnection.Put(Uri, String, NameValueCollection, Integer?)
  fullName.vb: Innovt.Core.Http.HttpConnection.Put(System.Uri, String, System.Collections.Specialized.NameValueCollection, Integer?)
  name.vb: Put(Uri, String, NameValueCollection, Integer?)
- uid: Innovt.Core.Http.HttpConnection.Delete(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  commentId: M:Innovt.Core.Http.HttpConnection.Delete(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  id: Delete(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  parent: Innovt.Core.Http.HttpConnection
  langs:
  - csharp
  - vb
  name: Delete(Uri, string, NameValueCollection, int?)
  nameWithType: HttpConnection.Delete(Uri, string, NameValueCollection, int?)
  fullName: Innovt.Core.Http.HttpConnection.Delete(System.Uri, string, System.Collections.Specialized.NameValueCollection, int?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Http/HttpConnection.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Delete
    path: ../src/Innovt.Core/Http/HttpConnection.cs
    startLine: 98
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Http
  summary: >-
    Sends an HTTP DELETE request to the specified endpoint and retrieves detailed information about the request and

    response.
  example: []
  syntax:
    content: public static HttpRequestDetail Delete(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null)
    parameters:
    - id: endpoint
      type: System.Uri
      description: The URI of the HTTP endpoint.
    - id: dataToSend
      type: System.String
      description: Optional data to send with the request.
    - id: headerData
      type: System.Collections.Specialized.NameValueCollection
      description: Optional headers to include in the request.
    - id: connectionTimeout
      type: System.Nullable{System.Int32}
      description: Optional connection timeout in milliseconds.
    return:
      type: Innovt.Core.Http.HttpRequestDetail
      description: An <xref href="Innovt.Core.Http.HttpRequestDetail" data-throw-if-not-resolved="false"></xref> object containing request and response details.
    content.vb: Public Shared Function Delete(endpoint As Uri, dataToSend As String, headerData As NameValueCollection = Nothing, connectionTimeout As Integer? = Nothing) As HttpRequestDetail
  overload: Innovt.Core.Http.HttpConnection.Delete*
  nameWithType.vb: HttpConnection.Delete(Uri, String, NameValueCollection, Integer?)
  fullName.vb: Innovt.Core.Http.HttpConnection.Delete(System.Uri, String, System.Collections.Specialized.NameValueCollection, Integer?)
  name.vb: Delete(Uri, String, NameValueCollection, Integer?)
- uid: Innovt.Core.Http.HttpConnection.Head(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  commentId: M:Innovt.Core.Http.HttpConnection.Head(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  id: Head(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  parent: Innovt.Core.Http.HttpConnection
  langs:
  - csharp
  - vb
  name: Head(Uri, string, NameValueCollection, int?)
  nameWithType: HttpConnection.Head(Uri, string, NameValueCollection, int?)
  fullName: Innovt.Core.Http.HttpConnection.Head(System.Uri, string, System.Collections.Specialized.NameValueCollection, int?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Http/HttpConnection.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Head
    path: ../src/Innovt.Core/Http/HttpConnection.cs
    startLine: 115
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Http
  summary: >-
    Sends an HTTP HEAD request to the specified endpoint and retrieves detailed information about the request and

    response.
  example: []
  syntax:
    content: public static HttpRequestDetail Head(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null)
    parameters:
    - id: endpoint
      type: System.Uri
      description: The URI of the HTTP endpoint.
    - id: dataToSend
      type: System.String
      description: Optional data to send with the request.
    - id: headerData
      type: System.Collections.Specialized.NameValueCollection
      description: Optional headers to include in the request.
    - id: connectionTimeout
      type: System.Nullable{System.Int32}
      description: Optional connection timeout in milliseconds.
    return:
      type: Innovt.Core.Http.HttpRequestDetail
      description: An <xref href="Innovt.Core.Http.HttpRequestDetail" data-throw-if-not-resolved="false"></xref> object containing request and response details.
    content.vb: Public Shared Function Head(endpoint As Uri, dataToSend As String, headerData As NameValueCollection = Nothing, connectionTimeout As Integer? = Nothing) As HttpRequestDetail
  overload: Innovt.Core.Http.HttpConnection.Head*
  nameWithType.vb: HttpConnection.Head(Uri, String, NameValueCollection, Integer?)
  fullName.vb: Innovt.Core.Http.HttpConnection.Head(System.Uri, String, System.Collections.Specialized.NameValueCollection, Integer?)
  name.vb: Head(Uri, String, NameValueCollection, Integer?)
- uid: Innovt.Core.Http.HttpConnection.Post(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  commentId: M:Innovt.Core.Http.HttpConnection.Post(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  id: Post(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  parent: Innovt.Core.Http.HttpConnection
  langs:
  - csharp
  - vb
  name: Post(Uri, string, NameValueCollection, int?)
  nameWithType: HttpConnection.Post(Uri, string, NameValueCollection, int?)
  fullName: Innovt.Core.Http.HttpConnection.Post(System.Uri, string, System.Collections.Specialized.NameValueCollection, int?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Http/HttpConnection.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Post
    path: ../src/Innovt.Core/Http/HttpConnection.cs
    startLine: 133
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Http
  summary: >-
    Sends an HTTP POST request to the specified endpoint and retrieves detailed information about the request and

    response.
  example: []
  syntax:
    content: public static HttpRequestDetail Post(Uri endpoint, string dataToSend, NameValueCollection headerData = null, int? connectionTimeout = null)
    parameters:
    - id: endpoint
      type: System.Uri
      description: The URI of the HTTP endpoint.
    - id: dataToSend
      type: System.String
      description: The data to send with the request.
    - id: headerData
      type: System.Collections.Specialized.NameValueCollection
      description: Optional headers to include in the request.
    - id: connectionTimeout
      type: System.Nullable{System.Int32}
      description: Optional connection timeout in milliseconds.
    return:
      type: Innovt.Core.Http.HttpRequestDetail
      description: An <xref href="Innovt.Core.Http.HttpRequestDetail" data-throw-if-not-resolved="false"></xref> object containing request and response details.
    content.vb: Public Shared Function Post(endpoint As Uri, dataToSend As String, headerData As NameValueCollection = Nothing, connectionTimeout As Integer? = Nothing) As HttpRequestDetail
  overload: Innovt.Core.Http.HttpConnection.Post*
  nameWithType.vb: HttpConnection.Post(Uri, String, NameValueCollection, Integer?)
  fullName.vb: Innovt.Core.Http.HttpConnection.Post(System.Uri, String, System.Collections.Specialized.NameValueCollection, Integer?)
  name.vb: Post(Uri, String, NameValueCollection, Integer?)
- uid: Innovt.Core.Http.HttpConnection.Post``1(System.Uri,System.String,Innovt.Core.Serialization.ISerializer,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  commentId: M:Innovt.Core.Http.HttpConnection.Post``1(System.Uri,System.String,Innovt.Core.Serialization.ISerializer,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  id: Post``1(System.Uri,System.String,Innovt.Core.Serialization.ISerializer,System.Collections.Specialized.NameValueCollection,System.Nullable{System.Int32})
  parent: Innovt.Core.Http.HttpConnection
  langs:
  - csharp
  - vb
  name: Post<T>(Uri, string, ISerializer, NameValueCollection, int?)
  nameWithType: HttpConnection.Post<T>(Uri, string, ISerializer, NameValueCollection, int?)
  fullName: Innovt.Core.Http.HttpConnection.Post<T>(System.Uri, string, Innovt.Core.Serialization.ISerializer, System.Collections.Specialized.NameValueCollection, int?)
  type: Method
  source:
    remote:
      path: src/Innovt.Core/Http/HttpConnection.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Post
    path: ../src/Innovt.Core/Http/HttpConnection.cs
    startLine: 167
  assemblies:
  - Innovt.Core
  namespace: Innovt.Core.Http
  summary: >-
    Sends an HTTP POST request to the specified endpoint and retrieves the response, deserializing it to the specified

    type.
  example: []
  syntax:
    content: 'public static T Post<T>(Uri endpoint, string dataToSend, ISerializer serializer, NameValueCollection headerData = null, int? connectionTimeout = null) where T : class'
    parameters:
    - id: endpoint
      type: System.Uri
      description: The URI of the HTTP endpoint.
    - id: dataToSend
      type: System.String
      description: The data to send with the request.
    - id: serializer
      type: Innovt.Core.Serialization.ISerializer
      description: An instance of the serializer to use for deserialization.
    - id: headerData
      type: System.Collections.Specialized.NameValueCollection
      description: Optional headers to include in the request.
    - id: connectionTimeout
      type: System.Nullable{System.Int32}
      description: Optional connection timeout in milliseconds.
    typeParameters:
    - id: T
      description: The type to deserialize the response to.
    return:
      type: '{T}'
      description: The deserialized response of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function Post(Of T As Class)(endpoint As Uri, dataToSend As String, serializer As ISerializer, headerData As NameValueCollection = Nothing, connectionTimeout As Integer? = Nothing) As T
  overload: Innovt.Core.Http.HttpConnection.Post*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the serializer is null.
  - type: Innovt.Core.Http.HttpException
    commentId: T:Innovt.Core.Http.HttpException
    description: Thrown if the response status code is not OK or Created.
  nameWithType.vb: HttpConnection.Post(Of T)(Uri, String, ISerializer, NameValueCollection, Integer?)
  fullName.vb: Innovt.Core.Http.HttpConnection.Post(Of T)(System.Uri, String, Innovt.Core.Serialization.ISerializer, System.Collections.Specialized.NameValueCollection, Integer?)
  name.vb: Post(Of T)(Uri, String, ISerializer, NameValueCollection, Integer?)
references:
- uid: Innovt.Core.Http
  commentId: N:Innovt.Core.Http
  href: Innovt.html
  name: Innovt.Core.Http
  nameWithType: Innovt.Core.Http
  fullName: Innovt.Core.Http
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Http
    name: Http
    href: Innovt.Core.Http.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Http
    name: Http
    href: Innovt.Core.Http.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Http.HttpException
  commentId: T:Innovt.Core.Http.HttpException
  href: Innovt.Core.Http.HttpException.html
  name: HttpException
  nameWithType: HttpException
  fullName: Innovt.Core.Http.HttpException
- uid: Innovt.Core.Http.HttpConnection.Get*
  commentId: Overload:Innovt.Core.Http.HttpConnection.Get
  href: Innovt.Core.Http.HttpConnection.html#Innovt_Core_Http_HttpConnection_Get__1_System_Uri_Innovt_Core_Serialization_ISerializer_System_String_System_Collections_Specialized_NameValueCollection_System_Nullable_System_Int32__
  name: Get
  nameWithType: HttpConnection.Get
  fullName: Innovt.Core.Http.HttpConnection.Get
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Innovt.Core.Serialization.ISerializer
  commentId: T:Innovt.Core.Serialization.ISerializer
  parent: Innovt.Core.Serialization
  href: Innovt.Core.Serialization.ISerializer.html
  name: ISerializer
  nameWithType: ISerializer
  fullName: Innovt.Core.Serialization.ISerializer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.namevaluecollection
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Core.Serialization
  commentId: N:Innovt.Core.Serialization
  href: Innovt.html
  name: Innovt.Core.Serialization
  nameWithType: Innovt.Core.Serialization
  fullName: Innovt.Core.Serialization
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Serialization
    name: Serialization
    href: Innovt.Core.Serialization.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Serialization
    name: Serialization
    href: Innovt.Core.Serialization.html
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Core.Http.HttpRequestDetail
  commentId: T:Innovt.Core.Http.HttpRequestDetail
  parent: Innovt.Core.Http
  href: Innovt.Core.Http.HttpRequestDetail.html
  name: HttpRequestDetail
  nameWithType: HttpRequestDetail
  fullName: Innovt.Core.Http.HttpRequestDetail
- uid: Innovt.Core.Http.HttpConnection.Put*
  commentId: Overload:Innovt.Core.Http.HttpConnection.Put
  href: Innovt.Core.Http.HttpConnection.html#Innovt_Core_Http_HttpConnection_Put_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_System_Nullable_System_Int32__
  name: Put
  nameWithType: HttpConnection.Put
  fullName: Innovt.Core.Http.HttpConnection.Put
- uid: Innovt.Core.Http.HttpConnection.Delete*
  commentId: Overload:Innovt.Core.Http.HttpConnection.Delete
  href: Innovt.Core.Http.HttpConnection.html#Innovt_Core_Http_HttpConnection_Delete_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_System_Nullable_System_Int32__
  name: Delete
  nameWithType: HttpConnection.Delete
  fullName: Innovt.Core.Http.HttpConnection.Delete
- uid: Innovt.Core.Http.HttpConnection.Head*
  commentId: Overload:Innovt.Core.Http.HttpConnection.Head
  href: Innovt.Core.Http.HttpConnection.html#Innovt_Core_Http_HttpConnection_Head_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_System_Nullable_System_Int32__
  name: Head
  nameWithType: HttpConnection.Head
  fullName: Innovt.Core.Http.HttpConnection.Head
- uid: Innovt.Core.Http.HttpConnection.Post*
  commentId: Overload:Innovt.Core.Http.HttpConnection.Post
  href: Innovt.Core.Http.HttpConnection.html#Innovt_Core_Http_HttpConnection_Post_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_System_Nullable_System_Int32__
  name: Post
  nameWithType: HttpConnection.Post
  fullName: Innovt.Core.Http.HttpConnection.Post
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
