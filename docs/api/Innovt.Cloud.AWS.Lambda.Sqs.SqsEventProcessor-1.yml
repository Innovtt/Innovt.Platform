### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1
  commentId: T:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1
  id: SqsEventProcessor`1
  parent: Innovt.Cloud.AWS.Lambda.Sqs
  children:
  - Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Core.Serialization.ISerializer,System.Boolean,System.Boolean)
  - Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(Innovt.Core.CrossCutting.Log.ILogger,System.Boolean,System.Boolean)
  - Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(System.Boolean,System.Boolean)
  - Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  - Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ProcessMessage(Innovt.Cloud.Queue.QueueMessage{`0})
  - Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ReportBatchFailures
  langs:
  - csharp
  - vb
  name: SqsEventProcessor<TBody>
  nameWithType: SqsEventProcessor<TBody>
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>
  type: Class
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SqsEventProcessor
    path: ../src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
    startLine: 26
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Sqs
  namespace: Innovt.Cloud.AWS.Lambda.Sqs
  summary: >-
    If you're using this feature with a FIFO queue, your function should stop processing messages after the first

    failure and return all failed and unprocessed messages in batchItemFailures. This helps preserve the ordering of

    messages in your queue.

    The abstract SqsEventProcessor class serves as the base class for processing Amazon SQS events in AWS Lambda

    functions.
  example: []
  syntax:
    content: 'public abstract class SqsEventProcessor<TBody> : EventProcessor<SQSEvent, BatchFailureResponse> where TBody : class'
    typeParameters:
    - id: TBody
      description: ''
    content.vb: Public MustInherit Class SqsEventProcessor(Of TBody As Class) Inherits EventProcessor(Of SQSEvent, BatchFailureResponse)
  inheritance:
  - System.Object
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  - Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}
  inheritedMembers:
  - Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Process(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  - Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EventProcessorActivitySource
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Logger
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Context
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Configuration
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.InitializeLogger(Innovt.Core.CrossCutting.Ioc.IContainer)
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIoc
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.StartBaseActivity(System.String)
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupConfiguration
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIocContainer
  - Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EnrichConfiguration(Microsoft.Extensions.Configuration.ConfigurationBuilder)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  nameWithType.vb: SqsEventProcessor(Of TBody)
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody)
  name.vb: SqsEventProcessor(Of TBody)
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(System.Boolean,System.Boolean)
  commentId: M:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1
  langs:
  - csharp
  - vb
  name: SqsEventProcessor(bool, bool)
  nameWithType: SqsEventProcessor<TBody>.SqsEventProcessor(bool, bool)
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.SqsEventProcessor(bool, bool)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
    startLine: 37
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Sqs
  namespace: Innovt.Cloud.AWS.Lambda.Sqs
  summary: >-
    Initializes a new instance of the SqsEventProcessor class with the specified FIFO queue setting and report batch

    failures setting.
  example: []
  syntax:
    content: protected SqsEventProcessor(bool isFifo = false, bool reportBatchFailures = false)
    parameters:
    - id: isFifo
      type: System.Boolean
      description: A boolean indicating whether the SQS queue is FIFO (First-In-First-Out).
    - id: reportBatchFailures
      type: System.Boolean
      description: A boolean indicating whether to report batch processing failures.
    content.vb: Protected Sub New(isFifo As Boolean = False, reportBatchFailures As Boolean = False)
  overload: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor*
  nameWithType.vb: SqsEventProcessor(Of TBody).New(Boolean, Boolean)
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).New(Boolean, Boolean)
  name.vb: New(Boolean, Boolean)
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(Innovt.Core.CrossCutting.Log.ILogger,System.Boolean,System.Boolean)
  commentId: M:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(Innovt.Core.CrossCutting.Log.ILogger,System.Boolean,System.Boolean)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,System.Boolean,System.Boolean)'
  parent: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1
  langs:
  - csharp
  - vb
  name: SqsEventProcessor(ILogger, bool, bool)
  nameWithType: SqsEventProcessor<TBody>.SqsEventProcessor(ILogger, bool, bool)
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.SqsEventProcessor(Innovt.Core.CrossCutting.Log.ILogger, bool, bool)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
    startLine: 50
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Sqs
  namespace: Innovt.Cloud.AWS.Lambda.Sqs
  summary: >-
    Initializes a new instance of the SqsEventProcessor class with the specified logger, FIFO queue setting, and report

    batch failures setting.
  example: []
  syntax:
    content: protected SqsEventProcessor(ILogger logger, bool isFifo = false, bool reportBatchFailures = false)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger used for logging events and messages.
    - id: isFifo
      type: System.Boolean
      description: A boolean indicating whether the SQS queue is FIFO (First-In-First-Out).
    - id: reportBatchFailures
      type: System.Boolean
      description: A boolean indicating whether to report batch processing failures.
    content.vb: Protected Sub New(logger As ILogger, isFifo As Boolean = False, reportBatchFailures As Boolean = False)
  overload: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor*
  nameWithType.vb: SqsEventProcessor(Of TBody).New(ILogger, Boolean, Boolean)
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).New(Innovt.Core.CrossCutting.Log.ILogger, Boolean, Boolean)
  name.vb: New(ILogger, Boolean, Boolean)
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Core.Serialization.ISerializer,System.Boolean,System.Boolean)
  commentId: M:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Core.Serialization.ISerializer,System.Boolean,System.Boolean)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Core.Serialization.ISerializer,System.Boolean,System.Boolean)'
  parent: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1
  langs:
  - csharp
  - vb
  name: SqsEventProcessor(ILogger, ISerializer, bool, bool)
  nameWithType: SqsEventProcessor<TBody>.SqsEventProcessor(ILogger, ISerializer, bool, bool)
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.SqsEventProcessor(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Core.Serialization.ISerializer, bool, bool)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
    startLine: 65
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Sqs
  namespace: Innovt.Cloud.AWS.Lambda.Sqs
  summary: >-
    Initializes a new instance of the SqsEventProcessor class with the specified logger, serializer, FIFO queue

    setting, and report batch failures setting.
  example: []
  syntax:
    content: protected SqsEventProcessor(ILogger logger, ISerializer serializer, bool isFifo = false, bool reportBatchFailures = false)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger used for logging events and messages.
    - id: serializer
      type: Innovt.Core.Serialization.ISerializer
      description: The serializer used for message deserialization.
    - id: isFifo
      type: System.Boolean
      description: A boolean indicating whether the SQS queue is FIFO (First-In-First-Out).
    - id: reportBatchFailures
      type: System.Boolean
      description: A boolean indicating whether to report batch processing failures.
    content.vb: Protected Sub New(logger As ILogger, serializer As ISerializer, isFifo As Boolean = False, reportBatchFailures As Boolean = False)
  overload: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor*
  nameWithType.vb: SqsEventProcessor(Of TBody).New(ILogger, ISerializer, Boolean, Boolean)
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Core.Serialization.ISerializer, Boolean, Boolean)
  name.vb: New(ILogger, ISerializer, Boolean, Boolean)
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ReportBatchFailures
  commentId: P:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ReportBatchFailures
  id: ReportBatchFailures
  parent: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1
  langs:
  - csharp
  - vb
  name: ReportBatchFailures
  nameWithType: SqsEventProcessor<TBody>.ReportBatchFailures
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.ReportBatchFailures
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ReportBatchFailures
    path: ../src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
    startLine: 74
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Sqs
  namespace: Innovt.Cloud.AWS.Lambda.Sqs
  summary: Gets or sets a boolean indicating whether to report batch processing failures.
  example: []
  syntax:
    content: protected bool ReportBatchFailures { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Property ReportBatchFailures As Boolean
  overload: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ReportBatchFailures*
  nameWithType.vb: SqsEventProcessor(Of TBody).ReportBatchFailures
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).ReportBatchFailures
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  commentId: M:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  id: Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  parent: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1
  langs:
  - csharp
  - vb
  name: Handle(SQSEvent, ILambdaContext)
  nameWithType: SqsEventProcessor<TBody>.Handle(SQSEvent, ILambdaContext)
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.Handle(Amazon.Lambda.SQSEvents.SQSEvent, Amazon.Lambda.Core.ILambdaContext)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Handle
    path: ../src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
    startLine: 92
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Sqs
  namespace: Innovt.Cloud.AWS.Lambda.Sqs
  summary: Handles the processing of an incoming SQSEvent, which may contain multiple SQS event records.
  example: []
  syntax:
    content: protected override Task<BatchFailureResponse> Handle(SQSEvent message, ILambdaContext context)
    parameters:
    - id: message
      type: Amazon.Lambda.SQSEvents.SQSEvent
      description: The SQSEvent containing one or more SQS event records.
    - id: context
      type: Amazon.Lambda.Core.ILambdaContext
      description: The ILambdaContext providing information about the Lambda function's execution environment.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Lambda.BatchFailureResponse}
      description: A Task representing the asynchronous processing operation.
    content.vb: Protected Overrides Function Handle(message As SQSEvent, context As ILambdaContext) As Task(Of BatchFailureResponse)
  overridden: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  overload: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.Handle*
  nameWithType.vb: SqsEventProcessor(Of TBody).Handle(SQSEvent, ILambdaContext)
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).Handle(Amazon.Lambda.SQSEvents.SQSEvent, Amazon.Lambda.Core.ILambdaContext)
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ProcessMessage(Innovt.Cloud.Queue.QueueMessage{`0})
  commentId: M:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ProcessMessage(Innovt.Cloud.Queue.QueueMessage{`0})
  id: ProcessMessage(Innovt.Cloud.Queue.QueueMessage{`0})
  parent: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1
  langs:
  - csharp
  - vb
  name: ProcessMessage(QueueMessage<TBody>)
  nameWithType: SqsEventProcessor<TBody>.ProcessMessage(QueueMessage<TBody>)
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.ProcessMessage(Innovt.Cloud.Queue.QueueMessage<TBody>)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ProcessMessage
    path: ../src/Innovt.Cloud.AWS.Lambda.Sqs/SqsEventProcessor.cs
    startLine: 184
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Sqs
  namespace: Innovt.Cloud.AWS.Lambda.Sqs
  summary: Handles the processing of an individual SQS message.
  example: []
  syntax:
    content: protected abstract Task ProcessMessage(QueueMessage<TBody> message)
    parameters:
    - id: message
      type: Innovt.Cloud.Queue.QueueMessage{{TBody}}
      description: The QueueMessage object containing information about the SQS message.
    return:
      type: System.Threading.Tasks.Task
      description: A Task representing the asynchronous processing operation.
    content.vb: Protected MustOverride Function ProcessMessage(message As QueueMessage(Of TBody)) As Task
  overload: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ProcessMessage*
  nameWithType.vb: SqsEventProcessor(Of TBody).ProcessMessage(QueueMessage(Of TBody))
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).ProcessMessage(Innovt.Cloud.Queue.QueueMessage(Of TBody))
  name.vb: ProcessMessage(QueueMessage(Of TBody))
references:
- uid: Innovt.Cloud.AWS.Lambda.Sqs
  commentId: N:Innovt.Cloud.AWS.Lambda.Sqs
  href: Innovt.html
  name: Innovt.Cloud.AWS.Lambda.Sqs
  nameWithType: Innovt.Cloud.AWS.Lambda.Sqs
  fullName: Innovt.Cloud.AWS.Lambda.Sqs
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda
    name: Lambda
    href: Innovt.Cloud.AWS.Lambda.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda.Sqs
    name: Sqs
    href: Innovt.Cloud.AWS.Lambda.Sqs.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda
    name: Lambda
    href: Innovt.Cloud.AWS.Lambda.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda.Sqs
    name: Sqs
    href: Innovt.Cloud.AWS.Lambda.Sqs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  commentId: T:Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  parent: Innovt.Cloud.AWS.Lambda
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html
  name: BaseEventProcessor
  nameWithType: BaseEventProcessor
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
- uid: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}
  commentId: T:Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}
  parent: Innovt.Cloud.AWS.Lambda
  definition: Innovt.Cloud.AWS.Lambda.EventProcessor`2
  href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html
  name: EventProcessor<SQSEvent, BatchFailureResponse>
  nameWithType: EventProcessor<SQSEvent, BatchFailureResponse>
  fullName: Innovt.Cloud.AWS.Lambda.EventProcessor<Amazon.Lambda.SQSEvents.SQSEvent, Innovt.Cloud.AWS.Lambda.BatchFailureResponse>
  nameWithType.vb: EventProcessor(Of SQSEvent, BatchFailureResponse)
  fullName.vb: Innovt.Cloud.AWS.Lambda.EventProcessor(Of Amazon.Lambda.SQSEvents.SQSEvent, Innovt.Cloud.AWS.Lambda.BatchFailureResponse)
  name.vb: EventProcessor(Of SQSEvent, BatchFailureResponse)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2
    name: EventProcessor
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html
  - name: <
  - uid: Amazon.Lambda.SQSEvents.SQSEvent
    name: SQSEvent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Innovt.Cloud.AWS.Lambda.BatchFailureResponse
    name: BatchFailureResponse
    href: Innovt.Cloud.AWS.Lambda.BatchFailureResponse.html
  - name: '>'
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2
    name: EventProcessor
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Amazon.Lambda.SQSEvents.SQSEvent
    name: SQSEvent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Innovt.Cloud.AWS.Lambda.BatchFailureResponse
    name: BatchFailureResponse
    href: Innovt.Cloud.AWS.Lambda.BatchFailureResponse.html
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Process(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  commentId: M:Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Process(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  parent: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}
  definition: Innovt.Cloud.AWS.Lambda.EventProcessor`2.Process(`0,Amazon.Lambda.Core.ILambdaContext)
  href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Process__0_Amazon_Lambda_Core_ILambdaContext_
  name: Process(SQSEvent, ILambdaContext)
  nameWithType: EventProcessor<SQSEvent, BatchFailureResponse>.Process(SQSEvent, ILambdaContext)
  fullName: Innovt.Cloud.AWS.Lambda.EventProcessor<Amazon.Lambda.SQSEvents.SQSEvent, Innovt.Cloud.AWS.Lambda.BatchFailureResponse>.Process(Amazon.Lambda.SQSEvents.SQSEvent, Amazon.Lambda.Core.ILambdaContext)
  nameWithType.vb: EventProcessor(Of SQSEvent, BatchFailureResponse).Process(SQSEvent, ILambdaContext)
  fullName.vb: Innovt.Cloud.AWS.Lambda.EventProcessor(Of Amazon.Lambda.SQSEvents.SQSEvent, Innovt.Cloud.AWS.Lambda.BatchFailureResponse).Process(Amazon.Lambda.SQSEvents.SQSEvent, Amazon.Lambda.Core.ILambdaContext)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Process(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
    name: Process
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Process__0_Amazon_Lambda_Core_ILambdaContext_
  - name: (
  - uid: Amazon.Lambda.SQSEvents.SQSEvent
    name: SQSEvent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Amazon.Lambda.Core.ILambdaContext
    name: ILambdaContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Process(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
    name: Process
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Process__0_Amazon_Lambda_Core_ILambdaContext_
  - name: (
  - uid: Amazon.Lambda.SQSEvents.SQSEvent
    name: SQSEvent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Amazon.Lambda.Core.ILambdaContext
    name: ILambdaContext
    isExternal: true
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  commentId: M:Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
  parent: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}
  definition: Innovt.Cloud.AWS.Lambda.EventProcessor`2.Handle(`0,Amazon.Lambda.Core.ILambdaContext)
  href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Handle__0_Amazon_Lambda_Core_ILambdaContext_
  name: Handle(SQSEvent, ILambdaContext)
  nameWithType: EventProcessor<SQSEvent, BatchFailureResponse>.Handle(SQSEvent, ILambdaContext)
  fullName: Innovt.Cloud.AWS.Lambda.EventProcessor<Amazon.Lambda.SQSEvents.SQSEvent, Innovt.Cloud.AWS.Lambda.BatchFailureResponse>.Handle(Amazon.Lambda.SQSEvents.SQSEvent, Amazon.Lambda.Core.ILambdaContext)
  nameWithType.vb: EventProcessor(Of SQSEvent, BatchFailureResponse).Handle(SQSEvent, ILambdaContext)
  fullName.vb: Innovt.Cloud.AWS.Lambda.EventProcessor(Of Amazon.Lambda.SQSEvents.SQSEvent, Innovt.Cloud.AWS.Lambda.BatchFailureResponse).Handle(Amazon.Lambda.SQSEvents.SQSEvent, Amazon.Lambda.Core.ILambdaContext)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
    name: Handle
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Handle__0_Amazon_Lambda_Core_ILambdaContext_
  - name: (
  - uid: Amazon.Lambda.SQSEvents.SQSEvent
    name: SQSEvent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Amazon.Lambda.Core.ILambdaContext
    name: ILambdaContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor{Amazon.Lambda.SQSEvents.SQSEvent,Innovt.Cloud.AWS.Lambda.BatchFailureResponse}.Handle(Amazon.Lambda.SQSEvents.SQSEvent,Amazon.Lambda.Core.ILambdaContext)
    name: Handle
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Handle__0_Amazon_Lambda_Core_ILambdaContext_
  - name: (
  - uid: Amazon.Lambda.SQSEvents.SQSEvent
    name: SQSEvent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Amazon.Lambda.Core.ILambdaContext
    name: ILambdaContext
    isExternal: true
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EventProcessorActivitySource
  commentId: F:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EventProcessorActivitySource
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_EventProcessorActivitySource
  name: EventProcessorActivitySource
  nameWithType: BaseEventProcessor.EventProcessorActivitySource
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EventProcessorActivitySource
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Logger
  commentId: P:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Logger
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_Logger
  name: Logger
  nameWithType: BaseEventProcessor.Logger
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Logger
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Context
  commentId: P:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Context
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_Context
  name: Context
  nameWithType: BaseEventProcessor.Context
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Context
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Configuration
  commentId: P:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Configuration
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_Configuration
  name: Configuration
  nameWithType: BaseEventProcessor.Configuration
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.Configuration
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.InitializeLogger(Innovt.Core.CrossCutting.Ioc.IContainer)
  commentId: M:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.InitializeLogger(Innovt.Core.CrossCutting.Ioc.IContainer)
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_InitializeLogger_Innovt_Core_CrossCutting_Ioc_IContainer_
  name: InitializeLogger(IContainer)
  nameWithType: BaseEventProcessor.InitializeLogger(IContainer)
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.InitializeLogger(Innovt.Core.CrossCutting.Ioc.IContainer)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.InitializeLogger(Innovt.Core.CrossCutting.Ioc.IContainer)
    name: InitializeLogger
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_InitializeLogger_Innovt_Core_CrossCutting_Ioc_IContainer_
  - name: (
  - uid: Innovt.Core.CrossCutting.Ioc.IContainer
    name: IContainer
    href: Innovt.Core.CrossCutting.Ioc.IContainer.html
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.InitializeLogger(Innovt.Core.CrossCutting.Ioc.IContainer)
    name: InitializeLogger
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_InitializeLogger_Innovt_Core_CrossCutting_Ioc_IContainer_
  - name: (
  - uid: Innovt.Core.CrossCutting.Ioc.IContainer
    name: IContainer
    href: Innovt.Core.CrossCutting.Ioc.IContainer.html
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIoc
  commentId: M:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIoc
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupIoc
  name: SetupIoc()
  nameWithType: BaseEventProcessor.SetupIoc()
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIoc()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIoc
    name: SetupIoc
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupIoc
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIoc
    name: SetupIoc
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupIoc
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.StartBaseActivity(System.String)
  commentId: M:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.StartBaseActivity(System.String)
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  isExternal: true
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_StartBaseActivity_System_String_
  name: StartBaseActivity(string)
  nameWithType: BaseEventProcessor.StartBaseActivity(string)
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.StartBaseActivity(string)
  nameWithType.vb: BaseEventProcessor.StartBaseActivity(String)
  fullName.vb: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.StartBaseActivity(String)
  name.vb: StartBaseActivity(String)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.StartBaseActivity(System.String)
    name: StartBaseActivity
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_StartBaseActivity_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.StartBaseActivity(System.String)
    name: StartBaseActivity
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_StartBaseActivity_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupConfiguration
  commentId: M:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupConfiguration
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupConfiguration
  name: SetupConfiguration()
  nameWithType: BaseEventProcessor.SetupConfiguration()
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupConfiguration()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupConfiguration
    name: SetupConfiguration
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupConfiguration
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupConfiguration
    name: SetupConfiguration
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupConfiguration
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIocContainer
  commentId: M:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIocContainer
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupIocContainer
  name: SetupIocContainer()
  nameWithType: BaseEventProcessor.SetupIocContainer()
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIocContainer()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIocContainer
    name: SetupIocContainer
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupIocContainer
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.SetupIocContainer
    name: SetupIocContainer
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_SetupIocContainer
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EnrichConfiguration(Microsoft.Extensions.Configuration.ConfigurationBuilder)
  commentId: M:Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EnrichConfiguration(Microsoft.Extensions.Configuration.ConfigurationBuilder)
  parent: Innovt.Cloud.AWS.Lambda.BaseEventProcessor
  isExternal: true
  href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_EnrichConfiguration_Microsoft_Extensions_Configuration_ConfigurationBuilder_
  name: EnrichConfiguration(ConfigurationBuilder)
  nameWithType: BaseEventProcessor.EnrichConfiguration(ConfigurationBuilder)
  fullName: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EnrichConfiguration(Microsoft.Extensions.Configuration.ConfigurationBuilder)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EnrichConfiguration(Microsoft.Extensions.Configuration.ConfigurationBuilder)
    name: EnrichConfiguration
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_EnrichConfiguration_Microsoft_Extensions_Configuration_ConfigurationBuilder_
  - name: (
  - uid: Microsoft.Extensions.Configuration.ConfigurationBuilder
    name: ConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.configurationbuilder
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.EnrichConfiguration(Microsoft.Extensions.Configuration.ConfigurationBuilder)
    name: EnrichConfiguration
    href: Innovt.Cloud.AWS.Lambda.BaseEventProcessor.html#Innovt_Cloud_AWS_Lambda_BaseEventProcessor_EnrichConfiguration_Microsoft_Extensions_Configuration_ConfigurationBuilder_
  - name: (
  - uid: Microsoft.Extensions.Configuration.ConfigurationBuilder
    name: ConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.configurationbuilder
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Cloud.AWS.Lambda
  commentId: N:Innovt.Cloud.AWS.Lambda
  href: Innovt.html
  name: Innovt.Cloud.AWS.Lambda
  nameWithType: Innovt.Cloud.AWS.Lambda
  fullName: Innovt.Cloud.AWS.Lambda
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda
    name: Lambda
    href: Innovt.Cloud.AWS.Lambda.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda
    name: Lambda
    href: Innovt.Cloud.AWS.Lambda.html
- uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2
  commentId: T:Innovt.Cloud.AWS.Lambda.EventProcessor`2
  href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html
  name: EventProcessor<T, TResult>
  nameWithType: EventProcessor<T, TResult>
  fullName: Innovt.Cloud.AWS.Lambda.EventProcessor<T, TResult>
  nameWithType.vb: EventProcessor(Of T, TResult)
  fullName.vb: Innovt.Cloud.AWS.Lambda.EventProcessor(Of T, TResult)
  name.vb: EventProcessor(Of T, TResult)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2
    name: EventProcessor
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2
    name: EventProcessor
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2.Process(`0,Amazon.Lambda.Core.ILambdaContext)
  commentId: M:Innovt.Cloud.AWS.Lambda.EventProcessor`2.Process(`0,Amazon.Lambda.Core.ILambdaContext)
  isExternal: true
  href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Process__0_Amazon_Lambda_Core_ILambdaContext_
  name: Process(T, ILambdaContext)
  nameWithType: EventProcessor<T, TResult>.Process(T, ILambdaContext)
  fullName: Innovt.Cloud.AWS.Lambda.EventProcessor<T, TResult>.Process(T, Amazon.Lambda.Core.ILambdaContext)
  nameWithType.vb: EventProcessor(Of T, TResult).Process(T, ILambdaContext)
  fullName.vb: Innovt.Cloud.AWS.Lambda.EventProcessor(Of T, TResult).Process(T, Amazon.Lambda.Core.ILambdaContext)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2.Process(`0,Amazon.Lambda.Core.ILambdaContext)
    name: Process
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Process__0_Amazon_Lambda_Core_ILambdaContext_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Amazon.Lambda.Core.ILambdaContext
    name: ILambdaContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2.Process(`0,Amazon.Lambda.Core.ILambdaContext)
    name: Process
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Process__0_Amazon_Lambda_Core_ILambdaContext_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Amazon.Lambda.Core.ILambdaContext
    name: ILambdaContext
    isExternal: true
  - name: )
- uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2.Handle(`0,Amazon.Lambda.Core.ILambdaContext)
  commentId: M:Innovt.Cloud.AWS.Lambda.EventProcessor`2.Handle(`0,Amazon.Lambda.Core.ILambdaContext)
  isExternal: true
  href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Handle__0_Amazon_Lambda_Core_ILambdaContext_
  name: Handle(T, ILambdaContext)
  nameWithType: EventProcessor<T, TResult>.Handle(T, ILambdaContext)
  fullName: Innovt.Cloud.AWS.Lambda.EventProcessor<T, TResult>.Handle(T, Amazon.Lambda.Core.ILambdaContext)
  nameWithType.vb: EventProcessor(Of T, TResult).Handle(T, ILambdaContext)
  fullName.vb: Innovt.Cloud.AWS.Lambda.EventProcessor(Of T, TResult).Handle(T, Amazon.Lambda.Core.ILambdaContext)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2.Handle(`0,Amazon.Lambda.Core.ILambdaContext)
    name: Handle
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Handle__0_Amazon_Lambda_Core_ILambdaContext_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Amazon.Lambda.Core.ILambdaContext
    name: ILambdaContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.Lambda.EventProcessor`2.Handle(`0,Amazon.Lambda.Core.ILambdaContext)
    name: Handle
    href: Innovt.Cloud.AWS.Lambda.EventProcessor-2.html#Innovt_Cloud_AWS_Lambda_EventProcessor_2_Handle__0_Amazon_Lambda_Core_ILambdaContext_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Amazon.Lambda.Core.ILambdaContext
    name: ILambdaContext
    isExternal: true
  - name: )
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.#ctor
  href: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor-1.html#Innovt_Cloud_AWS_Lambda_Sqs_SqsEventProcessor_1__ctor_System_Boolean_System_Boolean_
  name: SqsEventProcessor
  nameWithType: SqsEventProcessor<TBody>.SqsEventProcessor
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.SqsEventProcessor
  nameWithType.vb: SqsEventProcessor(Of TBody).New
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Core.CrossCutting.Log.ILogger
  commentId: T:Innovt.Core.CrossCutting.Log.ILogger
  parent: Innovt.Core.CrossCutting.Log
  href: Innovt.Core.CrossCutting.Log.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Innovt.Core.CrossCutting.Log.ILogger
- uid: Innovt.Core.CrossCutting.Log
  commentId: N:Innovt.Core.CrossCutting.Log
  href: Innovt.html
  name: Innovt.Core.CrossCutting.Log
  nameWithType: Innovt.Core.CrossCutting.Log
  fullName: Innovt.Core.CrossCutting.Log
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
- uid: Innovt.Core.Serialization.ISerializer
  commentId: T:Innovt.Core.Serialization.ISerializer
  parent: Innovt.Core.Serialization
  href: Innovt.Core.Serialization.ISerializer.html
  name: ISerializer
  nameWithType: ISerializer
  fullName: Innovt.Core.Serialization.ISerializer
- uid: Innovt.Core.Serialization
  commentId: N:Innovt.Core.Serialization
  href: Innovt.html
  name: Innovt.Core.Serialization
  nameWithType: Innovt.Core.Serialization
  fullName: Innovt.Core.Serialization
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Serialization
    name: Serialization
    href: Innovt.Core.Serialization.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Serialization
    name: Serialization
    href: Innovt.Core.Serialization.html
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ReportBatchFailures*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ReportBatchFailures
  href: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor-1.html#Innovt_Cloud_AWS_Lambda_Sqs_SqsEventProcessor_1_ReportBatchFailures
  name: ReportBatchFailures
  nameWithType: SqsEventProcessor<TBody>.ReportBatchFailures
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.ReportBatchFailures
  nameWithType.vb: SqsEventProcessor(Of TBody).ReportBatchFailures
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).ReportBatchFailures
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.Handle*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.Handle
  href: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor-1.html#Innovt_Cloud_AWS_Lambda_Sqs_SqsEventProcessor_1_Handle_Amazon_Lambda_SQSEvents_SQSEvent_Amazon_Lambda_Core_ILambdaContext_
  name: Handle
  nameWithType: SqsEventProcessor<TBody>.Handle
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.Handle
  nameWithType.vb: SqsEventProcessor(Of TBody).Handle
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).Handle
- uid: Amazon.Lambda.SQSEvents.SQSEvent
  commentId: T:Amazon.Lambda.SQSEvents.SQSEvent
  parent: Amazon.Lambda.SQSEvents
  isExternal: true
  name: SQSEvent
  nameWithType: SQSEvent
  fullName: Amazon.Lambda.SQSEvents.SQSEvent
- uid: Amazon.Lambda.Core.ILambdaContext
  commentId: T:Amazon.Lambda.Core.ILambdaContext
  parent: Amazon.Lambda.Core
  isExternal: true
  name: ILambdaContext
  nameWithType: ILambdaContext
  fullName: Amazon.Lambda.Core.ILambdaContext
- uid: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Lambda.BatchFailureResponse}
  commentId: T:System.Threading.Tasks.Task{Innovt.Cloud.AWS.Lambda.BatchFailureResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BatchFailureResponse>
  nameWithType: Task<BatchFailureResponse>
  fullName: System.Threading.Tasks.Task<Innovt.Cloud.AWS.Lambda.BatchFailureResponse>
  nameWithType.vb: Task(Of BatchFailureResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Cloud.AWS.Lambda.BatchFailureResponse)
  name.vb: Task(Of BatchFailureResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Cloud.AWS.Lambda.BatchFailureResponse
    name: BatchFailureResponse
    href: Innovt.Cloud.AWS.Lambda.BatchFailureResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Cloud.AWS.Lambda.BatchFailureResponse
    name: BatchFailureResponse
    href: Innovt.Cloud.AWS.Lambda.BatchFailureResponse.html
  - name: )
- uid: Amazon.Lambda.SQSEvents
  commentId: N:Amazon.Lambda.SQSEvents
  isExternal: true
  name: Amazon.Lambda.SQSEvents
  nameWithType: Amazon.Lambda.SQSEvents
  fullName: Amazon.Lambda.SQSEvents
  spec.csharp:
  - uid: Amazon
    name: Amazon
    isExternal: true
  - name: .
  - uid: Amazon.Lambda
    name: Lambda
    isExternal: true
  - name: .
  - uid: Amazon.Lambda.SQSEvents
    name: SQSEvents
    isExternal: true
  spec.vb:
  - uid: Amazon
    name: Amazon
    isExternal: true
  - name: .
  - uid: Amazon.Lambda
    name: Lambda
    isExternal: true
  - name: .
  - uid: Amazon.Lambda.SQSEvents
    name: SQSEvents
    isExternal: true
- uid: Amazon.Lambda.Core
  commentId: N:Amazon.Lambda.Core
  isExternal: true
  name: Amazon.Lambda.Core
  nameWithType: Amazon.Lambda.Core
  fullName: Amazon.Lambda.Core
  spec.csharp:
  - uid: Amazon
    name: Amazon
    isExternal: true
  - name: .
  - uid: Amazon.Lambda
    name: Lambda
    isExternal: true
  - name: .
  - uid: Amazon.Lambda.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Amazon
    name: Amazon
    isExternal: true
  - name: .
  - uid: Amazon.Lambda
    name: Lambda
    isExternal: true
  - name: .
  - uid: Amazon.Lambda.Core
    name: Core
    isExternal: true
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ProcessMessage*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor`1.ProcessMessage
  href: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor-1.html#Innovt_Cloud_AWS_Lambda_Sqs_SqsEventProcessor_1_ProcessMessage_Innovt_Cloud_Queue_QueueMessage__0__
  name: ProcessMessage
  nameWithType: SqsEventProcessor<TBody>.ProcessMessage
  fullName: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor<TBody>.ProcessMessage
  nameWithType.vb: SqsEventProcessor(Of TBody).ProcessMessage
  fullName.vb: Innovt.Cloud.AWS.Lambda.Sqs.SqsEventProcessor(Of TBody).ProcessMessage
- uid: Innovt.Cloud.Queue.QueueMessage{{TBody}}
  commentId: T:Innovt.Cloud.Queue.QueueMessage{`0}
  parent: Innovt.Cloud.Queue
  definition: Innovt.Cloud.Queue.QueueMessage`1
  href: Innovt.Cloud.Queue.QueueMessage-1.html
  name: QueueMessage<TBody>
  nameWithType: QueueMessage<TBody>
  fullName: Innovt.Cloud.Queue.QueueMessage<TBody>
  nameWithType.vb: QueueMessage(Of TBody)
  fullName.vb: Innovt.Cloud.Queue.QueueMessage(Of TBody)
  name.vb: QueueMessage(Of TBody)
  spec.csharp:
  - uid: Innovt.Cloud.Queue.QueueMessage`1
    name: QueueMessage
    href: Innovt.Cloud.Queue.QueueMessage-1.html
  - name: <
  - name: TBody
  - name: '>'
  spec.vb:
  - uid: Innovt.Cloud.Queue.QueueMessage`1
    name: QueueMessage
    href: Innovt.Cloud.Queue.QueueMessage-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TBody
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Innovt.Cloud.Queue.QueueMessage`1
  commentId: T:Innovt.Cloud.Queue.QueueMessage`1
  href: Innovt.Cloud.Queue.QueueMessage-1.html
  name: QueueMessage<T>
  nameWithType: QueueMessage<T>
  fullName: Innovt.Cloud.Queue.QueueMessage<T>
  nameWithType.vb: QueueMessage(Of T)
  fullName.vb: Innovt.Cloud.Queue.QueueMessage(Of T)
  name.vb: QueueMessage(Of T)
  spec.csharp:
  - uid: Innovt.Cloud.Queue.QueueMessage`1
    name: QueueMessage
    href: Innovt.Cloud.Queue.QueueMessage-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Innovt.Cloud.Queue.QueueMessage`1
    name: QueueMessage
    href: Innovt.Cloud.Queue.QueueMessage-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Cloud.Queue
  commentId: N:Innovt.Cloud.Queue
  href: Innovt.html
  name: Innovt.Cloud.Queue
  nameWithType: Innovt.Cloud.Queue
  fullName: Innovt.Cloud.Queue
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.Queue
    name: Queue
    href: Innovt.Cloud.Queue.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.Queue
    name: Queue
    href: Innovt.Cloud.Queue.html
