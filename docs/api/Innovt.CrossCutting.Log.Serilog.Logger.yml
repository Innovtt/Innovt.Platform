### YamlMime:ManagedReference
items:
- uid: Innovt.CrossCutting.Log.Serilog.Logger
  commentId: T:Innovt.CrossCutting.Log.Serilog.Logger
  id: Logger
  parent: Innovt.CrossCutting.Log.Serilog
  children:
  - Innovt.CrossCutting.Log.Serilog.Logger.#ctor
  - Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.Core.ILogEventEnricher,System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.Core.ILogEventEnricher[],System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.LoggerConfiguration,System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.#ctor(System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.BeginScope``1(``0)
  - Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception,System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception,System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.DefaultOutputTemplate
  - Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception,System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception,System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Error(System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Error(System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception,System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception,System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception,System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception,System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Info(System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Info(System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  - Innovt.CrossCutting.Log.Serilog.Logger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  - Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception,System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception,System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception,System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception,System.String,System.Object[])
  - Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.String)
  - Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Logger
  fullName: Innovt.CrossCutting.Log.Serilog.Logger
  type: Class
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Logger
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 17
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Implementation of <xref href="Innovt.Core.CrossCutting.Log.ILogger" data-throw-if-not-resolved="false"></xref> and <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> using Serilog.
  example: []
  syntax:
    content: 'public class Logger : ILogger, ILogger'
    content.vb: Public Class Logger Implements ILogger, ILogger
  inheritance:
  - System.Object
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger
  - Microsoft.Extensions.Logging.ILogger
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.CrossCutting.Log.Serilog.Logger.DefaultOutputTemplate
  commentId: F:Innovt.CrossCutting.Log.Serilog.Logger.DefaultOutputTemplate
  id: DefaultOutputTemplate
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: DefaultOutputTemplate
  nameWithType: Logger.DefaultOutputTemplate
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.DefaultOutputTemplate
  type: Field
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DefaultOutputTemplate
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 22
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: The default output template for log messages.
  example: []
  syntax:
    content: public const string DefaultOutputTemplate = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\n"
    return:
      type: System.String
    content.vb: Public Const DefaultOutputTemplate As String = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }" & vbLf
- uid: Innovt.CrossCutting.Log.Serilog.Logger.#ctor
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.#ctor
  id: '#ctor'
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Logger()
  nameWithType: Logger.Logger()
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Logger()
  type: Constructor
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 30
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Initializes a new instance of the <xref href="Innovt.CrossCutting.Log.Serilog.Logger" data-throw-if-not-resolved="false"></xref> class using the default output template and Console sink.
  example: []
  syntax:
    content: public Logger()
    content.vb: Public Sub New()
  overload: Innovt.CrossCutting.Log.Serilog.Logger.#ctor*
  nameWithType.vb: Logger.New()
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.New()
  name.vb: New()
- uid: Innovt.CrossCutting.Log.Serilog.Logger.#ctor(System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Logger(string)
  nameWithType: Logger.Logger(string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Logger(string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 38
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Initializes a new instance of the <xref href="Innovt.CrossCutting.Log.Serilog.Logger" data-throw-if-not-resolved="false"></xref> class with a specified console output template.
  example: []
  syntax:
    content: public Logger(string consoleOutputTemplate = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\n")
    parameters:
    - id: consoleOutputTemplate
      type: System.String
      description: The console output template for log messages.
    content.vb: Public Sub New(consoleOutputTemplate As String = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }" & vbLf)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.#ctor*
  nameWithType.vb: Logger.New(String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.New(String)
  name.vb: New(String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.Core.ILogEventEnricher,System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.Core.ILogEventEnricher,System.String)
  id: '#ctor(Serilog.Core.ILogEventEnricher,System.String)'
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Logger(ILogEventEnricher, string)
  nameWithType: Logger.Logger(ILogEventEnricher, string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Logger(Serilog.Core.ILogEventEnricher, string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 50
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: >-
    Initializes a new instance of the <xref href="Innovt.CrossCutting.Log.Serilog.Logger" data-throw-if-not-resolved="false"></xref> class with a specified log event enricher and console

    output template.
  example: []
  syntax:
    content: public Logger(ILogEventEnricher logEventEnricher, string consoleOutputTemplate = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\n")
    parameters:
    - id: logEventEnricher
      type: Serilog.Core.ILogEventEnricher
      description: The log event enricher to be applied.
    - id: consoleOutputTemplate
      type: System.String
      description: The console output template for log messages.
    content.vb: Public Sub New(logEventEnricher As ILogEventEnricher, consoleOutputTemplate As String = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }" & vbLf)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">logEventEnricher</code> is null.
  nameWithType.vb: Logger.New(ILogEventEnricher, String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.New(Serilog.Core.ILogEventEnricher, String)
  name.vb: New(ILogEventEnricher, String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.Core.ILogEventEnricher[],System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.Core.ILogEventEnricher[],System.String)
  id: '#ctor(Serilog.Core.ILogEventEnricher[],System.String)'
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Logger(ILogEventEnricher[], string)
  nameWithType: Logger.Logger(ILogEventEnricher[], string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Logger(Serilog.Core.ILogEventEnricher[], string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 63
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: >-
    Initializes a new instance of the <xref href="Innovt.CrossCutting.Log.Serilog.Logger" data-throw-if-not-resolved="false"></xref> class with specified log event enrichers and console output

    template.
  example: []
  syntax:
    content: public Logger(ILogEventEnricher[] logEventEnricher, string consoleOutputTemplate = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\n")
    parameters:
    - id: logEventEnricher
      type: Serilog.Core.ILogEventEnricher[]
      description: The log event enrichers to be applied.
    - id: consoleOutputTemplate
      type: System.String
      description: The console output template for log messages.
    content.vb: Public Sub New(logEventEnricher As ILogEventEnricher(), consoleOutputTemplate As String = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }" & vbLf)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">logEventEnricher</code> is null.
  nameWithType.vb: Logger.New(ILogEventEnricher(), String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.New(Serilog.Core.ILogEventEnricher(), String)
  name.vb: New(ILogEventEnricher(), String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.LoggerConfiguration,System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.#ctor(Serilog.LoggerConfiguration,System.String)
  id: '#ctor(Serilog.LoggerConfiguration,System.String)'
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Logger(LoggerConfiguration, string)
  nameWithType: Logger.Logger(LoggerConfiguration, string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Logger(Serilog.LoggerConfiguration, string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 77
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: >-
    Initializes a new instance of the <xref href="Innovt.CrossCutting.Log.Serilog.Logger" data-throw-if-not-resolved="false"></xref> class with a specified configuration and console output

    template.
  example: []
  syntax:
    content: public Logger(LoggerConfiguration configuration, string consoleOutputTemplate = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }\n")
    parameters:
    - id: configuration
      type: Serilog.LoggerConfiguration
      description: The Serilog logger configuration.
    - id: consoleOutputTemplate
      type: System.String
      description: The console output template for log messages.
    content.vb: Public Sub New(configuration As LoggerConfiguration, consoleOutputTemplate As String = "{ {timestamp:@t, ..rest(), message:@m, eventid:@i, Exception:@x} }" & vbLf)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">configuration</code> is null.
  nameWithType.vb: Logger.New(LoggerConfiguration, String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.New(Serilog.LoggerConfiguration, String)
  name.vb: New(LoggerConfiguration, String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.String)
  id: Debug(System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Debug(string)
  nameWithType: Logger.Debug(string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Debug(string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Debug
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 88
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a debug log message.
  example: []
  syntax:
    content: public void Debug(string message)
    parameters:
    - id: message
      type: System.String
      description: The log message.
    content.vb: Public Sub Debug(message As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Debug*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String)
  nameWithType.vb: Logger.Debug(String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Debug(String)
  name.vb: Debug(String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.String,System.Object[])
  id: Debug(System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Debug(string, params object[])
  nameWithType: Logger.Debug(string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Debug(string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Debug
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 101
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a debug log message using a message template and additional property values.
  example: []
  syntax:
    content: public void Debug(string messageTemplate, params object[] propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Debug(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Debug*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String,System.Object[])
  nameWithType.vb: Logger.Debug(String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Debug(String, ParamArray Object())
  name.vb: Debug(String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception,System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception,System.String)
  id: Debug(System.Exception,System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Debug(Exception, string)
  nameWithType: Logger.Debug(Exception, string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception, string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Debug
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 115
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a debug log message with an exception and a message template.
  example: []
  syntax:
    content: public void Debug(Exception exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    content.vb: Public Sub Debug(exception As Exception, messageTemplate As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Debug*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String)
  nameWithType.vb: Logger.Debug(Exception, String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception, String)
  name.vb: Debug(Exception, String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception,System.String,System.Object[])
  id: Debug(System.Exception,System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Debug(Exception, string, params object[])
  nameWithType: Logger.Debug(Exception, string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception, string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Debug
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 130
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a debug log message with an exception, a message template, and additional property values.
  example: []
  syntax:
    content: public void Debug(Exception exception, string messageTemplate, params object[] propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Debug(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Debug*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String,System.Object[])
  nameWithType.vb: Logger.Debug(Exception, String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Debug(System.Exception, String, ParamArray Object())
  name.vb: Debug(Exception, String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Error(System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Error(System.String)
  id: Error(System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Error(string)
  nameWithType: Logger.Error(string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Error(string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Error
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 142
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes an error log message.
  example: []
  syntax:
    content: public void Error(string message)
    parameters:
    - id: message
      type: System.String
      description: The log message.
    content.vb: Public Sub [Error](message As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Error*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Error(System.String)
  nameWithType.vb: Logger.Error(String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Error(String)
  name.vb: Error(String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Error(System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Error(string, params object[])
  nameWithType: Logger.Error(string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Error(string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Error
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 155
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes an error log message using a message template and additional property values.
  example: []
  syntax:
    content: public void Error(string messageTemplate, params object[] propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub [Error](messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Error*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Error(System.String,System.Object[])
  nameWithType.vb: Logger.Error(String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Error(String, ParamArray Object())
  name.vb: Error(String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception,System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception,System.String)
  id: Error(System.Exception,System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Error(Exception, string)
  nameWithType: Logger.Error(Exception, string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception, string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Error
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 168
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes an error log message with an exception and a message template.
  example: []
  syntax:
    content: public void Error(Exception exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    content.vb: Public Sub [Error](exception As Exception, messageTemplate As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Error*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String)
  nameWithType.vb: Logger.Error(Exception, String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception, String)
  name.vb: Error(Exception, String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception,System.String,System.Object[])
  id: Error(System.Exception,System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Error(Exception, string, params object[])
  nameWithType: Logger.Error(Exception, string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception, string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Error
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 183
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes an error log message with an exception, a message template, and additional property values.
  example: []
  syntax:
    content: public void Error(Exception exception, string messageTemplate, params object[] propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub [Error](exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Error*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String,System.Object[])
  nameWithType.vb: Logger.Error(Exception, String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Error(System.Exception, String, ParamArray Object())
  name.vb: Error(Exception, String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.String)
  id: Fatal(System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Fatal(string)
  nameWithType: Logger.Fatal(string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Fatal
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 195
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a fatal log message.
  example: []
  syntax:
    content: public void Fatal(string message)
    parameters:
    - id: message
      type: System.String
      description: The log message.
    content.vb: Public Sub Fatal(message As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Fatal*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String)
  nameWithType.vb: Logger.Fatal(String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(String)
  name.vb: Fatal(String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.String,System.Object[])
  id: Fatal(System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Fatal(string, params object[])
  nameWithType: Logger.Fatal(string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Fatal
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 209
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a fatal log message using a message template and additional property values.
  example: []
  syntax:
    content: public void Fatal(string messageTemplate, params object[] propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Fatal(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Fatal*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String,System.Object[])
  nameWithType.vb: Logger.Fatal(String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(String, ParamArray Object())
  name.vb: Fatal(String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception,System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception,System.String)
  id: Fatal(System.Exception,System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Fatal(Exception, string)
  nameWithType: Logger.Fatal(Exception, string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception, string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Fatal
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 222
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a fatal log message with an exception and a message template.
  example: []
  syntax:
    content: public void Fatal(Exception exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    content.vb: Public Sub Fatal(exception As Exception, messageTemplate As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Fatal*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String)
  nameWithType.vb: Logger.Fatal(Exception, String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception, String)
  name.vb: Fatal(Exception, String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception,System.String,System.Object[])
  id: Fatal(System.Exception,System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Fatal(Exception, string, params object[])
  nameWithType: Logger.Fatal(Exception, string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception, string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Fatal
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 236
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a fatal log message with an exception, a message template, and additional property values.
  example: []
  syntax:
    content: public void Fatal(Exception exception, string messageTemplate, params object[] propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Fatal(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Fatal*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String,System.Object[])
  nameWithType.vb: Logger.Fatal(Exception, String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Fatal(System.Exception, String, ParamArray Object())
  name.vb: Fatal(Exception, String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Info(System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Info(System.String)
  id: Info(System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Info(string)
  nameWithType: Logger.Info(string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Info(string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Info
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 248
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes an informational log message.
  example: []
  syntax:
    content: public void Info(string message)
    parameters:
    - id: message
      type: System.String
      description: The log message.
    content.vb: Public Sub Info(message As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Info*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Info(System.String)
  nameWithType.vb: Logger.Info(String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Info(String)
  name.vb: Info(String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Info(System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Info(string, params object[])
  nameWithType: Logger.Info(string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Info(string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Info
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 261
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes an informational log message using a message template and additional property values.
  example: []
  syntax:
    content: public void Info(string messageTemplate, params object[] propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Info(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Info*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Info(System.String,System.Object[])
  nameWithType.vb: Logger.Info(String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Info(String, ParamArray Object())
  name.vb: Info(String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception,System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception,System.String)
  id: Info(System.Exception,System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Info(Exception, string)
  nameWithType: Logger.Info(Exception, string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception, string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Info
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 274
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes an informational log message with an exception and a message template.
  example: []
  syntax:
    content: public void Info(Exception exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    content.vb: Public Sub Info(exception As Exception, messageTemplate As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Info*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String)
  nameWithType.vb: Logger.Info(Exception, String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception, String)
  name.vb: Info(Exception, String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception,System.String,System.Object[])
  id: Info(System.Exception,System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Info(Exception, string, params object[])
  nameWithType: Logger.Info(Exception, string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception, string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Info
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 288
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes an informational log message with an exception, a message template, and additional property values.
  example: []
  syntax:
    content: public void Info(Exception exception, string messageTemplate, params object[] propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Info(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Info*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String,System.Object[])
  nameWithType.vb: Logger.Info(Exception, String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Info(System.Exception, String, ParamArray Object())
  name.vb: Info(Exception, String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.String)
  id: Verbose(System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Verbose(string)
  nameWithType: Logger.Verbose(string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Verbose
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 300
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a verbose log message.
  example: []
  syntax:
    content: public void Verbose(string message)
    parameters:
    - id: message
      type: System.String
      description: The log message.
    content.vb: Public Sub Verbose(message As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Verbose*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String)
  nameWithType.vb: Logger.Verbose(String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(String)
  name.vb: Verbose(String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.String,System.Object[])
  id: Verbose(System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Verbose(string, params object[])
  nameWithType: Logger.Verbose(string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Verbose
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 313
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a verbose log message using a message template and additional property values.
  example: []
  syntax:
    content: public void Verbose(string messageTemplate, params object[] propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Verbose(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Verbose*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String,System.Object[])
  nameWithType.vb: Logger.Verbose(String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(String, ParamArray Object())
  name.vb: Verbose(String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception,System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception,System.String)
  id: Verbose(System.Exception,System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Verbose(Exception, string)
  nameWithType: Logger.Verbose(Exception, string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception, string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Verbose
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 326
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a verbose log message with an exception and a message template.
  example: []
  syntax:
    content: public void Verbose(Exception exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    content.vb: Public Sub Verbose(exception As Exception, messageTemplate As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Verbose*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String)
  nameWithType.vb: Logger.Verbose(Exception, String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception, String)
  name.vb: Verbose(Exception, String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception,System.String,System.Object[])
  id: Verbose(System.Exception,System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Verbose(Exception, string, params object[])
  nameWithType: Logger.Verbose(Exception, string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception, string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Verbose
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 340
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a verbose log message with an exception, a message template, and additional property values.
  example: []
  syntax:
    content: public void Verbose(Exception exception, string messageTemplate, params object[] propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Verbose(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Verbose*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String,System.Object[])
  nameWithType.vb: Logger.Verbose(Exception, String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Verbose(System.Exception, String, ParamArray Object())
  name.vb: Verbose(Exception, String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.String)
  id: Warning(System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Warning(string)
  nameWithType: Logger.Warning(string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Warning(string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Warning
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 352
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a warning log message.
  example: []
  syntax:
    content: public void Warning(string message)
    parameters:
    - id: message
      type: System.String
      description: The log message.
    content.vb: Public Sub Warning(message As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Warning*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String)
  nameWithType.vb: Logger.Warning(String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Warning(String)
  name.vb: Warning(String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Warning(string, params object[])
  nameWithType: Logger.Warning(string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Warning(string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Warning
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 365
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a warning log message using a message template and additional property values.
  example: []
  syntax:
    content: public void Warning(string messageTemplate, params object[] propertyValues)
    parameters:
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Warning(messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Warning*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String,System.Object[])
  nameWithType.vb: Logger.Warning(String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Warning(String, ParamArray Object())
  name.vb: Warning(String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception,System.String)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception,System.String)
  id: Warning(System.Exception,System.String)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Warning(Exception, string)
  nameWithType: Logger.Warning(Exception, string)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception, string)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Warning
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 378
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a warning log message with an exception and a message template.
  example: []
  syntax:
    content: public void Warning(Exception exception, string messageTemplate)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    content.vb: Public Sub Warning(exception As Exception, messageTemplate As String)
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Warning*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String)
  nameWithType.vb: Logger.Warning(Exception, String)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception, String)
  name.vb: Warning(Exception, String)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception,System.String,System.Object[])
  id: Warning(System.Exception,System.String,System.Object[])
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Warning(Exception, string, params object[])
  nameWithType: Logger.Warning(Exception, string, params object[])
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception, string, params object[])
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Warning
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 392
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a warning log message with an exception, a message template, and additional property values.
  example: []
  syntax:
    content: public void Warning(Exception exception, string messageTemplate, params object[] propertyValues)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception to include in the log message.
    - id: messageTemplate
      type: System.String
      description: The message template for the log message.
    - id: propertyValues
      type: System.Object[]
      description: Additional property values to include in the log message.
    content.vb: Public Sub Warning(exception As Exception, messageTemplate As String, ParamArray propertyValues As Object())
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Warning*
  implements:
  - Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String,System.Object[])
  nameWithType.vb: Logger.Warning(Exception, String, ParamArray Object())
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Warning(System.Exception, String, ParamArray Object())
  name.vb: Warning(Exception, String, ParamArray Object())
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  id: Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)
  nameWithType: Logger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, string>)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Log
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 409
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Writes a log message based on the specified log level, event ID, state, exception, and formatter.
  example: []
  syntax:
    content: public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter)
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: The log level.
    - id: eventId
      type: Microsoft.Extensions.Logging.EventId
      description: The event ID.
    - id: state
      type: '{TState}'
      description: The state object.
    - id: exception
      type: System.Exception
      description: The exception associated with the log message.
    - id: formatter
      type: System.Func{{TState},System.Exception,System.String}
      description: A delegate that formats the log message.
    typeParameters:
    - id: TState
      description: The type of the state object.
    content.vb: Public Sub Log(Of TState)(logLevel As LogLevel, eventId As EventId, state As TState, exception As Exception, formatter As Func(Of TState, Exception, String))
  overload: Innovt.CrossCutting.Log.Serilog.Logger.Log*
  implements:
  - Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,{TState},System.Exception,System.Func{{TState},System.Exception,System.String})
  nameWithType.vb: Logger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
- uid: Innovt.CrossCutting.Log.Serilog.Logger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  id: IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: IsEnabled(LogLevel)
  nameWithType: Logger.IsEnabled(LogLevel)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsEnabled
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 445
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Checks if logging is enabled for the specified log level.
  example: []
  syntax:
    content: public bool IsEnabled(LogLevel logLevel)
    parameters:
    - id: logLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: The log level to check.
    return:
      type: System.Boolean
      description: True if logging is enabled for the specified log level; otherwise, false.
    content.vb: Public Function IsEnabled(logLevel As LogLevel) As Boolean
  overload: Innovt.CrossCutting.Log.Serilog.Logger.IsEnabled*
  implements:
  - Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
- uid: Innovt.CrossCutting.Log.Serilog.Logger.BeginScope``1(``0)
  commentId: M:Innovt.CrossCutting.Log.Serilog.Logger.BeginScope``1(``0)
  id: BeginScope``1(``0)
  parent: Innovt.CrossCutting.Log.Serilog.Logger
  langs:
  - csharp
  - vb
  name: BeginScope<TState>(TState)
  nameWithType: Logger.BeginScope<TState>(TState)
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.BeginScope<TState>(TState)
  type: Method
  source:
    remote:
      path: src/Innovt.CrossCutting.Log.Serilog/Logger.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: BeginScope
    path: ../src/Innovt.CrossCutting.Log.Serilog/Logger.cs
    startLine: 456
  assemblies:
  - Innovt.CrossCutting.Log.Serilog
  namespace: Innovt.CrossCutting.Log.Serilog
  summary: Begins a logical operation scope.
  example: []
  syntax:
    content: public IDisposable BeginScope<TState>(TState state)
    parameters:
    - id: state
      type: '{TState}'
      description: The state object for the scope.
    typeParameters:
    - id: TState
      description: The type of the state object.
    return:
      type: System.IDisposable
      description: An IDisposable that ends the logical operation scope when disposed.
    content.vb: Public Function BeginScope(Of TState)(state As TState) As IDisposable
  overload: Innovt.CrossCutting.Log.Serilog.Logger.BeginScope*
  implements:
  - Microsoft.Extensions.Logging.ILogger.BeginScope``1({TState})
  nameWithType.vb: Logger.BeginScope(Of TState)(TState)
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
references:
- uid: Innovt.Core.CrossCutting.Log.ILogger
  commentId: T:Innovt.Core.CrossCutting.Log.ILogger
  parent: Innovt.Core.CrossCutting.Log
  href: Innovt.Core.CrossCutting.Log.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Innovt.Core.CrossCutting.Log.ILogger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Innovt.CrossCutting.Log.Serilog
  commentId: N:Innovt.CrossCutting.Log.Serilog
  href: Innovt.html
  name: Innovt.CrossCutting.Log.Serilog
  nameWithType: Innovt.CrossCutting.Log.Serilog
  fullName: Innovt.CrossCutting.Log.Serilog
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.CrossCutting
    name: CrossCutting
    href: Innovt.CrossCutting.html
  - name: .
  - uid: Innovt.CrossCutting.Log
    name: Log
    href: Innovt.CrossCutting.Log.html
  - name: .
  - uid: Innovt.CrossCutting.Log.Serilog
    name: Serilog
    href: Innovt.CrossCutting.Log.Serilog.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.CrossCutting
    name: CrossCutting
    href: Innovt.CrossCutting.html
  - name: .
  - uid: Innovt.CrossCutting.Log
    name: Log
    href: Innovt.CrossCutting.Log.html
  - name: .
  - uid: Innovt.CrossCutting.Log.Serilog
    name: Serilog
    href: Innovt.CrossCutting.Log.Serilog.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.CrossCutting.Log
  commentId: N:Innovt.Core.CrossCutting.Log
  href: Innovt.html
  name: Innovt.Core.CrossCutting.Log
  nameWithType: Innovt.Core.CrossCutting.Log
  fullName: Innovt.Core.CrossCutting.Log
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.CrossCutting.Log.Serilog.Logger
  commentId: T:Innovt.CrossCutting.Log.Serilog.Logger
  href: Innovt.CrossCutting.Log.Serilog.Logger.html
  name: Logger
  nameWithType: Logger
  fullName: Innovt.CrossCutting.Log.Serilog.Logger
- uid: Innovt.CrossCutting.Log.Serilog.Logger.#ctor*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.#ctor
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger__ctor
  name: Logger
  nameWithType: Logger.Logger
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Logger
  nameWithType.vb: Logger.New
  fullName.vb: Innovt.CrossCutting.Log.Serilog.Logger.New
  name.vb: New
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Serilog.Core.ILogEventEnricher
  commentId: T:Serilog.Core.ILogEventEnricher
  parent: Serilog.Core
  isExternal: true
  name: ILogEventEnricher
  nameWithType: ILogEventEnricher
  fullName: Serilog.Core.ILogEventEnricher
- uid: Serilog.Core
  commentId: N:Serilog.Core
  isExternal: true
  name: Serilog.Core
  nameWithType: Serilog.Core
  fullName: Serilog.Core
  spec.csharp:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Serilog
    name: Serilog
    isExternal: true
  - name: .
  - uid: Serilog.Core
    name: Core
    isExternal: true
- uid: Serilog.Core.ILogEventEnricher[]
  isExternal: true
  name: ILogEventEnricher[]
  nameWithType: ILogEventEnricher[]
  fullName: Serilog.Core.ILogEventEnricher[]
  nameWithType.vb: ILogEventEnricher()
  fullName.vb: Serilog.Core.ILogEventEnricher()
  name.vb: ILogEventEnricher()
  spec.csharp:
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Serilog.Core.ILogEventEnricher
    name: ILogEventEnricher
    isExternal: true
  - name: (
  - name: )
- uid: Serilog.LoggerConfiguration
  commentId: T:Serilog.LoggerConfiguration
  parent: Serilog
  isExternal: true
  name: LoggerConfiguration
  nameWithType: LoggerConfiguration
  fullName: Serilog.LoggerConfiguration
- uid: Serilog
  commentId: N:Serilog
  isExternal: true
  name: Serilog
  nameWithType: Serilog
  fullName: Serilog
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Debug*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.Debug
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_Debug_System_String_
  name: Debug
  nameWithType: Logger.Debug
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Debug
- uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_String_
  name: Debug(string)
  nameWithType: ILogger.Debug(string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Debug(string)
  nameWithType.vb: ILogger.Debug(String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Debug(String)
  name.vb: Debug(String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String)
    name: Debug
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String)
    name: Debug
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_String_System_Object___
  name: Debug(string, params object[])
  nameWithType: ILogger.Debug(string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Debug(string, params object[])
  nameWithType.vb: ILogger.Debug(String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Debug(String, ParamArray Object())
  name.vb: Debug(String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String,System.Object[])
    name: Debug
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.String,System.Object[])
    name: Debug
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_Exception_System_String_
  name: Debug(Exception, string)
  nameWithType: ILogger.Debug(Exception, string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception, string)
  nameWithType.vb: ILogger.Debug(Exception, String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception, String)
  name.vb: Debug(Exception, String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String)
    name: Debug
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String)
    name: Debug
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_Exception_System_String_System_Object___
  name: Debug(Exception, string, params object[])
  nameWithType: ILogger.Debug(Exception, string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Debug(Exception, String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception, String, ParamArray Object())
  name.vb: Debug(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String,System.Object[])
    name: Debug
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Debug(System.Exception,System.String,System.Object[])
    name: Debug
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Debug_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Error*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.Error
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_Error_System_String_
  name: Error
  nameWithType: Logger.Error
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Error
- uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Error(System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_String_
  name: Error(string)
  nameWithType: ILogger.Error(string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Error(string)
  nameWithType.vb: ILogger.Error(String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Error(String)
  name.vb: Error(String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.String)
    name: Error
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.String)
    name: Error
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Error(System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_String_System_Object___
  name: Error(string, params object[])
  nameWithType: ILogger.Error(string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Error(string, params object[])
  nameWithType.vb: ILogger.Error(String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Error(String, ParamArray Object())
  name.vb: Error(String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.String,System.Object[])
    name: Error
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.String,System.Object[])
    name: Error
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_Exception_System_String_
  name: Error(Exception, string)
  nameWithType: ILogger.Error(Exception, string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception, string)
  nameWithType.vb: ILogger.Error(Exception, String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception, String)
  name.vb: Error(Exception, String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String)
    name: Error
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String)
    name: Error
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_Exception_System_String_System_Object___
  name: Error(Exception, string, params object[])
  nameWithType: ILogger.Error(Exception, string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Error(Exception, String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception, String, ParamArray Object())
  name.vb: Error(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Error(System.Exception,System.String,System.Object[])
    name: Error
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Error_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Fatal*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.Fatal
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_Fatal_System_String_
  name: Fatal
  nameWithType: Logger.Fatal
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Fatal
- uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_String_
  name: Fatal(string)
  nameWithType: ILogger.Fatal(string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Fatal(string)
  nameWithType.vb: ILogger.Fatal(String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Fatal(String)
  name.vb: Fatal(String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String)
    name: Fatal
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String)
    name: Fatal
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_String_System_Object___
  name: Fatal(string, params object[])
  nameWithType: ILogger.Fatal(string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Fatal(string, params object[])
  nameWithType.vb: ILogger.Fatal(String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Fatal(String, ParamArray Object())
  name.vb: Fatal(String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String,System.Object[])
    name: Fatal
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.String,System.Object[])
    name: Fatal
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_Exception_System_String_
  name: Fatal(Exception, string)
  nameWithType: ILogger.Fatal(Exception, string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception, string)
  nameWithType.vb: ILogger.Fatal(Exception, String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception, String)
  name.vb: Fatal(Exception, String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String)
    name: Fatal
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String)
    name: Fatal
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_Exception_System_String_System_Object___
  name: Fatal(Exception, string, params object[])
  nameWithType: ILogger.Fatal(Exception, string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Fatal(Exception, String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception, String, ParamArray Object())
  name.vb: Fatal(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String,System.Object[])
    name: Fatal
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Fatal(System.Exception,System.String,System.Object[])
    name: Fatal
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Fatal_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Info*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.Info
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_Info_System_String_
  name: Info
  nameWithType: Logger.Info
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Info
- uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Info(System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_String_
  name: Info(string)
  nameWithType: ILogger.Info(string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Info(string)
  nameWithType.vb: ILogger.Info(String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Info(String)
  name.vb: Info(String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.String)
    name: Info
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.String)
    name: Info
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Info(System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_String_System_Object___
  name: Info(string, params object[])
  nameWithType: ILogger.Info(string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Info(string, params object[])
  nameWithType.vb: ILogger.Info(String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Info(String, ParamArray Object())
  name.vb: Info(String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.String,System.Object[])
    name: Info
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.String,System.Object[])
    name: Info
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_Exception_System_String_
  name: Info(Exception, string)
  nameWithType: ILogger.Info(Exception, string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception, string)
  nameWithType.vb: ILogger.Info(Exception, String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception, String)
  name.vb: Info(Exception, String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String)
    name: Info
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String)
    name: Info
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_Exception_System_String_System_Object___
  name: Info(Exception, string, params object[])
  nameWithType: ILogger.Info(Exception, string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Info(Exception, String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception, String, ParamArray Object())
  name.vb: Info(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String,System.Object[])
    name: Info
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Info(System.Exception,System.String,System.Object[])
    name: Info
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Info_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Verbose*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.Verbose
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_Verbose_System_String_
  name: Verbose
  nameWithType: Logger.Verbose
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Verbose
- uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_String_
  name: Verbose(string)
  nameWithType: ILogger.Verbose(string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Verbose(string)
  nameWithType.vb: ILogger.Verbose(String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Verbose(String)
  name.vb: Verbose(String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String)
    name: Verbose
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String)
    name: Verbose
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_String_System_Object___
  name: Verbose(string, params object[])
  nameWithType: ILogger.Verbose(string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Verbose(string, params object[])
  nameWithType.vb: ILogger.Verbose(String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Verbose(String, ParamArray Object())
  name.vb: Verbose(String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String,System.Object[])
    name: Verbose
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.String,System.Object[])
    name: Verbose
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_Exception_System_String_
  name: Verbose(Exception, string)
  nameWithType: ILogger.Verbose(Exception, string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception, string)
  nameWithType.vb: ILogger.Verbose(Exception, String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception, String)
  name.vb: Verbose(Exception, String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String)
    name: Verbose
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String)
    name: Verbose
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_Exception_System_String_System_Object___
  name: Verbose(Exception, string, params object[])
  nameWithType: ILogger.Verbose(Exception, string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Verbose(Exception, String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception, String, ParamArray Object())
  name.vb: Verbose(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String,System.Object[])
    name: Verbose
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Verbose(System.Exception,System.String,System.Object[])
    name: Verbose
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Verbose_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Warning*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.Warning
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_Warning_System_String_
  name: Warning
  nameWithType: Logger.Warning
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Warning
- uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_String_
  name: Warning(string)
  nameWithType: ILogger.Warning(string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Warning(string)
  nameWithType.vb: ILogger.Warning(String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Warning(String)
  name.vb: Warning(String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String)
    name: Warning
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String)
    name: Warning
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_String_System_Object___
  name: Warning(string, params object[])
  nameWithType: ILogger.Warning(string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Warning(string, params object[])
  nameWithType.vb: ILogger.Warning(String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Warning(String, ParamArray Object())
  name.vb: Warning(String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String,System.Object[])
    name: Warning
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.String,System.Object[])
    name: Warning
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String)
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String)
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_Exception_System_String_
  name: Warning(Exception, string)
  nameWithType: ILogger.Warning(Exception, string)
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception, string)
  nameWithType.vb: ILogger.Warning(Exception, String)
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception, String)
  name.vb: Warning(Exception, String)
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String)
    name: Warning
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String)
    name: Warning
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_Exception_System_String_
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String,System.Object[])
  commentId: M:Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String,System.Object[])
  parent: Innovt.Core.CrossCutting.Log.ILogger
  isExternal: true
  href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_Exception_System_String_System_Object___
  name: Warning(Exception, string, params object[])
  nameWithType: ILogger.Warning(Exception, string, params object[])
  fullName: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception, string, params object[])
  nameWithType.vb: ILogger.Warning(Exception, String, ParamArray Object())
  fullName.vb: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception, String, ParamArray Object())
  name.vb: Warning(Exception, String, ParamArray Object())
  spec.csharp:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String,System.Object[])
    name: Warning
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Innovt.Core.CrossCutting.Log.ILogger.Warning(System.Exception,System.String,System.Object[])
    name: Warning
    href: Innovt.Core.CrossCutting.Log.ILogger.html#Innovt_Core_CrossCutting_Log_ILogger_Warning_System_Exception_System_String_System_Object___
  - name: (
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Innovt.CrossCutting.Log.Serilog.Logger.Log*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.Log
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_Log__1_Microsoft_Extensions_Logging_LogLevel_Microsoft_Extensions_Logging_EventId___0_System_Exception_System_Func___0_System_Exception_System_String__
  name: Log
  nameWithType: Logger.Log
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.Log
- uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,{TState},System.Exception,System.Func{{TState},System.Exception,System.String})
  commentId: M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  parent: Microsoft.Extensions.Logging.ILogger
  definition: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.log
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)
  nameWithType: ILogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)
  fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, string>)
  nameWithType.vb: ILogger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullName.vb: Microsoft.Extensions.Logging.ILogger.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.log
  - name: <
  - name: TState
  - name: '>'
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: ','
  - name: " "
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.eventid
  - name: ','
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.log
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: ','
  - name: " "
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.eventid
  - name: ','
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Microsoft.Extensions.Logging.EventId
  commentId: T:Microsoft.Extensions.Logging.EventId
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.eventid
  name: EventId
  nameWithType: EventId
  fullName: Microsoft.Extensions.Logging.EventId
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Func{{TState},System.Exception,System.String}
  commentId: T:System.Func{``0,System.Exception,System.String}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<TState, Exception, string>
  nameWithType: Func<TState, Exception, string>
  fullName: System.Func<TState, System.Exception, string>
  nameWithType.vb: Func(Of TState, Exception, String)
  fullName.vb: System.Func(Of TState, System.Exception, String)
  name.vb: Func(Of TState, Exception, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  commentId: M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.log
  name: Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)
  nameWithType: ILogger.Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, string>)
  fullName: Microsoft.Extensions.Logging.ILogger.Log<TState>(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func<TState, System.Exception, string>)
  nameWithType.vb: ILogger.Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  fullName.vb: Microsoft.Extensions.Logging.ILogger.Log(Of TState)(Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, TState, System.Exception, System.Func(Of TState, System.Exception, String))
  name.vb: Log(Of TState)(LogLevel, EventId, TState, Exception, Func(Of TState, Exception, String))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.log
  - name: <
  - name: TState
  - name: '>'
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: ','
  - name: " "
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.eventid
  - name: ','
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})
    name: Log
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.log
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: ','
  - name: " "
  - uid: Microsoft.Extensions.Logging.EventId
    name: EventId
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.eventid
  - name: ','
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Innovt.CrossCutting.Log.Serilog.Logger.IsEnabled*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.IsEnabled
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_IsEnabled_Microsoft_Extensions_Logging_LogLevel_
  name: IsEnabled
  nameWithType: Logger.IsEnabled
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.IsEnabled
- uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.ILogger
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.isenabled
  name: IsEnabled(LogLevel)
  nameWithType: ILogger.IsEnabled(LogLevel)
  fullName: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
    name: IsEnabled
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.isenabled
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)
    name: IsEnabled
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.isenabled
  - name: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.CrossCutting.Log.Serilog.Logger.BeginScope*
  commentId: Overload:Innovt.CrossCutting.Log.Serilog.Logger.BeginScope
  href: Innovt.CrossCutting.Log.Serilog.Logger.html#Innovt_CrossCutting_Log_Serilog_Logger_BeginScope__1___0_
  name: BeginScope
  nameWithType: Logger.BeginScope
  fullName: Innovt.CrossCutting.Log.Serilog.Logger.BeginScope
- uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1({TState})
  commentId: M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  parent: Microsoft.Extensions.Logging.ILogger
  definition: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.beginscope
  name: BeginScope<TState>(TState)
  nameWithType: ILogger.BeginScope<TState>(TState)
  fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>(TState)
  nameWithType.vb: ILogger.BeginScope(Of TState)(TState)
  fullName.vb: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.beginscope
  - name: <
  - name: TState
  - name: '>'
  - name: (
  - name: TState
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.beginscope
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
  - name: (
  - name: TState
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  commentId: M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.beginscope
  name: BeginScope<TState>(TState)
  nameWithType: ILogger.BeginScope<TState>(TState)
  fullName: Microsoft.Extensions.Logging.ILogger.BeginScope<TState>(TState)
  nameWithType.vb: ILogger.BeginScope(Of TState)(TState)
  fullName.vb: Microsoft.Extensions.Logging.ILogger.BeginScope(Of TState)(TState)
  name.vb: BeginScope(Of TState)(TState)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.beginscope
  - name: <
  - name: TState
  - name: '>'
  - name: (
  - name: TState
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)
    name: BeginScope
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger.beginscope
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
  - name: (
  - name: TState
  - name: )
