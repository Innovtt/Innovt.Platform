### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  commentId: T:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  id: TriggerEvent`2
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events
  children:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.CallerContext
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Region
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Request
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Response
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.TriggerSource
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserName
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserPoolId
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Version
  langs:
  - csharp
  - vb
  name: TriggerEvent<TRequest, TResponse>
  nameWithType: TriggerEvent<TRequest, TResponse>
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>
  type: Class
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: TriggerEvent
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 14
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Represents a base class for trigger events with request and response types.
  example: []
  syntax:
    content: >-
      [DataContract]

      public abstract class TriggerEvent<TRequest, TResponse> where TRequest : TriggerRequest, new() where TResponse : TriggerResponse, new()
    typeParameters:
    - id: TRequest
      description: The type of the trigger request.
    - id: TResponse
      description: The type of the trigger response.
    content.vb: >-
      <DataContract>

      Public MustInherit Class TriggerEvent(Of TRequest As {TriggerRequest, New}, TResponse As {TriggerResponse, New})
  inheritance:
  - System.Object
  derivedClasses:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.CreateAuthChallenge.CreateAuthChallengeEvent
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.DefineAuthChallenge.DefineAuthChallengeEvent
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.PostConfirmation.PostConfirmationEvent
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.PreSignup.PreSignupEvent
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.PreTokenGeneration.PreTokenGenerationEvent
  - Innovt.Cloud.AWS.Lambda.Cognito.Events.VerifyAuthChallenge.VerifyAuthChallengeEvent
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse)
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse)
  name.vb: TriggerEvent(Of TRequest, TResponse)
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Version
  commentId: P:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Version
  id: Version
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: TriggerEvent<TRequest, TResponse>.Version
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.Version
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Version
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 22
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Gets or sets the version associated with the event.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "version")]

      [JsonPropertyName("version")]

      public string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="version")>

      <JsonPropertyName("version")>

      Public Property Version As String
  overload: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Version*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: version
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: version
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).Version
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).Version
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Region
  commentId: P:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Region
  id: Region
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: TriggerEvent<TRequest, TResponse>.Region
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.Region
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Region
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 29
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Gets or sets the region associated with the event.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "region")]

      [JsonPropertyName("region")]

      public string Region { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="region")>

      <JsonPropertyName("region")>

      Public Property Region As String
  overload: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Region*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: region
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: region
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).Region
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).Region
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserPoolId
  commentId: P:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserPoolId
  id: UserPoolId
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  langs:
  - csharp
  - vb
  name: UserPoolId
  nameWithType: TriggerEvent<TRequest, TResponse>.UserPoolId
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.UserPoolId
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UserPoolId
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 36
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Gets or sets the user pool ID associated with the event.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "userPoolId")]

      [JsonPropertyName("userPoolId")]

      public string UserPoolId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="userPoolId")>

      <JsonPropertyName("userPoolId")>

      Public Property UserPoolId As String
  overload: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserPoolId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: userPoolId
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userPoolId
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).UserPoolId
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).UserPoolId
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserName
  commentId: P:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserName
  id: UserName
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: TriggerEvent<TRequest, TResponse>.UserName
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.UserName
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UserName
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 43
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Gets or sets the user name associated with the event.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "userName")]

      [JsonPropertyName("userName")]

      public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="userName")>

      <JsonPropertyName("userName")>

      Public Property UserName As String
  overload: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: userName
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userName
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).UserName
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).UserName
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.CallerContext
  commentId: P:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.CallerContext
  id: CallerContext
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  langs:
  - csharp
  - vb
  name: CallerContext
  nameWithType: TriggerEvent<TRequest, TResponse>.CallerContext
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.CallerContext
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CallerContext
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 50
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Gets or sets the caller context associated with the event.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "callerContext")]

      [JsonPropertyName("callerContext")]

      public TriggerCallerContext CallerContext { get; set; }
    parameters: []
    return:
      type: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext
    content.vb: >-
      <DataMember(Name:="callerContext")>

      <JsonPropertyName("callerContext")>

      Public Property CallerContext As TriggerCallerContext
  overload: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.CallerContext*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: callerContext
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: callerContext
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).CallerContext
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).CallerContext
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.TriggerSource
  commentId: P:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.TriggerSource
  id: TriggerSource
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  langs:
  - csharp
  - vb
  name: TriggerSource
  nameWithType: TriggerEvent<TRequest, TResponse>.TriggerSource
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.TriggerSource
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: TriggerSource
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 57
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Gets or sets the trigger source associated with the event.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "triggerSource")]

      [JsonPropertyName("triggerSource")]

      public string TriggerSource { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="triggerSource")>

      <JsonPropertyName("triggerSource")>

      Public Property TriggerSource As String
  overload: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.TriggerSource*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: triggerSource
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: triggerSource
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).TriggerSource
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).TriggerSource
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Request
  commentId: P:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Request
  id: Request
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: TriggerEvent<TRequest, TResponse>.Request
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.Request
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Request
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 64
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Gets or sets the request associated with the event.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "request")]

      [JsonPropertyName("request")]

      public TRequest Request { get; set; }
    parameters: []
    return:
      type: '{TRequest}'
    content.vb: >-
      <DataMember(Name:="request")>

      <JsonPropertyName("request")>

      Public Property Request As TRequest
  overload: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Request*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: request
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: request
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).Request
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).Request
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Response
  commentId: P:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Response
  id: Response
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: TriggerEvent<TRequest, TResponse>.Response
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.Response
  type: Property
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Response
    path: ../src/Innovt.Cloud.AWS.Lambda.Cognito.Events/TriggerEvent.cs
    startLine: 71
  assemblies:
  - Innovt.Cloud.AWS.Lambda.Cognito.Events
  namespace: Innovt.Cloud.AWS.Lambda.Cognito.Events
  summary: Gets or sets the response associated with the event.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "response")]

      [JsonPropertyName("response")]

      public TResponse Response { get; set; }
    parameters: []
    return:
      type: '{TResponse}'
    content.vb: >-
      <DataMember(Name:="response")>

      <JsonPropertyName("response")>

      Public Property Response As TResponse
  overload: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Response*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: response
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: response
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).Response
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).Response
references:
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events
  commentId: N:Innovt.Cloud.AWS.Lambda.Cognito.Events
  href: Innovt.html
  name: Innovt.Cloud.AWS.Lambda.Cognito.Events
  nameWithType: Innovt.Cloud.AWS.Lambda.Cognito.Events
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda
    name: Lambda
    href: Innovt.Cloud.AWS.Lambda.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda.Cognito
    name: Cognito
    href: Innovt.Cloud.AWS.Lambda.Cognito.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda.Cognito.Events
    name: Events
    href: Innovt.Cloud.AWS.Lambda.Cognito.Events.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda
    name: Lambda
    href: Innovt.Cloud.AWS.Lambda.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda.Cognito
    name: Cognito
    href: Innovt.Cloud.AWS.Lambda.Cognito.html
  - name: .
  - uid: Innovt.Cloud.AWS.Lambda.Cognito.Events
    name: Events
    href: Innovt.Cloud.AWS.Lambda.Cognito.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Version*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Version
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html#Innovt_Cloud_AWS_Lambda_Cognito_Events_TriggerEvent_2_Version
  name: Version
  nameWithType: TriggerEvent<TRequest, TResponse>.Version
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.Version
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).Version
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).Version
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Region*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Region
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html#Innovt_Cloud_AWS_Lambda_Cognito_Events_TriggerEvent_2_Region
  name: Region
  nameWithType: TriggerEvent<TRequest, TResponse>.Region
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.Region
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).Region
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).Region
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserPoolId*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserPoolId
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html#Innovt_Cloud_AWS_Lambda_Cognito_Events_TriggerEvent_2_UserPoolId
  name: UserPoolId
  nameWithType: TriggerEvent<TRequest, TResponse>.UserPoolId
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.UserPoolId
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).UserPoolId
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).UserPoolId
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserName*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.UserName
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html#Innovt_Cloud_AWS_Lambda_Cognito_Events_TriggerEvent_2_UserName
  name: UserName
  nameWithType: TriggerEvent<TRequest, TResponse>.UserName
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.UserName
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).UserName
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).UserName
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.CallerContext*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.CallerContext
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html#Innovt_Cloud_AWS_Lambda_Cognito_Events_TriggerEvent_2_CallerContext
  name: CallerContext
  nameWithType: TriggerEvent<TRequest, TResponse>.CallerContext
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.CallerContext
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).CallerContext
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).CallerContext
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext
  commentId: T:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext
  parent: Innovt.Cloud.AWS.Lambda.Cognito.Events
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext.html
  name: TriggerCallerContext
  nameWithType: TriggerCallerContext
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerCallerContext
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.TriggerSource*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.TriggerSource
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html#Innovt_Cloud_AWS_Lambda_Cognito_Events_TriggerEvent_2_TriggerSource
  name: TriggerSource
  nameWithType: TriggerEvent<TRequest, TResponse>.TriggerSource
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.TriggerSource
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).TriggerSource
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).TriggerSource
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Request*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Request
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html#Innovt_Cloud_AWS_Lambda_Cognito_Events_TriggerEvent_2_Request
  name: Request
  nameWithType: TriggerEvent<TRequest, TResponse>.Request
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.Request
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).Request
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).Request
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: TRequest
  commentId: '!:TRequest'
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Response*
  commentId: Overload:Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent`2.Response
  href: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent-2.html#Innovt_Cloud_AWS_Lambda_Cognito_Events_TriggerEvent_2_Response
  name: Response
  nameWithType: TriggerEvent<TRequest, TResponse>.Response
  fullName: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent<TRequest, TResponse>.Response
  nameWithType.vb: TriggerEvent(Of TRequest, TResponse).Response
  fullName.vb: Innovt.Cloud.AWS.Lambda.Cognito.Events.TriggerEvent(Of TRequest, TResponse).Response
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: TResponse
  commentId: '!:TResponse'
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
