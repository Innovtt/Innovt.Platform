### YamlMime:ManagedReference
items:
- uid: Innovt.AspNetCore.ApiStartupBase
  commentId: T:Innovt.AspNetCore.ApiStartupBase
  id: ApiStartupBase
  parent: Innovt.AspNetCore
  children:
  - Innovt.AspNetCore.ApiStartupBase.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.Boolean)
  - Innovt.AspNetCore.ApiStartupBase.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)
  - Innovt.AspNetCore.ApiStartupBase.AddDefaultServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Innovt.AspNetCore.ApiStartupBase.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Innovt.AspNetCore.ApiStartupBase.AddTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Innovt.AspNetCore.ApiStartupBase.AppName
  - Innovt.AspNetCore.ApiStartupBase.Configuration
  - Innovt.AspNetCore.ApiStartupBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)
  - Innovt.AspNetCore.ApiStartupBase.ConfigureApiBehavior
  - Innovt.AspNetCore.ApiStartupBase.ConfigureApp(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)
  - Innovt.AspNetCore.ApiStartupBase.ConfigureCultures(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - Innovt.AspNetCore.ApiStartupBase.ConfigureHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Innovt.AspNetCore.ApiStartupBase.ConfigureIoC(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Innovt.AspNetCore.ApiStartupBase.ConfigureOpenTelemetry(OpenTelemetry.Trace.TracerProviderBuilder)
  - Innovt.AspNetCore.ApiStartupBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Innovt.AspNetCore.ApiStartupBase.ConfigureSwaggerUi(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  - Innovt.AspNetCore.ApiStartupBase.DefaultHealthPath
  - Innovt.AspNetCore.ApiStartupBase.Documentation
  - Innovt.AspNetCore.ApiStartupBase.Environment
  - Innovt.AspNetCore.ApiStartupBase.IsDevelopmentEnvironment
  - Innovt.AspNetCore.ApiStartupBase.Localization
  - Innovt.AspNetCore.ApiStartupBase.SetDefaultJsonOptions
  langs:
  - csharp
  - vb
  name: ApiStartupBase
  nameWithType: ApiStartupBase
  fullName: Innovt.AspNetCore.ApiStartupBase
  type: Class
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ApiStartupBase
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 26
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Base class for configuring API startup settings and dependencies.
  example: []
  syntax:
    content: public abstract class ApiStartupBase
    content.vb: Public MustInherit Class ApiStartupBase
  inheritance:
  - System.Object
  derivedClasses:
  - Innovt.AspNetCore.Application.Tests.Startup
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.AspNetCore.ApiStartupBase.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.Boolean)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.Boolean)
  id: '#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.Boolean)'
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ApiStartupBase(IConfiguration, IWebHostEnvironment, string, bool)
  nameWithType: ApiStartupBase.ApiStartupBase(IConfiguration, IWebHostEnvironment, string, bool)
  fullName: Innovt.AspNetCore.ApiStartupBase.ApiStartupBase(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, string, bool)
  type: Constructor
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 36
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Initializes a new instance of the ApiStartupBase class with the specified configuration and environment.
  example: []
  syntax:
    content: protected ApiStartupBase(IConfiguration configuration, IWebHostEnvironment environment, string appName, bool setDefaultJsonOptions = true)
    parameters:
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: The configuration for the application.
    - id: environment
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
      description: The hosting environment for the application.
    - id: appName
      type: System.String
      description: The name of the application.
    - id: setDefaultJsonOptions
      type: System.Boolean
      description: This is the default convention for Serialization/Deserialization
    content.vb: Protected Sub New(configuration As IConfiguration, environment As IWebHostEnvironment, appName As String, setDefaultJsonOptions As Boolean = True)
  overload: Innovt.AspNetCore.ApiStartupBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if configuration, environment, or appName is null.
  nameWithType.vb: ApiStartupBase.New(IConfiguration, IWebHostEnvironment, String, Boolean)
  fullName.vb: Innovt.AspNetCore.ApiStartupBase.New(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, String, Boolean)
  name.vb: New(IConfiguration, IWebHostEnvironment, String, Boolean)
- uid: Innovt.AspNetCore.ApiStartupBase.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)
  id: '#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)'
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ApiStartupBase(IConfiguration, IWebHostEnvironment, string, string, string, string, string?, string?, bool)
  nameWithType: ApiStartupBase.ApiStartupBase(IConfiguration, IWebHostEnvironment, string, string, string, string, string?, string?, bool)
  fullName: Innovt.AspNetCore.ApiStartupBase.ApiStartupBase(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, string, string, string, string, string?, string?, bool)
  type: Constructor
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 63
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Initializes a new instance of the ApiStartupBase class with additional API documentation details.
  example: []
  syntax:
    content: protected ApiStartupBase(IConfiguration configuration, IWebHostEnvironment environment, string appName, string apiTitle, string apiDescription, string apiVersion, string? contactName = null, string? contactEmail = null, bool setDefaultJsonOptions = true)
    parameters:
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: The configuration for the application.
    - id: environment
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
      description: The hosting environment for the application.
    - id: appName
      type: System.String
      description: The name of the application.
    - id: apiTitle
      type: System.String
      description: The title of the API.
    - id: apiDescription
      type: System.String
      description: The description of the API.
    - id: apiVersion
      type: System.String
      description: The version of the API.
    - id: contactName
      type: System.String
      description: The name of the API contact (optional).
    - id: contactEmail
      type: System.String
      description: The email of the API contact (optional).
    - id: setDefaultJsonOptions
      type: System.Boolean
      description: This is the default convention for Serialization/Deserialization
    content.vb: Protected Sub New(configuration As IConfiguration, environment As IWebHostEnvironment, appName As String, apiTitle As String, apiDescription As String, apiVersion As String, contactName As String = Nothing, contactEmail As String = Nothing, setDefaultJsonOptions As Boolean = True)
  overload: Innovt.AspNetCore.ApiStartupBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: >-
      Thrown if configuration, environment, appName, apiTitle, apiDescription, or

      apiVersion is null.
  nameWithType.vb: ApiStartupBase.New(IConfiguration, IWebHostEnvironment, String, String, String, String, String, String, Boolean)
  fullName.vb: Innovt.AspNetCore.ApiStartupBase.New(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, String, String, String, String, String, String, Boolean)
  name.vb: New(IConfiguration, IWebHostEnvironment, String, String, String, String, String, String, Boolean)
- uid: Innovt.AspNetCore.ApiStartupBase.AppName
  commentId: P:Innovt.AspNetCore.ApiStartupBase.AppName
  id: AppName
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: AppName
  nameWithType: ApiStartupBase.AppName
  fullName: Innovt.AspNetCore.ApiStartupBase.AppName
  type: Property
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AppName
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 75
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Gets the name of the application.
  example: []
  syntax:
    content: public string AppName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AppName As String
  overload: Innovt.AspNetCore.ApiStartupBase.AppName*
- uid: Innovt.AspNetCore.ApiStartupBase.DefaultHealthPath
  commentId: P:Innovt.AspNetCore.ApiStartupBase.DefaultHealthPath
  id: DefaultHealthPath
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: DefaultHealthPath
  nameWithType: ApiStartupBase.DefaultHealthPath
  fullName: Innovt.AspNetCore.ApiStartupBase.DefaultHealthPath
  type: Property
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DefaultHealthPath
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 80
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Gets or sets the default health path for the application.
  example: []
  syntax:
    content: protected string DefaultHealthPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property DefaultHealthPath As String
  overload: Innovt.AspNetCore.ApiStartupBase.DefaultHealthPath*
- uid: Innovt.AspNetCore.ApiStartupBase.Documentation
  commentId: P:Innovt.AspNetCore.ApiStartupBase.Documentation
  id: Documentation
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: Documentation
  nameWithType: ApiStartupBase.Documentation
  fullName: Innovt.AspNetCore.ApiStartupBase.Documentation
  type: Property
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Documentation
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 85
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Gets or sets the API documentation details.
  example: []
  syntax:
    content: protected DefaultApiDocumentation Documentation { get; set; }
    parameters: []
    return:
      type: Innovt.AspNetCore.Model.DefaultApiDocumentation
    content.vb: Protected Property Documentation As DefaultApiDocumentation
  overload: Innovt.AspNetCore.ApiStartupBase.Documentation*
- uid: Innovt.AspNetCore.ApiStartupBase.Localization
  commentId: P:Innovt.AspNetCore.ApiStartupBase.Localization
  id: Localization
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: Localization
  nameWithType: ApiStartupBase.Localization
  fullName: Innovt.AspNetCore.ApiStartupBase.Localization
  type: Property
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Localization
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 90
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Gets or sets the localization settings for the API.
  example: []
  syntax:
    content: protected DefaultApiLocalization Localization { get; set; }
    parameters: []
    return:
      type: Innovt.AspNetCore.Model.DefaultApiLocalization
    content.vb: Protected Property Localization As DefaultApiLocalization
  overload: Innovt.AspNetCore.ApiStartupBase.Localization*
- uid: Innovt.AspNetCore.ApiStartupBase.SetDefaultJsonOptions
  commentId: P:Innovt.AspNetCore.ApiStartupBase.SetDefaultJsonOptions
  id: SetDefaultJsonOptions
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: SetDefaultJsonOptions
  nameWithType: ApiStartupBase.SetDefaultJsonOptions
  fullName: Innovt.AspNetCore.ApiStartupBase.SetDefaultJsonOptions
  type: Property
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SetDefaultJsonOptions
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 95
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: If true will set default Json Options(JsonSerializerOptions.PropertyNamingPolicy = JsonNamingPolicy.CamelCase) etc
  example: []
  syntax:
    content: public bool SetDefaultJsonOptions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SetDefaultJsonOptions As Boolean
  overload: Innovt.AspNetCore.ApiStartupBase.SetDefaultJsonOptions*
- uid: Innovt.AspNetCore.ApiStartupBase.Configuration
  commentId: P:Innovt.AspNetCore.ApiStartupBase.Configuration
  id: Configuration
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ApiStartupBase.Configuration
  fullName: Innovt.AspNetCore.ApiStartupBase.Configuration
  type: Property
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Configuration
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 100
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Gets the configuration for the application.
  example: []
  syntax:
    content: public IConfiguration Configuration { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Public ReadOnly Property Configuration As IConfiguration
  overload: Innovt.AspNetCore.ApiStartupBase.Configuration*
- uid: Innovt.AspNetCore.ApiStartupBase.Environment
  commentId: P:Innovt.AspNetCore.ApiStartupBase.Environment
  id: Environment
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: Environment
  nameWithType: ApiStartupBase.Environment
  fullName: Innovt.AspNetCore.ApiStartupBase.Environment
  type: Property
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Environment
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 105
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Gets the hosting environment for the application.
  example: []
  syntax:
    content: public IWebHostEnvironment Environment { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
    content.vb: Public ReadOnly Property Environment As IWebHostEnvironment
  overload: Innovt.AspNetCore.ApiStartupBase.Environment*
- uid: Innovt.AspNetCore.ApiStartupBase.IsDevelopmentEnvironment
  commentId: M:Innovt.AspNetCore.ApiStartupBase.IsDevelopmentEnvironment
  id: IsDevelopmentEnvironment
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: IsDevelopmentEnvironment()
  nameWithType: ApiStartupBase.IsDevelopmentEnvironment()
  fullName: Innovt.AspNetCore.ApiStartupBase.IsDevelopmentEnvironment()
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: IsDevelopmentEnvironment
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 120
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Checks if the application is running in a development environment.
  example: []
  syntax:
    content: protected bool IsDevelopmentEnvironment()
    return:
      type: System.Boolean
      description: True if the application is in development; otherwise, false.
    content.vb: Protected Function IsDevelopmentEnvironment() As Boolean
  overload: Innovt.AspNetCore.ApiStartupBase.IsDevelopmentEnvironment*
- uid: Innovt.AspNetCore.ApiStartupBase.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: AddSwagger(IServiceCollection)
  nameWithType: ApiStartupBase.AddSwagger(IServiceCollection)
  fullName: Innovt.AspNetCore.ApiStartupBase.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddSwagger
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 129
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Adds Swagger generation to the specified services.
  example: []
  syntax:
    content: protected virtual void AddSwagger(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection to add Swagger to.
    content.vb: Protected Overridable Sub AddSwagger(services As IServiceCollection)
  overload: Innovt.AspNetCore.ApiStartupBase.AddSwagger*
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.ConfigureHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ConfigureHealthChecks(IServiceCollection)
  nameWithType: ApiStartupBase.ConfigureHealthChecks(IServiceCollection)
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureHealthChecks
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 162
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Implement only the AddHealthChecks by default
  example: []
  syntax:
    content: protected virtual void ConfigureHealthChecks(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Protected Overridable Sub ConfigureHealthChecks(services As IServiceCollection)
  overload: Innovt.AspNetCore.ApiStartupBase.ConfigureHealthChecks*
- uid: Innovt.AspNetCore.ApiStartupBase.AddTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.AddTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: AddTracing(IServiceCollection)
  nameWithType: ApiStartupBase.AddTracing(IServiceCollection)
  fullName: Innovt.AspNetCore.ApiStartupBase.AddTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddTracing
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 171
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Adds tracing and telemetry to the specified services.
  example: []
  syntax:
    content: protected virtual void AddTracing(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection to add tracing to.
    content.vb: Protected Overridable Sub AddTracing(services As IServiceCollection)
  overload: Innovt.AspNetCore.ApiStartupBase.AddTracing*
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ConfigureServices(IServiceCollection)
  nameWithType: ApiStartupBase.ConfigureServices(IServiceCollection)
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureServices
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 246
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Configure services will register default services for api and mvc applications. AddHealthChecks
  example: []
  syntax:
    content: public virtual void ConfigureServices(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Overridable Sub ConfigureServices(services As IServiceCollection)
  overload: Innovt.AspNetCore.ApiStartupBase.ConfigureServices*
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureSwaggerUi(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.ConfigureSwaggerUi(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  id: ConfigureSwaggerUi(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ConfigureSwaggerUi(IApplicationBuilder, IWebHostEnvironment)
  nameWithType: ApiStartupBase.ConfigureSwaggerUi(IApplicationBuilder, IWebHostEnvironment)
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureSwaggerUi(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureSwaggerUi
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 268
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Configures Swagger UI for API documentation.
  example: []
  syntax:
    content: protected virtual void ConfigureSwaggerUi(IApplicationBuilder app, IWebHostEnvironment env)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The application builder.
    - id: env
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
      description: The hosting environment.
    content.vb: Protected Overridable Sub ConfigureSwaggerUi(app As IApplicationBuilder, env As IWebHostEnvironment)
  overload: Innovt.AspNetCore.ApiStartupBase.ConfigureSwaggerUi*
- uid: Innovt.AspNetCore.ApiStartupBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)
  id: Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: Configure(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory)
  nameWithType: ApiStartupBase.Configure(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory)
  fullName: Innovt.AspNetCore.ApiStartupBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Configure
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 288
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Configure Will Add All main Services as Default for Api and MVC Applications
  example: []
  syntax:
    content: public void Configure(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
    - id: env
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
      description: ''
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: ''
    content.vb: Public Sub Configure(app As IApplicationBuilder, env As IWebHostEnvironment, loggerFactory As ILoggerFactory)
  overload: Innovt.AspNetCore.ApiStartupBase.Configure*
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureApiBehavior
  commentId: M:Innovt.AspNetCore.ApiStartupBase.ConfigureApiBehavior
  id: ConfigureApiBehavior
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ConfigureApiBehavior()
  nameWithType: ApiStartupBase.ConfigureApiBehavior()
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureApiBehavior()
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureApiBehavior
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 311
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Configures API behavior options.
  example: []
  syntax:
    content: protected virtual Action<ApiBehaviorOptions> ConfigureApiBehavior()
    return:
      type: System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions}
      description: An action that configures <xref href="Microsoft.AspNetCore.Mvc.ApiBehaviorOptions" data-throw-if-not-resolved="false"></xref>.
    content.vb: Protected Overridable Function ConfigureApiBehavior() As Action(Of ApiBehaviorOptions)
  overload: Innovt.AspNetCore.ApiStartupBase.ConfigureApiBehavior*
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureCultures(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.ConfigureCultures(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: ConfigureCultures(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ConfigureCultures(IApplicationBuilder)
  nameWithType: ApiStartupBase.ConfigureCultures(IApplicationBuilder)
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureCultures(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureCultures
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 325
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Configures request cultures for the application.
  example: []
  syntax:
    content: protected virtual void ConfigureCultures(IApplicationBuilder app)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The application builder.
    content.vb: Protected Overridable Sub ConfigureCultures(app As IApplicationBuilder)
  overload: Innovt.AspNetCore.ApiStartupBase.ConfigureCultures*
- uid: Innovt.AspNetCore.ApiStartupBase.AddDefaultServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.AddDefaultServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddDefaultServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: AddDefaultServices(IServiceCollection)
  nameWithType: ApiStartupBase.AddDefaultServices(IServiceCollection)
  fullName: Innovt.AspNetCore.ApiStartupBase.AddDefaultServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: AddDefaultServices
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 339
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Adds default services to the service collection.
  example: []
  syntax:
    content: protected abstract void AddDefaultServices(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection to add default services to.
    content.vb: Protected MustOverride Sub AddDefaultServices(services As IServiceCollection)
  overload: Innovt.AspNetCore.ApiStartupBase.AddDefaultServices*
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureIoC(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.ConfigureIoC(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureIoC(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ConfigureIoC(IServiceCollection)
  nameWithType: ApiStartupBase.ConfigureIoC(IServiceCollection)
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureIoC(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureIoC
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 345
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Configures the IoC container for the application.
  example: []
  syntax:
    content: protected abstract void ConfigureIoC(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The service collection to configure for IoC.
    content.vb: Protected MustOverride Sub ConfigureIoC(services As IServiceCollection)
  overload: Innovt.AspNetCore.ApiStartupBase.ConfigureIoC*
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureApp(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.ConfigureApp(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)
  id: ConfigureApp(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ConfigureApp(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory)
  nameWithType: ApiStartupBase.ConfigureApp(IApplicationBuilder, IWebHostEnvironment, ILoggerFactory)
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureApp(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureApp
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 354
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Configures the application.
  example: []
  syntax:
    content: public abstract void ConfigureApp(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The application builder.
    - id: env
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
      description: The hosting environment.
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The logger factory.
    content.vb: Public MustOverride Sub ConfigureApp(app As IApplicationBuilder, env As IWebHostEnvironment, loggerFactory As ILoggerFactory)
  overload: Innovt.AspNetCore.ApiStartupBase.ConfigureApp*
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureOpenTelemetry(OpenTelemetry.Trace.TracerProviderBuilder)
  commentId: M:Innovt.AspNetCore.ApiStartupBase.ConfigureOpenTelemetry(OpenTelemetry.Trace.TracerProviderBuilder)
  id: ConfigureOpenTelemetry(OpenTelemetry.Trace.TracerProviderBuilder)
  parent: Innovt.AspNetCore.ApiStartupBase
  langs:
  - csharp
  - vb
  name: ConfigureOpenTelemetry(TracerProviderBuilder)
  nameWithType: ApiStartupBase.ConfigureOpenTelemetry(TracerProviderBuilder)
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureOpenTelemetry(OpenTelemetry.Trace.TracerProviderBuilder)
  type: Method
  source:
    remote:
      path: src/Innovt.AspNetCore/ApiStartupBase.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfigureOpenTelemetry
    path: ../src/Innovt.AspNetCore/ApiStartupBase.cs
    startLine: 360
  assemblies:
  - Innovt.AspNetCore
  namespace: Innovt.AspNetCore
  summary: Configures OpenTelemetry for tracing.
  example: []
  syntax:
    content: protected abstract void ConfigureOpenTelemetry(TracerProviderBuilder builder)
    parameters:
    - id: builder
      type: OpenTelemetry.Trace.TracerProviderBuilder
      description: The TracerProviderBuilder for configuring tracing.
    content.vb: Protected MustOverride Sub ConfigureOpenTelemetry(builder As TracerProviderBuilder)
  overload: Innovt.AspNetCore.ApiStartupBase.ConfigureOpenTelemetry*
references:
- uid: Innovt.AspNetCore
  commentId: N:Innovt.AspNetCore
  href: Innovt.html
  name: Innovt.AspNetCore
  nameWithType: Innovt.AspNetCore
  fullName: Innovt.AspNetCore
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.AspNetCore
    name: AspNetCore
    href: Innovt.AspNetCore.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.AspNetCore
    name: AspNetCore
    href: Innovt.AspNetCore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Innovt.AspNetCore.ApiStartupBase.#ctor*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.#ctor
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase__ctor_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_System_String_System_Boolean_
  name: ApiStartupBase
  nameWithType: ApiStartupBase.ApiStartupBase
  fullName: Innovt.AspNetCore.ApiStartupBase.ApiStartupBase
  nameWithType.vb: ApiStartupBase.New
  fullName.vb: Innovt.AspNetCore.ApiStartupBase.New
  name.vb: New
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting.iwebhostenvironment
  name: IWebHostEnvironment
  nameWithType: IWebHostEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.hosting
- uid: Innovt.AspNetCore.ApiStartupBase.AppName*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.AppName
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_AppName
  name: AppName
  nameWithType: ApiStartupBase.AppName
  fullName: Innovt.AspNetCore.ApiStartupBase.AppName
- uid: Innovt.AspNetCore.ApiStartupBase.DefaultHealthPath*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.DefaultHealthPath
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_DefaultHealthPath
  name: DefaultHealthPath
  nameWithType: ApiStartupBase.DefaultHealthPath
  fullName: Innovt.AspNetCore.ApiStartupBase.DefaultHealthPath
- uid: Innovt.AspNetCore.ApiStartupBase.Documentation*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.Documentation
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_Documentation
  name: Documentation
  nameWithType: ApiStartupBase.Documentation
  fullName: Innovt.AspNetCore.ApiStartupBase.Documentation
- uid: Innovt.AspNetCore.Model.DefaultApiDocumentation
  commentId: T:Innovt.AspNetCore.Model.DefaultApiDocumentation
  parent: Innovt.AspNetCore.Model
  href: Innovt.AspNetCore.Model.DefaultApiDocumentation.html
  name: DefaultApiDocumentation
  nameWithType: DefaultApiDocumentation
  fullName: Innovt.AspNetCore.Model.DefaultApiDocumentation
- uid: Innovt.AspNetCore.Model
  commentId: N:Innovt.AspNetCore.Model
  href: Innovt.html
  name: Innovt.AspNetCore.Model
  nameWithType: Innovt.AspNetCore.Model
  fullName: Innovt.AspNetCore.Model
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.AspNetCore
    name: AspNetCore
    href: Innovt.AspNetCore.html
  - name: .
  - uid: Innovt.AspNetCore.Model
    name: Model
    href: Innovt.AspNetCore.Model.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.AspNetCore
    name: AspNetCore
    href: Innovt.AspNetCore.html
  - name: .
  - uid: Innovt.AspNetCore.Model
    name: Model
    href: Innovt.AspNetCore.Model.html
- uid: Innovt.AspNetCore.ApiStartupBase.Localization*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.Localization
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_Localization
  name: Localization
  nameWithType: ApiStartupBase.Localization
  fullName: Innovt.AspNetCore.ApiStartupBase.Localization
- uid: Innovt.AspNetCore.Model.DefaultApiLocalization
  commentId: T:Innovt.AspNetCore.Model.DefaultApiLocalization
  parent: Innovt.AspNetCore.Model
  href: Innovt.AspNetCore.Model.DefaultApiLocalization.html
  name: DefaultApiLocalization
  nameWithType: DefaultApiLocalization
  fullName: Innovt.AspNetCore.Model.DefaultApiLocalization
- uid: Innovt.AspNetCore.ApiStartupBase.SetDefaultJsonOptions*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.SetDefaultJsonOptions
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_SetDefaultJsonOptions
  name: SetDefaultJsonOptions
  nameWithType: ApiStartupBase.SetDefaultJsonOptions
  fullName: Innovt.AspNetCore.ApiStartupBase.SetDefaultJsonOptions
- uid: Innovt.AspNetCore.ApiStartupBase.Configuration*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.Configuration
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_Configuration
  name: Configuration
  nameWithType: ApiStartupBase.Configuration
  fullName: Innovt.AspNetCore.ApiStartupBase.Configuration
- uid: Innovt.AspNetCore.ApiStartupBase.Environment*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.Environment
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_Environment
  name: Environment
  nameWithType: ApiStartupBase.Environment
  fullName: Innovt.AspNetCore.ApiStartupBase.Environment
- uid: Innovt.AspNetCore.ApiStartupBase.IsDevelopmentEnvironment*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.IsDevelopmentEnvironment
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_IsDevelopmentEnvironment
  name: IsDevelopmentEnvironment
  nameWithType: ApiStartupBase.IsDevelopmentEnvironment
  fullName: Innovt.AspNetCore.ApiStartupBase.IsDevelopmentEnvironment
- uid: Innovt.AspNetCore.ApiStartupBase.AddSwagger*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.AddSwagger
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_AddSwagger_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddSwagger
  nameWithType: ApiStartupBase.AddSwagger
  fullName: Innovt.AspNetCore.ApiStartupBase.AddSwagger
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureHealthChecks*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.ConfigureHealthChecks
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_ConfigureHealthChecks_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: ConfigureHealthChecks
  nameWithType: ApiStartupBase.ConfigureHealthChecks
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureHealthChecks
- uid: Innovt.AspNetCore.ApiStartupBase.AddTracing*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.AddTracing
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_AddTracing_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddTracing
  nameWithType: ApiStartupBase.AddTracing
  fullName: Innovt.AspNetCore.ApiStartupBase.AddTracing
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureServices*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.ConfigureServices
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: ConfigureServices
  nameWithType: ApiStartupBase.ConfigureServices
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureServices
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureSwaggerUi*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.ConfigureSwaggerUi
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_ConfigureSwaggerUi_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  name: ConfigureSwaggerUi
  nameWithType: ApiStartupBase.ConfigureSwaggerUi
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureSwaggerUi
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder.iapplicationbuilder
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Builder
    name: Builder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.builder
- uid: Innovt.AspNetCore.ApiStartupBase.Configure*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.Configure
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_Microsoft_Extensions_Logging_ILoggerFactory_
  name: Configure
  nameWithType: ApiStartupBase.Configure
  fullName: Innovt.AspNetCore.ApiStartupBase.Configure
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerfactory
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Microsoft.AspNetCore.Mvc.ApiBehaviorOptions
  commentId: T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.apibehavioroptions
  name: ApiBehaviorOptions
  nameWithType: ApiBehaviorOptions
  fullName: Microsoft.AspNetCore.Mvc.ApiBehaviorOptions
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureApiBehavior*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.ConfigureApiBehavior
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_ConfigureApiBehavior
  name: ConfigureApiBehavior
  nameWithType: ApiStartupBase.ConfigureApiBehavior
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureApiBehavior
- uid: System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ApiBehaviorOptions>
  nameWithType: Action<ApiBehaviorOptions>
  fullName: System.Action<Microsoft.AspNetCore.Mvc.ApiBehaviorOptions>
  nameWithType.vb: Action(Of ApiBehaviorOptions)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Mvc.ApiBehaviorOptions)
  name.vb: Action(Of ApiBehaviorOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Microsoft.AspNetCore.Mvc.ApiBehaviorOptions
    name: ApiBehaviorOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.apibehavioroptions
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.AspNetCore.Mvc.ApiBehaviorOptions
    name: ApiBehaviorOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.mvc.apibehavioroptions
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureCultures*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.ConfigureCultures
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_ConfigureCultures_Microsoft_AspNetCore_Builder_IApplicationBuilder_
  name: ConfigureCultures
  nameWithType: ApiStartupBase.ConfigureCultures
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureCultures
- uid: Innovt.AspNetCore.ApiStartupBase.AddDefaultServices*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.AddDefaultServices
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_AddDefaultServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: AddDefaultServices
  nameWithType: ApiStartupBase.AddDefaultServices
  fullName: Innovt.AspNetCore.ApiStartupBase.AddDefaultServices
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureIoC*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.ConfigureIoC
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_ConfigureIoC_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: ConfigureIoC
  nameWithType: ApiStartupBase.ConfigureIoC
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureIoC
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureApp*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.ConfigureApp
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_ConfigureApp_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_Microsoft_Extensions_Logging_ILoggerFactory_
  name: ConfigureApp
  nameWithType: ApiStartupBase.ConfigureApp
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureApp
- uid: Innovt.AspNetCore.ApiStartupBase.ConfigureOpenTelemetry*
  commentId: Overload:Innovt.AspNetCore.ApiStartupBase.ConfigureOpenTelemetry
  href: Innovt.AspNetCore.ApiStartupBase.html#Innovt_AspNetCore_ApiStartupBase_ConfigureOpenTelemetry_OpenTelemetry_Trace_TracerProviderBuilder_
  name: ConfigureOpenTelemetry
  nameWithType: ApiStartupBase.ConfigureOpenTelemetry
  fullName: Innovt.AspNetCore.ApiStartupBase.ConfigureOpenTelemetry
- uid: OpenTelemetry.Trace.TracerProviderBuilder
  commentId: T:OpenTelemetry.Trace.TracerProviderBuilder
  parent: OpenTelemetry.Trace
  isExternal: true
  name: TracerProviderBuilder
  nameWithType: TracerProviderBuilder
  fullName: OpenTelemetry.Trace.TracerProviderBuilder
- uid: OpenTelemetry.Trace
  commentId: N:OpenTelemetry.Trace
  isExternal: true
  name: OpenTelemetry.Trace
  nameWithType: OpenTelemetry.Trace
  fullName: OpenTelemetry.Trace
  spec.csharp:
  - uid: OpenTelemetry
    name: OpenTelemetry
    isExternal: true
  - name: .
  - uid: OpenTelemetry.Trace
    name: Trace
    isExternal: true
  spec.vb:
  - uid: OpenTelemetry
    name: OpenTelemetry
    isExternal: true
  - name: .
  - uid: OpenTelemetry.Trace
    name: Trace
    isExternal: true
