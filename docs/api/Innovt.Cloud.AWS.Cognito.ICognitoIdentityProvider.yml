### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  commentId: T:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  id: ICognitoIdentityProvider
  parent: Innovt.Cloud.AWS.Cognito
  children:
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ChangePassword(Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmSignUp(Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.DeleteUser(Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser``1(Innovt.Cloud.AWS.Cognito.Model.GetUserRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser``1(System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.LinkSocialUser(Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RefreshToken(Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ResendConfirmationCode(Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RespondToAuthChallenge(Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn(Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn(Innovt.Cloud.AWS.Cognito.Model.SignInRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignOut(Innovt.Cloud.AWS.Cognito.Model.SignOutRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignUp(Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SocialSignIn(Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ICognitoIdentityProvider
  nameWithType: ICognitoIdentityProvider
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  type: Interface
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ICognitoIdentityProvider
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 10
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  syntax:
    content: public interface ICognitoIdentityProvider
    content.vb: Public Interface ICognitoIdentityProvider
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ChangePassword(Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ChangePassword(Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest,System.Threading.CancellationToken)
  id: ChangePassword(Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: ChangePassword(ChangePasswordRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.ChangePassword(ChangePasswordRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ChangePassword(Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ChangePassword
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 17
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Change the password for an authenticated user.
  example: []
  syntax:
    content: Task ChangePassword(ChangePasswordRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest
      description: The request object containing the necessary information to change the user's password.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ChangePassword(command As ChangePasswordRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ChangePassword*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest,System.Threading.CancellationToken)
  id: ConfirmForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: ConfirmForgotPassword(ConfirmForgotPasswordRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.ConfirmForgotPassword(ConfirmForgotPasswordRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfirmForgotPassword
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 24
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Confirm a forgot password request and set a new password for the user.
  example: []
  syntax:
    content: Task ConfirmForgotPassword(ConfirmForgotPasswordRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest
      description: The request object containing the confirmation details.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ConfirmForgotPassword(command As ConfirmForgotPasswordRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmForgotPassword*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmSignUp(Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmSignUp(Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest,System.Threading.CancellationToken)
  id: ConfirmSignUp(Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: ConfirmSignUp(ConfirmSignUpRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.ConfirmSignUp(ConfirmSignUpRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmSignUp(Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ConfirmSignUp
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 31
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Confirm a user's sign-up by verifying the confirmation code.
  example: []
  syntax:
    content: Task ConfirmSignUp(ConfirmSignUpRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest
      description: The request object containing the user's sign-up confirmation details.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ConfirmSignUp(request As ConfirmSignUpRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmSignUp*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest,System.Threading.CancellationToken)
  id: ForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: ForgotPassword(ForgotPasswordRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.ForgotPassword(ForgotPasswordRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ForgotPassword(Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ForgotPassword
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 38
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Initiate a forgot password request for a user.
  example: []
  syntax:
    content: Task ForgotPassword(ForgotPasswordRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest
      description: The request object containing the user's information.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ForgotPassword(command As ForgotPasswordRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ForgotPassword*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser``1(Innovt.Cloud.AWS.Cognito.Model.GetUserRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser``1(Innovt.Cloud.AWS.Cognito.Model.GetUserRequest,System.Threading.CancellationToken)
  id: GetUser``1(Innovt.Cloud.AWS.Cognito.Model.GetUserRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: GetUser<T>(GetUserRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.GetUser<T>(GetUserRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser<T>(Innovt.Cloud.AWS.Cognito.Model.GetUserRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetUser
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 50
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Retrieve user information based on the specified request.
  example: []
  syntax:
    content: 'Task<T> GetUser<T>(GetUserRequest request, CancellationToken cancellationToken = default) where T : IGetUserResponse'
    parameters:
    - id: request
      type: Innovt.Cloud.AWS.Cognito.Model.GetUserRequest
      description: The request object containing the criteria to retrieve user information.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    typeParameters:
    - id: T
      description: >-
        The response object type containing user information. Must implement the IGetUserResponse

        interface.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The response object containing user information.
    content.vb: Function GetUser(Of T As IGetUserResponse)(request As GetUserRequest, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser*
  nameWithType.vb: ICognitoIdentityProvider.GetUser(Of T)(GetUserRequest, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser(Of T)(Innovt.Cloud.AWS.Cognito.Model.GetUserRequest, System.Threading.CancellationToken)
  name.vb: GetUser(Of T)(GetUserRequest, CancellationToken)
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser``1(System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser``1(System.String,System.Threading.CancellationToken)
  id: GetUser``1(System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: GetUser<T>(string, CancellationToken)
  nameWithType: ICognitoIdentityProvider.GetUser<T>(string, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser<T>(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetUser
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 63
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Retrieve user information based on the access token.
  example: []
  syntax:
    content: 'Task<T> GetUser<T>(string accessToken, CancellationToken cancellationToken = default) where T : IGetUserResponse'
    parameters:
    - id: accessToken
      type: System.String
      description: A valid access token.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    typeParameters:
    - id: T
      description: >-
        The response object type containing user information. Must implement the IGetUserResponse

        interface.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The response object containing user information.
    content.vb: Function GetUser(Of T As IGetUserResponse)(accessToken As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser*
  nameWithType.vb: ICognitoIdentityProvider.GetUser(Of T)(String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser(Of T)(String, System.Threading.CancellationToken)
  name.vb: GetUser(Of T)(String, CancellationToken)
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RefreshToken(Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RefreshToken(Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest,System.Threading.CancellationToken)
  id: RefreshToken(Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: RefreshToken(RefreshTokenRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.RefreshToken(RefreshTokenRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RefreshToken(Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: RefreshToken
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 72
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Refresh the user's authentication token.
  example: []
  syntax:
    content: Task<RefreshTokenResponse> RefreshToken(RefreshTokenRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest
      description: The request object containing the refresh token.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse}
      description: The response object containing the refreshed authentication token.
    content.vb: Function RefreshToken(command As RefreshTokenRequest, cancellationToken As CancellationToken = Nothing) As Task(Of RefreshTokenResponse)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RefreshToken*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ResendConfirmationCode(Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ResendConfirmationCode(Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest,System.Threading.CancellationToken)
  id: ResendConfirmationCode(Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: ResendConfirmationCode(ResendConfirmationCodeRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.ResendConfirmationCode(ResendConfirmationCodeRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ResendConfirmationCode(Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ResendConfirmationCode
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 79
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Resend a confirmation code to the user's email or phone number.
  example: []
  syntax:
    content: Task ResendConfirmationCode(ResendConfirmationCodeRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest
      description: The request object containing the user's information.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ResendConfirmationCode(command As ResendConfirmationCodeRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ResendConfirmationCode*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RespondToAuthChallenge(Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RespondToAuthChallenge(Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest,System.Threading.CancellationToken)
  id: RespondToAuthChallenge(Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: RespondToAuthChallenge(RespondToAuthChallengeRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.RespondToAuthChallenge(RespondToAuthChallengeRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RespondToAuthChallenge(Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: RespondToAuthChallenge
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 87
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Respond to an authentication challenge during the sign-in process.
  example: []
  syntax:
    content: Task<AuthChallengeResponse> RespondToAuthChallenge(RespondToAuthChallengeRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest
      description: The request object containing the challenge response.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse}
      description: The response object containing the result of the authentication challenge.
    content.vb: Function RespondToAuthChallenge(command As RespondToAuthChallengeRequest, cancellationToken As CancellationToken = Nothing) As Task(Of AuthChallengeResponse)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RespondToAuthChallenge*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn(Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn(Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest,System.Threading.CancellationToken)
  id: SignIn(Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: SignIn(OtpSignInRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.SignIn(OtpSignInRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn(Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SignIn
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 96
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Authenticate a user using one-time password (OTP) credentials.
  example: []
  syntax:
    content: Task<SignInResponse> SignIn(OtpSignInRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest
      description: The request object containing the OTP credentials.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.SignInResponse}
      description: The response object containing the authentication result.
    content.vb: Function SignIn(command As OtpSignInRequest, cancellationToken As CancellationToken = Nothing) As Task(Of SignInResponse)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn(Innovt.Cloud.AWS.Cognito.Model.SignInRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn(Innovt.Cloud.AWS.Cognito.Model.SignInRequest,System.Threading.CancellationToken)
  id: SignIn(Innovt.Cloud.AWS.Cognito.Model.SignInRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: SignIn(SignInRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.SignIn(SignInRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn(Innovt.Cloud.AWS.Cognito.Model.SignInRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SignIn
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 104
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Authenticate a user using standard credentials (username and password).
  example: []
  syntax:
    content: Task<SignInResponse> SignIn(SignInRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.SignInRequest
      description: The request object containing the standard sign-in credentials.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.SignInResponse}
      description: The response object containing the authentication result.
    content.vb: Function SignIn(command As SignInRequest, cancellationToken As CancellationToken = Nothing) As Task(Of SignInResponse)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignOut(Innovt.Cloud.AWS.Cognito.Model.SignOutRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignOut(Innovt.Cloud.AWS.Cognito.Model.SignOutRequest,System.Threading.CancellationToken)
  id: SignOut(Innovt.Cloud.AWS.Cognito.Model.SignOutRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: SignOut(SignOutRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.SignOut(SignOutRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignOut(Innovt.Cloud.AWS.Cognito.Model.SignOutRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SignOut
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 111
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Sign a user out of the application.
  example: []
  syntax:
    content: Task SignOut(SignOutRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Innovt.Cloud.AWS.Cognito.Model.SignOutRequest
      description: The request object containing the access token.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SignOut(request As SignOutRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignOut*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignUp(Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignUp(Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest,System.Threading.CancellationToken)
  id: SignUp(Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: SignUp(ISignUpRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.SignUp(ISignUpRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignUp(Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SignUp
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 119
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Sign up a new user.
  example: []
  syntax:
    content: Task<SignUpResponse> SignUp(ISignUpRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest
      description: The request object containing the user's sign-up details.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.SignUpResponse}
      description: The response object containing the sign-up confirmation details.
    content.vb: Function SignUp(command As ISignUpRequest, cancellationToken As CancellationToken = Nothing) As Task(Of SignUpResponse)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignUp*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SocialSignIn(Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SocialSignIn(Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest,System.Threading.CancellationToken)
  id: SocialSignIn(Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: SocialSignIn(SocialSignInRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.SocialSignIn(SocialSignInRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SocialSignIn(Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: SocialSignIn
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 127
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Authenticate a user using social media credentials.
  example: []
  syntax:
    content: Task<OAuth2SignInResponse> SocialSignIn(SocialSignInRequest command, CancellationToken cancellationToken)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest
      description: The request object containing the social media sign-in credentials.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse}
      description: The response object containing the social media sign-in result.
    content.vb: Function SocialSignIn(command As SocialSignInRequest, cancellationToken As CancellationToken) As Task(Of OAuth2SignInResponse)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SocialSignIn*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest,System.Threading.CancellationToken)
  id: UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: UpdateUserAttributes(UpdateUserAttributesRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.UpdateUserAttributes(UpdateUserAttributesRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UpdateUserAttributes
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 134
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Update user attributes with new values.
  example: []
  syntax:
    content: Task UpdateUserAttributes(UpdateUserAttributesRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest
      description: The request object containing the updated user attributes.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function UpdateUserAttributes(command As UpdateUserAttributesRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest,System.Threading.CancellationToken)
  id: UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: UpdateUserAttributes(AdminUpdateUserAttributesRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.UpdateUserAttributes(AdminUpdateUserAttributesRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes(Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UpdateUserAttributes
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 143
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: >-
    This method allow you to update user attributes without sending a token. Internally we are calling Admin Update

    User Attributes.
  example: []
  syntax:
    content: Task UpdateUserAttributes(AdminUpdateUserAttributesRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function UpdateUserAttributes(command As AdminUpdateUserAttributesRequest, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.LinkSocialUser(Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.LinkSocialUser(Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest,System.Threading.CancellationToken)
  id: LinkSocialUser(Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: LinkSocialUser(LinkSocialAccountRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.LinkSocialUser(LinkSocialAccountRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.LinkSocialUser(Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: LinkSocialUser
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 150
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: Link existent user account with a social user account to avoid billing issues and other problems.
  example: []
  syntax:
    content: Task<bool> LinkSocialUser(LinkSocialAccountRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest
      description: The request object containing the user pool and email from user.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the operation if needed.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function LinkSocialUser(command As LinkSocialAccountRequest, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.LinkSocialUser*
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.DeleteUser(Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.DeleteUser(Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest,System.Threading.CancellationToken)
  id: DeleteUser(Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider
  langs:
  - csharp
  - vb
  name: DeleteUser(DeleteUserAccountRequest, CancellationToken)
  nameWithType: ICognitoIdentityProvider.DeleteUser(DeleteUserAccountRequest, CancellationToken)
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.DeleteUser(Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DeleteUser
    path: ../src/Innovt.Cloud.AWS.Cognito/ICognitoIdentityProvider.cs
    startLine: 158
  assemblies:
  - Innovt.Cloud.AWS.Cognito
  namespace: Innovt.Cloud.AWS.Cognito
  summary: This method allow you to delete a user account from the user pool.
  example: []
  syntax:
    content: Task<bool> DeleteUser(DeleteUserAccountRequest command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function DeleteUser(command As DeleteUserAccountRequest, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.DeleteUser*
references:
- uid: Innovt.Cloud.AWS.Cognito
  commentId: N:Innovt.Cloud.AWS.Cognito
  href: Innovt.html
  name: Innovt.Cloud.AWS.Cognito
  nameWithType: Innovt.Cloud.AWS.Cognito
  fullName: Innovt.Cloud.AWS.Cognito
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Cognito
    name: Cognito
    href: Innovt.Cloud.AWS.Cognito.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Cognito
    name: Cognito
    href: Innovt.Cloud.AWS.Cognito.html
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ChangePassword*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ChangePassword
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_ChangePassword_Innovt_Cloud_AWS_Cognito_Model_ChangePasswordRequest_System_Threading_CancellationToken_
  name: ChangePassword
  nameWithType: ICognitoIdentityProvider.ChangePassword
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ChangePassword
- uid: Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest.html
  name: ChangePasswordRequest
  nameWithType: ChangePasswordRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.ChangePasswordRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Innovt.Cloud.AWS.Cognito.Model
  commentId: N:Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.html
  name: Innovt.Cloud.AWS.Cognito.Model
  nameWithType: Innovt.Cloud.AWS.Cognito.Model
  fullName: Innovt.Cloud.AWS.Cognito.Model
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Cognito
    name: Cognito
    href: Innovt.Cloud.AWS.Cognito.html
  - name: .
  - uid: Innovt.Cloud.AWS.Cognito.Model
    name: Model
    href: Innovt.Cloud.AWS.Cognito.Model.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Cognito
    name: Cognito
    href: Innovt.Cloud.AWS.Cognito.html
  - name: .
  - uid: Innovt.Cloud.AWS.Cognito.Model
    name: Model
    href: Innovt.Cloud.AWS.Cognito.Model.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmForgotPassword*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmForgotPassword
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_ConfirmForgotPassword_Innovt_Cloud_AWS_Cognito_Model_ConfirmForgotPasswordRequest_System_Threading_CancellationToken_
  name: ConfirmForgotPassword
  nameWithType: ICognitoIdentityProvider.ConfirmForgotPassword
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmForgotPassword
- uid: Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest.html
  name: ConfirmForgotPasswordRequest
  nameWithType: ConfirmForgotPasswordRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.ConfirmForgotPasswordRequest
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmSignUp*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmSignUp
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_ConfirmSignUp_Innovt_Cloud_AWS_Cognito_Model_ConfirmSignUpRequest_System_Threading_CancellationToken_
  name: ConfirmSignUp
  nameWithType: ICognitoIdentityProvider.ConfirmSignUp
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ConfirmSignUp
- uid: Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest.html
  name: ConfirmSignUpRequest
  nameWithType: ConfirmSignUpRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.ConfirmSignUpRequest
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ForgotPassword*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ForgotPassword
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_ForgotPassword_Innovt_Cloud_AWS_Cognito_Model_ForgotPasswordRequest_System_Threading_CancellationToken_
  name: ForgotPassword
  nameWithType: ICognitoIdentityProvider.ForgotPassword
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ForgotPassword
- uid: Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest.html
  name: ForgotPasswordRequest
  nameWithType: ForgotPasswordRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.ForgotPasswordRequest
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_GetUser__1_Innovt_Cloud_AWS_Cognito_Model_GetUserRequest_System_Threading_CancellationToken_
  name: GetUser
  nameWithType: ICognitoIdentityProvider.GetUser
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.GetUser
- uid: Innovt.Cloud.AWS.Cognito.Model.GetUserRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.GetUserRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.GetUserRequest.html
  name: GetUserRequest
  nameWithType: GetUserRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.GetUserRequest
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RefreshToken*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RefreshToken
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_RefreshToken_Innovt_Cloud_AWS_Cognito_Model_RefreshTokenRequest_System_Threading_CancellationToken_
  name: RefreshToken
  nameWithType: ICognitoIdentityProvider.RefreshToken
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RefreshToken
- uid: Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest.html
  name: RefreshTokenRequest
  nameWithType: RefreshTokenRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.RefreshTokenRequest
- uid: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse}
  commentId: T:System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RefreshTokenResponse>
  nameWithType: Task<RefreshTokenResponse>
  fullName: System.Threading.Tasks.Task<Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse>
  nameWithType.vb: Task(Of RefreshTokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse)
  name.vb: Task(Of RefreshTokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse
    name: RefreshTokenResponse
    href: Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse
    name: RefreshTokenResponse
    href: Innovt.Cloud.AWS.Cognito.Model.RefreshTokenResponse.html
  - name: )
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ResendConfirmationCode*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ResendConfirmationCode
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_ResendConfirmationCode_Innovt_Cloud_AWS_Cognito_Model_ResendConfirmationCodeRequest_System_Threading_CancellationToken_
  name: ResendConfirmationCode
  nameWithType: ICognitoIdentityProvider.ResendConfirmationCode
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.ResendConfirmationCode
- uid: Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest.html
  name: ResendConfirmationCodeRequest
  nameWithType: ResendConfirmationCodeRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.ResendConfirmationCodeRequest
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RespondToAuthChallenge*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RespondToAuthChallenge
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_RespondToAuthChallenge_Innovt_Cloud_AWS_Cognito_Model_RespondToAuthChallengeRequest_System_Threading_CancellationToken_
  name: RespondToAuthChallenge
  nameWithType: ICognitoIdentityProvider.RespondToAuthChallenge
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.RespondToAuthChallenge
- uid: Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest.html
  name: RespondToAuthChallengeRequest
  nameWithType: RespondToAuthChallengeRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.RespondToAuthChallengeRequest
- uid: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse}
  commentId: T:System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AuthChallengeResponse>
  nameWithType: Task<AuthChallengeResponse>
  fullName: System.Threading.Tasks.Task<Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse>
  nameWithType.vb: Task(Of AuthChallengeResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse)
  name.vb: Task(Of AuthChallengeResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse
    name: AuthChallengeResponse
    href: Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse
    name: AuthChallengeResponse
    href: Innovt.Cloud.AWS.Cognito.Model.AuthChallengeResponse.html
  - name: )
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_SignIn_Innovt_Cloud_AWS_Cognito_Model_OtpSignInRequest_System_Threading_CancellationToken_
  name: SignIn
  nameWithType: ICognitoIdentityProvider.SignIn
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignIn
- uid: Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest.html
  name: OtpSignInRequest
  nameWithType: OtpSignInRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.OtpSignInRequest
- uid: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.SignInResponse}
  commentId: T:System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.SignInResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SignInResponse>
  nameWithType: Task<SignInResponse>
  fullName: System.Threading.Tasks.Task<Innovt.Cloud.AWS.Cognito.Model.SignInResponse>
  nameWithType.vb: Task(Of SignInResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Cloud.AWS.Cognito.Model.SignInResponse)
  name.vb: Task(Of SignInResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Cloud.AWS.Cognito.Model.SignInResponse
    name: SignInResponse
    href: Innovt.Cloud.AWS.Cognito.Model.SignInResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Cloud.AWS.Cognito.Model.SignInResponse
    name: SignInResponse
    href: Innovt.Cloud.AWS.Cognito.Model.SignInResponse.html
  - name: )
- uid: Innovt.Cloud.AWS.Cognito.Model.SignInRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.SignInRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.SignInRequest.html
  name: SignInRequest
  nameWithType: SignInRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.SignInRequest
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignOut*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignOut
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_SignOut_Innovt_Cloud_AWS_Cognito_Model_SignOutRequest_System_Threading_CancellationToken_
  name: SignOut
  nameWithType: ICognitoIdentityProvider.SignOut
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignOut
- uid: Innovt.Cloud.AWS.Cognito.Model.SignOutRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.SignOutRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.SignOutRequest.html
  name: SignOutRequest
  nameWithType: SignOutRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.SignOutRequest
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignUp*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignUp
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_SignUp_Innovt_Cloud_AWS_Cognito_Model_ISignUpRequest_System_Threading_CancellationToken_
  name: SignUp
  nameWithType: ICognitoIdentityProvider.SignUp
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SignUp
- uid: Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest.html
  name: ISignUpRequest
  nameWithType: ISignUpRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.ISignUpRequest
- uid: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.SignUpResponse}
  commentId: T:System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.SignUpResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SignUpResponse>
  nameWithType: Task<SignUpResponse>
  fullName: System.Threading.Tasks.Task<Innovt.Cloud.AWS.Cognito.Model.SignUpResponse>
  nameWithType.vb: Task(Of SignUpResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Cloud.AWS.Cognito.Model.SignUpResponse)
  name.vb: Task(Of SignUpResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Cloud.AWS.Cognito.Model.SignUpResponse
    name: SignUpResponse
    href: Innovt.Cloud.AWS.Cognito.Model.SignUpResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Cloud.AWS.Cognito.Model.SignUpResponse
    name: SignUpResponse
    href: Innovt.Cloud.AWS.Cognito.Model.SignUpResponse.html
  - name: )
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SocialSignIn*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SocialSignIn
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_SocialSignIn_Innovt_Cloud_AWS_Cognito_Model_SocialSignInRequest_System_Threading_CancellationToken_
  name: SocialSignIn
  nameWithType: ICognitoIdentityProvider.SocialSignIn
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.SocialSignIn
- uid: Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest.html
  name: SocialSignInRequest
  nameWithType: SocialSignInRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.SocialSignInRequest
- uid: System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse}
  commentId: T:System.Threading.Tasks.Task{Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<OAuth2SignInResponse>
  nameWithType: Task<OAuth2SignInResponse>
  fullName: System.Threading.Tasks.Task<Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse>
  nameWithType.vb: Task(Of OAuth2SignInResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse)
  name.vb: Task(Of OAuth2SignInResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse
    name: OAuth2SignInResponse
    href: Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse
    name: OAuth2SignInResponse
    href: Innovt.Cloud.AWS.Cognito.Model.OAuth2SignInResponse.html
  - name: )
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_UpdateUserAttributes_Innovt_Cloud_AWS_Cognito_Model_UpdateUserAttributesRequest_System_Threading_CancellationToken_
  name: UpdateUserAttributes
  nameWithType: ICognitoIdentityProvider.UpdateUserAttributes
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.UpdateUserAttributes
- uid: Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest.html
  name: UpdateUserAttributesRequest
  nameWithType: UpdateUserAttributesRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.UpdateUserAttributesRequest
- uid: Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest.html
  name: AdminUpdateUserAttributesRequest
  nameWithType: AdminUpdateUserAttributesRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.AdminUpdateUserAttributesRequest
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.LinkSocialUser*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.LinkSocialUser
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_LinkSocialUser_Innovt_Cloud_AWS_Cognito_Model_LinkSocialAccountRequest_System_Threading_CancellationToken_
  name: LinkSocialUser
  nameWithType: ICognitoIdentityProvider.LinkSocialUser
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.LinkSocialUser
- uid: Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest.html
  name: LinkSocialAccountRequest
  nameWithType: LinkSocialAccountRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.LinkSocialAccountRequest
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.DeleteUser*
  commentId: Overload:Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.DeleteUser
  href: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.html#Innovt_Cloud_AWS_Cognito_ICognitoIdentityProvider_DeleteUser_Innovt_Cloud_AWS_Cognito_Model_DeleteUserAccountRequest_System_Threading_CancellationToken_
  name: DeleteUser
  nameWithType: ICognitoIdentityProvider.DeleteUser
  fullName: Innovt.Cloud.AWS.Cognito.ICognitoIdentityProvider.DeleteUser
- uid: Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest
  commentId: T:Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest
  parent: Innovt.Cloud.AWS.Cognito.Model
  href: Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest.html
  name: DeleteUserAccountRequest
  nameWithType: DeleteUserAccountRequest
  fullName: Innovt.Cloud.AWS.Cognito.Model.DeleteUserAccountRequest
