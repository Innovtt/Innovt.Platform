### YamlMime:ManagedReference
items:
- uid: Innovt.Cloud.AWS.S3.S3FileSystem
  commentId: T:Innovt.Cloud.AWS.S3.S3FileSystem
  id: S3FileSystem
  parent: Innovt.Cloud.AWS.S3
  children:
  - Innovt.Cloud.AWS.S3.S3FileSystem.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  - Innovt.Cloud.AWS.S3.S3FileSystem.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject(System.String,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.DisposeServices
  - Innovt.Cloud.AWS.S3.S3FileSystem.Download(System.String,System.String,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(System.String,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl(System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists(System.String,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl(System.String,System.String,System.DateTime)
  - Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(System.String,System.String,System.String,System.String,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  - Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  - Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: S3FileSystem
  nameWithType: S3FileSystem
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem
  type: Class
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: S3FileSystem
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 27
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Amazon S3 file system implementation.
  example: []
  syntax:
    content: 'public class S3FileSystem : AwsBaseService, IDisposable, IFileSystem'
    content.vb: Public Class S3FileSystem Inherits AwsBaseService Implements IDisposable, IFileSystem
  inheritance:
  - System.Object
  - Innovt.Cloud.AWS.AwsBaseService
  implements:
  - System.IDisposable
  - Innovt.Cloud.File.IFileSystem
  inheritedMembers:
  - Innovt.Cloud.AWS.AwsBaseService.Configuration
  - Innovt.Cloud.AWS.AwsBaseService.RetryCount
  - Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
  - Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
  - Innovt.Cloud.AWS.AwsBaseService.Logger
  - Innovt.Cloud.AWS.AwsBaseService.Dispose
  - Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  - Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  - Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  - Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  - Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  - Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  - Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Innovt.Core.Utilities.Extensions.IsNull
  - System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  - System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration)'
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: S3FileSystem(ILogger, IAwsConfiguration)
  nameWithType: S3FileSystem.S3FileSystem(ILogger, IAwsConfiguration)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.S3FileSystem(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 38
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.S3.S3FileSystem" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public S3FileSystem(ILogger logger, IAwsConfiguration configuration)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger.
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
      description: The AWS configuration.
    content.vb: Public Sub New(logger As ILogger, configuration As IAwsConfiguration)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.#ctor*
  nameWithType.vb: S3FileSystem.New(ILogger, IAwsConfiguration)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration)
  name.vb: New(ILogger, IAwsConfiguration)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)
  id: '#ctor(Innovt.Core.CrossCutting.Log.ILogger,Innovt.Cloud.AWS.Configuration.IAwsConfiguration,System.String)'
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: S3FileSystem(ILogger, IAwsConfiguration, string)
  nameWithType: S3FileSystem.S3FileSystem(ILogger, IAwsConfiguration, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.S3FileSystem(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, string)
  type: Constructor
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: .ctor
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 48
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Initializes a new instance of the <xref href="Innovt.Cloud.AWS.S3.S3FileSystem" data-throw-if-not-resolved="false"></xref> class with a specific AWS region.
  example: []
  syntax:
    content: public S3FileSystem(ILogger logger, IAwsConfiguration configuration, string region)
    parameters:
    - id: logger
      type: Innovt.Core.CrossCutting.Log.ILogger
      description: The logger.
    - id: configuration
      type: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
      description: The AWS configuration.
    - id: region
      type: System.String
      description: The AWS region.
    content.vb: Public Sub New(logger As ILogger, configuration As IAwsConfiguration, region As String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.#ctor*
  nameWithType.vb: S3FileSystem.New(ILogger, IAwsConfiguration, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.New(Innovt.Core.CrossCutting.Log.ILogger, Innovt.Cloud.AWS.Configuration.IAwsConfiguration, String)
  name.vb: New(ILogger, IAwsConfiguration, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl(System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl(System.String)
  id: ExtractBucketFromGetUrl(System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: ExtractBucketFromGetUrl(string)
  nameWithType: S3FileSystem.ExtractBucketFromGetUrl(string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: ExtractBucketFromGetUrl
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 67
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Extracts bucket name and file key from the S3 bucket URL.
  example: []
  syntax:
    content: public (string bucket, string fileKey) ExtractBucketFromGetUrl(string bucketUrl)
    parameters:
    - id: bucketUrl
      type: System.String
      description: The S3 bucket URL.
    return:
      type: System.ValueTuple{System.String,System.String}
      description: A tuple containing the bucket name and the file key.
    content.vb: Public Function ExtractBucketFromGetUrl(bucketUrl As String) As (bucket As String, fileKey As String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl*
  implements:
  - Innovt.Cloud.File.IFileSystem.ExtractBucketFromGetUrl(System.String)
  nameWithType.vb: S3FileSystem.ExtractBucketFromGetUrl(String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl(String)
  name.vb: ExtractBucketFromGetUrl(String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(System.String,System.String,System.String,System.String,System.String)
  id: PutObject(System.String,System.String,System.String,System.String,System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: PutObject(string, string, string, string, string)
  nameWithType: S3FileSystem.PutObject(string, string, string, string, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(string, string, string, string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: PutObject
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 94
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Uploads a file to an Amazon S3 bucket.
  example: []
  syntax:
    content: public string PutObject(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: filePath
      type: System.String
      description: The local file path of the file to upload.
    - id: contentType
      type: System.String
      description: The content type of the file (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control list (optional).
    return:
      type: System.String
      description: The key of the uploaded object in the S3 bucket.
    content.vb: Public Function PutObject(bucketName As String, filePath As String, contentType As String = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing) As String
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject*
  implements:
  - Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.String,System.String,System.String,System.String)
  nameWithType.vb: S3FileSystem.PutObject(String, String, String, String, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(String, String, String, String, String)
  name.vb: PutObject(String, String, String, String, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
  id: PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: PutObject(string, Stream, string, string, string, string)
  nameWithType: S3FileSystem.PutObject(string, Stream, string, string, string, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(string, System.IO.Stream, string, string, string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: PutObject
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 112
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Uploads a stream to an Amazon S3 bucket.
  example: []
  syntax:
    content: public string PutObject(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: stream
      type: System.IO.Stream
      description: The stream to upload.
    - id: fileName
      type: System.String
      description: The name to assign to the uploaded file.
    - id: contentType
      type: System.String
      description: The content type of the file (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control list (optional).
    return:
      type: System.String
      description: The key of the uploaded object in the S3 bucket.
    content.vb: Public Function PutObject(bucketName As String, stream As Stream, fileName As String, contentType As String = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing) As String
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject*
  implements:
  - Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
  nameWithType.vb: S3FileSystem.PutObject(String, Stream, String, String, String, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject(String, System.IO.Stream, String, String, String, String)
  name.vb: PutObject(String, Stream, String, String, String, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: PutObjectAsync(string, Stream, string, string, string, string, CancellationToken)
  nameWithType: S3FileSystem.PutObjectAsync(string, Stream, string, string, string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(string, System.IO.Stream, string, string, string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: PutObjectAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 131
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously uploads a stream to an Amazon S3 bucket.
  example: []
  syntax:
    content: public Task<string> PutObjectAsync(string bucketName, Stream stream, string fileName, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: stream
      type: System.IO.Stream
      description: The stream to upload.
    - id: fileName
      type: System.String
      description: The name to assign to the uploaded file.
    - id: contentType
      type: System.String
      description: The content type of the file (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control list (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The key of the uploaded object in the S3 bucket.
    content.vb: Public Function PutObjectAsync(bucketName As String, stream As Stream, fileName As String, contentType As String = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.PutObjectAsync(String, Stream, String, String, String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(String, System.IO.Stream, String, String, String, String, System.Threading.CancellationToken)
  name.vb: PutObjectAsync(String, Stream, String, String, String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: PutObjectAsync(string, string, string, string, string, CancellationToken)
  nameWithType: S3FileSystem.PutObjectAsync(string, string, string, string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(string, string, string, string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: PutObjectAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 151
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously uploads a file to an Amazon S3 bucket.
  example: []
  syntax:
    content: public Task<string> PutObjectAsync(string bucketName, string filePath, string contentType = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: filePath
      type: System.String
      description: The local file path of the file to upload.
    - id: contentType
      type: System.String
      description: The content type of the file (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control list (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The key of the uploaded object in the S3 bucket.
    content.vb: Public Function PutObjectAsync(bucketName As String, filePath As String, contentType As String = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.PutObjectAsync(String, String, String, String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync(String, String, String, String, String, System.Threading.CancellationToken)
  name.vb: PutObjectAsync(String, String, String, String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.Download(System.String,System.String,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.Download(System.String,System.String,System.String)
  id: Download(System.String,System.String,System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: Download(string, string, string)
  nameWithType: S3FileSystem.Download(string, string, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.Download(string, string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Download
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 167
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Downloads a file from an Amazon S3 bucket.
  example: []
  syntax:
    content: public void Download(string bucketName, string fileName, string destination)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: fileName
      type: System.String
      description: The name of the file to download.
    - id: destination
      type: System.String
      description: The local file path to save the downloaded file.
    content.vb: Public Sub Download(bucketName As String, fileName As String, destination As String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.Download*
  implements:
  - Innovt.Cloud.File.IFileSystem.Download(System.String,System.String,System.String)
  nameWithType.vb: S3FileSystem.Download(String, String, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.Download(String, String, String)
  name.vb: Download(String, String, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(System.String,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(System.String,System.String)
  id: DownloadStream(System.String,System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: DownloadStream(string, string)
  nameWithType: S3FileSystem.DownloadStream(string, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DownloadStream
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 185
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Downloads a file from an Amazon S3 bucket as a stream.
  example: []
  syntax:
    content: public Stream DownloadStream(string bucketName, string fileName)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: fileName
      type: System.String
      description: The name of the file to download.
    return:
      type: System.IO.Stream
      description: A stream containing the downloaded file's content.
    content.vb: Public Function DownloadStream(bucketName As String, fileName As String) As Stream
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream*
  implements:
  - Innovt.Cloud.File.IFileSystem.DownloadStream(System.String,System.String)
  nameWithType.vb: S3FileSystem.DownloadStream(String, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(String, String)
  name.vb: DownloadStream(String, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(System.String)
  id: DownloadStream(System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: DownloadStream(string)
  nameWithType: S3FileSystem.DownloadStream(string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DownloadStream
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 205
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Downloads a file from an Amazon S3 bucket as a stream using the provided URL.
  example: []
  syntax:
    content: public Stream DownloadStream(string url)
    parameters:
    - id: url
      type: System.String
      description: The URL of the file to download from Amazon S3.
    return:
      type: System.IO.Stream
      description: A stream containing the downloaded file's content.
    content.vb: Public Function DownloadStream(url As String) As Stream
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream*
  implements:
  - Innovt.Cloud.File.IFileSystem.DownloadStream(System.String)
  nameWithType.vb: S3FileSystem.DownloadStream(String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream(String)
  name.vb: DownloadStream(String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: DownloadStreamAsync(string, string, CancellationToken)
  nameWithType: S3FileSystem.DownloadStreamAsync(string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DownloadStreamAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 219
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously downloads a file from an Amazon S3 bucket as a stream.
  example: []
  syntax:
    content: public Task<Stream> DownloadStreamAsync(string bucketName, string fileName, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: fileName
      type: System.String
      description: The name of the file to download.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A stream containing the downloaded file's content.
    content.vb: Public Function DownloadStreamAsync(bucketName As String, fileName As String, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.DownloadStreamAsync(String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(String, String, System.Threading.CancellationToken)
  name.vb: DownloadStreamAsync(String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(System.String,System.Threading.CancellationToken)
  id: DownloadStreamAsync(System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: DownloadStreamAsync(string, CancellationToken)
  nameWithType: S3FileSystem.DownloadStreamAsync(string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DownloadStreamAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 244
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously downloads a file from an Amazon S3 bucket as a stream using the provided URL.
  example: []
  syntax:
    content: public Task<Stream> DownloadStreamAsync(string url, CancellationToken cancellationToken = default)
    parameters:
    - id: url
      type: System.String
      description: The URL of the file to download from Amazon S3.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A stream containing the downloaded file's content.
    content.vb: Public Function DownloadStreamAsync(url As String, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.DownloadStreamAsync(String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync(String, System.Threading.CancellationToken)
  name.vb: DownloadStreamAsync(String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
  id: GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: GetObjectContentAsync(string, Encoding, CancellationToken)
  nameWithType: S3FileSystem.GetObjectContentAsync(string, Encoding, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(string, System.Text.Encoding, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetObjectContentAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 258
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously gets the content of an object from a specified URL with the given encoding.
  example: []
  syntax:
    content: public Task<string> GetObjectContentAsync(string url, Encoding encoding, CancellationToken cancellationToken = default)
    parameters:
    - id: url
      type: System.String
      description: The URL of the object to retrieve.
    - id: encoding
      type: System.Text.Encoding
      description: The encoding to use for reading the object's content.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The content of the object as a string.
    content.vb: Public Function GetObjectContentAsync(url As String, encoding As Encoding, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.GetObjectContentAsync(String, Encoding, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(String, System.Text.Encoding, System.Threading.CancellationToken)
  name.vb: GetObjectContentAsync(String, Encoding, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
  id: GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: GetObjectContentAsync(string, string, Encoding, CancellationToken)
  nameWithType: S3FileSystem.GetObjectContentAsync(string, string, Encoding, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(string, string, System.Text.Encoding, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetObjectContentAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 266
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Gets the content of the object from the specified URL asynchronously.
  example: []
  syntax:
    content: public Task<string> GetObjectContentAsync(string bucketName, string key, Encoding encoding, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The Bucket name.
    - id: key
      type: System.String
      description: The file url
    - id: encoding
      type: System.Text.Encoding
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Function GetObjectContentAsync(bucketName As String, key As String, encoding As Encoding, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.GetObjectContentAsync(String, String, Encoding, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync(String, String, System.Text.Encoding, System.Threading.CancellationToken)
  name.vb: GetObjectContentAsync(String, String, Encoding, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
  id: GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: GetObjectFromJsonAsync<T>(Uri, CancellationToken)
  nameWithType: S3FileSystem.GetObjectFromJsonAsync<T>(Uri, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync<T>(System.Uri, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetObjectFromJsonAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 280
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: When you need to get a content from Json file as an typed method.
  example: []
  syntax:
    content: public Task<T> GetObjectFromJsonAsync<T>(Uri filePath, CancellationToken cancellationToken = default)
    parameters:
    - id: filePath
      type: System.Uri
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: ''
    content.vb: Public Function GetObjectFromJsonAsync(Of T)(filePath As Uri, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.GetObjectFromJsonAsync(Of T)(Uri, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync(Of T)(System.Uri, System.Threading.CancellationToken)
  name.vb: GetObjectFromJsonAsync(Of T)(Uri, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl(System.String,System.String,System.DateTime)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl(System.String,System.String,System.DateTime)
  id: GetPreSignedUrl(System.String,System.String,System.DateTime)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: GetPreSignedUrl(string, string, DateTime)
  nameWithType: S3FileSystem.GetPreSignedUrl(string, string, DateTime)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl(string, string, System.DateTime)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GetPreSignedUrl
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 302
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Gets a pre-signed URL for accessing an object in the S3 bucket.
  example: []
  syntax:
    content: public string GetPreSignedUrl(string bucketName, string key, DateTime expires)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: key
      type: System.String
      description: The key of the object in the S3 bucket.
    - id: expires
      type: System.DateTime
      description: The expiration date and time for the pre-signed URL.
    return:
      type: System.String
      description: The pre-signed URL for accessing the object.
    content.vb: Public Function GetPreSignedUrl(bucketName As String, key As String, expires As Date) As String
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl*
  implements:
  - Innovt.Cloud.File.IFileSystem.GetPreSignedUrl(System.String,System.String,System.DateTime)
  nameWithType.vb: S3FileSystem.GetPreSignedUrl(String, String, Date)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl(String, String, Date)
  name.vb: GetPreSignedUrl(String, String, Date)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: GeneratePreSignedUrl(string, string, DateTime, IDictionary<string, object>)
  nameWithType: S3FileSystem.GeneratePreSignedUrl(string, string, DateTime, IDictionary<string, object>)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl(string, string, System.DateTime, System.Collections.Generic.IDictionary<string, object>)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: GeneratePreSignedUrl
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 327
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Generates a pre-signed URL for accessing an object in the S3 bucket.
  example: []
  syntax:
    content: public string GeneratePreSignedUrl(string bucketName, string key, DateTime expiration, IDictionary<string, object> additionalProperties)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: key
      type: System.String
      description: The key of the object in the S3 bucket.
    - id: expiration
      type: System.DateTime
      description: The expiration date and time for the pre-signed URL.
    - id: additionalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: Additional properties for the pre-signed URL (optional).
    return:
      type: System.String
      description: The pre-signed URL for accessing the object.
    content.vb: Public Function GeneratePreSignedUrl(bucketName As String, key As String, expiration As Date, additionalProperties As IDictionary(Of String, Object)) As String
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl*
  implements:
  - Innovt.Cloud.File.IFileSystem.GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: S3FileSystem.GeneratePreSignedUrl(String, String, Date, IDictionary(Of String, Object))
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl(String, String, Date, System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: GeneratePreSignedUrl(String, String, Date, IDictionary(Of String, Object))
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: UploadDirectoryAsync(string, string, string, string, CancellationToken)
  nameWithType: S3FileSystem.UploadDirectoryAsync(string, string, string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync(string, string, string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UploadDirectoryAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 348
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously uploads a directory to the specified Amazon S3 bucket.
  example: []
  syntax:
    content: public Task UploadDirectoryAsync(string bucketName, string directory, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: directory
      type: System.String
      description: The path of the local directory to upload.
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control for the uploaded files (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Function UploadDirectoryAsync(bucketName As String, directory As String, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.UploadDirectoryAsync(String, String, String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync(String, String, String, String, System.Threading.CancellationToken)
  name.vb: UploadDirectoryAsync(String, String, String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  id: Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: Upload(string, Stream, string, IList<KeyValuePair<string, string>>, string, string)
  nameWithType: S3FileSystem.Upload(string, Stream, string, IList<KeyValuePair<string, string>>, string, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.Upload(string, System.IO.Stream, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Upload
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 385
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Uploads a file to the specified Amazon S3 bucket from a stream.
  example: []
  syntax:
    content: public string Upload(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: stream
      type: System.IO.Stream
      description: The stream containing the file content to upload.
    - id: fileName
      type: System.String
      description: The name of the file to upload.
    - id: metadata
      type: System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: Metadata key-value pairs for the uploaded file (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control for the uploaded file (optional).
    return:
      type: System.String
      description: The URL of the uploaded file.
    content.vb: Public Function Upload(bucketName As String, stream As Stream, fileName As String, metadata As IList(Of KeyValuePair(Of String, String)) = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing) As String
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.Upload*
  implements:
  - Innovt.Cloud.File.IFileSystem.Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  nameWithType.vb: S3FileSystem.Upload(String, Stream, String, IList(Of KeyValuePair(Of String, String)), String, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.Upload(String, System.IO.Stream, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String)
  name.vb: Upload(String, Stream, String, IList(Of KeyValuePair(Of String, String)), String, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  id: Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: Upload(string, string, IList<KeyValuePair<string, string>>, string, string)
  nameWithType: S3FileSystem.Upload(string, string, IList<KeyValuePair<string, string>>, string, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.Upload(string, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: Upload
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 409
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Uploads a file to the specified Amazon S3 bucket from a local file path.
  example: []
  syntax:
    content: public string Upload(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: filePath
      type: System.String
      description: The local file path to upload.
    - id: metadata
      type: System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: Metadata key-value pairs for the uploaded file (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control for the uploaded file (optional).
    return:
      type: System.String
      description: The URL of the uploaded file.
    content.vb: Public Function Upload(bucketName As String, filePath As String, metadata As IList(Of KeyValuePair(Of String, String)) = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing) As String
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.Upload*
  implements:
  - Innovt.Cloud.File.IFileSystem.Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  nameWithType.vb: S3FileSystem.Upload(String, String, IList(Of KeyValuePair(Of String, String)), String, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.Upload(String, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String)
  name.vb: Upload(String, String, IList(Of KeyValuePair(Of String, String)), String, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  id: UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: UploadAsync(string, Stream, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  nameWithType: S3FileSystem.UploadAsync(string, Stream, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(string, System.IO.Stream, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UploadAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 430
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously uploads a file to the specified Amazon S3 bucket from a stream.
  example: []
  syntax:
    content: public Task<string> UploadAsync(string bucketName, Stream stream, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: stream
      type: System.IO.Stream
      description: The stream containing the file content to upload.
    - id: fileName
      type: System.String
      description: The name of the file to upload.
    - id: metadata
      type: System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: Metadata key-value pairs for the uploaded file (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control for the uploaded file (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The URL of the uploaded file.
    content.vb: Public Function UploadAsync(bucketName As String, stream As Stream, fileName As String, metadata As IList(Of KeyValuePair(Of String, String)) = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.UploadAsync(String, Stream, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(String, System.IO.Stream, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String, System.Threading.CancellationToken)
  name.vb: UploadAsync(String, Stream, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  id: UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: UploadAsync(string, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  nameWithType: S3FileSystem.UploadAsync(string, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(string, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UploadAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 454
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously uploads an object from a local file path to the specified Amazon S3 bucket.
  example: []
  syntax:
    content: public Task<string> UploadAsync(string bucketName, string filePath, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: filePath
      type: System.String
      description: The local file path to upload.
    - id: metadata
      type: System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: Metadata key-value pairs for the uploaded object (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control for the uploaded object (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The URL of the uploaded object.
    content.vb: Public Function UploadAsync(bucketName As String, filePath As String, metadata As IList(Of KeyValuePair(Of String, String)) = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.UploadAsync(String, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync(String, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String, System.Threading.CancellationToken)
  name.vb: UploadAsync(String, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: FolderExistsAsync(string, string, CancellationToken)
  nameWithType: S3FileSystem.FolderExistsAsync(string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync(string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FolderExistsAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 474
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously checks if a folder exists in the specified Amazon S3 bucket.
  example: []
  syntax:
    content: public Task<bool> FolderExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: key
      type: System.String
      description: The key representing the folder in the S3 bucket.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the folder exists; otherwise, false.
    content.vb: Public Function FolderExistsAsync(bucketName As String, key As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.FolderExistsAsync(String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync(String, String, System.Threading.CancellationToken)
  name.vb: FolderExistsAsync(String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: FileExistsAsync(string, string, CancellationToken)
  nameWithType: S3FileSystem.FileExistsAsync(string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync(string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FileExistsAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 489
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously checks if a file exists in the specified Amazon S3 bucket.
  example: []
  syntax:
    content: public Task<bool> FileExistsAsync(string bucketName, string key, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: key
      type: System.String
      description: The key representing the file in the S3 bucket.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the file exists; otherwise, false.
    content.vb: Public Function FileExistsAsync(bucketName As String, key As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.FileExistsAsync(String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync(String, String, System.Threading.CancellationToken)
  name.vb: FileExistsAsync(String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists(System.String,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists(System.String,System.String)
  id: FolderExists(System.String,System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: FolderExists(string, string)
  nameWithType: S3FileSystem.FolderExists(string, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists(string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: FolderExists
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 503
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Synchronously checks if a folder exists in the specified Amazon S3 bucket.
  example: []
  syntax:
    content: public bool FolderExists(string bucketName, string key)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: key
      type: System.String
      description: The key representing the folder in the S3 bucket.
    return:
      type: System.Boolean
      description: True if the folder exists; otherwise, false.
    content.vb: Public Function FolderExists(bucketName As String, key As String) As Boolean
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists*
  implements:
  - Innovt.Cloud.File.IFileSystem.FolderExists(System.String,System.String)
  nameWithType.vb: S3FileSystem.FolderExists(String, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists(String, String)
  name.vb: FolderExists(String, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: DeleteObjectAsync(string, string, CancellationToken)
  nameWithType: S3FileSystem.DeleteObjectAsync(string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync(string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DeleteObjectAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 515
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously deletes an object (file or folder) from the specified Amazon S3 bucket.
  example: []
  syntax:
    content: public Task<bool> DeleteObjectAsync(string bucketName, string key, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: key
      type: System.String
      description: The key of the object to delete.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the object was successfully deleted; otherwise, false.
    content.vb: Public Function DeleteObjectAsync(bucketName As String, key As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.DeleteObjectAsync(String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync(String, String, System.Threading.CancellationToken)
  name.vb: DeleteObjectAsync(String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject(System.String,System.String)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject(System.String,System.String)
  id: DeleteObject(System.String,System.String)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: DeleteObject(string, string)
  nameWithType: S3FileSystem.DeleteObject(string, string)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject(string, string)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DeleteObject
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 542
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Synchronously deletes an object (file or folder) from the specified Amazon S3 bucket.
  example: []
  syntax:
    content: public bool DeleteObject(string bucketName, string key)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: key
      type: System.String
      description: The key of the object to delete.
    return:
      type: System.Boolean
      description: True if the object was successfully deleted; otherwise, false.
    content.vb: Public Function DeleteObject(bucketName As String, key As String) As Boolean
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject*
  implements:
  - Innovt.Cloud.File.IFileSystem.DeleteObject(System.String,System.String)
  nameWithType.vb: S3FileSystem.DeleteObject(String, String)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject(String, String)
  name.vb: DeleteObject(String, String)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: CopyObject(string, string, string, string, string, string, CancellationToken)
  nameWithType: S3FileSystem.CopyObject(string, string, string, string, string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject(string, string, string, string, string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: CopyObject
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 558
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously copies an object (file or folder) from the source bucket to the destination bucket.
  example: []
  syntax:
    content: public Task<bool> CopyObject(string sourceBucket, string sourceKey, string destinationBucket, string destinationKey, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default)
    parameters:
    - id: sourceBucket
      type: System.String
      description: The source bucket name.
    - id: sourceKey
      type: System.String
      description: The source key of the object to copy.
    - id: destinationBucket
      type: System.String
      description: The destination bucket name.
    - id: destinationKey
      type: System.String
      description: The destination key for the copied object.
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control for the copied object (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the object was successfully copied; otherwise, false.
    content.vb: Public Function CopyObject(sourceBucket As String, sourceKey As String, destinationBucket As String, destinationKey As String, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject*
  implements:
  - Innovt.Cloud.File.IFileSystem.CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.CopyObject(String, String, String, String, String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject(String, String, String, String, String, String, System.Threading.CancellationToken)
  name.vb: CopyObject(String, String, String, String, String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  id: UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  nameWithType: S3FileSystem.UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync<T>(string, T, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: UploadAsJsonAsync
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 601
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Asynchronously uploads an object serialized as JSON to the specified Amazon S3 bucket.
  example: []
  syntax:
    content: public Task<string> UploadAsJsonAsync<T>(string bucketName, T obj, string fileName, IList<KeyValuePair<string, string>> metadata = null, string serverSideEncryptionMethod = null, string fileAcl = null, CancellationToken cancellationToken = default)
    parameters:
    - id: bucketName
      type: System.String
      description: The name of the S3 bucket.
    - id: obj
      type: '{T}'
      description: The object to serialize and upload.
    - id: fileName
      type: System.String
      description: The name of the file to use for the uploaded object.
    - id: metadata
      type: System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: Metadata key-value pairs for the uploaded object (optional).
    - id: serverSideEncryptionMethod
      type: System.String
      description: The server-side encryption method (optional).
    - id: fileAcl
      type: System.String
      description: The file access control for the uploaded object (optional).
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to cancel the asynchronous operation (optional).
    typeParameters:
    - id: T
      description: The type of the object to serialize.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The URL of the uploaded object.
    content.vb: Public Function UploadAsJsonAsync(Of T)(bucketName As String, obj As T, fileName As String, metadata As IList(Of KeyValuePair(Of String, String)) = Nothing, serverSideEncryptionMethod As String = Nothing, fileAcl As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync*
  implements:
  - Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,{T},System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  nameWithType.vb: S3FileSystem.UploadAsJsonAsync(Of T)(String, T, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync(Of T)(String, T, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String, System.Threading.CancellationToken)
  name.vb: UploadAsJsonAsync(Of T)(String, T, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DisposeServices
  commentId: M:Innovt.Cloud.AWS.S3.S3FileSystem.DisposeServices
  id: DisposeServices
  parent: Innovt.Cloud.AWS.S3.S3FileSystem
  langs:
  - csharp
  - vb
  name: DisposeServices()
  nameWithType: S3FileSystem.DisposeServices()
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DisposeServices()
  type: Method
  source:
    remote:
      path: src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
      branch: feature/ImproveDynamoMapping
      repo: https://github.com/Innovtt/Innovt.Platform.git
    id: DisposeServices
    path: ../src/Innovt.Cloud.AWS.S3/S3FileSystem.cs
    startLine: 779
  assemblies:
  - Innovt.Cloud.AWS.S3
  namespace: Innovt.Cloud.AWS.S3
  summary: Disposes the S3 client instance.
  example: []
  syntax:
    content: protected override void DisposeServices()
    content.vb: Protected Overrides Sub DisposeServices()
  overridden: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  overload: Innovt.Cloud.AWS.S3.S3FileSystem.DisposeServices*
references:
- uid: Innovt.Cloud.AWS.S3
  commentId: N:Innovt.Cloud.AWS.S3
  href: Innovt.html
  name: Innovt.Cloud.AWS.S3
  nameWithType: Innovt.Cloud.AWS.S3
  fullName: Innovt.Cloud.AWS.S3
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.S3
    name: S3
    href: Innovt.Cloud.AWS.S3.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.S3
    name: S3
    href: Innovt.Cloud.AWS.S3.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Innovt.Cloud.AWS.AwsBaseService
  commentId: T:Innovt.Cloud.AWS.AwsBaseService
  parent: Innovt.Cloud.AWS
  href: Innovt.Cloud.AWS.AwsBaseService.html
  name: AwsBaseService
  nameWithType: AwsBaseService
  fullName: Innovt.Cloud.AWS.AwsBaseService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Innovt.Cloud.File.IFileSystem
  commentId: T:Innovt.Cloud.File.IFileSystem
  parent: Innovt.Cloud.File
  href: Innovt.Cloud.File.IFileSystem.html
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: Innovt.Cloud.File.IFileSystem
- uid: Innovt.Cloud.AWS.AwsBaseService.Configuration
  commentId: F:Innovt.Cloud.AWS.AwsBaseService.Configuration
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Configuration
  name: Configuration
  nameWithType: AwsBaseService.Configuration
  fullName: Innovt.Cloud.AWS.AwsBaseService.Configuration
- uid: Innovt.Cloud.AWS.AwsBaseService.RetryCount
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.RetryCount
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_RetryCount
  name: RetryCount
  nameWithType: AwsBaseService.RetryCount
  fullName: Innovt.Cloud.AWS.AwsBaseService.RetryCount
- uid: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CircuitBreakerAllowedExceptions
  name: CircuitBreakerAllowedExceptions
  nameWithType: AwsBaseService.CircuitBreakerAllowedExceptions
  fullName: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerAllowedExceptions
- uid: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CircuitBreakerDurationOfBreak
  name: CircuitBreakerDurationOfBreak
  nameWithType: AwsBaseService.CircuitBreakerDurationOfBreak
  fullName: Innovt.Cloud.AWS.AwsBaseService.CircuitBreakerDurationOfBreak
- uid: Innovt.Cloud.AWS.AwsBaseService.Logger
  commentId: P:Innovt.Cloud.AWS.AwsBaseService.Logger
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Logger
  name: Logger
  nameWithType: AwsBaseService.Logger
  fullName: Innovt.Cloud.AWS.AwsBaseService.Logger
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Dispose
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  name: Dispose()
  nameWithType: AwsBaseService.Dispose()
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  name: GetServiceRegionEndPoint()
  nameWithType: AwsBaseService.GetServiceRegionEndPoint()
  fullName: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
    name: GetServiceRegionEndPoint
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.GetServiceRegionEndPoint
    name: GetServiceRegionEndPoint
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_GetServiceRegionEndPoint
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateService``1
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  name: CreateService<T>()
  nameWithType: AwsBaseService.CreateService<T>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateService<T>()
  nameWithType.vb: AwsBaseService.CreateService(Of T)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateService(Of T)()
  name.vb: CreateService(Of T)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
    name: CreateService
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateService``1
    name: CreateService
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateService__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  name: CreateDefaultRetryAsyncPolicy()
  nameWithType: AwsBaseService.CreateDefaultRetryAsyncPolicy()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
    name: CreateDefaultRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryAsyncPolicy
    name: CreateDefaultRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryAsyncPolicy
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  name: CreateDefaultRetryPolicy()
  nameWithType: AwsBaseService.CreateDefaultRetryPolicy()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
    name: CreateDefaultRetryPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateDefaultRetryPolicy
    name: CreateDefaultRetryPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateDefaultRetryPolicy
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  name: CreateRetryAsyncPolicy<T>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T)()
  name.vb: CreateRetryAsyncPolicy(Of T)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``1
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  name: CreateRetryAsyncPolicy<T, T1>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``2
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  name: CreateRetryAsyncPolicy<T, T1, T2>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``3
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  name: CreateRetryAsyncPolicy<T, T1, T2, T3>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2, T3)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``4
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  name: CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  nameWithType: AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy<T, T1, T2, T3, T4>()
  nameWithType.vb: AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  name.vb: CreateRetryAsyncPolicy(Of T, T1, T2, T3, T4)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateRetryAsyncPolicy``5
    name: CreateRetryAsyncPolicy
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateRetryAsyncPolicy__5
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  name: CreateCircuitBreaker<T, T1>()
  nameWithType: AwsBaseService.CreateCircuitBreaker<T, T1>()
  fullName: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker<T, T1>()
  nameWithType.vb: AwsBaseService.CreateCircuitBreaker(Of T, T1)()
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker(Of T, T1)()
  name.vb: CreateCircuitBreaker(Of T, T1)()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
    name: CreateCircuitBreaker
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.CreateCircuitBreaker``2
    name: CreateCircuitBreaker
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_CreateCircuitBreaker__2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T1
  - name: )
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
  parent: Innovt.Cloud.AWS.AwsBaseService
  isExternal: true
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  name: Dispose(bool)
  nameWithType: AwsBaseService.Dispose(bool)
  fullName: Innovt.Cloud.AWS.AwsBaseService.Dispose(bool)
  nameWithType.vb: AwsBaseService.Dispose(Boolean)
  fullName.vb: Innovt.Cloud.AWS.AwsBaseService.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.Dispose(System.Boolean)
    name: Dispose
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.IsNull
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Extensions.ToStringOrDefault
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  parent: Innovt.Core.Utilities.Extensions
  definition: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  parent: Innovt.Core.Utilities.Mapper.SimpleMapper
  definition: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Innovt.Cloud.AWS
  commentId: N:Innovt.Cloud.AWS
  href: Innovt.html
  name: Innovt.Cloud.AWS
  nameWithType: Innovt.Cloud.AWS
  fullName: Innovt.Cloud.AWS
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
- uid: Innovt.Cloud.File
  commentId: N:Innovt.Cloud.File
  href: Innovt.html
  name: Innovt.Cloud.File
  nameWithType: Innovt.Cloud.File
  fullName: Innovt.Cloud.File
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.File
    name: File
    href: Innovt.Cloud.File.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.File
    name: File
    href: Innovt.Cloud.File.html
- uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.IsNull(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  name: IsNull(object)
  nameWithType: Extensions.IsNull(object)
  fullName: Innovt.Core.Utilities.Extensions.IsNull(object)
  nameWithType.vb: Extensions.IsNull(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.IsNull(Object)
  name.vb: IsNull(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.IsNull(System.Object)
    name: IsNull
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_IsNull_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Extensions
  commentId: T:Innovt.Core.Utilities.Extensions
  parent: Innovt.Core.Utilities
  href: Innovt.Core.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Innovt.Core.Utilities.Extensions
- uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  commentId: M:Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  name: ToStringOrDefault(object)
  nameWithType: Extensions.ToStringOrDefault(object)
  fullName: Innovt.Core.Utilities.Extensions.ToStringOrDefault(object)
  nameWithType.vb: Extensions.ToStringOrDefault(Object)
  fullName.vb: Innovt.Core.Utilities.Extensions.ToStringOrDefault(Object)
  name.vb: ToStringOrDefault(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Extensions.ToStringOrDefault(System.Object)
    name: ToStringOrDefault
    href: Innovt.Core.Utilities.Extensions.html#Innovt_Core_Utilities_Extensions_ToStringOrDefault_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  commentId: M:Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
  isExternal: true
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  name: MapTo<T1>(object)
  nameWithType: SimpleMapper.MapTo<T1>(object)
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo<T1>(object)
  nameWithType.vb: SimpleMapper.MapTo(Of T1)(Object)
  fullName.vb: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo(Of T1)(Object)
  name.vb: MapTo(Of T1)(Object)
  spec.csharp:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: <
  - name: T1
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Innovt.Core.Utilities.Mapper.SimpleMapper.MapTo``1(System.Object)
    name: MapTo
    href: Innovt.Core.Utilities.Mapper.SimpleMapper.html#Innovt_Core_Utilities_Mapper_SimpleMapper_MapTo__1_System_Object_
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Innovt.Core.Utilities.Mapper.SimpleMapper
  commentId: T:Innovt.Core.Utilities.Mapper.SimpleMapper
  parent: Innovt.Core.Utilities.Mapper
  href: Innovt.Core.Utilities.Mapper.SimpleMapper.html
  name: SimpleMapper
  nameWithType: SimpleMapper
  fullName: Innovt.Core.Utilities.Mapper.SimpleMapper
- uid: Innovt.Core.Utilities
  commentId: N:Innovt.Core.Utilities
  href: Innovt.html
  name: Innovt.Core.Utilities
  nameWithType: Innovt.Core.Utilities
  fullName: Innovt.Core.Utilities
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
- uid: Innovt.Core.Utilities.Mapper
  commentId: N:Innovt.Core.Utilities.Mapper
  href: Innovt.html
  name: Innovt.Core.Utilities.Mapper
  nameWithType: Innovt.Core.Utilities.Mapper
  fullName: Innovt.Core.Utilities.Mapper
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.Utilities
    name: Utilities
    href: Innovt.Core.Utilities.html
  - name: .
  - uid: Innovt.Core.Utilities.Mapper
    name: Mapper
    href: Innovt.Core.Utilities.Mapper.html
- uid: Innovt.Cloud.AWS.S3.S3FileSystem
  commentId: T:Innovt.Cloud.AWS.S3.S3FileSystem
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html
  name: S3FileSystem
  nameWithType: S3FileSystem
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.#ctor*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.#ctor
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem__ctor_Innovt_Core_CrossCutting_Log_ILogger_Innovt_Cloud_AWS_Configuration_IAwsConfiguration_
  name: S3FileSystem
  nameWithType: S3FileSystem.S3FileSystem
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.S3FileSystem
  nameWithType.vb: S3FileSystem.New
  fullName.vb: Innovt.Cloud.AWS.S3.S3FileSystem.New
  name.vb: New
- uid: Innovt.Core.CrossCutting.Log.ILogger
  commentId: T:Innovt.Core.CrossCutting.Log.ILogger
  parent: Innovt.Core.CrossCutting.Log
  href: Innovt.Core.CrossCutting.Log.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Innovt.Core.CrossCutting.Log.ILogger
- uid: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
  commentId: T:Innovt.Cloud.AWS.Configuration.IAwsConfiguration
  parent: Innovt.Cloud.AWS.Configuration
  href: Innovt.Cloud.AWS.Configuration.IAwsConfiguration.html
  name: IAwsConfiguration
  nameWithType: IAwsConfiguration
  fullName: Innovt.Cloud.AWS.Configuration.IAwsConfiguration
- uid: Innovt.Core.CrossCutting.Log
  commentId: N:Innovt.Core.CrossCutting.Log
  href: Innovt.html
  name: Innovt.Core.CrossCutting.Log
  nameWithType: Innovt.Core.CrossCutting.Log
  fullName: Innovt.Core.CrossCutting.Log
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Core
    name: Core
    href: Innovt.Core.html
  - name: .
  - uid: Innovt.Core.CrossCutting
    name: CrossCutting
    href: Innovt.Core.CrossCutting.html
  - name: .
  - uid: Innovt.Core.CrossCutting.Log
    name: Log
    href: Innovt.Core.CrossCutting.Log.html
- uid: Innovt.Cloud.AWS.Configuration
  commentId: N:Innovt.Cloud.AWS.Configuration
  href: Innovt.html
  name: Innovt.Cloud.AWS.Configuration
  nameWithType: Innovt.Cloud.AWS.Configuration
  fullName: Innovt.Cloud.AWS.Configuration
  spec.csharp:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Configuration
    name: Configuration
    href: Innovt.Cloud.AWS.Configuration.html
  spec.vb:
  - uid: Innovt
    name: Innovt
    href: Innovt.html
  - name: .
  - uid: Innovt.Cloud
    name: Cloud
    href: Innovt.Cloud.html
  - name: .
  - uid: Innovt.Cloud.AWS
    name: AWS
    href: Innovt.Cloud.AWS.html
  - name: .
  - uid: Innovt.Cloud.AWS.Configuration
    name: Configuration
    href: Innovt.Cloud.AWS.Configuration.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_ExtractBucketFromGetUrl_System_String_
  name: ExtractBucketFromGetUrl
  nameWithType: S3FileSystem.ExtractBucketFromGetUrl
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.ExtractBucketFromGetUrl
- uid: Innovt.Cloud.File.IFileSystem.ExtractBucketFromGetUrl(System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.ExtractBucketFromGetUrl(System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_ExtractBucketFromGetUrl_System_String_
  name: ExtractBucketFromGetUrl(string)
  nameWithType: IFileSystem.ExtractBucketFromGetUrl(string)
  fullName: Innovt.Cloud.File.IFileSystem.ExtractBucketFromGetUrl(string)
  nameWithType.vb: IFileSystem.ExtractBucketFromGetUrl(String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.ExtractBucketFromGetUrl(String)
  name.vb: ExtractBucketFromGetUrl(String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.ExtractBucketFromGetUrl(System.String)
    name: ExtractBucketFromGetUrl
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_ExtractBucketFromGetUrl_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.ExtractBucketFromGetUrl(System.String)
    name: ExtractBucketFromGetUrl
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_ExtractBucketFromGetUrl_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ValueTuple{System.String,System.String}
  commentId: T:System.ValueTuple{System.String,System.String}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: (string bucket, string fileKey)
  nameWithType: (string bucket, string fileKey)
  fullName: (string bucket, string fileKey)
  nameWithType.vb: (bucket As String, fileKey As String)
  fullName.vb: (bucket As String, fileKey As String)
  name.vb: (bucket As String, fileKey As String)
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.bucket
    name: bucket
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.bucket
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.fileKey
    name: fileKey
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.filekey
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.String}.bucket
    name: bucket
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.bucket
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.fileKey
    name: fileKey
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.filekey
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.PutObject
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_PutObject_System_String_System_String_System_String_System_String_System_String_
  name: PutObject
  nameWithType: S3FileSystem.PutObject
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.PutObject
- uid: Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.String,System.String,System.String,System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObject_System_String_System_String_System_String_System_String_System_String_
  name: PutObject(string, string, string, string, string)
  nameWithType: IFileSystem.PutObject(string, string, string, string, string)
  fullName: Innovt.Cloud.File.IFileSystem.PutObject(string, string, string, string, string)
  nameWithType.vb: IFileSystem.PutObject(String, String, String, String, String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.PutObject(String, String, String, String, String)
  name.vb: PutObject(String, String, String, String, String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.String,System.String,System.String,System.String)
    name: PutObject
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObject_System_String_System_String_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.String,System.String,System.String,System.String)
    name: PutObject
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObject_System_String_System_String_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObject_System_String_System_IO_Stream_System_String_System_String_System_String_System_String_
  name: PutObject(string, Stream, string, string, string, string)
  nameWithType: IFileSystem.PutObject(string, Stream, string, string, string, string)
  fullName: Innovt.Cloud.File.IFileSystem.PutObject(string, System.IO.Stream, string, string, string, string)
  nameWithType.vb: IFileSystem.PutObject(String, Stream, String, String, String, String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.PutObject(String, System.IO.Stream, String, String, String, String)
  name.vb: PutObject(String, Stream, String, String, String, String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
    name: PutObject
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObject_System_String_System_IO_Stream_System_String_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.PutObject(System.String,System.IO.Stream,System.String,System.String,System.String,System.String)
    name: PutObject
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObject_System_String_System_IO_Stream_System_String_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_PutObjectAsync_System_String_System_IO_Stream_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: PutObjectAsync
  nameWithType: S3FileSystem.PutObjectAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.PutObjectAsync
- uid: Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObjectAsync_System_String_System_IO_Stream_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: PutObjectAsync(string, Stream, string, string, string, string, CancellationToken)
  nameWithType: IFileSystem.PutObjectAsync(string, Stream, string, string, string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.PutObjectAsync(string, System.IO.Stream, string, string, string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.PutObjectAsync(String, Stream, String, String, String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.PutObjectAsync(String, System.IO.Stream, String, String, String, String, System.Threading.CancellationToken)
  name.vb: PutObjectAsync(String, Stream, String, String, String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: PutObjectAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObjectAsync_System_String_System_IO_Stream_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.IO.Stream,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: PutObjectAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObjectAsync_System_String_System_IO_Stream_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObjectAsync_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: PutObjectAsync(string, string, string, string, string, CancellationToken)
  nameWithType: IFileSystem.PutObjectAsync(string, string, string, string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.PutObjectAsync(string, string, string, string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.PutObjectAsync(String, String, String, String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.PutObjectAsync(String, String, String, String, String, System.Threading.CancellationToken)
  name.vb: PutObjectAsync(String, String, String, String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: PutObjectAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObjectAsync_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.PutObjectAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: PutObjectAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_PutObjectAsync_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.Download*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.Download
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_Download_System_String_System_String_System_String_
  name: Download
  nameWithType: S3FileSystem.Download
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.Download
- uid: Innovt.Cloud.File.IFileSystem.Download(System.String,System.String,System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.Download(System.String,System.String,System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Download_System_String_System_String_System_String_
  name: Download(string, string, string)
  nameWithType: IFileSystem.Download(string, string, string)
  fullName: Innovt.Cloud.File.IFileSystem.Download(string, string, string)
  nameWithType.vb: IFileSystem.Download(String, String, String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.Download(String, String, String)
  name.vb: Download(String, String, String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.Download(System.String,System.String,System.String)
    name: Download
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Download_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.Download(System.String,System.String,System.String)
    name: Download
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Download_System_String_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_DownloadStream_System_String_System_String_
  name: DownloadStream
  nameWithType: S3FileSystem.DownloadStream
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStream
- uid: Innovt.Cloud.File.IFileSystem.DownloadStream(System.String,System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.DownloadStream(System.String,System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStream_System_String_System_String_
  name: DownloadStream(string, string)
  nameWithType: IFileSystem.DownloadStream(string, string)
  fullName: Innovt.Cloud.File.IFileSystem.DownloadStream(string, string)
  nameWithType.vb: IFileSystem.DownloadStream(String, String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.DownloadStream(String, String)
  name.vb: DownloadStream(String, String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.DownloadStream(System.String,System.String)
    name: DownloadStream
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStream_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.DownloadStream(System.String,System.String)
    name: DownloadStream
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStream_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Cloud.File.IFileSystem.DownloadStream(System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.DownloadStream(System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStream_System_String_
  name: DownloadStream(string)
  nameWithType: IFileSystem.DownloadStream(string)
  fullName: Innovt.Cloud.File.IFileSystem.DownloadStream(string)
  nameWithType.vb: IFileSystem.DownloadStream(String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.DownloadStream(String)
  name.vb: DownloadStream(String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.DownloadStream(System.String)
    name: DownloadStream
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStream_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.DownloadStream(System.String)
    name: DownloadStream
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStream_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_DownloadStreamAsync_System_String_System_String_System_Threading_CancellationToken_
  name: DownloadStreamAsync
  nameWithType: S3FileSystem.DownloadStreamAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DownloadStreamAsync
- uid: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStreamAsync_System_String_System_String_System_Threading_CancellationToken_
  name: DownloadStreamAsync(string, string, CancellationToken)
  nameWithType: IFileSystem.DownloadStreamAsync(string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.DownloadStreamAsync(String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(String, String, System.Threading.CancellationToken)
  name.vb: DownloadStreamAsync(String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DownloadStreamAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStreamAsync_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DownloadStreamAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStreamAsync_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStreamAsync_System_String_System_Threading_CancellationToken_
  name: DownloadStreamAsync(string, CancellationToken)
  nameWithType: IFileSystem.DownloadStreamAsync(string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.DownloadStreamAsync(String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(String, System.Threading.CancellationToken)
  name.vb: DownloadStreamAsync(String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.Threading.CancellationToken)
    name: DownloadStreamAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStreamAsync_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.DownloadStreamAsync(System.String,System.Threading.CancellationToken)
    name: DownloadStreamAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DownloadStreamAsync_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_GetObjectContentAsync_System_String_System_Text_Encoding_System_Threading_CancellationToken_
  name: GetObjectContentAsync
  nameWithType: S3FileSystem.GetObjectContentAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectContentAsync
- uid: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectContentAsync_System_String_System_Text_Encoding_System_Threading_CancellationToken_
  name: GetObjectContentAsync(string, Encoding, CancellationToken)
  nameWithType: IFileSystem.GetObjectContentAsync(string, Encoding, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(string, System.Text.Encoding, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.GetObjectContentAsync(String, Encoding, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(String, System.Text.Encoding, System.Threading.CancellationToken)
  name.vb: GetObjectContentAsync(String, Encoding, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
    name: GetObjectContentAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectContentAsync_System_String_System_Text_Encoding_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.Encoding
    name: Encoding
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)
    name: GetObjectContentAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectContentAsync_System_String_System_Text_Encoding_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.Encoding
    name: Encoding
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectContentAsync_System_String_System_String_System_Text_Encoding_System_Threading_CancellationToken_
  name: GetObjectContentAsync(string, string, Encoding, CancellationToken)
  nameWithType: IFileSystem.GetObjectContentAsync(string, string, Encoding, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(string, string, System.Text.Encoding, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.GetObjectContentAsync(String, String, Encoding, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(String, String, System.Text.Encoding, System.Threading.CancellationToken)
  name.vb: GetObjectContentAsync(String, String, Encoding, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
    name: GetObjectContentAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectContentAsync_System_String_System_String_System_Text_Encoding_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.Encoding
    name: Encoding
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.GetObjectContentAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)
    name: GetObjectContentAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectContentAsync_System_String_System_String_System_Text_Encoding_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.Encoding
    name: Encoding
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_GetObjectFromJsonAsync__1_System_Uri_System_Threading_CancellationToken_
  name: GetObjectFromJsonAsync
  nameWithType: S3FileSystem.GetObjectFromJsonAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GetObjectFromJsonAsync
- uid: Innovt.Cloud.File.IFileSystem.GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectFromJsonAsync__1_System_Uri_System_Threading_CancellationToken_
  name: GetObjectFromJsonAsync<T>(Uri, CancellationToken)
  nameWithType: IFileSystem.GetObjectFromJsonAsync<T>(Uri, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.GetObjectFromJsonAsync<T>(System.Uri, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.GetObjectFromJsonAsync(Of T)(Uri, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.GetObjectFromJsonAsync(Of T)(System.Uri, System.Threading.CancellationToken)
  name.vb: GetObjectFromJsonAsync(Of T)(Uri, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
    name: GetObjectFromJsonAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectFromJsonAsync__1_System_Uri_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.GetObjectFromJsonAsync``1(System.Uri,System.Threading.CancellationToken)
    name: GetObjectFromJsonAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetObjectFromJsonAsync__1_System_Uri_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_GetPreSignedUrl_System_String_System_String_System_DateTime_
  name: GetPreSignedUrl
  nameWithType: S3FileSystem.GetPreSignedUrl
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GetPreSignedUrl
- uid: Innovt.Cloud.File.IFileSystem.GetPreSignedUrl(System.String,System.String,System.DateTime)
  commentId: M:Innovt.Cloud.File.IFileSystem.GetPreSignedUrl(System.String,System.String,System.DateTime)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetPreSignedUrl_System_String_System_String_System_DateTime_
  name: GetPreSignedUrl(string, string, DateTime)
  nameWithType: IFileSystem.GetPreSignedUrl(string, string, DateTime)
  fullName: Innovt.Cloud.File.IFileSystem.GetPreSignedUrl(string, string, System.DateTime)
  nameWithType.vb: IFileSystem.GetPreSignedUrl(String, String, Date)
  fullName.vb: Innovt.Cloud.File.IFileSystem.GetPreSignedUrl(String, String, Date)
  name.vb: GetPreSignedUrl(String, String, Date)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.GetPreSignedUrl(System.String,System.String,System.DateTime)
    name: GetPreSignedUrl
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetPreSignedUrl_System_String_System_String_System_DateTime_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.GetPreSignedUrl(System.String,System.String,System.DateTime)
    name: GetPreSignedUrl
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GetPreSignedUrl_System_String_System_String_System_DateTime_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_GeneratePreSignedUrl_System_String_System_String_System_DateTime_System_Collections_Generic_IDictionary_System_String_System_Object__
  name: GeneratePreSignedUrl
  nameWithType: S3FileSystem.GeneratePreSignedUrl
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.GeneratePreSignedUrl
- uid: Innovt.Cloud.File.IFileSystem.GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Innovt.Cloud.File.IFileSystem.GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GeneratePreSignedUrl_System_String_System_String_System_DateTime_System_Collections_Generic_IDictionary_System_String_System_Object__
  name: GeneratePreSignedUrl(string, string, DateTime, IDictionary<string, object>)
  nameWithType: IFileSystem.GeneratePreSignedUrl(string, string, DateTime, IDictionary<string, object>)
  fullName: Innovt.Cloud.File.IFileSystem.GeneratePreSignedUrl(string, string, System.DateTime, System.Collections.Generic.IDictionary<string, object>)
  nameWithType.vb: IFileSystem.GeneratePreSignedUrl(String, String, Date, IDictionary(Of String, Object))
  fullName.vb: Innovt.Cloud.File.IFileSystem.GeneratePreSignedUrl(String, String, Date, System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: GeneratePreSignedUrl(String, String, Date, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GeneratePreSignedUrl
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GeneratePreSignedUrl_System_String_System_String_System_DateTime_System_Collections_Generic_IDictionary_System_String_System_Object__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.GeneratePreSignedUrl(System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: GeneratePreSignedUrl
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_GeneratePreSignedUrl_System_String_System_String_System_DateTime_System_Collections_Generic_IDictionary_System_String_System_Object__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_UploadDirectoryAsync_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: UploadDirectoryAsync
  nameWithType: S3FileSystem.UploadDirectoryAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.UploadDirectoryAsync
- uid: Innovt.Cloud.File.IFileSystem.UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadDirectoryAsync_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: UploadDirectoryAsync(string, string, string, string, CancellationToken)
  nameWithType: IFileSystem.UploadDirectoryAsync(string, string, string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.UploadDirectoryAsync(string, string, string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.UploadDirectoryAsync(String, String, String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.UploadDirectoryAsync(String, String, String, String, System.Threading.CancellationToken)
  name.vb: UploadDirectoryAsync(String, String, String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: UploadDirectoryAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadDirectoryAsync_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.UploadDirectoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: UploadDirectoryAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadDirectoryAsync_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.Upload*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.Upload
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_Upload_System_String_System_IO_Stream_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_
  name: Upload
  nameWithType: S3FileSystem.Upload
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.Upload
- uid: Innovt.Cloud.File.IFileSystem.Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Upload_System_String_System_IO_Stream_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_
  name: Upload(string, Stream, string, IList<KeyValuePair<string, string>>, string, string)
  nameWithType: IFileSystem.Upload(string, Stream, string, IList<KeyValuePair<string, string>>, string, string)
  fullName: Innovt.Cloud.File.IFileSystem.Upload(string, System.IO.Stream, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string)
  nameWithType.vb: IFileSystem.Upload(String, Stream, String, IList(Of KeyValuePair(Of String, String)), String, String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.Upload(String, System.IO.Stream, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String)
  name.vb: Upload(String, Stream, String, IList(Of KeyValuePair(Of String, String)), String, String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
    name: Upload
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Upload_System_String_System_IO_Stream_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.Upload(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
    name: Upload
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Upload_System_String_System_IO_Stream_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<KeyValuePair<string, string>>
  nameWithType: IList<KeyValuePair<string, string>>
  fullName: System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>
  nameWithType.vb: IList(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String))
  name.vb: IList(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Innovt.Cloud.File.IFileSystem.Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Upload_System_String_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_
  name: Upload(string, string, IList<KeyValuePair<string, string>>, string, string)
  nameWithType: IFileSystem.Upload(string, string, IList<KeyValuePair<string, string>>, string, string)
  fullName: Innovt.Cloud.File.IFileSystem.Upload(string, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string)
  nameWithType.vb: IFileSystem.Upload(String, String, IList(Of KeyValuePair(Of String, String)), String, String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.Upload(String, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String)
  name.vb: Upload(String, String, IList(Of KeyValuePair(Of String, String)), String, String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
    name: Upload
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Upload_System_String_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.Upload(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)
    name: Upload
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_Upload_System_String_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_UploadAsync_System_String_System_IO_Stream_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  name: UploadAsync
  nameWithType: S3FileSystem.UploadAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsync
- uid: Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsync_System_String_System_IO_Stream_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  name: UploadAsync(string, Stream, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  nameWithType: IFileSystem.UploadAsync(string, Stream, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.UploadAsync(string, System.IO.Stream, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.UploadAsync(String, Stream, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.UploadAsync(String, System.IO.Stream, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String, System.Threading.CancellationToken)
  name.vb: UploadAsync(String, Stream, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
    name: UploadAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsync_System_String_System_IO_Stream_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
    name: UploadAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsync_System_String_System_IO_Stream_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsync_System_String_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  name: UploadAsync(string, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  nameWithType: IFileSystem.UploadAsync(string, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.UploadAsync(string, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.UploadAsync(String, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.UploadAsync(String, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String, System.Threading.CancellationToken)
  name.vb: UploadAsync(String, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
    name: UploadAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsync_System_String_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.UploadAsync(System.String,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
    name: UploadAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsync_System_String_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_FolderExistsAsync_System_String_System_String_System_Threading_CancellationToken_
  name: FolderExistsAsync
  nameWithType: S3FileSystem.FolderExistsAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExistsAsync
- uid: Innovt.Cloud.File.IFileSystem.FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FolderExistsAsync_System_String_System_String_System_Threading_CancellationToken_
  name: FolderExistsAsync(string, string, CancellationToken)
  nameWithType: IFileSystem.FolderExistsAsync(string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.FolderExistsAsync(string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.FolderExistsAsync(String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.FolderExistsAsync(String, String, System.Threading.CancellationToken)
  name.vb: FolderExistsAsync(String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FolderExistsAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FolderExistsAsync_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.FolderExistsAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FolderExistsAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FolderExistsAsync_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_FileExistsAsync_System_String_System_String_System_Threading_CancellationToken_
  name: FileExistsAsync
  nameWithType: S3FileSystem.FileExistsAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.FileExistsAsync
- uid: Innovt.Cloud.File.IFileSystem.FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FileExistsAsync_System_String_System_String_System_Threading_CancellationToken_
  name: FileExistsAsync(string, string, CancellationToken)
  nameWithType: IFileSystem.FileExistsAsync(string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.FileExistsAsync(string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.FileExistsAsync(String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.FileExistsAsync(String, String, System.Threading.CancellationToken)
  name.vb: FileExistsAsync(String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FileExistsAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FileExistsAsync_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.FileExistsAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FileExistsAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FileExistsAsync_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_FolderExists_System_String_System_String_
  name: FolderExists
  nameWithType: S3FileSystem.FolderExists
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.FolderExists
- uid: Innovt.Cloud.File.IFileSystem.FolderExists(System.String,System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.FolderExists(System.String,System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FolderExists_System_String_System_String_
  name: FolderExists(string, string)
  nameWithType: IFileSystem.FolderExists(string, string)
  fullName: Innovt.Cloud.File.IFileSystem.FolderExists(string, string)
  nameWithType.vb: IFileSystem.FolderExists(String, String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.FolderExists(String, String)
  name.vb: FolderExists(String, String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.FolderExists(System.String,System.String)
    name: FolderExists
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FolderExists_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.FolderExists(System.String,System.String)
    name: FolderExists
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_FolderExists_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_DeleteObjectAsync_System_String_System_String_System_Threading_CancellationToken_
  name: DeleteObjectAsync
  nameWithType: S3FileSystem.DeleteObjectAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObjectAsync
- uid: Innovt.Cloud.File.IFileSystem.DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DeleteObjectAsync_System_String_System_String_System_Threading_CancellationToken_
  name: DeleteObjectAsync(string, string, CancellationToken)
  nameWithType: IFileSystem.DeleteObjectAsync(string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.DeleteObjectAsync(string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.DeleteObjectAsync(String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.DeleteObjectAsync(String, String, System.Threading.CancellationToken)
  name.vb: DeleteObjectAsync(String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteObjectAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DeleteObjectAsync_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.DeleteObjectAsync(System.String,System.String,System.Threading.CancellationToken)
    name: DeleteObjectAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DeleteObjectAsync_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_DeleteObject_System_String_System_String_
  name: DeleteObject
  nameWithType: S3FileSystem.DeleteObject
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DeleteObject
- uid: Innovt.Cloud.File.IFileSystem.DeleteObject(System.String,System.String)
  commentId: M:Innovt.Cloud.File.IFileSystem.DeleteObject(System.String,System.String)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DeleteObject_System_String_System_String_
  name: DeleteObject(string, string)
  nameWithType: IFileSystem.DeleteObject(string, string)
  fullName: Innovt.Cloud.File.IFileSystem.DeleteObject(string, string)
  nameWithType.vb: IFileSystem.DeleteObject(String, String)
  fullName.vb: Innovt.Cloud.File.IFileSystem.DeleteObject(String, String)
  name.vb: DeleteObject(String, String)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.DeleteObject(System.String,System.String)
    name: DeleteObject
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DeleteObject_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.DeleteObject(System.String,System.String)
    name: DeleteObject
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_DeleteObject_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_CopyObject_System_String_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: CopyObject
  nameWithType: S3FileSystem.CopyObject
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.CopyObject
- uid: Innovt.Cloud.File.IFileSystem.CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_CopyObject_System_String_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: CopyObject(string, string, string, string, string, string, CancellationToken)
  nameWithType: IFileSystem.CopyObject(string, string, string, string, string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.CopyObject(string, string, string, string, string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.CopyObject(String, String, String, String, String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.CopyObject(String, String, String, String, String, String, System.Threading.CancellationToken)
  name.vb: CopyObject(String, String, String, String, String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: CopyObject
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_CopyObject_System_String_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.CopyObject(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: CopyObject
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_CopyObject_System_String_System_String_System_String_System_String_System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_UploadAsJsonAsync__1_System_String___0_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  name: UploadAsJsonAsync
  nameWithType: S3FileSystem.UploadAsJsonAsync
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.UploadAsJsonAsync
- uid: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,{T},System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  parent: Innovt.Cloud.File.IFileSystem
  definition: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsJsonAsync__1_System_String___0_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  name: UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  nameWithType: IFileSystem.UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync<T>(string, T, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.UploadAsJsonAsync(Of T)(String, T, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync(Of T)(String, T, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String, System.Threading.CancellationToken)
  name.vb: UploadAsJsonAsync(Of T)(String, T, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
    name: UploadAsJsonAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsJsonAsync__1_System_String___0_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
    name: UploadAsJsonAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsJsonAsync__1_System_String___0_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsJsonAsync__1_System_String___0_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  name: UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  nameWithType: IFileSystem.UploadAsJsonAsync<T>(string, T, string, IList<KeyValuePair<string, string>>, string, string, CancellationToken)
  fullName: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync<T>(string, T, string, System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<string, string>>, string, string, System.Threading.CancellationToken)
  nameWithType.vb: IFileSystem.UploadAsJsonAsync(Of T)(String, T, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  fullName.vb: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync(Of T)(String, T, String, System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of String, String)), String, String, System.Threading.CancellationToken)
  name.vb: UploadAsJsonAsync(Of T)(String, T, String, IList(Of KeyValuePair(Of String, String)), String, String, CancellationToken)
  spec.csharp:
  - uid: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
    name: UploadAsJsonAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsJsonAsync__1_System_String___0_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.File.IFileSystem.UploadAsJsonAsync``1(System.String,``0,System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.Threading.CancellationToken)
    name: UploadAsJsonAsync
    href: Innovt.Cloud.File.IFileSystem.html#Innovt_Cloud_File_IFileSystem_UploadAsJsonAsync__1_System_String___0_System_String_System_Collections_Generic_IList_System_Collections_Generic_KeyValuePair_System_String_System_String___System_String_System_String_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  commentId: M:Innovt.Cloud.AWS.AwsBaseService.DisposeServices
  parent: Innovt.Cloud.AWS.AwsBaseService
  href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  name: DisposeServices()
  nameWithType: AwsBaseService.DisposeServices()
  fullName: Innovt.Cloud.AWS.AwsBaseService.DisposeServices()
  spec.csharp:
  - uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
    name: DisposeServices
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  - name: (
  - name: )
  spec.vb:
  - uid: Innovt.Cloud.AWS.AwsBaseService.DisposeServices
    name: DisposeServices
    href: Innovt.Cloud.AWS.AwsBaseService.html#Innovt_Cloud_AWS_AwsBaseService_DisposeServices
  - name: (
  - name: )
- uid: Innovt.Cloud.AWS.S3.S3FileSystem.DisposeServices*
  commentId: Overload:Innovt.Cloud.AWS.S3.S3FileSystem.DisposeServices
  href: Innovt.Cloud.AWS.S3.S3FileSystem.html#Innovt_Cloud_AWS_S3_S3FileSystem_DisposeServices
  name: DisposeServices
  nameWithType: S3FileSystem.DisposeServices
  fullName: Innovt.Cloud.AWS.S3.S3FileSystem.DisposeServices
